ccopy_reg
_reconstructor
p0
(cNADE.OrderlessMoGNADE
OrderlessMoGNADE
p1
cdill._dill
_load_type
p2
(S'ObjectType'
p3
tp4
Rp5
Ntp6
Rp7
(dp8
S'b_sigma'
p9
g0
(ctheano.tensor.sharedvar
TensorSharedVariable
p10
g5
Ntp11
Rp12
(dp13
S'auto_name'
p14
S'auto_14126'
p15
sS'index'
p16
NsS'tag'
p17
g0
(ctheano.gof.utils
scratchpad
p18
g5
Ntp19
Rp20
(dp21
S'trace'
p22
(lp23
(lp24
(S'rnade_release/orderlessNADE.py'
p25
I306
S'<module>'
p26
S'nade_train( * args[1:] )'
p27
tp28
a(S'rnade_release/orderlessNADE.py'
p29
I240
S'nade_train'
p30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p31
tp32
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/NADE/OrderlessMoGNADE.py'
p33
I48
S'create_from_smaller_NADE'
p34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p35
tp36
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/NADE/OrderlessMoGNADE.py'
p37
I32
S'__init__'
p38
S'self.add_parameter(TensorParameter("b_sigma", (n_visible, n_components), theano=True), optimise=True, regularise=False)'
p39
tp40
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/Model/Model.py'
p41
I29
S'add_parameter'
p42
S'parameter.add_to_model(self)'
p43
tp44
a(g41
I167
S'add_to_model'
p45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p46
tp47
aasbsS'container'
p48
g0
(ctheano.gof.link
Container
p49
g5
Ntp50
Rp51
(dp52
S'name'
p53
g9
sS'storage'
p54
(lp55
cnumpy.core.multiarray
_reconstruct
p56
(cnumpy
ndarray
p57
(I0
tp58
S'b'
p59
tp60
Rp61
(I1
(I21
I2
tp62
cnumpy
dtype
p63
(S'f8'
p64
I0
I1
tp65
Rp66
(I3
S'<'
p67
NNNI-1
I-1
I0
tp68
bI00
S'\x01\n\x12\xe7y\xe4\xdf?\x9c\xf4y\x9d\xd9>\xda?\xefNP\x12\x0e\n\xe1?y\xd2\x1dQ\xca\xbb\xe0?\x00\x06a\x15\xb6\n\xbc?\x9b\xbf@"\xdc~\xc1?\xf6|\xa8,\xb7"\xfa?\x96\xd1\x90\xceL\xb9\xec?\xbb\xbe\xf7>\xd6w\xc0?\x98\xb0\xde9j\xcb\xc1?\x03\xee\x88\xfb\xc43\xf6?\xe2\x85P\xdfr\xf2\xe8?\xde\xd7W\xc47\xda\xe3?\x00\xf5[\xa3N\xae\xe3?AO\x98\xec3~\xb6?\xc87\x05\xb5\x05!\xb2?@%\xa2jM{\xf0?\x80\x88u\xe8!\xa3\xea?YJ\xd5=\xca\xf3\xe2?\x14$\x15\x81\x05(\xe4?\x95, \x9al%\xc2?Yn\xb8\xebO|\xc2?\x9b\x8e\xf1L\x85\'\xea?\x1e\x04o\x06\xa8\xb0\xeb?\x0f\x85Z\x82&\xee\xde?\xe1\xfc\x87 \x05\r\xdd?Z\xc2-\xa7#\xae\xb7?>\xdd\x97F\x7f\x02\xc0?\xe9\xb0\xfa\xd6\'\x84\xd8?\xca\xc8Z\xfa ;\xe8?\xf4:\x02\xf4\x9e\x89\xda?\xba\xb8\x8e\x8a\t1\xdb?\\64dLL\xb3?hn/N]\xfb\xb9?\x91u\xd6\x95:O\xe5?>\xde\xb7\t\xc4\xfb\xf3?\t~~\x81\xb9\xc9\xe7?\x8d\xa4\x96C\xc6\xed\xf4?\xf6\x1b\x17-\xa5\xde\xe1\xbfI\x05/\xf7[1\xff?\xa4\xb0\x8f\xb8\x1e~\xd5?\x16L2\xdc\xf6\x9b\xd9?'
p69
tp70
basS'strict'
p71
I00
sS'readonly'
p72
I00
sS'type'
p73
g0
(ctheano.tensor.type
TensorType
p74
g5
Ntp75
Rp76
(dp77
S'broadcastable'
p78
(I00
I00
tp79
sS'dtype'
p80
S'float64'
p81
sS'numpy_dtype'
p82
g66
sS'sparse_grad'
p83
I00
sg53
NsbsS'allow_downcast'
p84
Nsbsg53
g9
sS'owner'
p85
Nsg73
g76
sbsS'n_orderings'
p86
I1
sS'n_layers'
p87
I2
sS'V_alpha'
p88
g0
(g10
g5
Ntp89
Rp90
(dp91
g14
S'auto_14127'
p92
sg16
Nsg17
g0
(g18
g5
Ntp93
Rp94
(dp95
g22
(lp96
(lp97
(g25
I306
g26
S'nade_train( * args[1:] )'
p98
tp99
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p100
tp101
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p102
tp103
a(g37
I33
g38
S'self.add_parameter(TensorParameter("V_alpha", (n_visible, n_hidden, n_components), theano=True), optimise=True, regularise=False)'
p104
tp105
a(g41
I29
g42
S'parameter.add_to_model(self)'
p106
tp107
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p108
tp109
aasbsg48
g0
(g49
g5
Ntp110
Rp111
(dp112
g53
g88
sg54
(lp113
g56
(g57
(I0
tp114
g59
tp115
Rp116
(I1
(I21
I100
I2
tp117
g66
I00
S'\xb9~\xb0e/Z\x99\xbf\xc4\xfd`\xab\x17\xe7\x8f?\xec\xde\x15;dY\xc2\xbf\xff\xde\x15\xe6K\x10\xc1?8\xa9\x93\'T\x9ez\xbf\x9d\xd4\xc9#\xa4\x1a\x80?\x07\x9f\xe5\xfa\x19\xb3\xb9?\xe6\x9e\xe5I\x92\x88\xb4\xbf\xca\x8fw+(\xcf\xc8?\xc3\x8fw\xf95\x89\xc4\xbf\xf7gxX\xc1\x82\xa1?\xf7\x9e\xe1\xe1\xce\x85\x87\xbf\x10\xb2\x88\xd3\x1d\x9a\xba\xbf\'\xb2\x88\x1c\x13\xf8\xbd?\xeb\x18\xe5\xa5]\xe6\xa1?\xfc\xc6(o\xdf\xb9\x7f\xbf\xa4l\x9a\xc4\xa6\xaa\xc9\xbf\xc0l\x9a\xc4s\x94\xc6?\xaf\x12&\xd3\x13C\xb3?\x87\x12\xa6m\xd5\xff\xb5\xbf{>D\xfa\x06\x07\x9f\xbf3?D\xea\x14\xec\x99?\xfa\xe7z\xf3\xbb\x9e\x9d?\xd7s\xbd\xf1y\xe1\xa9\xbf\x81\x9e-\xf1e\xb1\xc4?\x89\x9e-\\\xa0e\xc2\xbf\x89\x9c\xa6\x10\x0f\x1dw\xbfZNS(\r\x13\x87?\xcc\x1a\xa5\xb0\xa3\x0f\x82?\xf2\x8cR\xc8\x04\xbb\x93\xbfq\xed/\xd1e\x8f\xc4?X\xed/G\x9d\x10\xc7\xbf\x0b\x1d\xe2\x06\x88P\xbd\xbf\xb3\x0eq"\xb5\xd1\xc0?xgU2q\x14\xa3\xbf\xa0gUTT\xff\xa6?_\xe5\x97m\xfe2\xa4\xbf\x93\xe5\x97\x9d\xf3\x0f\xa1?\x87&@\xdbC\xe1\xc0?\xf0L\x80\n\x87\xaf\xbe\xbf4\xc7\x99\xf4AK\xbf\xbf\x98\xe3\xcc\x8a.\xd6\xc0?${\x19\xe9\n\xac\xb1?\x13{\x19\xddKb\xb0\xbf\x8a\xa1\xd8\x1a(\xc3\xc3\xbf\x94\xa1\xd8,\x98\xca\xc3?\xb9\x19)\x05\x8b\x8d\x9f\xbfO\x1a)\xa1\xad\x11\x91?\xd5\xbe\xea\x8d\xe1`\xb0\xbf\xe5\xbe\xeaa|\xc4\xb3?\xef\x81k\x85\xed\x08\xce\xbf\xf4\x81k\xc9\x853\xce?\xfd\x17\x95\xd05\xbc\x82\xbf@aTr\'\x82e?\x85\x06\x1aC\x18j\x89?8\x03\x8d\xb0$k\x9e\xbf\xeeB\xaa\xb2\xb0~M\xbf\xc1\xd5\xaa&\xb8RS\xbf\x1a\x87kw)\xa3\xb1\xbf(\x87k1\x9e[\xb3?\x8b\xb6\xcf\xf2Q\xda\x99?\x97\xd8>\x8b\xb4ww\xbfL\xf2\xe6T`"\xb5\xbfx\xf2\xc6\x94#\x80\xb4?\xb2\xf7g_8>\xc7\xbf\xb7\xf7g\xfcL7\xc7?\xc8\xcf\xc0\x85K[t?\xaf\xcf\xc0\xe5o\xd3}\xbf\x9d+\xa9\x01\xc1\xae\x91?B+\xa9\xf1\xd8\xf0\x9c\xbf\xcfM\x114_"t\xbf\x1c\xa7\x08\x12q\xf5\x8e?<\xc9\xda\xd4\x06\xac\xbb?\x8bdm\xa0\xa0!\xc0\xbf\xae\x91K\xcc\xf1t\x8c?\xd0o\xb4\xd3\xe7\x15\x8c?\xf7\x16\x7f\xfdz7\x9f?\xcd\x16\x7f\xdd\xb7\xa8\x9e\xbf9\xb1\xa3}\xf2A\xb1\xbfg\xb1\xa3C\xd4\xe9\xb0?ah\xcfx\xc7\xd9Q?\xd9\xf5\x8c\xe3\xd0\xee\x91\xbfK\xf3U\xbcH\x80\xc7\xbfN\xf3U5n)\xc9?X\xc8%\xbdps\xc3?D\xc8%\xa1\x1bo\xc4\xbf\xa77gt\xe9\xdb\xc1?\x997\'\x80/\xa0\xc0\xbf<$o\xda\x94\x97\xc7?6$o*qT\xc7\xbf\xd5\xf8\x82\xdb\xeb\xe4\xa0\xbf\xef\xf8\x82\x9d\xc9s\xa3?\xf8\xc9+\x91\xda\xd8E\xbf\xf9z%\xe2\xf9\xdcw?nRC\x06c\xc8\xb5\xbf\x94RC\xeb\x9f\xcc\xb3?@\xe5\x19\xb5\xbe!\x92?J\xe5\x19\xd1\x86\xc0\x9c\xbf1\xe4P\xdb\x97\xb8\xae?\xfe\xe3Pk\x1f\x85\xa7\xbf\xedg\xe7)Zv\xc9?\xebgg\x0b3O\xc9\xbf\xa1\xfeW\x02\x89\x8d\xbd\xbf\xab\xfeW\xe8\xc6\n\xbe?\x9f\x16\x8022\xd1\xa5?@,\x00!\x94\x00\x9a\xbfg\xb9\xbd\xc9X4\x96\xbf\xe6s{9\x8a\xf9\x87?Q\xfcw\xae\x91\xafs\xbf\xe4\xfe;\x97\xe1\xd5\x8f?k\x9f\xd4\x9e8?\xc7?n\x9f\xd4x\xf70\xc5\xbf\x85?\xb6|~\xd5\xac\xbf\xba?\xb6\xf0\x9f\xa9\xad?/C\x0e\xd2\xa9\xfb\xc5\xbfDC\x0eUE\xa5\xc7?\xd2>\xd0\x02\xe3\xc9b\xbf\x06\xf8\xa5_\xe4G\x90\xbfW\x99\x85\x88Z5\xa1\xbf\x123\x0b\xa1\xee\xe3\x9f?` IKn\x9a\xb2?{@\x92V\x9as\xaf\xbf?\x04\xad\xdfycd?\xe0?\xeb\x17\xfeB\x8c\xbf\xc2\xf9\x8a\xd91t\xad?r\xf9\x8ao@\xaa\xa7\xbf\xc9\x10\xe9S\x8a8f?\xf7\x90>\x11>1\xa2\xbf_\xa6_9\x88/\xd1?O\xa6s\x9fE\xcc\xd0\xbf\xafv\xcb\x89rp\x82\xbf\x07\xd4n\xb9\xec\xa59?2\x10%\xc9Z\x8bN\xbf\x0f\xd7\xb6\xb1\xce\xc2\x92\xbf{\xf9\x0544\xc1\xa5?O\xf9-Q\xbdo\xa5\xbf*z\x0e\xc7t\x8d\xb7?\x14z\x0e\x83\\m\xbd\xbf\xe8\x99\xe5_E\x9c\x8f?x\xcc\x92\xdbs\x87\x93\xbft\xc1)\\\xb9\xdc}?\xe5\xe0\x14X\x06\xde\x8f\xbf\xf7B\xff36]f?\t\xbd\x00\xec\x03\x94c?\xc7\xee\x81\x00\xd7F\x92\xbf\xb0\xee\x81VA\xa6\x9a?\xb4\x93\x92\xb3\xbb\xdd\xb3\xbf\xe5\x93\x92\xd7a\x13\xb4?\xdc\x89\xfb\x8d\xec\xe7\xb0\xbf\xfa\x89\x1bWK/\xb2?\xb6R\x84\xf76\r\xa2\xbf\xd6R\x847\xa1X\xa4? \x89\r$H\x8a\xa4\xbf\x93&6PE\x80\x8f?\xb2\xb3B\xbfv#\xc6\xbf\xbd\xb3Bz\x06V\xc7?\x03\x92\x12\xe2\x93|\xa8\xbfh$%\xf8oH\x9f?\x9b\x8e6~)S\xad\xbf\xee\x8e64\x8b\xaa\xab?\x15b<\xf4\x90\xfe\xbc\xbf?b<\xc3\xe3|\xbf? \\\xcc+\xcc"\xc3\xbf\'\\\xcc-\x8ak\xc2?\x15K\xa3W\x89\x1d\x12\xbf5\x8e^%\xf6b{?E0N.7P\xd3?@0N PF\xd3\xbf\xd2E\xb5\xc9\xb78l?\x90\xae\x92\xed#h\x83?\xa1\x8b\xce\xfe\x10&k\xbf3\xba\x98\x10lHu\xbf\x86\x88\xa3U/\x9d\xb7?n\x88\xa3\xffT)\xb4\xbfx;\x8e\xce\xc3\xaa\xc6\xbf\x87;\x8e\xfb\xef\x15\xc8?\x1b\xe8\x16\xc3\xd5\xb9\x98?\x87\xe7\x16c\xd6\xd0\x9d\xbf\xef\x98\xab\xac\xb1\x1d\xd6\xbf\xf2\x98\x0b\x9b.{\xd6?\x12"\x94\x86\xe4\x04\xb3\xbf("\x14\x9b\xfd\xa4\xb4?\x8f)\x99t\x85\x81\x83\xbfHU\x9b-`Qd\xbf\xf5\xd6\xe8$\x1b\xc9\xc3?\xef\xd6\xe8\x8a\x07\xd8\xc3\xbf\xa0\xe3VZ\x03S\xb6?s\xe3V\xf0^\x1b\xb9\xbf\x01\xd0\x94\xb6\xa8\xd7\xc4?\xee\xcf\x94\xf2:\xaf\xc4\xbf\xfc\x8e\xc3U\xf1\x15\xaf?\x8c\xc7\xe1=s\xb8\xb2\xbf\xd4\xefUI.\xc0\xbe?\xdb\xef\xa5\xcd\x85\xd7\xbf\xbf\xa1ll\xedW3\x99?*ll}Y&\x9f\xbf\xc1Q\xb8\xcc5R\xb0?\xadQ\xb8T\xea\'\xba\xbf\x0b\xb4\xc7\xb0)\x9c\x8d?\x08\xed\xb1\xb4F\'\xa3\xbf\xed\x08\x17\xee\x84k\x81?h\xef\xd1\xf3\xfchs?\xd3\rt\x19\x0bg\xa0\xbf)\x0et\xbf\x8a3\xac?\xc1\x1frD\xc4\x96o?\xeb\x87\x1ca\xcb\x8a\x81\xbfVw\xe2\x10\x9f\xa4\xcb\xbf\x82w"\xdd\xc1\xbf\xca?\xa92\x83\x9a11\x82\xbf(\xcf\x0c\xea|tl?\xb1q\x01\xb3\xbb\xc6\x94\xbfP\xc9\x05\x8c\x1b\xe0w?\x87\x1d\x89\xe4!\xb8\x87?\r\x1d\x89t\xe6T\x8e\xbf\x05\xdb\xc7\xa91\xe1\x86?QJp\xac\xc1hu?\x06\xa1Lq\xc0\xf4\xa2\xbf\xa7\xa1L\x15E\xff\xa4?\xcb\xf7\xd5\xda1\x13E\xbfv>\xa5\xcc\xb7\xec{\xbf\xb7r\x10a\xe2e\xbd?19\x88\x13\x83p\xc0\xbfr8V6\xd9\\\xa0?T8Vj\xb7\xb3\xa7\xbf\x01\x10\xd7\xf3\xb0\x90\x99?\x08\x88\xeb\x97$\x90\xa2\xbfZH\xdf?\x9e;~?\xd7z\x0b\x02\xc2\xa17?\xe8\x9a\x8dZ\xff\x05o\xbf#1\xb9\x92\xf7\xcbr\xbf:\x15\xb5\xdb\xa0U\xb1?\xeb\x14\xb5SO\xbb\xb2\xbf\x8c\x8d\x03\xb1>\x85\xb3\xbf\xd4\x8d\x83\xabm\x8e\xb3?\xfc\xea\x07\x90m\x9f\xa5\xbfb\xeb\x07\xac\xb7}\xa5?\xf5\xd8{\x8c\x0cQ\xa2?\xeba\xefa\xfd\xb0\x8f\xbf\xd5+\xef\x1b\x0e\xc8\xa3?;W\xde\xbf`9\x97\xbf\r\xc7\x10\x18A \x85\xbf\x94\x1dC\xd0\xc7\xc5j?\xb0\xcc\xcee\\,\xab\xbf\x17\xcd\xceUhI\xa3?\xb1\xf8D\x91\x8a\xd6\x99\xbfa\xc8\'\xe1\xef\x9bo?\x98{\x10\xd5G\xd4\xa5?E{\x08N\x04\xa9\xa4\xbf\x1b w7{\xe9\x90?\x8f\x1fw\r\xaeY\x99\xbfe\xa5b\x9a\x96T\x8f\xbf\x0e\xad\xce\xf2e\x81\x98\xbf\xb2\xb8-t\x13\xf5q?\xcdm\x0b\xc8\x92\x8c\x90\xbf,\xd0\x95\xd3D\r\x91\xbf\xa4\xa0+\xb7\xba\r\x80?\xac\xf3\xa6\xa4\xbcG\x98\xbf/zSr5\xfa\xa1?\xcc\x8c\x0bn\xe90\x96?\x1bd\\8?Bm\xbf(\x13/S\xd1o\xc0\xbfW\x13/\xd6\'\x17\xc2?\x0e\x8a\x9c\xfe\xed\xf5\\?1\x1f\xa7_\xdd\xa0q\xbf#G\x93n\x85\xd1\x91\xbfRG\x93\x8e\x8c_\x9d?\xe7\xc7Ss8(z?~\xe0\xb02G\x07_?\xd7_\x1d3\x9d\x81\x9c?L_\x1d3\x8d\x9f\x9a\xbf\xc8]K\xbdC\xab\xae\xbf\xe6]K\xf5U\x05\xa9?\x85f\x9c\x98\x8b\xb4\x8b\xbf\x1c\x98c\xcf\xa4\xa7\x82\xbf\x06\xc6\xa7e\x8b\xab\x81\xbf~\x1f\x9fV/wc?\xe4\xf4\x85*\xd0\xa7a?\x8c\x06\xbdjr\x1dv?\xfd#e\xff\xb8Z\xa8?^#e\xa7\xfc\x0b\xa5\xbf}\xeca\xa8\x13Ns?\x8bz\x18\xb2\xc8r\x9a\xbf\xfcB\x0e\x1buF\x87\xbf\xd1\x87\x1c\xf6f\x03{?\xb7\xe0\xc1\x9bD\xf1\x8b\xbf2\xe1\xc1\xff\xf4\x85\x83?\x88B6 \x04s\xb6\xbf\x97B\xb6g\xf4_\xbd?\xc3\x99\xd3\xf9\x96\xcc\x83?\x9c\xcc\xe9\x8a\xe5\x84\x99\xbf\xb8\xf7\xd3w\xc5\xdft?\x94\x04\x16hMe\x85?"\xb4A2i-\xc0\xbfBh\x03\xd2|\xc7\xbd?F\x9a\x0b\xdc\xd1\x10\xa0?\xb3\x99\x0b<\xd9\xf2\xaa\xbf)\x83\xf8\xa1:J \xbf\x03\xe2\x87B*\xfc\x89?\xf8Zyv\xb6\xd5\x9c\xbf)[y\x9e\xcbb\x98?\x1f\x8a\xf4$\xa2\xd8}\xbf\x93\x8a\xf4.F>y?\x04`a\x11\xe7[\x8e?\xe7@=]B|\x7f?\x0c\xb7\'\x8fm\x11\xc1?\xec\xb6}\xeesp\xc1\xbf\xce5`\xcb,\x97\xa7\xbf%6`\xe7\xf1\xb2\xa0?l1\xc9X\xed\xb0x?\xc7K2N\xfe\xff\x91\xbfP\x95\x80\x02\xa0$\x9e?\xc1S\x02J\xbe\xe9v\xbf\xd9\xc9\xa0\x8c,\xbfk\xbf\xa5\x1a\x94Y\xe3\xa8\x94?\xf6\x1a\xf65/Z\x98?\xdd\xcb\x13\xd4\x04\x8d\x8c?n`\xebr\xcbI\x81\xbfC>)*e\xb2r\xbf,\xe4\x9c\xe6\x90%\xca?\x10\xe4\x9c-\xf2\xdb\xc9\xbf0\xdb\x9c\xc1\xcb\xbb\xba?\xe4\xda\x9c\xd9r\xb5\xba\xbf\xed\x04\x02Q2\xbf\xa8?\x9c\x04\x82\x04+k\xad\xbf\xa4\xff!h\xdb]\x9d?i\xff\x10.@H\xa4\xbf\xad\xf6h\xc7n0j?\xa6\x84K\x1c\xd2\x1d}?$Q\xf4!\xaa7\x8b\xbfs\xa3\xe8\xff\x7f\xe1v?a}|\xca8\x93\x90?1\x14\x1cL\x83\xbac?\xcdZ\x1c\x1fd@\x98?.\xb58f\x94c\x84\xbf\x03/\xc2\x8c\x1c\x15\xb1\xbf5/\xc2\x1c\xd6\x1f\xb3?")\xff\x85 )\x90\xbf\x05S\xfe\xc1\x95\x98\x8e?\xd4\xf6\xe9Y=V\xc5?\xc5\xf6i\x00z\x9d\xc3\xbf7yM\x13\x05\x9d{\xbfiyM\xcb\x02\xd6t?e:WY\xd9\x85}\xbf\x9b\xc5\xa8\xa6I\xe1u\xbf\n\x0f\xe4\x15@uf?\xe3\x81\xbcJ\x80\xf6\x91\xbf^,Bk\x11\x1d\xa2\xbf\xda,Bm\xc9X\xa9?#a\x16\xbf\xd2,\xd8?\x1fa\xf67\x1f8\xd7\xbf}\x03\xce\xab.\xb5\xa7\xbf\xc0\x03N\xd3\xcaf\xa5?A\xabS!@\xdc\x85\xbf\xc7\xd6\xa9\xa2b\xe2\x90?{\x1bI\xca\n\xc5\x8c?\x85\x1aIj\xdd\x91\x8a\xbf\xf39M\xabD\x0f\x8e?^N\xd3\x16\xe7d\xa2\xbf\n\x0f\x05\x9b\xd9\xeb\xb8\xbfL\x0f\x05\xc7\x1ar\xb8?\xb6V\x11\x05\xa6\x00\xb5\xbf\xe0V\x11e\xdb\xef\xb4?\xd3br\xdcpL\x90\xbfs\xe5l\x9c\xa6ma\xbf\xf5/\xf1\xb2K\xf5\xb0?o_\xe2%\x1c\xc5\xa5\xbf8ok\x12la\x91?pnkE\xc0\xd3\x98\xbf\n\xcb\xde\x06\xf3|B\xbf\xac\xecm\x10\xad#\x82?{\x93W|\x04\x11a?06\xd4\xb1\x88\xacs?#\xc7a\xa5n\xd1\xb1\xbf1\xc7\xe1\xf7[\x81\xb0?\x9f\xc9\xdf/\x8f\x17\xa2\xbf\xd5\xc9\xdf\x87\xe8\xb0\xa3?`]5\xe5\xba:\xab\xbf\xb9]5]\xa9L\xa9?\xfa\xe3u|\x85 a?\x96A\x14G\xd7F_?\xb7i"\xa8a\xd9\xa6?Qi"L\xdb\xae\xa2\xbf\xc3\xd5:\xb1Ggt\xbf\xe7\x93b\x170q\x85\xbf\xc9\x88\xdf~-\xdcj\xbf\xd8\x14\xbf}\xd8\x91V?\x18\x0b\x16\x1d\xa4\xef\x93?\x01\x05\x8bV\xda\x16\xaa\xbf\xa5\x86uA\xe2\xa3\x81?\xba\x85u\tQ\xab\x86\xbf$oc\xc6\x81P\xa3?\xbb\xdd\xc6\x02\x07\xa5\x9f\xbf\xc3\x94\x9a\xb3\x964\xb3\xbf\xea\x94\x1a*\xe7F\xb2?\xe2\xf8^\xb1\x12p\x89?\xa1{\xaf\xb8\xe82\x96\xbf\x9d~\x7fvZ\xbb\xb0?\x05\xfd\xfe\x90\x83\xe9\xa8\xbf,C\x1e\xb4bx{\xbf\x1e\x88<(\xb7\xaeo?\x1aI/e\xdc\xcf\xad\xbf\x8d\xa4\x97\xd1\xff\x85\xb1?\xd7\xbd\xa5\xac\x80\xaf\xce?\xe4\xbd\xa5B\x03\xe3\xcf\xbf<3C\x12\x91\xc6p\xbfXf\xdeF:\xf8\x8d\xbfe\x0c!\x06\xa7z\xa1?S\x0c!\xf21\xea\xab\xbf\x8c\xcaV\x12\xde\xee\xc4?\x8b\xca\x96\x1d\\\xd6\xc4\xbf\xa6\x84\xd7\xe8\'\xe7\xc2\xbf\xa8\x84\xd7\xa1_\x11\xc3?\xb8\x10\xd1\xe3\xee\x10\x90\xbf\xef\x86\x88\x9e\xef+d?!\xe9\x05dC\xc2\xb2\xbf\x19\xd2\x0bF<\xb1\xae?\x95\xa1/j\x0fo\xc3\xbf\xb2\xa1/\x88}Q\xc5?\xe3\xfa\xbfN\xdeJ}?\xb9\x01P\xec\xee\xcf\x98?\xe2b7\x96G\xe9\xde?\xe7bwXTh\xdf\xbfT\x80{\xd5\xe0L|?9\xe0^\x85h\x84\x9a\xbf\xd4\x83\xacH}\xc3\xc3\xbf\xd8\x83\xac\xf5V\x86\xc2?8\xf3\xfe\xafO\x16M\xbf\xf5\xee\xff*\xee\x8b\x8f?\xc5\xbd\x94\x9e33\xcc\xbf\xc0\xbd\x14\xaeM\xea\xcb?\x10\xd2\x9bp\x8aG\xd1\xbf\x1c\xd2\x9b\xf8\x1ct\xd1?\xc9\x00\xa1\x07\x9cK\xda?\xcb\x00!\xfa3\xea\xd9\xbf\x19x\x04>\x87_\xc8\xbf\x1ex\x04*)/\xc5?2F\\z\xb6`\xd7\xbf;F\\+;\xf4\xd6?,d*+J\x1c\x8b\xbf\xb1\xc8T\x16\xb0as?^\xfeW\x88Xp\xb8\xbf]\xfeW\xd9\xc6P\xb8?&j\xd4\x0c\xceP\xc6\xbf+j\xd4Ru)\xca?\xf5\xdb\x1e(\x00\x98\xd0?\x04\xdc>\xed\x91\xc2\xd1\xbf\x91\t\x06\xeat\xb3\xd1?"\x13\x0c\xa4\xc4\xcc\xcf\xbf}v]v\xd4\x80\xa5\xbfqv]\x9e\x18\x97\xaa?\n\x98\x96"F"\xd2\xbf\x1c\x98\x16\xea\xbc\x84\xd1?\x05\xa0g\xc5O\x81V\xbf\xab\x0bS\x97\xde\xc9\x8d\xbf\xf1E\xdf\xcewU\x95?\n\xa3oOYA\xa5\xbf&\x98\xcd\xa4\xc3\n\xcf?$\x98\xcdxpn\xcd\xbf\xca\x903\xae\xa7@\xcf?\xc5\x903\xac\xd7\x83\xce\xbf\x9c\xe3c\xf6\x01\\\x85\xbf688\x13\r\x9dz\xbf\x8a\xf5\xedrf5\xc2\xbf\xa0\xf5\xed\x07H\xf1\xc0?N\xf2\xb6{\xd5+\xc7?Y\xf2\xb6\xbera\xc5\xbf\x12dZy\x02K\x88?\x10dZ\x99\x10\'\x82\xbf\x97O\x10\xb4\xc5%\xe3?\xa2O\xf0\x1eA\x89\xe3\xbf\xac\x1a\xcd\x0c\x82\xbe\x8b?g\xe52?\xd8S\x8c?\x88\xc4\xca0P/\xe7?\x88\xc4z\xb7\xe3\xa3\xe6\xbf\x87\xc6\x8f\xfb\xc5t\xc8?\x82\xc6\x8f!-\xe9\xc7\xbf\t\xcd\xa0\x94\x98r\x91\xbfD\x9aAyQ,\x8f?7\xb0J\xa5\xa0\x8a\x9b?\xefW\xa5nc\xe2\xa7\xbf\x1a\xed.\xe4\xb6\x97\xcd?\x17\xed.\x02E\x1a\xcf\xbfP\rn\x8f\xd4j\xeb?Q\rn\xe2\n\x1f\xeb\xbf_\x0f\x17\x19\xb9M\xb5\xbfm\x0f\x17\t\xc2\xa9\xba?\x84\x0f\xdf\xbd\xa7\xdc\xc2\xbf\x89\x0f\xdf\xf5\x8b\xd6\xc1?M>\xd3`\x16\xfa\xb1?J>\xd3\xf8{\xc2\xb0\xbfu\xb5(1v|\xdc\xbfv\xb5(IOj\xdc?\x81)>H\xa1\x9a\x92\xbf\xa5)>\xa8\xa5?\x9e?\x08f\xd2\xf4\x16\x8c\x90\xbf:3i\x8e\xd6\xcb\xa0?\xd8\xb9\xb8\xafbZ\xb2\xbf\x16tq\xf8M \xaf?\xc8\x02\x8c\xaeR\x80\xbe\xbf\xc0\x02\x8c\xd2>J\xbb?\x94\\`[*#\xb6?\x8f\\`\xa3\xc44\xb5\xbf\x03\xechsXa\xc7?\x13\xec\xdc\xf0X\xab\xc4\xbfdch=f\x9b\xa3?\x99\xc6\xd0\x84dK\x9b\xbfv\xbd#\x194\x82\xaa\xbf\x80\xbd#\xb5\xbaZ\xab?\xc4\x8f\x08\xdc\x80\x18\xdd\xbf\xc0\x8f\x08@\x81}\xde?\xf2r\x12l\xe9b\xaf?z9\tN-\x1a\xb2\xbf\xa1Y\xabn\xcec\x92\xbf\xc9\xacU\x83\x1c\x84\xa0?\xe4\x8c\xcf\x1a^d\xb0\xbf\xed\x8c\xcf\xcc\xcc\xf2\xb3?\xcf\x11tA\x08C\xc4\xbf\xce\x11t\x1fT\xfc\xc2?\x8fB\xda3\xe3\xee\xb5\xbf\x95B\xda\xdaY\xd8\xb2?\xdf\xcdz=d\x16\xaf?\xd7f\xbd\xcc\x94\x86\xb0\xbf\xbe\xef\xe2\x95,\xda\xd0?\xa7\xdf\xc5\xb4ks\xcf\xbf\x05\x83f\xea\x9f\x90\xe5\xbf\x06\x83f\xf1$\x99\xe5?X|\x0f\xd51\xbf\x7f\xbf\x84\xef\xa1\xee\xd8\xc3\xa1?\x0c\x8b\xfe\xbe\xd7\xe3L\xbfw\x0b\x08\xda\xcf\xf4\x91\xbfB\xd3I9\xc5\xb6v\xbfX\x16[C\xef\xca\x86\xbf\xa1z\xdb\xb833\xcc\xbf\xa2z\xdb3L\r\xcc?\xe2]W$\x0bj\xa3\xbf\xabw]\x11\xc1\x19\x84?\xa3l\x10H\t\n\xc0?(\xd9\xa0\x14\xac\x08\xbe\xbf\xd1\xeb\x1d\x17\xf5f\xbf\xbf\xea\xf5\x0e\\\xf2\xab\xc0?\x08\xc8\x8a]\xdcGk\xbf\x10\xc8\x8a]\xe2\xa5c?p9m%\xe1\xb3\x87\xbfp9m\x05\x18W\x8a?\x7f\x9ew>\xc4k\x98?4=\xef^\xadp\x89\xbf\x0ce\xe5\xcdu\xd2\xc9\xbf\x1fe\xe5\xc3\xaa\x95\xca?\xaeL\xbd\\\xd2k\xca\xbf\xaeL\xbd\x14\x1d[\xcd?,\xa9\xe7\x93|\xa5\xc1\xbf.\xa9g\xa4\x12\xeb\xc2?G\x970\xb8\tg\xb7?7\x970\xb0>\xe9\xb8\xbf\x7fr\x9a\xe6>T\xc6?\x85rZQX\xca\xc7\xbf\x187)Le\xad\xbe\xbf\x137)t\xe7\x17\xbe?\x84\xf2\xff\xc48j\xc0\xbf~\xf2\xff\x9f\xb6\x87\xc0?cS\xf9\xf2\xad\x1d\xd8\xbfhS\xf9\xecOX\xd7?\x80\xe2=\xf7\xa9\xde\x91?,\xf1\x9e[\x06\x9d\xa4\xbf\xb8\x91+7\xd0\xfa\xdd?\xc4\x91+\xa7\x9d\xf4\xdb\xbfV\x04\xc91\x00\x9b\xc6?O\x04\x89n)\x9e\xc4\xbfY\x08\x84\x7f\xf1\xd3`?"\x04\xc2O#\xcdz\xbf\xf4]\x0fJ\xb4\xe6f\xbf~\xd7\x83\xd2\xc0\x99\x84?~\xf6\xbe\xb6\xccR\xb8\xbf\'\xf6\xbe\xfay4\xb1?5o\xa5\xaf\xb0S\xa2\xbfJo\xa5\xdf\xd5\x0b\xa6?ft\xb6\xa3\\\xf5\xb3\xbfpt\xf6\xc1\x84\x90\xb3?n\xb0\xdc\x05\xd8|\xa1?\xfa`\xb9\xbf$\xb1\x9a\xbf\xd0\xe0\x007\x9c\x84}?\xc4\xdf\x00w\x81&\x7f\xbf\x94G\xd8v\x18.\xae?\xe0#l\xa3\xe1\xbe\xb6\xbf\xdb\x1e\xf1AX\xe6\xc3\xbf\xd0\x1e\xf1\x95\x83\xc6\xc6?\xdd\x83\x85\x1bz(\xaa?\xc2\x83\x05\x0fW\xf8\xab\xbf\xbd\x83d9\xd9\xf3\xd0?\xba\x83d\x1b\x0c\xde\xd1\xbf\xe1U\xdf\xa2"\xd1\xa7?\xdbU\x1fg\xc4\x12\xa3\xbf\x84Zi\x08\x82\xf1\xb2\xbf\x83Zi\x86\xe0Y\xb2?\x10\x8a\xddR\x9fb\xb4?\xf6\x89\xdd\x0c\xa7\xd5\xb5\xbf\xb7\xf6\xdf\x8b\xb2q\xb6\xbf\xbb\xf6\xdf\xfbr\xb6\xbd?D\xf6\xfd\xd6\xc6 \xc7?6\xf6\xfdiR\xf9\xc8\xbf\xb9\xc2v\xee\xa4a\xa6?\xc3\n\xdb\xb9j\xfa\x89\xbfd%\xd7\xc4"3\xaa\xbf\x9e\x92k\xf68\x1c\xb1?\x1aq\x97\x85G\xca\x93\xbf\x1aq\x97\x1d$\xaa\x92?\\\xd4\x0e4\xeb\x93\xac\xbf\xf3\xd4\x0e\xecjw\xa7?h\x0e\x89J,\n\xc3?O\x0eI\x0f\x1f\xbf\xc0\xbf\xed*\xdb\x00\xfb\xde\xc3?\xe8*[Q)\xe1\xc2\xbf\x14SQs\xb1\x86\xb3\xbf)SQ\x07\xe10\xb4?\x8c\xac\x07\x9cL\xd1z?\xf6\xea\x01\xaf\xd0\x1c\x9c\xbf\xd6\xcf\xb0\x90\xee\xcf\xd0\xbf\xdf\xcf\xb0(\x84D\xd1?\x95WC\xd7XG\x92?\x0eWC\x07C\xef\x9d\xbf\x13\xdf\x0b\x9c}\x91t?\xec\xf6\x02k\xf2\x81\x96\xbf,\xbeBaQ\x1c\xad?\x01_\xa1l\xcf\xc1\xb0\xbf@\xfe\x9c\xac\xb6\xb3\xc0?I\xfe\x9ch\x01C\xc0\xbf\xed\xc3\xbd!\xd2\'\x86\xbf\xec\xc3\xbd\x1d\x89!\x82?\x88\x91f\xfeS\xe5\xa3\xbf\xb3\x91fN\x02\x9c\xa2?\xff\xd23\xd1\xb9\xb9\xc7?\xda\xd23\xe7F\x0f\xc8\xbf\x8d\xc1\r\xf8r\x86\xa0?\x1e\x82\x1b`y+\x96\xbfF\n\xb6\xe9I\xab\xb5\xbfk\n6Z\xec\xce\xb8?\x98\xec=[\xea\x0f\xbc\xbfs\xf6\x9e4I[\xc0?\xbc\xe8\xffxV\xe0\x81\xbfU\xe9\xffh\xd9\x8e\x89?\xfc6\x0f\xa5\xb6\x0f\xc4\xbf\x087\x0f\xe1\xb2\x88\xc7?\xd6I\x9a\x961J\xbb?\xa5I\x9a\xdc \xda\xb9\xbf>\xe7\x19\xa1\xec\xec\xc3\xbf?\xe7\x19\xae\xd9\xea\xc7?\\\xd7R\xef\x158\x9e\xbf\rl\xa9+\xc9t\xa0?\xba\x11\x15\xc9\x07\xd2\xd9?\xb3\x11\x15\x8f/\xb5\xda\xbf_C\x90\x02\x10B\xd1\xbf]C\x10.\xe7\x11\xd1?3\xc3\xfc\xc4\xc1\\\xaf\xbfV\xc3\xfc\xe4N\xf3\xae?\xf77\xa4\xd7\x0f/\x80\xbff\x8f\xb7P\x81Y|\xbf4>g\xd1\xfes\xb9?\r>gIA\xf8\xba\xbf\xa8\xb6[\x07W\xdb\xc0\xbf\xb0\xb6[Q\xa9^\xc3?\x07\xff\xf9m3\xc2\x94?`\xfe\xf9\xd1\xd6\x9b\x96\xbf\xb8"\x96\xd0i\x83\xa8\xbf\x90\x11K@-\xcf\xb0?&4t_\xc4\x08\xca\xbf.4\xb4\xb8\xf5%\xca?4)\xad\xccI\x0c9?\x95\xd2\xca\x9cX\xb6t\xbf#a\xe8\xca\x91\xa8\xa0\xbfSa\xe8\xbeu?\xa1?\x19\xa0\xd1\x0f\xf8\xc5\xc1\xbf\x18\xa0\x11\x9d:\x12\xc3?\x81\xd8H\x06\x9f\x0b\xc0?\xec\xb0\x91I\xf4\xdf\xbf\xbf\x8f\x7fO2\xee\x83\xa6\xbf\xea\x7fO*O\xc6\xab?&\xcf\x9dl\xa0C\x9f\xbfJ\xcf\x9d4\x14\x87\x99?\xd4 f\x9eD;\x98\xbf\x8cwgF\x91\xd0s\xbf\xc1\xe76\xfc\t\xff\x95\xbf>\xe86\xdcB\x07\x98?\x0c(\x03\xa8n\xaf\xd2\xbf#(#\xe0\x8c\xa7\xd1?\xf3\x9aV\xce\xc0\xc7\xa9?_M+)\xb8\xe8\xb1\xbf4\x99\xdd\xa5Q:\xa3?\r\x99\xdd\x19\xa6\x05\xa8\xbf:\xec\xa3(\xb0/\xd5?1\xec\x03K\xafl\xd5\xbf/\xec\xd5\xb7\x94N\xb9\xbf1\xecU\xa9\xcf\xa2\xb7?E\xc9 \xa0\xb5d\xab?\x7fd\x10\xda\xfa\xc6\xb2\xbf\t{\x0b.x+\x92\xbf\xa6\xde[\xb0J`n?>P\x87{\x81\xdb\x98?\x1aP\x87\x8b\xa9=\x95\xbf\x85}]\x82V\x0f\xa9?b}]\x8a\x00/\xa3\xbf\x80\xc7`\t\xef\x9d\xc1?z\xc7`\x15B"\xc2\xbfXo\xb7=!\x06\xa1?\xb1\xb7o\xf4\x0f[\xb0\xbf\xa8\xf8K\xb6Yu\x8b\xbf=\xfaK\xae\xf3\x85\x81?Cj\x19\xd4\xc8\x16\xa8?\xeei\x194\xe8,\xa6\xbf.\x0b\x81\x12\x18\xd9\xb9\xbfD\x0b\x81\xe6\xae`\xb9?\xbfr\xa6\x91\xa5\xfd\xa6\xbf\xc4r\xa65\xa2g\xaf?T\xbbf\ng\'\xb7\xbf\x8e\xbbf\x90$y\xb4?C7BG\xc2\xff\x97\xbf\xd97\xc2{2C\x93?\xb2I\xdema(\xad?\x9fI\xde\xddk\x18\xa6\xbf~\xe2C\xb5(\xcb\xa9?\xfe\xe1Ce\xb9e\xa5\xbf\xb1\x84\x15\x1c\x85\x12j?\xf8\xaf\x82#&\xc8\x9d\xbf\x84~X^\xffR\x9f?\x12~X\x11\x08\xdf\x95\xbf\x9a7\x98\xf8\xa2\xe4\x95\xbfN\x1cL\xe2\x80H\xa2?\xc9\xee\x93\xe8\xb6\x01\xa8?\xb5\xee\x9365\x16\xa2\xbf\xe6\x8c\xcew\xf1\x8e\xc6?\xd8\x8c\xceI+\xa0\xc4\xbf\xccNP@\x1b0p\xbfdb_\xdf\xdekd\xbf9q\xf7x\xb1d\x9b\xbf\x84q\xf7\x18\x95\x0b\x93?\x0e\xbf\xeb\x03\xae\x1e\xab?\xbf}\xd7\xe7B\xbd\x9c\xbfz\xd8\xa5\xa1\xe6\xe4\xc3?r\xd8\x15\xe7(\t\xc4\xbfU\x9e{\xe9l\xad\x9c?\x1b\xcf\xbdE\xaa<\xa1\xbfO\xd5!\xde5)x\xbf\x0c\xaax\x87u%T\xbf\xe5i\x02\x02\xcd\x86\x8e\xbf\xe5i\x02\x82-S\x83?#\x7f\xc2(\xd0Y\xa8\xbf.\x7f\xc2.K\xbe\xad?$vX#tt\xb6\xbfbvXi>\n\xb4?\x83\xee\x07\xe9^\x0f\xaf\xbfO\xf7\x83N\xc8\x18\xb6?\xf9\xa3\xdb,c\x87\xa8\xbf:H\xb7\t\x04\xa4\x93?\x91\x08Y=\xa3\xb2\x93\xbf[\tYK\xda.\x98?>\tX-\x84x\xc9\xbfH\tX\x1b\xdfr\xca?o\xe4\xccuBh\xb6\xbf~\xe4\xcc\x05\xd8\x94\xb6?\xb2(\xa8o\xca\xa6\xa1\xbf4)\xa8\xeb\x8f\xb8\xaf?ii<\xd5\x7f\x03\xb0?f\xd2x\xbe\x91\x99\xa5\xbf\xa1\x82\x05\xf9\n\xcf\xd0\xbf\xad\x82\xa56\x97\xd4\xd0?\xde\xb3\x98\xde\xad\xc6\x82\xbf\xf4\xb4\x98\x1fS\x0c\x83?\xb1,\xe4+\x8f\x0b\xc5?\x8e,d\x89\xc5\xa1\xc5\xbf\xbbn\xaeb\x13\x9bX?\n\x19\xd5\x81\xd5h\x90?.#\xc5\xf2\x8abv\xbf\x8b\x91b\xe9\x04\xb5\x8b?t\xbb\xe7\x02\xb4\xad\xc1?k\xbb\xe7\xcb\x91\xde\xc1\xbf\xe2\xd9\x93\xe7!\xf3\xc9\xbf\xf4\xd9\x93\xe1\x9b\x87\xca?.SL\x04\xd8i\xb4?\x1b\xa6\x98\xdc\x8e\xdb\xa9\xbf$\xaf\xe9\xe4\xc5\xc6\xd5\xbf!\xafi\x87\x83\xdf\xd6?\xb3M\x7f&^}\xbb?\x8fM\x7f\xd0\x1bK\xbd\xbf"\x7f\xd2D\xa5\n\xc2?\x1a\x7f\xd2\xacV\xb3\xc4\xbfZ\x92>\x14\xf3\xdb\xae?@I\x1fdl\xc5\xb2\xbf\xf3\x82zt\xd8\xf0\xa3\xbf\xbc\x06\xf5\xe8{A\x95?`nj>`\xaf\xc0?Vnj\x19)\xcc\xc0\xbf.\xb8\xf3N\xf8\x1c\xb6\xbfI\xb8\xf3D\xe9\xf2\xb6?@!\xb98"o\xc8?6!\xb9r\x94\x88\xc8\xbf\xf0\xa3\x04\x8e\xaf\x1d\xb4\xbf\xf2G\t,\x1f\x17\xae?\xff\x1d\x87I\x17\x81\xbd?\x05\x8f\xc3V\xa8}\xc2\xbf\x12\x1d\xc8g\xed\xe6\x96?\x8f\x0e\xe4\x0b\xddq\xa7\xbf_O\x18\xb6W\xd7\x9b\xbf\x15=ax\xacqy?\xcf\x90w\xa4\xbb\xa5\xca?\xd2\x90w\x12\x15\xe4\xcb\xbf\xcc\xff\x8d\xda\x9f\xa9Q\xbf\x89N\x00r%\xa4\xd3\xbe\x85\xebH\x80d\xbb\x9c?:\xebH\xe0n\x98\x96\xbf\xf3"H:\xc43\xb6?\xf4"Hb\xe7"\xb6\xbf5\x17\x05\xec*\xad\xac\xbf\x9a\x8b\x02\xfcD\xb4\xb3?\xa9`\x9b\x19\x04\xdf\x8b?C\xb0\xcd\xcc\x1f\xf3\x91\xbfF\xfc-E\xab\xaa\x9b\xbfH\xfc-\x96\xf5z\x96?\x88\xba\x03\xad*\xbf\xc9\xbf\x99\xba\x83_v\xb9\xc9?\xd3P\xe7\xab\xb8\x1c\xa1\xbf\xf1\xa1\xce\x9b\x97Q\x94?7<\x03%g\xc6\xdb?0<cSGb\xdc\xbfk\xb4\xf1\xfa\t\xdd\xbe?i\xb4\xf1\xe4v\xf2\xbf\xbf%\xb4\xdc\xb6\xec\x18\xc1\xbfPh9cR\xf6\xbd?\xbfc\'6\x10\x92f?w\x13;)\xfe\xb4\x92?De-VA\xf0\xd2\xbfAe-\xc0Y\xe3\xd3?\xf0S\xd4X\xeb\x8c\xd4\xbf\xf5S\xd4\xe0r6\xd5?Z\'\xe8nM#\xd8?S\xa7\xcd`6\x0c\xd6\xbf\xd9\x19\xaca\xea\x83\xc5\xbf\xe5\x19\xac)7\xa9\xc4?\x93\xb3[Vc\xf0\xd6\xbf\x95\xb3[\x80\x0e\x18\xd7?z\xb6AB\x93S\x96?}\xb6A\xd2\xd1\xb5\x9c\xbf&`\x83Jc\x94\xb2?"`\x83\x95\x0cw\xb6\xbf\tDC\xba:\xe1\xc5\xbf\x1aD\xe3\xe5\x1a#\xc4?x\xdb\xa9\x80\x0b\xb9\xd1?\x7f\xdb\x89\xcb\xd3/\xd2\xbf8\x1d4\x83\xce\x1e\xc9?A\x1d\x14\x83\xabA\xcc\xbf|\xc5\xc9\xdc\x1a\x88x\xbf\xbfq2/\xcaP\x98?\xe2Z\xb4\xb4\x07\xc8\xd0\xbf\xefZ\xb4\xa2=\x06\xd0?\x02\x97\xfc\xce|\xd1\xaf\xbfiK\xfe\xbf3\x8c\xb0?Z\xb2\xe2\x17\xda}\x83?Z\xb2\xe2\xb7N\xa2\x87\xbf\x84\x9c\xadv{\xf1\xcc?\x84\x9c-Yv\xc9\xcb\xbfU\x06\xdc\xdc\xd1?\xd9?U\x06\xdc\'$\xb2\xd7\xbf\xce\x8e\xea5b\x92\x9c\xbf\t\x8f\xea\xe1\xa4\x01\x9c?\x99\xee\x14p\xd1\n\xb4\xbf\xac\xee\x14A\x90e\xb3?\xa3\xe3wk\x11g|?\xed\xf8\xdd>\x18t\x92\xbf\xe5\x1c5\xa5\xbd\xb3G?\xd0\xb8\xb2\xebC\xcf`?\x16\xce\x9b\x96\xc6{\xe1?\x16\xce\x9b7h\xbd\xe0\xbfb\x01\xe1\xdc\xa4&f?\x94\xdfcDV\xeb\x96?\x1f{\xb7\x17\xcc\x84\xe9?\x1e{\xf7\x8f>\x05\xe9\xbf\xb7\x82=\xf7\x0b\xc3\xc3?\xb1\x82U\xcf\xaa\xe5\xc2\xbf}\x82B\x13\x1a\xd7\xa2?\xb9\t\n\x95\x8a?\x8f\xbf\xd8~.\x84\xc9-\xb4?\xba~.s\x0f\x08\xb3\xbf\xcbT\x92\xb0Ma\xcb?\xc8T\x92\xa2\xcd\xaa\xcc\xbfW\x85\x05m\x9ax\xec?V\x85\xd5\xf8ZF\xec\xbfE\xe154\xbbs\xb5\xbfI\xe15\x80\xaf\n\xb4?~\xce&IE&\xcf\xbf[g\xd3\xa4\xd0l\xd0?\x16\x0eu\xa88\xbd\xa8?\x0b\x0eu\x04\xcd7\xaa\xbf\x05\xc1\xef\xbc\xca4\xd7\xbf\x06\xc1\xef^%\xed\xd6?\xe6f\xc9&\xfc\xab\x97\xbf\xfaf\xc9J\x183\x92?\x15\xf0\x04D\x1d!o\xbfT\x9e\x80H\xe9x\x9f?\xe4\x97\x96\xabu+\xb6?\xda\x97\x96\xbb\x91\xba\xb0\xbfvr\x99\x80\xd90\xbc\xbfxr\x99\xd1\x87\x98\xbb?4#9+\x14<\xa1?\xe0\xe56\xa6\xb4\x14u?ba\xac\xa1.@\xc6\xbf^a,2\xc2{\xc7?\xd9;\xb9\xceu\xf5\x90?\x87\xee\xe4\xbaQ\x9ez\xbf\xd8i\x84X9\xdf\xb2?\xc3i<\x82\xcd\x16\xb2\xbf\x1d\xc0/\xdd\xc6}\xd3\xbf!\xc0/\x193\xec\xd4?\x16\xa0S\xd7m\xb9\xb2?$@\xa7K\x00q\xaf\xbfKG\xda\xf3^\xda\x97\xbf\xe0\x8e\xb4W\xf8\xe5\x85?\x88?Y\x9b \x18\xc2\xbf\x8a?Y\xeb\x12@\xc2?6\xe1\xb89Y\xc7\x92?\xa5p\\t\x9b\x13\xa6\xbf\x1e\xc3\xe7-\x86\x87\xb7\xbf,\xc3\xe7v\x157\xb7?\xf9\xca\xc9\xd1\xeaG\xa0?\xd5\xca\xc95.}\xa0\xbf\xe3\xfc\x87\xe6\xd0\xe3\xc9?\xdc\xfc\x07\x06o>\xc8\xbf\xa7~ Z\x1d\x1a\xe4\xbf\xa6~\xe0\xc6\xb4\xe3\xe3?{\xa8M\x93J\xb4\xa7?t\xa8\xcd:\x9f\xab\xa9\xbf\x05w\x1d\xe7\xcf\x9a\x8d\xbfu\xbb\x8e\xb3R\xc6\x9d?\xd3n\xde\x92\x8e\x13y?\xd3n\xde\x12\xe9\xffu\xbfj\xa3\x14"rR\xd3\xbfc\xa3\x04%\xc7o\xd2?\x16z\xdcB\x0e\xa7\x9f\xbf:z\xdcB\xe0\x05\x9f?\xe4\x16\xdd\xe1\x84\\\xb1?\xe4\x16\xdd\x962Q\xb7\xbf\xa4\x0e\xde\xb7\xc7\x8c\xb3\xbf\xb1\x0e\xdec\x9b\x91\xb3?\x13%N\x86\x888\xa2?\\\x948\t=\x80\x8d\xbfQ\x9c"\xabf\xfav\xbf\xafc\xdd4\xb4#y\xbf\x06;\xc8h\x13F\xbc?\x87\x1d\xe4\xad\x19\x06\xc0\xbf\xf9\xb4\xdeA\xa0W\xc4\xbf\x00\xb5^\x0b\xf7[\xc4?2\xfc\xaa\'\xf8\x17\xcc\xbf:\xfc\xaa\xfb\xb7m\xcd?\x11\rM\xa8\xdb\x9c\xc6\xbf\x12\r\xcd\x98L\xe8\xc5?\xc0\xd3\xe0\xa3\x8d\x86\xb1?\xa8\xd3\xe09T4\xb4\xbf\x14\xb1D\xad@\xc6\xc5?\x13\xb1Dx\x8c\x9a\xc7\xbfx\x0e\xd5\xf1J\xd7\xa9\xbf\x81\x0e\xd5\x91\xa1\x92\xaa?<:\xfb\xc3W\x90\xc4\xbfK:\xbb\x8a>V\xc6?\x94\xa2t\x8e\xc8[\xd4\xbf\x98\xa2t!\xc2\xd6\xd3?K\x13L\xber\x01\x8e?\x06\x13L\xce\xae\x85\x88\xbf\xb4\x8c\x1d\xce\xf7\x9a\xdb?\xb2\x8c\xfd\xb3K\xed\xdb\xbf\\\xb9\x00\xfcp\xd8\xb1?+\xb9\x00\x0f\x08\xb0\xb2\xbf\xdf&\xa5:\x8b\xe1Q?mR\xaa\x03n\x94\x94\xbfQ.\x9ff\x19\xf0Q?\x1a\r\x96\xc9\xc9]\x90?\x84\x1a\x15\xfe\x17$\x9e\xbfs\x8d\n\xfd\xe6;\xa6?\xda\x89\xd8\x99\xe2,\x9e\xbfQ\x13\xb1#\x80I\x82?a\x1f\xddS\xb8h\xaf\xbf\xc4\x1f\xdd\xef\xc7\x94\xae?\xd6\xea\xe2Ds\xe5\xaa?\xbe\xea\xe2\xa2\x0c\x95\xa6\xbf_^~6\x0b\xa1c\xbf\xe630i\xc8\x9d\x9e\xbf\xcf-\x90R|\xed\x99\xbf\xf1-\x10\x04\x8b\xa2\x9e?\xce\xa4\xde\x8f\xaeK\xa5\xbf\xd0\xa4\xde\xef\xbf\x03\xac?B\x94\x88\x01\x1a\x0b\x98?\x15\x94\x88\xbd\x0b\xff\x9e\xbfT\x88"im\xc7\xd1?Z\x88\xa2\xee\xecL\xd2\xbf\x8bP\x8a\xd8\xbd\x1f\x9e?0(ET\xfe\x94\xa0\xbf\xa2\xa2\xe4\xd4q\x8fh\xbf`kc\xe5GL\x96\xbf\x99\x99\xa6E\xd8\x89\xb9?\x97\x99\xa6\xed\xe4)\xba\xbf~Fsx\xa2B\xa1\xbf\x8cFsrN\xdc\xa0?\x92\xa5,\xc0\x81\xbb\xc0?\x86\xa5,16\x02\xc3\xbf\x98\x1d\xd6<\xf9\xd0X\xbf\xd8;e\x9c5U\x81\xbf3\xa5I?5\xbd\xd3\xbf4\xa5\xc9@\x85C\xd5?\x9c>\xf6\x84\n\x08\x94\xbfq\xf4\xb1\xa7Y\x0ee?\xb0\xd6\x18\xd3\x0eF\xc0\xbf\xc0\xad13\x057\xbf?\xb3\xbar\x05=\x06m\xbf\xab^\xb9"\xa8\xe8w?<\xd1\x1f\xa8\x0cn\xb5?\x13\xd1\x1f\x9a\xb2\x08\xb7\xbf\xad\xcf\xafT\xaf\xf2\x8a\xbf\xed\xe7\xd7\xf99;\x93?\xf7\xd4\xaa\xf7\xb7h\xa6?nj\xd5\xa7:d\xb1\xbf\x15<\xa6\xf8X\x17\xb2\xbf^<\xa6\xcai\xd5\xb3?Z#\xb6\x80\x17E\xd2?G#\xb6\xf2\xc1\xeb\xd0\xbf\x14k\xba\xbf\x8d\x86\xcb?\xfaj\xba\x1b\xc2\xcf\xcb\xbf\x9e\xa2d\x0c6\x83\x99?\x05E\xc9 `B\x8e\xbf\x02\xee\x02\t\xca\t\xd3\xbf\x0b\xee\x02HNL\xd4?\x0epu\x8d5\xd2a\xbf\xfc[]\'\xaa\x96\x84?_\xce\x8fMCm\xa9?F\xce\x8f\xcdc`\xad\xbfT\xbb/4R(\x99?\x95t_\x88\xe9R\x86\xbf\xa0\xf5\xae\xcewo\xb3\xbf\xd8\xf5\xae\x0c\x1cA\xb5?@\xdfc\xbfh1\xc0?0\xdf\x83\xbb3&\xc1\xbf\x9dL\xee\xb9D\x0f\xa5?(L\xeeI\xf0\xe6\xab\xbf(\x9ftI\xfc\x98\xd2\xbf=\x9ft?\x1f:\xd1?\x94\x8f\x0f\xb05\xf4\xb3?\x97\x8f\x8f\xe5\x0b\xf4\xb4\xbf\x07\xa8^}\x05\xa9\xbc\xbfJ\xa8^t\x8dP\xbe?\xc5\xaa2\x1f\x98\xe3\xc8?\xcc\xaa2\xff/\x10\xc6\xbf\xfa\xcal0\xb8\xc8\xbe?\xc0\xcal\x0eV\x94\xbe\xbf\x99\xf9\x96\xaaO\xec\x9c\xbf\x00\xfa\x96\x02%@\x94?S\xe0\xd0\x0f\x99\xbf\xc7\xbfX\xe0P\x9389\xc8?\xd2\xf1\x13q\xd1\xd2\xc0\xbf\xda\xf1\x13\x9f\x1e\xea\xc0?\xc4z\xba\xa0*\nW?}\xc2\xa2\xafJol?\x8b3|\x7f"-\xb3\xbf\xab3|\xb7\\\x81\xb3?A\xfa\x02&\xeaY\x88\xbf\x19\xfb\x02&\xde\xe2\x8f?\x10g\x97\xd4\xf6g\xb5?\xe4f\x97`\x9b\xe0\xb5\xbf\x13\x17\xdc\xc3\x7f\xdb\xc2?\xfc\x16|\x04\xb4\x99\xc1\xbf\xdd\xea<\xef\x07\xcdk?"\x9d\xe7-\x1b\x0e\x97\xbf/\x80\xd3\x96P\xc7\x83?\xcc\xffX\xf2Lzx?\x86\x10\xc8x\x1fY\xaa\xbf\xa3\x10\xc8\xe0\xce\x8f\xad?\x91!c\xcf\xd1\xcc\xb6?\x01C\xc6&\xcc\xeb\xae\xbf\xab\x07\xca\xb2\x0fB\x80?\xc0\x06\xca\nw\xb2\x83\xbf\x1f\xac{\t\xf9h\xb5?\x01\xac{A\xa9p\xb6\xbf\xd4\x9d\xc72\xff\xad\xa3\xbf\n<\x8f\xdd\x04\x08\x98?\xfeB\xf5C\x06\xeex\xbf\xa7Q\xfd\xd0vR\x90?\x18\x11\r\x8e\xd0\\\xc3\xbf\x1d\x11\r\xbb\xee\x80\xc5?\xeb\xdfgQig\xc6\xbf\xf3\xdfg\xddGZ\xc8?\x9c\x90\xb6?=!\xb1?\xa9\x90\xb6c+1\xb0\xbf\xd1\x82\x00\t3\xbc\xb3\xbf\xd8\x82\x00]\t\x80\xb1?\x83\xef\xa3\xd4\xca\x81\xb3\xbf\x94\xef\xa3v\xf3_\xb0?\xa0\xb2\xccg\xca\xa7\xc3\xbf\x9a\xb2\xcc86 \xc1?+\xb7\xfd\xf6`\x16\xac?\xf7\xb6\xfd\x8e\xb6~\xae\xbf\xd1\xa4.\x7f\xe1SG?\xb1\x17\r\xb8\x94\x9c\x8a?^\xc4\x18\x114\x10\xb6?\xae\x881z\x8do\xac\xbf:`(\xd0\x87\x90\xb5\xbfA`(n\xfc\xad\xb6?g,m\x08!\x8d\xb9?o,m>m\xff\xbc\xbfZ\x1f\x97\x95\xa5t\xaa\xbfT\x1f\x97\x1ay6\xa2?\xc6\x86\x913\xb2\x9e\xb1\xbf\xf0\x86\x91\x9a\xa8\xf1\xb2?AM\xd2\'\t\xcb\xb0?P\x9a\xa4\x03\xe9\x9d\xa5\xbf\xa9\xa4XX\x9f\xe6\xb6\xbf\xbb\xa4X \xe7\x05\xb7?H\xa2rX\xb9\xae\xe1\xbfC\xa2\xf2\xaf\x9c\x18\xe1?\xa2u\xc3\xe8\\\xc2\x93?O\xea\x86\x01\x08\xc0\x83\xbf\xa4\xa7\x8c\xb6\x06\xf9\xca?\x9a\xa7\x0c\xea\xf1\xd9\xca\xbf\xf9\xca\xafL\xfcG\\\xbf\xa9\xfc\xca\xf4Aw\x90?v\x1bz\x91n\x05\xb2?w6\xf4Zv^\xae\xbf\xffI\xe5\x0fn\xaa\xbc\xbf\xb6I\xe5\xbdCp\xb8?Qo\xe1\x1f\x87\xc2k?\xe2Z\xf8\xf3\xec\x9c\x85\xbf8rt\x8c\x19[\xba\xbfgrt\x0e\x80y\xba?\x7fj\xac\x0c,\x84\x81\xbf\xdcW95"\x97J\xbf\x90"yq\xda\xe7\xb2?(E\xf2>F\x11\xae\xbf\xb9\xb01t\x87\xb7u?\x8dac\xa8\x92\xabb\xbfgc\xdc\x07\x0c\xc9b?X0\xeeSwNw\xbf\x85+\x8fg@\x9a\xc2\xbf\x94+\x0f\x10cg\xc2?H0{\xe8\xc3~\xc7?.0\xfb]\x9b\x90\xc9\xbfp\x01\x9f6\xb4\xfa\xb4\xbf\x86\x01\x9f\x17\xfaH\xb3?\x13\xdd\xab\x12y\x9b\x96?\x16\xbaW\x15s\x1f\x8b\xbf\xa6\xc9\x1c<g\x04\x90?\xd4L\xe6\xa0\xe9)d\xbfP\x8a\xab\x12+w\xb4?J\x8a\xab\xf3\xf2\xc8\xb5\xbf\xe7\xb9\x8e\xa7\x19\xf0\xd1\xbf\xf5\xb9\x8e}_\xe5\xd0?v\xa8\xf7\xab\x1d\xd9\xa0\xbf{Q\xef\x17 \x87\x92?0\xed\xe6\x7f*#\xae\xbf`\xed\xe6w\x8en\xa7?\t\xb4\x9d\x059\xc9\xb4?\xc4g;c\xe0\x08\xa8\xbf\xb4\xbc\x1b@\x99k\xc5?\xa2\xbc\x1b\x03\xe4\xda\xc5\xbf\xa8\xaf\x80{<\xde\xa8?\x9a\xaf\x80\xf3\xd2o\xa3\xbf\xb9W\xf5$\xe4\x9e\xab?SW\xf5\xc4\xc0\x87\xa6\xbf4$\x8ab\xd4Z\xac\xbf\x17\x12\xc5|.\xa6\xb1?\x93i\xf4\x1cc\x9b\xc2\xbf\xc1iD\xa4\x1d\x0c\xc1?{\xab\xab;\xcaJ\x9c\xbf\xad\xaf\xae\xeep\x12r?\xd8\x92\x90|S\xd4\xc3\xbf\xee\x92\x10\xd7\x12\xf8\xc0?\xa6i\xac\x0f\xbf\x86\x92\xbf\x1b\xcbr\n\xb5\xe4E\xbf\xf3F5\xa4\xda\x8do\xbfR\xae\xf2\xc6\xab%\x86\xbfL\xdf\xed\xb8\xb3\xf5\xd1?B\xdf\xed\xd1\x03\x0b\xd3\xbf\x83e\n\xc87`m?\xa2\x98\x02\xf2\xf3/\x83\xbf\xec\xb8?\xff\x971\xcc?\xdc\xb8?;\xcc\xf2\xcb\xbfdta\x85D\xcf\xa5?\x04\xe8\xc2X\x8c\x08\x96\xbfy@\x88\xf5[\xa6\xb0\xbf\x1a\x81\x10\xb3<\xe3\xaf?\x1fYL\xc0\x01m\xc1\xbf+YL\x9b\xae\x0c\xc3?#\xfe?\x90\x97[\xb2?\x16\xfe?f\xd3.\xb0\xbf\x00\x19\xfe]Pj\xd0\xbf\xeb1\xfc\xd5%\xd3\xcd?\x03\xbf\xbb\r\x02\x93\xd4\xbf\x0f\xbf+\x1d\xce\xf3\xd3?\xf5P\xbbM\x8f\x8b\xc4?\x06Q\xbb\xc7\xbdP\xc8\xbf\x07O\xaa\xd6L0\xd6?\xf9N\xaa\x9am\x8b\xd6\xbf\xb7\xc6\x98G\xd9\xc3\xa7?\'c\xcc\x1dW\x8e\xb0\xbfB\x91\xa5\xdd\x98\x93\xb2?-\x91\xa5fJ\xad\xb2\xbfd5C\t\xdb\x9e\xa8?E5C\x0bX\r\xac\xbf;b\xeb\x8c%[\x80?\xc8\xb0un\x93,\x97\xbf\xdd\xba\xf8\xb3\x0c\x06\xae?\x85\xba\xf8kE\xf3\xab\xbf\x7f\xf2@\xb0\xad\x80h\xbf\xd8\x86\xdf\xb7\x04\x96u\xbfI\xb0|w\xa5N\xb7?\xd4\xaf|w\xc0N\xbc\xbfe\x8f\x97\xc7\x0b\\\x9e?\xcc\x8e\xd7F\xc5\x86\x9d\xbf\xa1e\xe7%$\x05\x81\xbf\xd1\xd9y\xc9\xeb\x18\xa8?G\x05j\xf2O\x13\x9a\xbf^,P\x135`f?j\x94\xe8\xb8\xd6i]\xbf!\xb5\x8bC\xbb\xa4i\xbf\x19\xbb\xeb&\xc5\xdf\xa4?A\xba\xebd\xdbz\xa5\xbf_\xae8T\xba~\x97\xbfN\xaf8\xce\xfe\x18\x97?\xfb\xe4\xbb\x128\xaf\xa2\xbf\xdf\xf2]\xf1\x1d\x05\xb0?\x19\x86t{\xb7e\x93\xbf\xc0\r\xe9V\x1ft\x8a?\xc4`\xd6b\x11\xac\x9b\xbf\xee\xc1\xace\xb0 \x84?o\x1arS(pz\xbf\xfc@\r\xb9\xef\xb4\x06?\x95H\x95;\x9b\x15^\xbf\x0cQ\x95\x0bwQV?\x1e8\xd5\x98\x06\xf7\x92?a\x9bjp\t\xb3\xac\xbfE\xb2\xac\x08\x7fy\xa9?\x97\xb1\xacF\x97C\xaa\xbfW\xa2\xe93\xdc\xf5k?\xdf3}\xd6\xd6\xa1\x99\xbf\xee\x0e33k7\x90\xbf7\xfd\xce\x0c\x13\x80Y\xbfe\x8c\xdf\x7fU\xefY\xbf0\xf9\xfdwqt\x95?\xc4b\xe9\xf2\x9c$\x89?\x86\xc4\xd2\xb1M/v\xbf\x1cg\xd5\xe2\x1aM\xac?\x84f\xd5\xf8\x1c\x84\xab\xbfP\xedf^\xc4\x1e\x80\xbf\xee\x11\x99\xe7\xeb0\x82\xbf\x81Y\xeb\xa0\xdf\x1f\x7f?\xd9*\xc57a\x82\x92?\xa7\xe9\x19\x91\x9akw?H\x0cs\xf7\xff\xfc\x8b?\xe0\xa7\x869\xacI\x83\xbf)R\r3\x99ws?\x8a\x1f\xd9\xf7&\xe9`?L#\xfb\x9a\xc1\xb8\x93\xbf\x84\xbb\x922-\x8e|?\x81\xa2\xb6\xe2w\xf4\x88?\xb6\xa6\xb9(\xb9\'\xa3\xbf+\xa7\xb9\xc2H\xbe\xa3?\xb0-\xe3\xbb\xc5\xb6\x7f?\xef\xca\xf8:e\x14\x9b\xbf>\xd7"\xd71F\xb2?\x13\xaeE\xaaT\x84\xaf\xbfd\xf8\x91\xe8 \x19\x98\xbfQ\xcf\xc0\xed\\\x1dJ\xbf\xc6\xf4\xcd[\xd8\xb1\xa1\xbf\xcb\xe9\x9b7\x9a\x10\x9b?J\xbbe \xcb\x01\x82\xbfH"\xcd_o\xcb\x91\xbf\xfe\rR\x1b\xd17\x9c\xbft\x0eR\xeb\x97}\x96?\x1272X\xfb\xddy?\xa6F\x06\x0b=\n\xa4\xbf\x867r\x10\xafBz?\xc4\x199(5\xfc\x8b\xbf\xa5\x10\x92!\xd8\x01\xb1\xbf\xfc\x10\x92b\x0c`\xb3?:rNz\xb7\xbeb?\xf1clI\x86\x9c\x83?\xf3\x983\x11\x99p|\xbf\x1f\xe8L\x9a\xb4\xeb\x99?\xd1\xa3wY}\x1b}\xbf|Y\x88\x0e\xbd\xa2|\xbf:\xe0\x1d\x11\x10L\x95?\xa2 \xe2\x9ej\xf5\x91?\x958b\xbb\xb5\x8f\xa0?\x92\xe1\x88\x9d;\x10\x8b\xbf%\xbb\x94\x89h\xffp\xbf\xa7\xa15K\xa8\xab\x8c\xbf\x8e\xcdtgNoQ?"c\xba\xab\xbc\x12n\xbf\xde\x97\xf5X\xab\xa1u?8\xcbz\xecU\x8b\x80\xbf~\xb0&\x9eV.\xb8\xbf\xc5\xb0&\xe2\x1dx\xbd?\xc2c\\\x07\x11\xb7\x8a\xbf\x8e3\xaegqR\x95?\xff\x99\xf8\xd7S\xbft?\x96L\xfc\x8b1\xbd\x8e\xbf\x15\xe7\x84.:7\x83?\x1esB\xfb\xc2\x83\x92\xbf\xb0\x83c\xbfP\x96~?:\x1f\'\xb0\x92\xfe\x90?\x1d?\xdf:\xdc)C? \x06)\xaeU\xb6\x91?T\xbc:-\n\xfa\x8e\xbf\x91\xbe:\xcd\xc1q\x84?d\xc4vl7\x90\xa2\xbf\xa1\x89\xed\xf0\xf4\xee\x9f?E\xbeg\x94kM\x82\xbf\xc8\xdf3\xae\x82\xd2\x94?6V\xb9\xad\xe4\xe6p?\xf7\xabF^\x18}z?\x05[\xb15\t"\xb5?\xccZ\xb11>\xa8\xb4\xbft\xea\xa8\x9f\xb5l\x84?H\xd1Q?\xb7\xeeq\xbf\x0b\x0b0cS\x9c\x8a?\xdf\xd4?S\xbc~a?5\xeb\xa7\xd3\x80\x0f\xb8?\xdf\xea\xa7\xa0\x87\xba\xb6\xbf\x97\xa1TC7{\x93\xbf\xee\xa2T\x1b\x8e\xa5\x9c?\xde\x98\x82S\xd8\xbf\xb5\xbf\t\x99\x82\x1d\x0c3\xb6?\xa5\xc4Vk\x0e\x02\x86?\xe3\xf0I%+gY?\x97\xe5\x88\xb9y.\x97\xbf\x8c\xcb\x11\x03\x9c\x7f\x84?\xd5\xc2\xfb\xcc\xbc\xbe}?2\t\xde\x87\xf3$F\xbfE\xd0\\\xf3i\xb5g\xbf\x144\xd7<J\x10\x84?W\xa9\x8c_\xdf}c?\xb5\xd6\x1c\xd0\x86j\x89?\xcfv\xf7\x9eF\x0c\x8e\xbf_x\xf7\xbe\x13\xa5\x80?\xe1\xb0\x87\xe6\x1f\xac\x8c?@~=\x94\xa5\xee]\xbf\r\xe8\xec\xf6\xc31\xa2?\xbd\xe7\xecv\x16\x94\xa2\xbfg\xc8\x9a\x93{\x99m\xbf\xf66e\xec\x7fma\xbf\x84\xb3\x06\xfaZu\x82?:2\xe5\xb7\xd9\x99i?\xe8\x95\r\\\xa8lz\xbf\xc6e\x03\xdf\x10Y\x90?\xfc\xab\x17\xe0\x9a\x81\xa2?\xa5V/\x08\x86&\x96\xbf9\xf8\x1f\xcf{T\xbe\xbf:\xfc\x8f~\xcf}\xc1?va\xf9\xdcA}\x9a?\xd8`\xf9\x94\xcc\xfb\x99\xbf"s\x18Q\xfceZ\xbf|w\xeeU\x9dw\x92\xbf\xc8\xb6yap\xda\x9b\xbf\x9a\xbc\xcd\x8bu,d?\x9e\x8d\x83,\x02\xa3t?5\x8c\x83\xcc\xa5\xac~\xbf\x94`{V\x14\x06\xa0\xbf\xbc\xc2\xf6\xd4Y\x16\x9b?W^F/\x10\x8f\x8f\xbf\x0e0\xa3[d6\x93?*\x1b\xda\xb5\xc3%h?\xb9z\x89\x1c\xac<\x8c?\x1a\xcb\x9c\xc3\x1e-q\xbfsg\xce\x81O`\x88?\xc6\xbewE?\x89t\xbfq\xe1\xbb\x82\xfa\r\x80?\xddj\x10\xd3a\x91\x91\xbf\xb7\xd5 \xd6\xb34\x80?ya\x85FLJz?\xa5\xb0B\xe3\xac\x13\x8c\xbf\x16\xf9\xefY\x11\xc5\x9c?)\xfc\xf7\x84\x15\'\xa4\xbf;\xeeYO8G~?\xe5z\xd6\xa7\x08z\x90\xbf\xb6b&*F\x83\x96\xbf\xc1c&&\xd0c\x96?\xa4XrVS\x9f\x8a?\xa1\xdf\x95\x9c\x12!\'\xbf\xc7\xafT\n\xed2\xa9\xbf!\xb0T\xe2QV\xa6?\xdc;\x1dP\x99lv?$9\x1d\xd0\xd7zw\xbf\x8f\xa5\xac?\xec\x97\x8a?\xb3\xad)\xa0U\xa5\x98?8Ats\x9c\xeb\xa3\xbf\xbeAt3\xf9\t\xa2?\x00\xcd\xbb\x10\x8b)|\xbf\xf3\x80\xde\x05\xd6.F?z\x8c\x02\x1d\xc4\x90\xa1\xbf\x99\xcb(Pg\x03f?\xf6\xf6q\xc6F\x7f\xa2?:\xfb8\']\xbc\xb0\xbf`j\x06\xf8\xb9b\x9e?)\xd2\x0c\xa8Q\xab\x8f\xbfO\x86.\xef\xf4\xcf\x99\xbf\x11\x87.Ouo\x95?\x88\x91?\x8b7\xbf|?E\x90?K_=y\xbfv\x94\x9a\x82\xfci\xa2?\x0eR\xea\x9a`\xa0\x8b\xbf\xc4Y\x96\xb1<\x7f\xae\xbf\xc4Y\x96\xb5\xf6\xbf\xa3?\x03j1&$5\x81\xbf\xfc\x95\xce)u\xd3\x88\xbfd\xe5\xc5\xeb\x84\xf9\xca?X\xe5\x85\x7f\x89P\xcc\xbf\xf4\x9b#\x96\x80\xc1\xcd\xbf\xf3\x9b@"\xacQ\xce?\xd4\x97\xfa\'\xd6}\xbc?\xd3\x97\xfa\xeb\x86]\xb6\xbf\xff\xae{\x9dUw\xa5\xbf\x0b\xaf{u7\xd2\xa5?\xf5\xac\x94\x9e+\xc0\xb0\xbf\xe5\xac\x94\xea\x0c\xa9\xb4?\x0e\x9e)\x1d\xe5\x8f\xba\xbf!\x9e)\x91\x01\x1b\xbe?\xd6\xabQ\x0f\xac\x8f\x86?"W\xa3Jd\xb2x\xbfU2!\xea`\xe5\xcf?O2!\xa5\xc4\x90\xcf\xbf\xb6\xd7qY\x88\xe6\xd9\xbf\xbc\xd7\x11{L7\xd9?\x86\x0cy\x1f\x9e\x18\xae?x\x0cyG\xb3b\xaf\xbfSl\x8e21,q\xbf\xf5\xc9\xb8&\x8c4\x8e\xbf\xe3R\xe7\x9f\x19\xa4\xc3\xbf\xe1R\xe7.U\xb0\xc4?7|S<\xf7b\xd4\xbf?|SOz\x95\xd4?4\x9d,\xcaB\x98\xcf?"\x9d\xac\xba4#\xce\xbfB{\x1a\xea\x9cR\xcc?;{\x1a1\xfa\xbb\xce\xbf\x1c\x99\xb4;\xf0&\xd4?\x19\x99\xb4\x82Z\xd7\xd4\xbf\xc0x\xce\x1bM\xec\xa9?\xb3x\xce\x1b\x94\xf2\xa1\xbf\x96<\xa6\\\xb6\x9c\xe1\xbf\x8c<F.\xf2!\xe2?\xec\xb3\xaa\xd7\x0f\xf7\xbd?#\xb4\xaa\t.c\xbc\xbf\x8e\xf0\xf0\nD\xe9\xb0?\x91\xf0\xf0\xecH\x86\xb0\xbf\xed\\\x93\xd6\xd8(\xd3?\xed\\\x13\xf4~\x00\xd2\xbf\xfc\xc2yu\xa4<\x89\xbf\x06\xc3y\xb5\xd3f\x85?\xc9*\x87P\xde\xed\xe2?\xc7*\x17\x1anZ\xe3\xbf^\x89\xd9\xfbZ\x94\xe0?O\x89\xf9\xcb\x85j\xe0\xbfR\xb2J\xc6\x0c\x97\xa2?V\xb2J\x95g\x0b\xa1\xbf\r\xe4\xd4gm\xe8\xa2\xbf\xf8\xe3\xd4\x83:\x85\xa0?N>j|_\x81\xb3?@>\xeao\x12\x8a\xb1\xbf\xd2i\x90\xea\xfe\x17\xc7\xbf\xd0i\x90\xbb\xf6E\xc9?R\xcd\xaci\x0b<\xd9?O\xcd,\xb0\xdeB\xd9\xbf\x1a\xd01\x18\xda\xd9\xbb?\x17\xd01\\\x95I\xb8\xbf\xcd2\xce=ram?Es\x8c\xa0N\x9e\x8f?L\xb608\xf8W\xe3?i\xb6\xf0\xd6\xba\x86\xe4\xbf\xd5[\xbd\x92&\xa4\xc0\xbf\xdc\xb7zAl\x93\xbd?\xe7[!\x83\x8f\x84\xe1\xbf\xe5[!\xa08\xbf\xe1?\xf4\xb4\x92\xa8\xba\xd8\xc4?\xe2\xb4\x92\n\xbc\xd2\xc3\xbf\xc9 \x8ba\xb0\xe7\xb4\xbf\xce \x8b\x11\x8e\xfc\xb8? \x14\xcdvy\xff\xa1\xbf\x86(\x9a\x0cz\xbe\x93?\n\x84\xcb\x87\xa9z\xcd\xbf\x10\x84\xab\x8dk\x1d\xcc?b\x15\xeb\xb0C\x1c\xe8\xbf\\\x15\xab\xb7\x7f\xaa\xe7?\xd6\xca\xab\xf8\xbb6\xca?\xd6\xca\x0b\xc9\x81\xac\xc9\xbf\x0f\xf8bkb\xd0\xd1?K\xf0\xc5\xa8T\xe5\xcf\xbf\xacsB\xbf\xaaD\xd1?\xb5s\xc2T\xa1\x0e\xd2\xbf\xfb\xee\xda(\x18\x99\xd8?\xfa\xee\xda\x96\xce\x0e\xd9\xbf\x1e-Ko4\x9b\x99?\xfe,K\xd7|m\x90\xbf:~i{.\x17\xb8\xbf!~i\xf1\xb2\x02\xbb?S\xea\n\x9f\x0e\xf4\xb2\xbfS\xea\n[\x17z\xb0?\xae\x04-\xea\x06\r\xbc?\xa0\x04-^\xdf\x1d\xb6\xbfQ\x0cUc\xfe\xd8\x9e\xbf@\x86\xaa\xfd\xe2\xbd\xa0?X-h\x97\x9b\x82\xb6\xbf\xa5Z\xd0>\xc6\x00\xac?\xdd\xa2=\xf0\xca\xf2\xb2?\xd6\xa2=\n\xb1\xe2\xb2\xbfw\xa6W\x89\x02\xdc\xc7\xbfz\xa6\xd71\xc7\xbc\xc9?\x1d\x8f\xd3K (\xe0\xbf\x1c\x8f\x93\x0c\x8f"\xe0?\xd9@\x87 \x05,\xd6\xbf\xe3@G\x9f\xfb\x12\xd7?\xfd \xae\xf5!\xde\xd9?\xfa n\xd7r\xf9\xda\xbf\x91\xdb\x85\xcc4\xbc\xb4\xbf\x99\xdb\x85\xce\xb6\x0f\xb0?\xcbk*m\xd3\x1a\xa5?\xb1\xd7T\xf2\xb7\x06\x9d\xbf\x9b\xea\x18vsq\xa3\xbfd\xd51\xa8\x91O\x9f?5\xda\nE\xd3\xca\x9b?\x04\xda\nQ@\xe0\x9a\xbfH\x9f\xcf\x13\x96\xbb\xbb?\xaa\xcf\xe7=7\xc7\xc0\xbflF\x8b\x7fe\xa7\xe0?gFk\xe9l\xe3\xe0\xbft\x0c\x83\xbdJ\x8f\x97?Ib\x18l\x17\x99n\xbf<!\xf0\xdf\xd9\xa6\xc3?;!\xf0l\x1cR\xc2\xbf9s,\xf3\x13\xf1z?\x829\x96\xc9\xcc\x17\x81\xbf\x1c\x8e\xfe\x0e%\x93\xe3\xbf\x1f\x8e^mA+\xe4?\'\xeb\xb6\xa0W\x18\xc4\xbf\x1a\xeb\xb6\xb6h\x9b\xc6?zz\xbeT^\x05\xb4?wz\xfe\x1c\xea\x11\xb3\xbf\xc5\x10\x92\xb2\xc1\xb5\xa7\xbf\xce\x10\x92\x8eNs\xa8?s\xbd\x07\xc8\xfd5\xa0?\xe1z\x0f\x92|\x03\x9a\xbf\x17\xdf\x00\xe2kK\x87?&\xbe\x01DF\xa5z\xbf\xfd\\\xd0!\x154\xa1?DF_\xbc?\x1f\x9c?\xc0\x89\x10\xb2zZ\xb7\xbf\xe1\x89\x10\x04\x12U\xb2?\xa4\xe7\x15\xb9b\x8b\xb3\xbf\xb3\xe7\x15W{k\xb3?15\x0bon\xa4\xc8?,5\x0b\x06#\xdb\xc9\xbf~\xa4)\x99%\x81\xd3\xbf\x97\xa4)n\x84\xf5\xd3?\x18@[\xb6\xb9\xe9\xe5\xbf\x1a@\xbbE\x05\x8b\xe5?\xb3\x90\x92\xc2\x9dW\xd2?\xb3\x90R\x1c\xb2\x1c\xd3\xbf[\x9c\x9c\xbd+\x17\xba\xbfh\x9c\x1cE\x88\x10\xbd?\xf0w #\xdeN\xb0\xbf\xf0w O\x0f\x17\xb4?\xcf\x95N\xbe\xe8\x82\xb4?\xc9\x95\x8e\xac\xad\xb2\xb4\xbfM\x0e\xd6\x04qm\xc4?<\x0e\xd6\x10\xbf<\xc2\xbf\x8f?\x03\x13\xe3\xd4\x9b?\xb5\x9f\x01\x8c\xaa~\xa6\xbf\xf2m\xa4\xe0\xb7\xc8n?\x87\xe4\xd6g\x1e\xf1\x8a?R06\x8fT\xc0&?\x1f\'\xc3\x15\xfe\x8b\x8f?\xb2\xcbS\xcbI\x92\xc3\xbf\xb7\xcbS\x19(\xc6\xc2?vt+L\xfdc\xc7\xbfut+\xa8v\xdf\xc4?An\xea\xa1\xd0(\x98\xbf&7\xf5&+\x8c\xa5?`J\xa4<\xe5~\xc2?_J\xa4tFY\xc1\xbf\x18\xb3\x9a5.{\xb9?\x0f\xb3\x9a\x97\xee\xf1\xba\xbfk\xce\x1d\x11W\xf8\xca?h\xce\x1d%\x0c\x17\xc7\xbfSY{\x19\xfa\xd1\xb8\xbfUY\xfbrV\xcf\xb7?`+\xef\xcd\x1d\xa3\xd4?g+\xefqT\xc8\xd3\xbf\xc6-\x8d\xb2\xd2\xea\xea\xbf\xbd-\re+\xd0\xeb?_tKi@\xd7\x9e\xbf\x92tK_\xe4\xb4\x9a?\xc0\x8c\x8d\xe8\xe2f\xa6?\xb8\x8c\x8d\x04\xaf\xae\xa1\xbf\x938\xf1\x88\x12{\xa2\xbf\xa18\xf1\xb4fU\xa6?G\xa2lz~\xc3\xc8\xbfO\xa2\xec\x8b\xaeM\xc8?\xff%\xc2\x04)v\xd7\xbf\xf7%\xd2U\xc5\xe3\xd7?\\\x89\x99\x1f\xa7\xbc\x90?:\x123\x8f\x02\x01\x8d\xbf\xb7(\x8a\xd0\xe5/\xbe?\x9e(\x8a\x9d\x1c\xb8\xbd\xbfp-\xde\xc7m=\x90?\xe1j\xf1\xfe\x9cIf\xbf\xb9\xc9\xf5\xd5\xd0=\x9e?\x83\x90\xeb\xb3\xd5\xb4\x85\xbf\xfc\xa7\x8b\xdb\x06\xe8\xb8\xbf\x1b\xa8\x8b\xb1\xf8\xf2\xb9?Z\x1d\xe1,\\\xd9\x95\xbf%\x8fp[\xa3y\xa2?\xea\xdb\x8bv\x1f#\x91\xbf\x1e\xdc\x8b\x06\x19s\x91?s\xaa\xdb=*\xb7\xa2?\xbaT\xb7\xa7\x91\xea\x97\xbf\xbf\x86x\xcfE\xb0\xa0\xbf\x13\x0f\xf1\x8e|\x15\x94?l\xb3X"C\xd5\xa9?\x19\xb3X\xe2\xba\xfb\xa6\xbf\xfeW\xa2\x7f4\xf3\xbf\xbf\x16X\xa2\xb0\xb4\xa3\xbf?*\xd4\xc9\x89\xc10\xb7\xbfC\xd4\xc9\x11\x03\xce\xb9?\x06\xc9\x88}\x9b\x0f\xa8?\xda\xc8\x88W\xe7l\xa6\xbf\xa8\xa5\x9b\xbat\xb4`?(-\xb2\xf2\x91\x9d}?c\xa4\x17\x84?L\x8d?\x9c\xe8\x05\x81c!\xa4\xbf\xeb4`u\x9c\x86\x96?\xe6\x19\xb0v"\xd3\xa3\xbf\xf3\x1dA\n)\xfc\x8b\xbf\x97 A\x92\xa2S\x80?H\x04\x9a,\xff\\\xb6?&\x04\x9a\xff\xb9\x19\xb6\xbf\x99\xd80\xd0\xfc\xca\x81\xbf\xfbl\x18\xf8\x10\x0f\x98?\xd6\x1a\x9fz%\xa5\x88?o\x1a\x9f\xda\xc4\x82\x8d\xbf\t\xe1\xe0\x13D@\xb6?\xef\xe0`\xed\x9f\xf6\xb2\xbf\xe3~\xc1b\xa9\\\xc2\xbf\xf1\xfd\x825\xfc\xfc\xbf?\xf6\xaaJ\xa6\xe2k\x91?\xe4\xaaJ\xde\x16\x9a\x97\xbf\x90-\xc5.\x9a\xea\xa6\xbf\xba\x96b\x8f\xd7\xb6\xb0?\x19\xa2\xe5\xc5\xcab\xa9?\x07\xa2\xe5m\xd3\xdc\xa0\xbf\xd1\x15\x0c\x1b&\xfe\xb6?\xc1\x15\x0ce\xc8\x9c\xb6\xbf!\xa8\xdb\x8b\'\\\x9a\xbf\x1f\xd4\xed)te\xa7?\x0b9`\xd4\x1f\xa2\xaa\xbf\n9`\xfc\xb8\x15\xaf?J4\x82-\xc0\xf7\xae\xbfk4\x82\r\x1f\xd2\xaa?\xe6B\xfa5f[\xa7\xbf\x16C\x98ws\n\xa7?\xd4\xcdk\x9bm1\xa6\xbf\x10\xcek\x12\xb0\x9e\xaa?\x06n\xb8\x1d\x1f\x82o\xbf\x08\xc6#\xa1\xe6lw\xbf\xae\x95U\x81\xb5\xbc\xb1?\xba\x95U\xed=\xf9\xb3\xbf\x1e\xd4*o\xd5\xdbx\xbfu\xafT\xe3\xf1\xd0^\xbf\xff\xe9\r\xeb\x04\x01\xa7?\xb6\xe9\r\xb3\x8dZ\xa7\xbfi\x12r\x808d\xcb\xbfm\x12\xf2n\x08|\xcd?;M\xa9\x1c\x9d\x1a6\xbfT\x97\n\x19/Vw?\xb6\xe5\xa2\xcc\xd8\x0b\xc2\xbf\xb5\xe5\xb6f\xf1u\xc1?\xbb\xea\xa2"\n\xf1\xa7?duQ\x95$\xce\xb0\xbf\xd0#\xca\xcf\x08/t?\x8a\x0f\xe5Go\x03\x88\xbf\t\x1f[z@S\xaa?u\x8f-h\xb1h\xb1\xbf\x88\xcfB\x1e\xe3\xa7\xc8?i\xcfB<\xd5\xca\xc4\xbfO{\x7fH\xdc\xcf\xc2\xbfX{\xff\xaer\xf3\xc1?\xcd\xb2\x8e\x9c,\xd5r\xbf\xb0KqS\x92\xf7w\xbf\x1e\xdd"9\xd8\x1e\x8e?\xbc9\xd2m\xbaZN? \xaep\xfe\xde \xc2?\x1f\xae\xd0\xe2\x94\x90\xc2\xbf\xf5\xe4Uf9\x03\x9f\xbf:\xcb\xab\xccy\\\x80?PB\x05e\xc4\x18\xb3\xbf\x9cB\xe5W\xc5$\xb0?B\xcc\x88\xe8\xb1;\x90\xbfo\xcc\x88\x9c\xee\x8c\x9f?<\x96\xaf\x10\xa2\xa0\x98?\x0f\x96\xaf\xf0\x19\x19\x9a\xbfi\xf8\x11G\x1a\x97\xb4\xbf\x80\xf8\x11Z\xe3\x85\xb1?Q\xf3:T(\x1b\xa8?>\xf3:f!k\xa5\xbf\x0e\xf0\x8b\xe0+\xf9\x87?\x17\xf7E\x00\x8e\x0c\x93\xbfFFp54s\x86\xbfx#\xb8\x1c\xf0\x8d\x93?\xd3\x85F\x02(\xbb\x83\xbf(y\xb9%\xa8\x98\x8a\xbf\x9e,\xf0]\x87\xbd\xbf?1\x16\xf8\xb8\x96\xbd\xc0\xbfCl;\xbb~\x87\xa6?\xf2k;\x81\x95Z\xa0\xbf:c\x8ab\r@\x9d\xbf\xd11EY}e\xa1?\x85\xa5\x04.w|r\xbf\xf0\xac\xfd\x18{\x10\x89\xbf\xb0wg\xce\xa3L\x9f?Y\xbb3Y\x9f\x8f\xa5\xbf\xd8G\x1b]\x8a\xf3\xc2?\xc1G\x1b\xe1\x1aH\xc2\xbf\x0c\xfa=5\xc9.\xa9?\xd3\xf9=o\xc0\xe1\xad\xbf\xec\xd0\x01\x11\x1c\x93X?\xd3\xf1w_\x0b\x1f\xa6?A\x8eH5\xda5\x9c\xbf\t\x1c\x91\x1a\xe2s\x8d?\x80Sj\xc9\xe1\\\xd6\xbf\x82Sj5\t\xbe\xd6?\xd5\x01\x05#\x1ex\x8d?n\x03\n\x06\x06\x9b{\xbf\xb5\xec={\x16J\x8e\xbf\xcb\xc7\xed=[\x14\n?\xde\x1e\x0f\xc7\xd2\x94\xb8\xbf\xfc\x1eO8P2\xbc?{p\x14\xe9\xc3\x8f\x9c?\x1a@\xae\x1bG\x0fq?u\t\x04\x06\x90\xca\xb4\xbf\x99\t\x04\xb9\xbda\xb6?\x83|\xa9\x13\x99T\xa2?\x06\xf9R\xa7cE\x97\xbfv\xd2\xc5"\xa9L\x8d\xbf\x8a-:]\xb5\x8e\x86\xbf\x99-\x1a\x94\x7f\x10\xb2\xbf\xa3-Z *\x7f\xb2?k\xed>\xbe\xfe\xa8\xb0?D\xda}\xb8(K\xaf\xbfn\xd9qR\xed5\xa1?>\xb2\xe3\xb4o1\x9b\xbfJ\x11\xbe\xd48\xbb\xae\xbf\xbe\x08\xdfrSI\xb0?;\xb4\x84\xf7\xa5\xdf\xa2?\x9e\xb3\x84\xef\xd8\xb3\xa8\xbf\xf9\x8f\xd1y\x13a\x91?\xd4\xc7\xe8TU\xdf\xa3\xbf\x85\xf6\xc3Qi\xc4\x8c\xbf\x17\xf7\xc3\x81a@\x8a?\xa2\xb2\xe1bXY\xb7\xbf\xda\xb2\xe1\x9e\x80;\xb9?7\xcf`*t\xf0\xb7\xbfT\xcf`X{\xbf\xb7?Q\x9fp\xa1\x1dR\x97?\xd0\x9e\xf0\xb2\xb6\x1e\x9c\xbfc\xccu\x1f\t8\xa6\xbf-\x99\xeb\xae;\xdb\x99?\x98\x8fE\xaa\xea\xe8\xca\xbf\xa7\x8fE\x19\xde\xc4\xc8?&Xf\x10W\x8d[\xbf\xefi\xe6kC\xd5s\xbfW\x86\xfa1\x85\x8al?\'C\xfd\x18\xc7\xf0v\xbf\xcb\xee\xcf\xca\xdd\xe6\xb9?\xac\xeeOH\x95X\xb4\xbfX\xbd\xad\x1c\xb7\x9d\x88\xbf\x1b\xbe\xadl[\x9d\x88?\xfc\xaaX\x95I\x07\xac?mU\xacF\xf8\xd0\xb4\xbf\xf4Z\x85\xb9\x15\xfb\xa6?\xcbZ\x85\xd9ve\xa8\xbf\x16\xc6\xaa<_\x16\x94\xbf^cU6 \x9c\xa7?\x81\xd5\x0c(,D\xa2\xbf\xa6\xab\x19(9s\x9a?]z\x02q\xff\xda\x91?%z\x02\xa1\xc9\xda\x96\xbf\xf0\xb9\x06%\x11\xcb\xa4\xbf\x9bt\r\x88]5\x9e?\xd1\xfbH\xe6O{\xc1\xbf\xde\xfb\x08\x98\xd8[\xc0?\xc1\xf1\x10iR\xffw?\x89\x0f\xef\x06\x17\xf8q?"\xb6\xd2T\xfd\x15\xa2?\x13l\xa5\xa9n<\x91\xbf>\xf3\x17$\xe6\xe1\xa1\xbf\xe4\xe6\xaf\xe86\xb2\x9f?J\x15X3\xa1\xcd\xb2\xbfu\x15\x18\x7f\xb2\xe1\xb0?|G\x84\x00\x8c_\x9f?\x80#B\x10\x1d\xf7\xad\xbff\xa2\xc6\x81\xdf\x90\x91\xbf\xcc\xa2\xc6q\xe1\xa7\x91?,\xbf\x89\xbe\xfe\xf7\x8d\xbf\xe7?v\x11\xe3n\x85\xbf\x92\xe1\xce\xed7ys\xbf\xcdp\xe7\xa6\x80\xbb\x8e?\xf9\x95\xcf\x93\x9e\x95J\xbf\x86~\x9e\xf2\r\x8e\x99?\x87\xd7P\x9dwP\x96?\xc8n\r\xd5\xf0\xd2Z\xbf)P\xf7\x02c\xd2\\?\x91\xcf\xbd&\xb9\x01r\xbf\x96<\xcc\x98\xa5t\x9c?:<\xcc\x10\x94w\x92\xbf\xc2\xb8`\xb1\xf5\xa5v\xbf\x9a\\\xb0\xb8\xfa\xe6\x82?\xfa\xb0\xfb\xc3Xy~?\xfd\xa9\xfbC\x9bXx\xbf\xbbgK\xe9\xd4\x8f\x92?w\x9c-\xa5\xc4=s\xbfT\xfd(\x01\xfa\xf2\xa6?\xaf\xfc\xe8\x90\xfe\xd6\xa4\xbfa\xb6\x87\xa2\xb9\x94\x98\xbfm\xdbC\xa9\xac\xc5\xa1?x6\x89\x16\xf6\xcck\xbf\xdf\x17\xdb\xa5 \xd6K\xbfOT2\x97\xce^|\xbf\xb1\xab\xcdH\x9arr\xbfQ\x16\x159\xebR\x87?\xa5\x8a\x8a\xd8Hn\x92\xbf\xf7Pu\x9de\xbe\x85\xbf\xf7UE\xc1\xa8\x89\x90\xbf\x95\x04\xc4w\xe7\xb4n\xbf\xc2\xfb\x0e2\x01A\x88\xbfYx\xb4c\x84O\xa0\xbf\xc8\xf1h\x13\xdd\xab\x9f?B\xd4$\r)\xa9\x8c\xbf\xa0\xa3lK\xd4\xef`\xbf\xa8o\x81G\x94\xda\x90\xbf"\xc0\x05\x9e\x01\xae{?\x89#\x8f\xd6&\xcbx?H\x91G\x8b\xc6,\x8c\xbfRb,Td&\xa7?\xc4a,\xc6\xe8\n\xa4\xbf\x06\xa1V\xaf\xaf\xd7\\\xbfFV*<\xcaRx\xbf\x04\xdeq^p\t\x9c\xbf\xe3\xdeq*\x9d\x8d\x94?z*\xde\x92+\xf6\xa5\xbf\x8bU\xbc\x8d\xa4\x8a\x9b?\xc8\x82X\xb1:\x13\x88\xbf\t\xbeS\xf7)\x1f\x93\xbf\n\xc0]\x83\xae\xd8\x95\xbf\xfe\x01w\xa1\xec\x01x?\x08W?\xadx\x94_\xbf\x85\xf5\xd3jbB\x95?\x94\x83\x8e\xd6\xac\x0c\x90\xbf\x82\x84\x8e\xfa+:\x91?\xa177\x14\x19^\x8e?\x11mn\x88\xb7\x15u\xbf\x88\xdcEL\xd4\xe6\x97\xbf\x19\xbb\x8b\x88\xf8\xbe\x82?\xf9[\x9c\x9e\x90\xa7\x93?>.\x95\x8ee\x87\xf7>\xa3\t:\x148\xe2u?k\xf7\xc5[\xdf\x82r?\xcbX\x8d0\xbc\xda:?:\x95{\xac\xe8\n\x84?AA\xe5D\xc16\x9c\xbf\xe4A\xe5\xfc\xe7\xad\x96?)\t\xa7\xca\xd5\xe5\xa4\xbf_\t\xa7\x1a\xfd-\xae?\xb6hR\x93\xc4\xc1}?\xbef+;B_\x92?"\xd6\xcb\x08\xf5E\x83\xbfI\xece\xbe,4\x9a?m\xbe@K\xff\x94\x91?0\x08\xfd\xd2\xbc\x1bw?\xf0\x14\x93\xe8\x93\xe7\x92?\x15\xb3\xb3=\xa0\x07s?\xd2(\xd2\xec\xb7\xa0\x81?v\xec\x96)vJ\x92?7\xa9\xfd\xc7\xa2\x10\x93\xbf\xedU\x02\x08;\x08\x92\xbf]\xb2\xaa\x0c\xe5/\xab?\x0cYU\xfeq\x84\xb0\xbfJ\xc5:,\x17\x00\xa1\xbf\x93\xc5:\x0eDI\xa1?\xa1\x9b\xecU\x99Y~?\xa1\x99\xec\x95\xa1\xaa~\xbf\xbd\xdf[tFA\x88?j\xef-O\xb1b\x97\xbf\xc9\xec5X\xb9j\xca\xbf\xe4\xec5\x8a\xccx\xcb?\xe7\xf4|\xb2N5\x97\xbf\xaa\xf6|F\xb2\xc5\x9b?\x0e\xf5\xf5\x12]\xfe\x80?\xb8\xf4\xf5\xc2Y\xe9\x80\xbf\xf3\xfa\xf4\x0c\xf1\x88\x89\xbf\xe6\x11,|\xbb\x86o\xbf\xd0\x00nds>6\xbfkp#\x8f(<\x86?\x82\xb1\x80\x81\x0f\xa2\x99?\xdd\xc4\x02\xa6\xcffq\xbf\xa9\xb9\x98>\xf2\xdf\xa1?\x18\xb9\x98N\xda\xfb\xaa\xbf\x92-{\xb9\xe2.\xa5\xbf\x15\\\xf6\xb2\x05\x8e\x97?\x18\xa7\x8d\x9d\xc6\x14c\xbf\xcd\x94\x9c\xf88U\x8a\xbf\x88\xa6\xa5[\x08\xe2|?\x1ai\xe9\x0e?\x1f\x97\xbf,\xcd\xe0\xea\xdeI\xa9?bfp\xb9;$\xb3\xbf\x1e<Sf\xbc\xb3J\xbf\x96\x945\xa3\xd6\x12z\xbfR]s\xf0az\x95\xbf\x90\xa2\x8c/\xb9\xce\x93\xbfw\xeaFd\xcd\xab\xd0?e\xeaF\xa7\x1e\xc9\xd0\xbf&\x04\xb9"\x82\x0f\xb0\xbf\xbd\x08j\xe8\xbf\xea\xae?\xc4\x89\xf86jr\x94\xbfd\x8a\xf8\xaa\xe14\x9b?\x8c\xbf\xd2\xd4\x94{\x94?\x11\xbe\xd2d\x1bT\x91\xbf;p\xaatlTt?:AV\xad\x80DR?Y\x7fv\xd0\xac2T\xbf\x1d\xd1\x0e\x9ba\xa9\x82?\xa5l\xb7\xf8:\x93\x82\xbf[\x93H\xa7#(\x8b\xbfM\x07\xf0l\xe3E\x91?f5\x80\xa7\x8a+e\xbf5\x19\x97\xd0f=\x9a?[\x18\x97\xd4\xcb\x9d\x9d\xbffr6z\x04\x19\xa3\xbfx\xe5l\xda5\x95\x9d?z\x15\t\x7f\x1cs\x92\xbf_\x16\t\x13*\xe3\x93? \xb5\xf0\xed3\x0e\x9c?\x15j\xe1+\xdf\xf3\x86\xbf\xab&\xaa\xb3\x04\x1c\x83?\xc1\xb2\xab\xd8N\xed\x7f?\xba\xe0\\\xa3\xd0\xc3\x83?\xb2\x8fQ\x96\xba;\x99?X\xd7\xa22B\x8a\x95?\xe6jQ\xa9g\xd2\xa4\xbfl{\xa7\xc5[V\xb8?({\xe7K\xdd\x07\xb7\xbfjT\x1d\xe5\xda\x80|\xbf\xce\xaa\xa3d\x80\xb1\xa0?\x9e{\xef%\x88\xeb\x98?b\xe8\xbdW\xc9\xbdq\xbf\xc9\xb5X\x95\x97\xc2\x90?;\xd4b\xe9\xb4`x\xbf@k\xe3v1\x02\x86?}Vr\xa4\xb4\xd6f?\xa9\x08{\xf6\x02?\x99\xbfC\x85\xbd\xfaA\xde\xa1?Z\x8a\xed3\xa9\x1e\xa8\xbf\xca\x8a\xed\xbf\x01x\xa4?\x8c1\xb6\x8f\x8d\xcb\x95\xbf\xd3dl\xe7h\xca\x82?d\x91\xb2\xc6\xa2\xa9v\xbfS\xa0\x9454\x92G?\x11\xe2\x8c\x84\xc9\tu?\x0e\x91\xb9\xddK\x1c\x8e?\xbd4\x00\xa52\x89q?\x94\x96\xffUE\x13j?\xf6\x1e\xb3\xe3(\x07~\xbf\n\xe1L\xbc(qs\xbf\x00\xeb\xb5\x0eQ\xdb\x93?m\xea\xb5\xee\xe1w\x95\xbf\x89\xc1L\x97\xf0\x88\xa4\xbfl\x073=\xde\xb1\x8b?8H\xfb\xb7\t\x0cg\xbf{R\xfb\xa7K\\c?7\xe3\x10\x8c\xf2\x01}?\xb1\xe0\x10\xfc\xd5\xa8w\xbf\xdb\x12_\xc4k\xd5\xa6\xbfh\x13\xdfi.\xd5\xa7?|\x15\x14b\xdcj\xa2\xbf\xc4+(<\xe6\xfa\x90?\x9bG/,\xb7\xff\x94?\x96:\xfab\x9b~m\xbf\x8e\xc3\xc0t\xe2\x00\x8a?\xab``\xc8\xc4!\x94\xbf\xb6\xf4\x9c\xab\xe3b\x88?G\xf3\x9c\xfb\x80\xbf\x87\xbf\xaa}f\x9c7\x08\x91?v\x0bf.\x02\xe1u?^}\xae\xc1LCx?va\x94/g\x98\x92?\x0e\xb2\x9cY\xe4\xf5\x84?\xf7+g\xb6\xd0F\xa1\xbf\x1e\xe7\xd0Y\xbc\xda\xa8\xbf\xec\xce\xa1\x0b\xe0z\x9c?bM\xe7\xaa\xcc\xe6\x8f?\tf1\x8ax\xb1t?]\x02@"\xda\xa5\xa3?F\x02@\xed=\x83\xaa\xbfS\xeb\x1f\xe9\x0b\xa1\x94\xbf\xc7\xf5\x8f,@_\xa1?!\xe0\xcb\xa8\xe3\x16\x87?\xda?h\x0e\xfaMw?o_\xe2\xd5\xb9\x0c\xbe?\xac/\xf1Z\xcag\xc0\xbfZ6Ct\x15\xa3\xc1\xbfp6\xc3\xbb\x92_\xc2?\x82V\xbd\xa5fE\xb8?{V\x1d\xe1N\xe5\xbc\xbf\x82\xc9\xbc\xc2\xc5\xcc\x91?\xb3d^\t\xb5\xbe\xa1\xbf\x83\xe4\x8e=.-\x9b?z\xe4\x8eMk\x85\x96\xbf\xd0LG\x1f\xe5i\xc4\xbf\xdeL\xc7\xf2C\x13\xc3?\x00 \xffN\xbd\xeb\xa8\xbf\x12\x90\x7f{,\x99\xb2?$s\xb8\xe9\xd5\x9e\xb7?\xf6r\xb8\xf7I\xe6\xbb\xbf\xef\x02\x9d\xca\xd6\xd4\xb8?\xe7\x02\x9d\xd6\xc4R\xb2\xbfc\xac\xff\xa4^M\xd3\xbfs\xac\xff\xb3\xb6\x19\xd2?\x93d\xf1xCc\x81\xbfO\xc9\xe2a9.u?\xc5\xddK\x897(\x92\xbf\x90\x88\xd0\x9a\x19\xaf{\xbfBu\xffxq5\xd2\xbfFuO\x10X\xac\xd3?\xe8\x97~s\'\xd2\xc5?\xcd\x97\xfen\xaf\x91\xc7\xbf\xae\xc5\xc8\x8b\x96e\xb6?\xa4\xc5\xe8\x85\xca\x85\xb4\xbf#\x9a\xb5w\x9c\x8d\xe0\xbf\x1d\x9aM\x95\xdbb\xe0?0\xba\x13J\xc9\xec\x80\xbf1\xdd\tiAH\x99?|\xa6[>\xb3\x82\xdc\xbfy\xa6\x9b8+\xdb\xdb?I\x88\xf6\xfc\x0c\xf4i\xbf\xb3\xa2=\xbfI\x0b\x87?r\xb0\xfbRw3\xdc?n\xb0{\xb5R\xc9\xdc\xbf\xdf\x1c\xa1\xba|O\xdc?\xdd\x1c!I_\xa3\xdd\xbfn\xa3:\xea\x98\x80\xb1\xbfw\xa3:o\xe0\xa0\xb1?\xf2\x93R}\xc1\xc7\xd5?\xf5\x93\xd2\xf0\n[\xd6\xbf\xee\x96\x85\x9eU\x11\x8c?\xc0\xcbB\xff\x9d\xbe\x97\xbf5\x85\xc6V/q\xa0?7\x85\xc6\x9a\x19\x96\xa8\xbf\x99.H\xe7\x926\xc3?\x8a.H\xbf0c\xc6\xbf\x91\x82\xbaB>\x84\xea?\x8c\x82\xba\xa75c\xea\xbfa\xfc-\xde\xbc\x89\x96\xbf\x9a\xfc-\xfe6\xc2\x96?\xe9\xb3\xdaL\xc4Q\xbb?\xe6\xb3\x1a/\x18h\xb6\xbfN\xab\x9c\x84\xc0\x9a\xc1?9V9\xf5:v\xbf\xbf\x98b\xe4\xffZa|?O1\xf2\x1f\x88\x19\x81\xbfk\x82u\n\xd8z\xd9\xbf{\x82u=`{\xda?\xc8\xe3|\x10\xf0p\xb6\xbf\xd1\xe3|\xe5P;\xb3?\xf3@\np1\x12\xd9\xbf\xf7@\n\x18dq\xda?"5\x00\xfek\xb3\xaf?o\x1a\x00R_\x7f\xb3\xbf@~=\x1a\xf8\x98\x9e?\xad~=V\xc5^\x93\xbf\xee\xee\xf6\x02\x97\x89\xb7\xbf\x05\xef\xf6\xe4\x02*\xb7?<\x10i\xcf\xe3\x89\xc0\xbf> \xd2\xda\x92~\xbe?\x00\x1cv\x91\xc2\x0f\xd1?\xf8\x1b\xf6\r)\x84\xd0\xbfb\xdd\x80\xad\xe5\xf5\xc3?_\xdd\x80@)W\xc6\xbf\xdei\xbeM\xeb\xfeb?q\xe6\xdbl\xf3:\xac\xbf\xf3\xb4L\x0f\xb2\xfa\x94?\xdb\xb4L\n\xae\x19\x93\xbf/R\xff\x96:?\xd2?,R\xff\x02u\xf0\xd2\xbf\x88\xf6\xb8\xca\xe0\xdc\xa7??\xecq\xe5\xdf\xbc\x91\xbf\x81\xa8\x1f7\xf1\xd1\xb8\xbf\x8a\xa8\x1fc\xcc\x1f\xb8?\xb9[D\xb0\x9c\x97\x9a?\xb7[D\x1c(\xc0\x95\xbf\x05/<}\xefb\xd6?\x05/\xfc\xb8\xe6\xb6\xd5\xbf\x00\x87\xf7\x17\xf3\xb6\xb6\xbf\x01\x87\xf7O\r\x8b\xb4?\x84j\xef\xef|$\xbb\xbf\x84j\xef\xb9a\xf9\xb6?7(`\xf8\xc2R\x9c?<\x140 \xd9;\xac\xbf\xbeIW\xb94\xa7\xb7\xbf\xc7IW\x1av\xf0\xb9?1\xcc\xe8\x18\xa9\xc7\xc3?$\xcc\xe8\xf1#\xfe\xc5\xbf\x03+~)1\xcc\x9d\xbf^+^\xfc\xb4\x0f\x9a?O\xef \xf9\x0e\xd8\xd4?J\xef\xa0\x86\xfe\x0f\xd5\xbf\xc6\x7f6\xa9\x99\xf9\x9c\xbf\xf2\x7f6\xa9\x1f\x8a\x94?G\xf0U9R\xa3S?\x80\x08Uc\x0c\xfdc?{\xb9\xbf\xf9\x1dk\xac\xbf\xaa\xdc\xdf\xb4\x95\xfe\xb2?&aF\xf2f\x9c\x80\xbf\x03w\xe66\x18\x80k\xbf\xe7\xdc\x84\xd5Bo\xa5?\xce\xdc\x84m\x8f\r\xaa\xbfu\x9dr\xd5\x91\x85\xd9?d\x9dro\xb7\xd5\xda\xbf\x8b\xc7Kj\x01\xf5\x87\xbf\xd4\x8e\x97\xf0I(r?\x8e\xd9U\xe9V\xc5\xc1\xbf\x91\xd9Un\x19}\xc1?\x9cp\xa6\xc3vB\x82?u\x1e\xb3X"yz?]b\x0e\x9e\x02\xfb\xd1\xbf`b\x0e:\xff\xa3\xd3?iB6\xe7\x89\xab\xb2\xbfmB6\xb7C\x00\xb5?k\x83g7\xbc\x06\xa5\xbf\xec\r\x9e}\xf4S\x8e?\xb3\xe5n{:B\xb0\xbf\x8e\xcb\xdd>7o\xa9?\xefn\xc8\xce\xd0\xd9\x9a?\x847\xe4\x01n\xa7\xa8\xbf\x02;\x19\xad\xa66\x82?n\x9d\x8cv}\xbc\x94\xbf\xf8\x80x\xc2D\x9b\xa7?\xf7\x80x\x1e\x84\xae\xae\xbf#q\xd3\xc0\xd2\xf0\xb3\xbfGq\xd3Bz\xb6\xb4?\xce\xba]%\xf0\x18\x86?\x9a\xba\xdd\xaa\xd9\xc7\x8f\xbf \x06u\xfa\xc5\xa1\x92?[1\xa8\x93\xb6\x07g\xbf\x07\xc8?y`1\xd7\xbf\x19\xc8\xbf\xa2\x98H\xd8?F\\\xf2\xb5\xd3\x0f\xec\xbfG\\r\xb9\xd4\xff\xeb?\x90\x1e\xe4+\xcfI\xc9?\x8d\x1e\xe4cX\x9a\xc7\xbfU\xe0\'tN\xa1\xb5\xbfv\xe0\'\xa5$F\xb3?\xe2\xfb\x18\xd9F7\xba\xbf\xf2\xfb\x18\x87\xady\xba?\xe5t^\xe4\xb4\xc6\xbb?\xd4t^\xeeN\xe6\xbb\xbf+\x9c~\xb0\xe4\xa7\xee?+\x9c>\xcf(\x93\xee\xbf\x10~%\xdd)\x9c\xaf\xbfP~%\x11h\x11\xab?{&\x01\x04/ch?\x9eI\x00\xc9\xc1\x8d\x85\xbf%\x1c\x18xJT\x8e\xbf"\x1c\x18\xd8\xee$\x80?\xf7\xc5\xd4\x84=\xe5\x93\xbf\xf6\xc5\xd4@(\x82\x96?\xe7\xfa\x03b\x83Z\xb0\xbf\xfd\xfa\x83\xad\xc2\x82\xb2?\xbb\xe7\xa4V>\xda\xb5?\xbb\xe7\xa4\x8a\x94\x13\xba\xbf\xf4\x96\xd0\xac\xd9\x10\xbc\xbf\xf3\x96\xd0\xf4\x1a\x8c\xb8?FP\xc2T\x1e\x0c\xc7?=P\xc2dn!\xc8\xbf\x8f\x17C\xd9*E\xb3?"/\x86\xda\x0c\xd2\xa8\xbf\x17\x92\x96\xce1\xf7\xc7?\x1a\x92\xd6e,\xb5\xc8\xbf;\x00\x08\xba"T\xcb?0\x00\x08(b\x97\xcb\xbf%85^@q\xe7?$85\xb4\xc0h\xe7\xbf\x04\xf2\x1b\xb7\x9f\xc2\xa1\xbf\x16\xf2\x1b\'\x14\xdc\xa7?w\xdf\x1b\xda\x03\x88\xc2?p\xdf\x1b\xe2\x03\xa2\xc7\xbf\x15Z\xcd\x155\x0c\x83\xbf\xd7R\x19\xd5\xcbF\x95\xbf\x12\x8f`:\xf2\xac\xc1\xbf)\x1e\xc1\xe3\x95\xec\xbf?\xf0%\xc8\xe7\xa3\xa3\xd0\xbf\x86K\x10\x10\x17i\xce?oT\xfef\xddg\xa0\xbf\xea\xa8\xfc\x1d\x8b\x8a\x95?,\xb04\xe8\x82\x13\xc1?$\xb0\xf4d\xed\xc8\xc0\xbf\xab\xda\xce\x14Tz\x8f?$\x95\xc4l\x87si?\x90\xc3\xea\xb0\xc0\xb1\x90\xbfH\xc4\xea\x88\x8cP\x91?\\\xd1,\x85F\xb8\x88?S}\x99V\xac\x90P?\x12\x84%\xf5\xbe\x9d\xbf\xbf\xf5\x83%!\x9f\x98\xb8?@\'\xdc\x10\xd4\xb3\xa8\xbf\xb2\x13n\xa4\x9e\x95\xb2?\x05Q=\x0c\xd0\x95\x82\xbf$Q=\x84\xae<\x8f?k\xday\xd8\x14$\xaf\xbf\xef\xday\xe4\x9a>\xaa?\xbf\x08\x0c\x88<*_?\x1b\xff\x05$dxk\xbf3\xe6\x8e\x9a\xdd|\xb5\xbf\\\xe6\x8e\xa6<\x8d\xb4?E/\x04\x00\xbe|\xa8\xbfe/\x04\xc8\xdf\x19\xad?\xf9T\xbe\xbd\xf2\xfe\x8a?zT\xbe!\x93e\x89\xbf\xa5L|XDEs\xbf\xea\x9a\x1d\xbc\x01\xc6D\xbf\xf6\x9fk\xab<\xdb\xa0\xbfy@\xd7\xe8v\x9b\x94?\xbd4i\xf3\xe00\xa5\xbf\x015i\xffl\xcc\xa7?q\xb84|Kk\x96\xbf_\xb94\x0c\xcdv\x91?\xb2\x8c{5q\t\xd2?\xae\x8c{\xca\x93\x9c\xd1\xbf\xcf\xc7\x83\x9b|\x14\x8f?\x80\xc6\x83se\xe8\x85\xbfJ\x11<\x1c8\x11\xbd?5\x11\xbc&\xb6P\xbc\xbfR\x94\xe8,\x14\x86~?\xf6$:;J\x97\x95\xbf}\xb3|V\xd1\x10\xb2\xbf\xbb\xb3\x84\xa38_\xb1?\xc6\x85\xd5z\x1f\xfb\xa9?\xb2\x85u\xe8\xc3\xcd\xac\xbf}\xd1\xe5Gp\x13\x8a?O/\x1ax\xef\x02\x8f?6\xb1\xab\x8b\xb3\xbb\xa2\xbf\xa3bW\xebK\x98\x9a?[L&7\x07D\xb1?\x9b\x98Lb?\xbc\xa6\xbf\x91\xdc\xec\xd5\xe7U\xb2?\x89\xdc\xecj\xa55\xb1\xbf\xebq\xaa\xd9E\xb3\x9d\xbf\rr\xaaAj\x82\x98?\x1fE\x95\x88\xf2\x87\xa6?\x08E\x95!\x19x\xa2\xbf\xa81-\x8d\xde\xb1\xb9?\x9e1-\xe9\xd5L\xb6\xbfV\xbb\xb2\x83\xb6\xdd\xb7\xbfy\xbb\xb2a\xaf\x90\xb7?+He^\x7f\xf5\x86\xbf\xfc$\x95\xb9\xcb(g?sQ\xfa\xd9c\xb9\xa4?\xe5\xa2\xf4\xaft9\x9f\xbfpf\xfd\xcc\x01\xe4\x84?\xdb\xcc\xfa\xf9^\x80z\xbf\x13=^Iq\xa0\xa6?\xe0<^aT\xab\xa9\xbf\xbe\xbf\xa9\xe6G\xd9p?n \xab\xd4\xe0#\x83?\x9e\xbf!\xdb\xe2N\xb1\xbf\xde\xbf\xc1\x8c\x81\x8b\xb5?\xa8\x0f\x19\xaa\xf6q\xb1\xbf\xc2\x0f\x19\x02\xaf7\xb9?\xc6\xa3&}<\xb5S?0,[\x00\x8b\x81\x80?\xb7*iA\xa6>\xb5?x*i\x95\xb7\xb4\xb4\xbf\xa4\xf6\xdc\xb9\x9f\x88\xa9?\xbe\xed\xb9\x0f\xc6K\x97\xbfZ\n"\x10\xb9\x9f\xbe?A\n\xa2=\xac\x87\xbc\xbf\xe7\xc2\xa2\xf5r{\xb7?\xdc\xc2\xa2-IR\xb6\xbf\x06\xe2\xceb\x1f)\xa2?\xc6\xe1\xce68\x9f\xaa\xbf\x8c\xce\x8b\x9b)\xde\xb6\xbf\xa0\xce\x8b\x99I\xa9\xb9?\xee\xd1-\x9a \xfb\xc1?\xfb\xd1-Z[\x98\xc4\xbf2<\xfe\xb9\xcc\xf1\x99?\xb1;\xfe\x19\xf9\xf4\x93\xbfr\xc8M\xdb\x18\xd2\xbd\xbf\xb8\xc8\xcd\xf3C\xc4\xba?YD\xf7\xa1\xd1g\xa6?JD\xf7\xffyk\xa4\xbf*\xe1R=\x90\'\x81\xbf\xcb\xc2\xa5\xfa\xd1\x1ft?\x07\xdc\x16\xfa\xe5\xad\xb3\xbf\xf6\xb7-t`k\xaf?\x16\xcd1\xcb\xa6@\x9e?\x99\xe6\x98\xf57\x07\xa9\xbf\xe6\xd0\xc8_A\xf0\xbe?\xa8\xd0\xc8!\xe4\x10\xbb\xbf\xa0j\x80\xbb\x7f\xf8\xa8?cj\xc0\xeeg\x8c\xab\xbf\xb5\x8b%\x81J!\x91?v\x8b%\xc1\x8a\x1e\x9c\xbf\x17\xd9\xd6\xebi\xb3\xc2?\t\xd9V}\xce\x98\xc1\xbf\xf0(\xc2\x8f\x17\x90\xa2?\x87Q\x84?O\xc4\x98\xbfd\x81;\x18e\xf5\x9d?\x04\x81;.dw\x9a\xbfw\x1c\x8am\xe7\xb5\x1e?\xf5\x89mW\r\xfb\x9b\xbf+\xba1Qz\x8f\x98?\xe7\xdc\x98\xa0ck\xa1\xbf\x16\xb59d\xe8\x8a\x97\xbf\xef\xda\x1c\xe0YY\xa2?\xc8\x91hT\xccQ\xc7?\xd4\x91h\x9a/\x82\xc6\xbf4?PT\x04\x8b\xa1\xbf(\x7f\xa0\xfe.v\x99?\xfb\xb0u\xce\xe4\xdc\x97?\x11\x9e\x14C\x93)\x80?24LP\xddp\xba?\x1a4L\x1e\x10\x1b\xbd\xbf\xe0~\x94\x9f~q|\xbf\xb0\xfd(\xffe3l?\xaa\xb7\xf9\x91\x0e\x10\xa0\xbfio\xf3\xab\xe9s\x91?\xd7\xb3\x93\xd8+\x98\xb6\xbf\x00\xb4\x93\xdd\x92\x07\xbb?\xab\xb3\x9a\xaf\xe3\xf9\xb0?\x99\xb3\xfa\\\x8bN\xb1\xbf*J\xc5\x9d\x10\x89\xb4\xbfFJ\xc5O\x9d\x1d\xbc?\x82)\x06\x95\xfb\xae\x89\xbf\x8b)\x06%\xbd\xc5\x81?\x87U\xd4\x8e\x7f\x8a~\xbf\xaf*jWL\xf2\x8b?\xc1hu\x870Fm\xbf\x16\xad\xee\xb86\x99\x99??\x99\x9f\xd9x;\xa0\xbf\x173?4;2\x9f?\xda+m\x0e?$\xa6?SW\xdaD\xe6^\x9f\xbf>\x04\xf2D\xdb)\xb4?)\x04\xf2\xff\x9fA\xb4\xbf\xdd\xdb\xdf\x99\xfd\x94\xb6\xbf\t\xdc\xdf@\x97\x7f\xb3?\xe1\x84M\x84o,\x9f?g\x84MH\x8a;\x95\xbfxP\xd5w\tmq?\xfe\xab\n\xa2\xeeu\x94?\xe2`.^\xfe\x96\xa1?\x91\xc0\\\xd4\xc3\xdb\x97\xbfO\xf6D\xd7\xde\x83\xa6?={\xa2\xa9\x8a\x95\xb1\xbfy\x17X\x1c\xd4=\xa4?q.0\xc8\x01\xc5\x9f\xbfrp\xcb\xfc\x94\xad\x9e\xbf$q\xcb4V\xc6\x92?\x89\xd4Q\xa9#\xf7\xa8\xbf\xe5\xd4Q\xd1\xfay\xa5?8K\xd8\xf5\x1f\x80\x85?8K\xd85\x9e\xb4\x82\xbf\xa9\x1by\xeb"q\x88?\xa9\x1byK\xd9G\x83\xbfB?o\xbbpf\xa5?\x12?oQ\xab\t\xac\xbf\xd89\xa3\x81J\xf08\xbf\x8b\xe5\xf2\x8b\xd4@\x8d\xbf\x1bn\x12c{\x88r?\xc7\x9a\x04\xc9\xddp\x9b\xbf\x8e1\xacJ=\x08\xa1?\x98b\x18\xc3\x95\\\x97\xbf\x96\x10u_j\xd0\xb2\xbf\xc8\x10u\xe7\x0c\t\xb6?\xea\xfb\xadVo\xa0\x9a\xbf\x94\x04\x7f\xab\xc4s6?k\xa4s\xf8w\xa9\x95\xbf\xcd"\x9dC\x8a\xe2c?m\x96\x00\x08\x17!\xbb\xbf\x97\x96\x00\x14DQ\xbb?i\xf7j\xdc\xc6\xa5\xbb?R\xf7jO\xa1n\xbc\xbf\x878\xf4\xa5h~\xbf\xbf\x998\xf4\x16Hw\xbe?0\xd8\x8d\xfb\x824\x9b?\xd8\xd7\x8dE\xc7\xf5\x9e\xbf\x0c\xd9$\x86\x06\xc9\x81\xbf\x13J\xb6\xb3\x97xr\xbf\xe1\x89Q\xa0\xdd\xc9\x99\xbf\xbd\x13\xa3$c\xa4\x8c?\xd7\xfb\x17 \xc2\x99\xa5?6\xf7/@\x8eD\x95\xbf>\x92\xc7\xcb`\x03\x83?\xb1\xdcp\xa8\x03,\x7f?\xb6\xc1\x99\x91\x03\x0e\x97??\x08\xce\x0cw\xb3j\xbf\x0b\xe4+t\xadS\x90?\x1f\xc8W\xe8\x9c0\x8e\xbfX\x14G\xc94\xba\xa0?\xbf\x89\xa3\xc4\xda\xb3\xb0\xbfE\x16*\xd6\xf9*\x92?\x97\x15*.\xa1\xa3\x97\xbfp\x93@\xf7V\x05\x84\xbf\xc8J\xa0WH\xaa\x93?f\xe5\x7f\x0bTz\xa6\xbf\xaa\xe5\x7f\x03f\xec\xa0?\xd5\x8b<\x7f\x8b\x88\x93?s\xbc\xc8sJC]\xbf\xe4\x97\xc1\xc1\x05%\xa6?\x91-\x83s\n\xf0\x99\xbf\x85\xd2\xaf\xfe\x83h|\xbf5\xf5\xab\xa7\xa4\xea\x96?3\x8cv0\xb4\x9c\xa0\xbf\xe4\x19\xed@\xe9\x02\x9f?BY\n\x02z\x16\x83\xbf\xa3h)\x88\xc6\xafl?\xb6\x8f\xae\x9c\x1f9{?\x82\xa3+{\xccq\x92\xbfY\xbcJ\xf5\xbbZ\x81\xbfE\x87j\x95GD~\xbf\xdbL\x98r\xea#e\xbf\xb8\xaeg\r/\xe7m\xbf\xa9j\xf6\xff\x88\xfb\x90\xbf\xadP&\xb4q\x04s\xbf"\x04x\xdd\x86[\xa3?\x8c\x06\xf0f\x18\xd0\x9d\xbf\xc8u\xdb\x16\xdc\t\x9d\xbfk\xbbmK:l\xa4?\xf3Uo\xe0\xa5|\x87?SV\xc8\xff\x87\xa8\x92?\x1c\xe3e\x88\x0c\x9bp\xbfE\xf22\xd4\xc1\x99\x84?\x99,a^c\xf2s?\x82\xd4\x9eq\x8a\xf5\x7f?\'\xe8\xbf4\xc4a\xa3?\xa5\xe7\xbf\x86\xa8$\xa9\xbf}M\xb7\xe8\x94\xacp? \xa6[TE\xa1\x85\xbf\xbd2"o\xb2|\x99\xbf\xe3c\xee\x86\'\x07l\xbf\xca\xb4~\xdb1\x06v?8Y\xbf}#\xc4\x85\xbf#\xa8\x937\xfc\xdb\x92\xbf\xa7E\x9d\xbce\xeen?T9\xaa;+b\x82\xbf\xf1\x15W\x11t:o\xbfn\xf8\xa6\xcf\x9e\xd5\xa1\xbf=\xc37}\x0b\xf6p?\xb5,\x12\xf6\x97\xfbz\xbf\x17\x8c\x84\x15\x1eT\x90?\x15>*\xf9\xc2\x01l?\x96q\xb5a\xa3\xc3\x8d?0\x81!z\xcb<\xa2?\xa0\x80!\xa1I\xf9\xa4\xbf\x7f\x8b"\x948\xe3\x80\xbf/\xb9\xee\xb9\x7fb\x96\xbf$\xbb\x9c^\xd4/\x99\xbf\xf1\xb4\xcb\xe9\xc8U[?ohhn\xcf-\x94?\xd8\xd0\xd0\\\xe4.\x87\xbf\x11,\xb1V\x9bT<?6xJ\x95\x1d\xbc\x87?\xcbqf\xbb\xdd=\x84?\xb2\xe1\xcc\xf6\x94X}\xbf\x9c\x82\xeaVy\xac\x8b\xbf\x00\xedU\xc4\x15\\k\xbfh\x19_?d\x1a\x8b\xbfkv\xe3K&y0?\xae\xe1`\x94\xebH\x92\xbf\x19\xc4\xc1\x08\xd8\x13\x8e?\xbe\x83\xb8\xba\x96\xeav?Z\x0b\x1e5\xc4\x0fR?\xbe\xe3\x9df\x13\x82\x90?\xfe\xe2\x9d\x06\xbdL\x96\xbf\x03\xe1j"g[{\xbf\xd3\x1dW\x13p\xd5B?t\x0e\xabw\x10\xb6\x8f?q\xf2T\xb0Q\x8c\x83?\xe2].3\x17\xd9\x95?n].\x13\xbf\xcc\x95\xbf7\xb8\x0c\\\xdc`y\xbf\x04\xa3\xf91\x8e\x87\x84\xbf\xd9\xdd\xdf_\x0b\xa3\x90\xbf\x06D@\xa0,\x03\x82\xbf;g_\xbcM\xe9\xc6\xbfUg\xdf\xf9\x94\x04\xc6?\xad\x00\xa9\x80\x85\x05\x99\xbf6\x02\xa9\x9c\x89\'\x92?/\x16pcI\xb4e\xbf\xfd\xe7\x8f\x9c\xdb\xa1l\xbf\x810h@`\xb7g\xbf\x90\x9b/\x97\xf2"P\xbfl\xa2\xdf+\xc8\x05\x8d\xbfU] T\xaa\xa9\x81\xbff\x19z\xd1\x0f!I?\xa3\xbd\xd0\xa5\x1b<~?\x9b\x99_2Z\xef\x86?A4\xd0\xaa,V\x90?r\xa3\xb1\x0c\x13\xe6|\xbf\xb3i,\xffk\xe8\x98?W\xd7N\x1f\x85\xe2U?P\xb3\xd3\x17\xc3\x85z\xbf;\xe4h\xads\xccu?\x06\xe2h\xad-\xbcy\xbf_\x0c<\xa5\xca\xbe\xba?\'\x0c\xbcq\xda\x8e\xbf\xbfa\xa0\xf7\xc4\xa3\x12}?/\xe7=\xc1\xf6/\x99\xbf6M\xa8S\x83.k\xbf\xaf\xd8+Vy\xe2x\xbf\xb5\xbac\xac\x8b\x1b\xc6?\x82\xbac\xe8\xc5A\xc4\xbfZ\x14m\\\x16\x8b\xaa\xbf"\x15m|L\xdf\xa7?\x8aM\x02\x9c\xd5n\xac\xbf\xefM\x02\x18\xb10\xac?\t\'\xe8U\x19\x8c\x8d\xbf\xfd\x14\xf4\xca\xf2=\x90?\x11?\xa2G\x0e\xc7f\xbf\xd4\x1f\xd1\x8b\xcc\xd9|?S\x170\xf1{{\x80\xbf<1`\x92\xf9Gx?\xb1\xc1\xc1\x13\x9d\xfe#?\xdb\xf1a\xc0\xb2\x01|?\x96\x9d\xcd\xff\xb4\x18\x85\xbf`\xc2d\xe0Y\xe9y\xbf\x8b\xd8\x083[\r\x8e?\tQ\xee\x19\xff\x16t?\x7f0!\xb6y\xbf\x81?\xa2\x97\x10\x03\xafk\x91\xbf\xa6=\n\x05\x9c\xe7\x8d\xbfr\x82\xeb\x15\xcc-t\xbf\x91Y\x04\xefs\x15t?\xd2,\x82\xd72\x90\x8f\xbf\xb4Y\xf9gk\xbeD\xbf\xb7\x95\x7f\x16_/\x82?\x85\xfc\xce\xbbz\xbb\x9c?\xd1\xf8\x9dW\x83L\x84\xbf\xcf\xb1\xd6$\x11@\xae?\x01\xb1\xd6\x19\xa4J\xa4\xbf\xb0|\xbc\xcbp\xfa\xb9\xbf\xec||1W*\xbc?)\xb7\x02\xaf\x82\x12\x9a?jm\x05>\xae$\x8e\xbf\xec\\\xfbH\xe7\x83\x94\xbf\xc4C\t\xbe>7\x85\xbf\x1f#\xb1\xd1=\xd0E\xbf\x88\x13\x1b\xd5\x8a\x18\x81?^\x9e\xee\xfb\xb7\xfc\x8c?m\xa7\xfb\xdbpx\xa3\xbf\x8e-j\xea "Y\xbfS!5\xf5\xfb\x91k?v\xe6\xef}Z\xadM\xbfZ\xff \xb8\xfc}\x8c\xbf\xab\xaf\xde\xa6]H\x90\xbf\x13\x11\xd6\xdb\x88\x9fL?\xb1v\x01Z<\xb4Q?\xe1\xa5\x7fY\xe4\xa1r?\xf2.\xd6(\xf3\x17\x84?\xbbY\xac\xb1l\xcf{\xbfP\x81\x86\xfapHu?\xb1~yef\xabr?\xbe\x85fQ\xa0\x01\x93?Bz\x99N\x94\x14\x97?\x88T\x03\xb2#h}?7R\x03\xb2\xbfop\xbfu\x1at\xa5U\t\x87\xbf\xea\r\xba\xdbT\xe8\x90?G?\x9f\xda\x9b]Q?\xe34X\xa9ja}?]\x0cW\x9a\xac\xb5\x93\xbfR\xcc\xa3\x96m/y\xbf#\xd8q.\xa2\x04\xa5\xbf\xa8\xd8q3j\xa3\xaa?F\x92{\x96\xab\x90\x8d?\xe7\x90{6W\xe1\x8b\xbf)\x89,\x1bq\xd9\x9b?^Fd\xd9\xceEk\xbf\x9bC\x08m\xf6+\x91\xbf\xb2D\x08YP{\x9b?\xbd\xcd\r}\x99?l?\xdbF^\x00V\xd6\x9a?\xd1\xca}h5\xe8\x96\xbf\xda\x96\xfbP\xec\xdc\x84?\xc95D\x1d\x9d:8\xbf\xf5"\xea\xe8\x88{\x8f?q&I\xf4d\x12\xa4\xbf\xa3\x9c$\x91\xee\xb6\x81?T%\xa5\x9fl0B?;^\x0b,\xf1\x8by?M\xe5\x18#v\xf4q?\x0f\xe18g\x15rG?\xabW\xb5v\xbe\x07\xa4\xbf~\xaf\xbak\x89\xf8\x9e?E\xeb\x91\x13\x9f\xcb\xa8?t\xf5\xc8q8\xd4\xb1\xbf\xc4C\xfe\xa3\x86\xb1u?\xcd!\xff\x11\x80\xde\x83\xbf\xa7r\xa8\xd7X\x86\xbc?\xa1r\xa8\x89\xe1\xbb\xbf\xbf\x8c\xf7{\x98\xfdG\xbd\xbf\xdc\xfb=\xd0\x94g\xc3?\xe2x\xca\xdb\x1a\x06t?\xd8;\xe5\xd1\x9a\x8a\x82\xbf\x10\xcc\x81\xfcx\xdb\x8d\xbf\x11<\xe37\xc2=A\xbf\xea2\xaem\xc4\xb6\x91\xbf>\xcb\xb8\xfe\x9a\xba|?\xb6\xf7#\r5o\xb7\xbf\xcc\xf7#\x99\xad\xcf\xb1?\xd41\xf7Q\r\x82\xb4\xbf\xdd1\xf7\xb13\x8b\xb1?\xeaV\x13\n=\xaf\xcd?\xe0V\x93\xf5\xb1\x06\xce\xbf\x00\xa0H?\xd7\xbb{\xbf\xb2\'\xd2oc\x04\x96?\x08/\xdd\x12h\x8e\xc5\xbf\x08/\xdd\x8b\x17\xb3\xc4?\xe4;\x11\xb4\x82\xb4v\xbfi\x88\xdd\x17G\xe9m\xbf\x979\xc9\x88\x88\xfa\x82\xbf\xe5\x9cdT\xc2\xff\x99?\x0ey\xec\xe1\x84\xff\xba\xbf\x1cy\xec\x91!\xe5\xba?\x13e\xdc~\xd5;\xcd?\x13e\\\xb0\x8f\xb7\xce\xbfn\xeb\xed(0\xfd\x95\xbf\xc9\xf5v\xa4B\x0e\xa3?G\x04"f\xf1 \xd0\xbf\xb9\x08D\x97\xd4\x86\xce?58\xaec-(\x97?\x138\xae\xf3\xb7>\x9c\xbf\xcaa\x1f\x02\xda\xb1\xde\xbf\xc7a\x1f\xf1\xdcx\xde?\xbc\xea\xcf\x9c\xb3Y\xa2?\x98\xea\xcf\x0c\x0c)\xa8\xbf\xa9\x04e\xdf\xd9I\xd2?\xb7\x04e1xh\xd0\xbf+\x93\t\xc8>\xcf\xd0?5\x93\t=#\xc3\xd1\xbf\x85\x06v\x84-\x8f5\xbf\xa2\xf6\x89\xfbL\x1f0\xbf\xbf-\xb8P\xd8\xf6\xd0?\xaf-\xb8B\xffI\xd0\xbf=^\xab{\x97a\xba?2^\xab\x13\xebP\xbf\xbf\xec\xb5\xf8\x8b\xdf(\x95?F\xae\xc5\x9f\x82Z`\xbf2\x12{d\x81\xa9\xbb\xbf4\x12\xfb\x98c$\xbd?\xcdL=L\x15\xa4\xc4\xbf\xd5L=\xe4I\xfb\xc4?\xe9l\xd5DZQ\x9e?r\xb6\x9a\t\x88J\xa4\xbf\x16pL\xb3\x94&`\xbf\xbcq\x96qR\xb0\x90\xbf6\xa5\xe7\xe1\xf8\xf2\xc6?,\xa5\'\xd8eQ\xc6\xbf\x97\xfd\x96\xeb\xcb\xe8\x8b\xbfi\x02i\xf4R\x1d\x8c\xbf\xe0\xb9\xb5A\x9e[\xcb\xbf\xe1\xb9\xb5s\r\x1e\xcb?\x88^\xcc\x05\xd4\xd8\xa7\xbf\x8b^\xcc"7\xd1\xa1?\xb73\xaee\xf15\xde\xbf\xc03\xae3_\xfa\xdc?\x8d\x1c\xe5\xfe\xb7\xeb\xbc?\x8e\x1c\xe5\x1c>)\xbb\xbf\xfa20-\xa1\x1az\xbfH\xcc\xc0\xb4\xaav]?\x1fP\xa5\xd7\x1b<\xb5\xbf$P\xa5/\x89\x01\xb1?\x0f\xcd!A@>\x8a?\x88j\x0e\t1[]\xbfKA\xc2\x1bj\x1d\xdd?GA\x82\xbf\xb5y\xdc\xbf\x88\xfc\xaa\x93@L\x9d\xbfh\xfc\xaa~\x89+\x93?Qf\x02\xe8\xb9\x07\xd2?Of\x02\x80>\x0e\xd2\xbf\x83\x96\xa2\x8b\x94]\x90?GKQ\xecz\xea\xa0\xbf?>\x8b2\x12\x1d\xc8\xbf?>\x8b\xe2\xf9\x9d\xc8?\xc0\x8a\xcdOc\x12\x95\xbf\x8d\xc5\xe6\x7f*:\xa2?\x185\xaa\xa0\xac\x1e\xb1\xbf\'5\xaa\xcc\xed\xbb\xb1?\xc3\x98\x1c\xe0X\x13\xc6\xbf\xbd\x98\x1c\xc5Yr\xc4?\x86\xc2\x9d\xdd<\xb5\xc1?\x85\xc2\xbd[\x01\xdf\xc1\xbfS\xe8%\xd9\xee\xa8\xaf\xbfL\xe8%e\xe3e\xae?\xf4\xb2\x12\r& \xbb\xbf\xee\xb2\x12S2G\xbf?\'s`\xea<Q\x96?\xf7r`\xfa\xac\x07\x93\xbf\x10\xd6\xdet\xef\x1d\x97?q\xab\xbd\r!\xb8\x8c\xbfpH\xea\x0c\xbe\xd8\xd1?\x86H\xea\xbc\xb4\xa8\xd0\xbfBj\xc0O\xa42y\xbf"5\xe0_&\x02\x8a?>\xa6\x96@\xec_\xb6?4\xa6\xd6\xa5\x9f \xb7\xbf\xa0\xf5\xe4cBX\x81?]*l\xb0\xe2if?tDn\xf5\x9b)\x85\xbf\x04\xdbn\xa4~\x88!\xbfi\x98f=fK\xa9\xbf\x91\x98f%yA\xac?D\xc5\xa6\xdc\x1e\xc8\x95?\xf8:Y#\x8d\xf8\x9a?\xe1\xbd\x03\x87\n\xd9U?\xae;p`8\x1a\x96\xbf\xf4\x1f\xdb\x03\xcd\x98\xd3?\xea\x1f[I\xe0\xae\xd3\xbf\x82Ij\x00\x824\x91?\x81IjTp:\x90\xbf\x14"\x97a\xbd\x8c\xa0\xbf\x1f"\x97\xc9\x90O\xa1?\xe8.&\x80\x83\xddb?\xc8\x8b\tT\x80-\x81\xbf\xb9/\x96Z\xf8t\xb3\xbf\x86_,\xad\xdeK\xad?v\xcf@R\xc90\xa9?b\xcf@$\xfe\x93\xa7\xbfBo\xc3n\x99\xef\x83?\x12o\xc3\x9c\x17\xa4\x88\xbf\xbd\x87\x12\x85\xa2,\xaf\xbf\xf4C\x89\x04\x04\xa5\xb0?\xee\x18m\x85\xd8\xcb\x98\xbf\xec\x18m\xff\xa1\x13\x96?!/\xf0bh\xf2@?\x10/\xf0"\xfd\xebN\xbf\x96\xf6\xe7\xe9\x9e\x82\xd5?\x8a\xf6\x1f\x96\xb0\\\xd4\xbfS\x98i\x84\xa5\xc2\xb6\xbf`\x98i\x14X\xee\xbb?p\xee\x18G\xafv\x96?\x92q\xc7\xf8\xbd\xa3h\xbfr\xf9\xcd%\xe4\xd2\xae?\xb1\xfcf\xeaFd\xb1\xbfY\x17\xe8\xb9%j\xd9\xbf\\\x17h\xae\x02\x1d\xd9?\xc7\xb4\xe7\xed\x98g\xd3\xbf\xc8\xb4\xe7"tq\xd3?\x05A\x87\xbf\xc0\xa2\xa5\xbfV\x82\x0ec~\xc6\x9d?\xec\x94\xa7v\xd4\xb1\xbf\xbf\xf2\x94\xa73=\xdf\xbd?\xa9\x9b\xc9L2\x8d\xc3\xbf\xb0\x9b\t\x8ck\x10\xc3?#i\xd4\xd2c6\xa0?6i\xd4"\x10\x8d\xa7\xbf2\xa1\x9aA\x95\xc7\xdf?\x80P\xcdD\xae\x89\xe0\xbf~\x06:\x8c\xc9\xa7\xb7\xbf\x9b\x06: \xaa\xfb\xb3?\xe59c\x17\x95N\x8c?\xf0\x9c\xb1\xeb\xda\x9d\x94\xbfC\xd2\xf9\xc9\xbe\xd0p\xbf\xbc-\x06\x86+Rx\xbf\xfbF\x9e]\x9d\xb8\x7f\xbf\xb3\x91g\xf7r\r\x98?\x9c\xeb\x0bA;\xac\xbb\xbf\xb8\xeb\x0b\x9d@\xa4\xb3?\xd8\xf4\x0ft\x96\xc1\xb2?\xca\xf4\x0f\xec\xa3\xff\xb4\xbf\x9a+mNI\xb1\xbd\xbf\xc5\x95\xb6Dk\x02\xc1?\xf65\x93\xb3m\xdf\xc5?\xec5\x13\x88m\xee\xc8\xbf\x0251\x8d\xc0?\xa4?&jb\xf2\xe8-\x94\xbf\xf3\xd8\xd3\x16iV\xd2?\x88\xb1\xa7\xb5Y\xf8\xcd\xbf\xd6\x8d\xe2\x9f\xde\x03\xb5?\xcc\x8d\xe2m\x85\xc8\xb8\xbf\x13,\xa0\xc9\xcc\x98\xd0\xbf\x14,\x8eO2\xf1\xd0?\xb8x\x16 `-z\xbf\x9a\x86\xe9\x7f9\xbcr\xbf]\x89\xc8\xfe\x93\x06\xc1?]\x89\xc8\xbc\xb9\xde\xc0\xbf+Z\x05*R\xa7\xaf?\xffY\x95\xc1\xdc\xa1\xaa\xbf\xcb\xc3Z*\x017\xb1\xbf\xcf\xc3Z\xde\x1c\x08\xb3?\n\x82\xd6R\xeaz\xc9?\x02\x82V\x9d\r\x1e\xcb\xbf\x9et\x1d\xc2\x9f\x1d\x9e\xbff\xba\x0e\t\xa0\xab\xa1?XD\xebc\xbd\xc5\xc3?>Dk]b\xb4\xc0\xbf\xbd\xe1\xcc\xb2\x11\x04f?E\x0eg\x96\x19\xc18\xbfr\x90w4@\xc9\xae?\xf4\x8fwD\xfa\xff\xa7\xbf\xc8\xf9w\x9afH\x94?\xcf\xfc;1\xb3w\xa0\xbf\xa2\x8fF\xa2\x98\xc0\xb0?\x86\x8fF\x84\xe6\xf3\xb3\xbf\xb3\x84\xd1\xc1\x194\xba\xbf\xb9\x84\xd1\xa4L\xc6\xb9?\xb7\x1a\xbfM\x9a\xf8\x8e\xbf\\\x8d\xdf\xb2i\xf8\x9d?\xa2\xd1\xae\x0c\xaf1\xa9\xbf\x1a\xd2\xae\xfc\x12E\xa8?\x91\xe0]\x0eq\x8c\xaa?\x19\xf0.\t$\xbc\xb1\xbf\x95\x14\xedDV\xb0\xab\xbf\xef\x14\xedW"\x86\xa9?#\x8d\x1d\x11\xdf\x1d\x9a\xbf\xae\x1a;"\x10\x91\x8c?\xc9\xf4kx\x034\xa1\xbf\x15\xea\xd7P\x8fC\x9a?\xb5\x91\xa6\x94\x17;\x97?QG\x9a\xd8<\xe0u\xbf\\Qj\xbf\x15\x99\xb4\xbftQj\xa7"\x7f\xbb?D\xf2\xf6e\x9fB\xa3\xbf\xb0\xf2\xf6]H\xc9\xa1?pa3\xde\x04w\xae\xbf\xe7\xb0\x19\x9b\xdb\n\xb7?M\xcb\t\xd2*\xab\xba?&\xcb\xa9l\xa2e\xb9\xbf$\x0f\xa5\xc4\xaa\x91\xa3?r\x87R\x8e\x08\x8a\xb3\xbf\xee3B\x9fo\xce\x98?\x8c3B\xff\xaf&\x93\xbf\xd7|\xc0%_\xae\x8b?h\xc5\x07\\\xc7\xe2K\xbf\x00\xd9\xae\xbd\xa5\xb5\xd0\xbf\x0c\xd9\xae\xc0%\x11\xd1?\xb0\x06\xb3w\x95+p\xbf\x1b>\x13"=Y\x94\xbf\r\x8d\x16\xc7\xf4,\x99\xbf\x87\x8d\x16\xf7\xb1\xac\x9d?1c\r\xce\x01,\x9d\xbfpc\r\x1e\xe2_\x9a?\x1f\xa8\\.k.\xb8?\xd1\xa7\\\xd0\xe7\xd7\xb1\xbf\xbe\xa3\xde[\xaf(\xa2?\xe6Q\xef\xf9\x97\xde\xb0\xbf,\xa2\xb7\x99\xf3[\x9d\xbf\xc5\x88\xde&\xc4\xc0s?\xf8\xe0\xf2\xc0~\xa74\xbf\xe9\xcb\x03\xa3A\xd9\x9a?\x1d@\x19\x9c\xfb\xeb\xa8?\x01@\x19\x88\xab\x91\xa9\xbf\x1c\xa3\x98h\xfb\xc7\xb4\xbf+\xa3\x98n\x17q\xb3?\x19\x86=0S\xcd\x8e?\xd0\t{\xa0w\xf8q\xbfi\xd2\xd3\xbd\xb85\x9a?\x8e\xa4\xa7[&\x8d\x80\xbf\xf13\xb8v\x96\xd9\x80?\x0f\xccG\xa9A\x17\x8c?w\xb6i\xfc\x8e\x9b\x93?.\xb6i\xb0|\xcc\x90\xbf\xcc\xab\n\xfd\x8fr\x96\xbf\x1c\xac\x02Q\xb3Y\x94?Q\x14\x1aG\xf3\xc7\xa0\xbf\x14)4\xfc\xd5\xe8\x9d?\x97\xc0\xc02t\xbe\x84?\x9f/\xb0\x0c\x11B\xa0\xbf\x1ayCdbX\x9a?\xe8xC0\xec\x89\x9e\xbfv\xe3\x02\xc9\xe1\x10\x9a?\xa7\xe3\x02Y\x16\x86\x91\xbf\xaas\xb4\x10\\-\x99\xbf\xfbs\xb4$\xf8\xa9\x99?)S\xe4\x01\'\xf9\xac?\xe7R\xe4\xf5\xc6\xf2\xa4\xbf3\xb1\xfage/z?\x07\xac\xfe\xfb\x96I\x9b\xbf\x9f?\x1c5R\x07\x91\xbfU\x00qt\x1b/{?5\t\xc6i\x86&\xa9\xbfW\t\xc61\xd9\x97\xa4?p0\xe1\x1a\x8e\xd1\xa7?D0\xe1\x81X\xe7\xa4\xbf\x19m\x126V\xd4\xa0?\\6\tK\xc1m\xb0\xbf\x0f\xe0\x12Pf\x19\xad\xbf;p\x89\x90\'\xae\xb0?3_2 \xba\xf4|\xbfE\xd0\xe6\x8f\'\x8a\x87\xbf\xc9\xf7\xdf!y\x02\xa4\xbf\xeb\xfb\xefh\x94\xf9\xb2?\xf2\xd1p9\xbd\x9f\xad\xbf\x02\xd2p\xc9\x94P\xaa?"#\x1d\xba\x02i\xa0?>F:\x00\x8cb\x96\xbf\xdd\xda\x1f\x11I\xefp?y\xf6Gx\xda;\x97\xbf\xa1\xe9\xe6o(\xcd\x84?St\xf3\xdf \xe8\x94\xbf\x18\x9a\x12\x1a\x80%\x83?\x80\x99\x12\n!\x95\x84\xbfOjS\xb4.78?RM\xd1Z\xad\xd8\x93\xbf\x82\xf8\xdd\xad\xe6\xbb\xa2\xbf\xc1\xf8\xdd\xfd?\xb9\xa2?\x15\xf5\x15\xdc\xb8*\xbf?\xf7\xf4\x15\x15r1\xbd\xbf\x1d\x1c\xde\x19s\x94Q?\xb4\x86wfd\xd9s\xbf\x94o\x95D\xd3\x10\xa7?\x94\xde*a)w\x9a\xbf\xa6;\x93\x825K\xc2\xbf\xcb;\x93g\x95\x1b\xc1?\x0c\xfai\xd0\xeb\xddl?w\x9f\x06\xf5\xab=\xa1\xbf\x10\xd0\x17\x16m\x03\xa5\xbf[\xd0\x17\xa8\x92\x8b\xa0?i*.\x9b5Y\xa2?q*.;(8\xa4\xbf\x88\xdb<\xe1\x04a\xa0?\xe5\xb6yR\x96u\x93\xbf\x8b\\EV\xb6\xf6\x88\xbf\x8b\\Ev\xb7\x94\x8a?4\x14&\x95\xa4\'\x90?\xe6O\x98\x94\xa2\xa5~\xbfodo3K\x18\x97?\xf3c\xef46\xed\x9a\xbfb:f\xb2\x9c1\xa2?K:fzs\xf0\xa0\xbf_+\x87m\xb1=\x83\xbf\n@,\x87\xadp\r?\\\xbb\xef\xaf\xd3uy\xbf\xdc$\x82@\xfc\xee@\xbf\x8e\xcd\xf5\xc2\x04*r?\x9c\xe6zq\xe3\xea\x83\xbf\xc7\xbf\xd3\xa7\x980\x89\xbf\xf5\xbf\xd3gK\x80\x84?\xf6\xe6c\x9e\xc0{\xb6?\xcb\xe6#\x04\xfb\x11\xb5\xbfT\x19\xbaN\x15\xbet?\xef\x16\xba\x0eG\xc3y\xbf\xb7\xde\xa3\xed\xf6\x92c?`{\xb4\xed\xcb\x95\x94\xbf\xfe\x12\xbf\xb5\xc8b\xb0\xbfz&~\xd3\xd9\xa6\xab?\x11\x90\xca\xe5&L\x9f?\xafG\xe5n\xb5W\xa4\xbf \x9a\x1bYw\xcf\xa5?j47\xb28\x82\x9d\xbfx\xf9\x9eL2p\xad\xbf\xc3|\xcf\x7f(\xbd\xb0?\xf2T\x1d\x0b\xc6\x00\xb0?\x8c\xa9\x12\xa8\x1dl\xaa\xbf\xc1/\x8a\xf3a\x16\xb5?\xa7/\x8a\xc6W\xbb\xb2\xbf\xff\x19\x02\xb6\t\x1a\xa0?\xda\x19\x02\xec)D\xa0\xbf\xfb\xcf\x05$z)\xb2?\xda\xcf\xe5u\x8e\r\xb3\xbf7Wq\'\t\xfaT\xbf\x86\xea\x88\x05x\'\x96\xbf\x9e\xac\xef2a\x1eq?\xc2)\x88\xb6\xf6\xee\x86?!6n\xeeh\xd3\x9c?\xc85n\xce\x97$\x9e\xbft\xc9y\x9e\x8e\xd7\xb1?V\xc9y\x82\x85\x97\xb8\xbf2D\x14\x878\x8f\xa6\xbfvD\x14Q\xdf\xf5\xab?\xa0\x98\x08}\xbas\x93?+L\x84F\xd8O\xa0\xbf\xb6\x1b\xe1\x9d2z\x82\xbf\xb9\x8b{H\x86\xe5n\xbf\x91\xf4\x9f\x95>\'\xa1?o\xf4\x03W\x85\x01\xa2\xbf\xef?\n\xd0\x08j\x92\xbf) \x05\x1e\xbaC\xa0?\t\xfeF\xc2\x0b\x86b\xbfU+\xe0H\xf8X\x10?BL\x84O\xfa\xe7\xad?!L\x84\x1f\xd5\xe4\xaa\xbf\x9e\xa8\xf7ii/\xb8\xbf\xb2\xa8\xf7\x89\x05\x08\xb5?\xaa\x12\xf0\x1f\xda\xd6\xb0\xbf\xd0\x12\xf0\xbb\x9a6\xb8?\xd2n\xbf\xa0\xc9\x80\xb0?j\xdd~y{Z\xa7\xbf\x1f\x7f\xfdm\xef3\xa0?\xed~\xfd\xf5{\xc9\xa7\xbf\xdd{.D\xb6`\xa2\xbf\xe2\xef\xb9\x80;\xb5\x84?~\x03\x02\xaf\x08\xf8~?F\xfb\xfbA\xaa\xd8d?|\xd9\xccB\xb2\xa8_\xbf\x91\x8e\x99\xde\x17\xe7c\xbf\xc7\x03\xd0,\xeb\xd5)\xbf?\x00\xcd\xfe/lm?\xb8\xfa\n|\xec\xba\xab?\x00\xfa\n\x00\x96\xd8\xad\xbf$\xa22>\x12\x9e\x95?\x9e^\xcda\x83*\x93?\x97TEHP\x94u?yQEH\xd6\xbat\xbf\x0b\x95\x9c\xd5\xb2F\xa1\xbf?\x95\x9c\x93\x1a\x03\xa5?\xc0\xc2\xf9\x83#6\x83\xbf\x00=\x06\x9c\xc6\x98\x84\xbf\xe9\xb7-\x1f[\x94\x9b?V\xdb\x96\xbf6\xe8\xaa\xbfYd\x8b.5\xc5\x83\xbf\xbfe\x8b\xc2uR\x82?\xa8\x04\x95tj\xb4\xa6\xbf%\x05\x95\xd6G\xa2\xa0?\xa3\x9f\xefD\xb7\x89\x8d\xbf\x12\xa0\xef\x0cw\x96\x81?$\xbe\x95\x15|\x98@?\r\xb6\xb2\xd2\xe9\x03z\xbf1\xeb\xd4\x9d\x88B~\xbfh\xd6\xa9\x1b\xe9-j?Co\x13la\xd0\x84?\xc6\xec6\xc1Z\xbfD\xbf4\xf4\xe9\xf1n,\x96\xbf\xec\xea\xd3k\x98Y\x89?~\xa7\xea\x1943\x88\xbf\xd7WU8\x9d\xb9b\xbf\x03Ut\xebv\x9e}?\xeb(\xba\x99\x1d\xce\x8d\xbf\xd0\xa8L\x8bM\x0b\x9b\xbfe\xa72M\x8dYv?\x08\xd45\xe6\xe7Lw\xbf\xab\xea\x1a\xb3\xdcd\x8c?m\x92\xfe\xa7\xf1\xbbM?(\xa3\xff\xe9\x1cxa\xbfB\x1b\xc9\xd4\xb9\xb4\x90?\xe0\x86F\xb2S\xbc0\xbf\x9f\xc2\xde\xdd\xf3\xe9\x83?\x17>!\xc2\xc1\x8f\x88?u\x0c:\xd9\x065\x81?&V\xd0\xc9\x96\x9fS\xbf\x83_\xca\xd8\n\x0b\x8f\xbf>0e\x0co\x9e\x90?\xdaqY\xbbd\x83w?\xf3\xfah\xca\x13\xd53?\xf7\xffJ`\xf4.\x8b?\x87\x7f%\xac<\x95\x90\xbf\xb9#\xa9\xc5\xc4\\\x91\xbf\x9fGR\x1fs\xae\x8f?t)M\xa3\xa0\x11\x80\xbfZ\x95\xa6\x11\x0f3\x91?\x9f\x0b?\x197\xc6p?\xfd\x84\x9fT:\xc9\x8d\xbfU\x05\x0b\xa1\xd1l\xa2?\xca\x04\x0b%\xd7i\xab\xbf_\xac7\x02\xe1E\x83\xbf9\xd7\x1b\x8b\xd3\x0b\x90?76\x11\x0fn+\x8c\xbf\xd2l"\xde\x16W|?\xde\x9a@<\x94\x94`?^M \xde\x90tx\xbf\x150\xcbWY8\x92?_/\xcb\xf7\xf4\t\x9b\xbf\x03\x07Q*4\xcbd?\x0b~\xd7J\xf2Gz?\'K\x97}J9\x91\xbf\xd9\x97.\xfbSJ\x8f?j\x95c\x9a\xb7\x94\x8a?\xf8&\xc7P\x18\x03p\xbf%\t[\x88\xdc\xd5\x9a\xbf\xf3\x12\xb6\xd0\x95u\x8f?*\xcf\x9f\xef\x02\x82\x82\xbf\x0c\xa5?\xdfq\x1f|?\xab\x12\xf4R{\x92\x86?\xc3\x08z\xa1\xe0_\x93\xbfh\x8d \xf7&\xe7\x8e\xbfCG\x90_mk\x98?h\xe1\x96\x13\x9d>\xa1\xbf,\xc3-\x07\xba\xd6\x95?W\xf2\x1d\xc9\x15"\x90\xbf\xa6\x96\xef\xc8<\xfck?-\\\x08\xcd"2[?\x8d\n\xa1Q\xa3v\x89\xbf\xce\xb6jq\xce<{\xbfMp\xd5\xa2\x8eob?.\xac\xc7\xcf\xa2K\x94\xbfH\xd6\xe3\x17\\I\xa2?\xbcH\x7f\x0c~\x05\x9b\xbf\x05J\x7f|/\xd3\x96?\n\x83\xdb3\xd4\x06{?\x86\xe0\xf6\xfc\xc7a\x90\xbf\xf4q\xc4\xf9~\x16/?2\x11\xe7\x83-\xcf\x8a\xbfSA\x1ac/3\x89?\xf6\x814\x06\xf1Zz\xbf\xe8^\xef\xec\x966i?\x9b\xeb\x9d9\x0b?\x91\xbf\xfd_\xd6\xa6\xc4\x9bo\xbfPfJ\xde8\xca\x80\xbf^\xc6\xcdI\r\xca\x87?q\xe2\xe6\xbc\xb1\xc8\x9f\xbf\x01\xc0(>{\x05\x83\xbf\x00~\xae\xa3\xe3\xfa{\xbf\x11\x86\xf9\x1c\xf2\xa6\xa3?\xaf\x0b\xf3)U\x0f\x92\xbf\n=\xfa\xcc\xd2\x9b\xb1?\xa1<\xfa\x0e\xe1-\xb8\xbf)\x8b\x1c\xf1\xbf\x00\x96\xbf\x96\xe8\xc6m\xc7B\x8c\xbf\'\xddC\xae-X\x8b\xbfE\xddC\xae=\x9d\x88?^\xfa\xc8Y\x13/q\xbf\xa4\xbf\x8dy5\xe2\x94\xbf>K5\x8eB\xa9\x83?\x91\x91j\xdc\xd7\x94\x7f\xbf_\x94e\xe2\xb0\x7f\x80\xbf\xd8\xca2!\xae\x02\x9e?\xf9H\xc4r\xcd\xd4\x83?)#\xba\x16=0\x93\xbfU\xf4\xce\x87\xb7;e?\xfc\xbc\xf3\xf9\xc6\xa5\x87\xbf\x14E\xb7l\x1e\x9f\x94?\x92D\xb7l\x8a\xfe\x91\xbf\xc5PQy,}\x7f\xbf:\xaf\xae\xa6#lt\xbf\x91N\x06g\xc9\xa8z?`\xcc\xe6\xa3\xfb\xf1_?\x19\x81\x00\x03\x07L\xac\xbfe\x81\x80\xb8\xde~\xac?Z.\x1c\xbeH@\x99?\xed[xHT\x8e\x8a\xbf\xa8\x9b\xb3\xff\xff\xc3\xa2?\xf36gg\xe9\t\x93\xbf\x89\xd1\xc5]E\x84\x98\xbf\xaf\xe8\xe2\xeelA\xa3?\x11i?r\xc0\xe2|?5\xa4\xfd\xa8L\xaaY\xbf\x1a\x01\xb7\xf9^C\x85? \xe7\x1f\xc9\xbe\x9c7?[\xe5\xef\x96\n\xe7\x90?\x1f\xe4\xefv;\x03\x91\xbf\x91N\x1c!@\xff\xbc\xbf\xbfN\x1c"\xb5\x1c\xbc?\x07\x8e\x0eg\xde\x02\x9d?\xfb\x1a\x1dnmi\x8d\xbf\x13"Fg\x85\xfa\x87\xbf\xd5$Fw:\x8f\x8e?\xd7(\xf7\\2\xc1j\xbf\x8b4\xc2\xa8\x88\xd4\x86\xbfgz\xaa\xc3\xd5\x11\xa0?U\xf4T\x13\x82\x1f\x96\xbf$6\'\x8f\x96\r\x8a\xbf\xcb\x8d\xb1\x91\x93\xa6r\xbf\x95k\x960\xae\x0b\x9a?\xacj\x96\x1c\xaa^\x94\xbf\n\x05\xb37\xef\x0ep?y\xc0\xecwfA\x91\xbf\x16\xf4`}\x91\xc0\x93?X\xf3`\xd9\xceQ\x97\xbf\x83;M\x1fV\xc1q?\x1bdY\xc4Ir\x83?\xcf\xb2\x1f\n\xbc\x8cb\xbfd\xf6C\t\x16\xe5\x90?1\xc9\xaaJ\t\xe1\x90\xbf1\xc9\xaa\n\x1f\xff\x9a?\x1a\xc2\x19\xf3B~\x94?\xec\x1a\x9c1\xbc\xebR\xbf\xd5\xe1\x1d\xc5\xb1H\x97\xbf\\\xe2\x1d1\xabg\x94?\x88\x0f\x90v\x90=\x90?\x96:@\x1au\x95|\xbf\x07\xeb\xc2\x8f\xf0K\x8c\xbf\xfau\xe1=|\x8b\x95?\xb7k?\x80\x96"\xa1\xbf\x1fl?P\xae\xd7\xa1?\xf0o.\xea\x17`T\xbfQy.j\xd0:S?8~ W\x98\x10[?\x97\x07r\xfd-A\x93\xbfZ\x01.\x93\x9e\x17\x96\xbf!\x01\x97\xfb\xd4L\xa0?\x82IDB\xfa\tr?\x9e\x11\x91\x88=3\x90\xbf\xdb\x0c5\n\xfaN\x8b\xbf\x01\x87\x1a=bK\x98?\xc3\x90\xb7a\x87n\x80\xbf4nHzWu\x8e\xbfk\x8eW\x91z>\x93\xbf\xf0\x1e\xaf`@\x0f\x8f?\xcd\xae\xae%\x9e\xf5\xa9?\x83\xae\xae\rc\xcb\xa7\xbf\xd4\x9a2\x18\xb3\xf6|\xbf\rN\x19\\.\xbc\x80?yg\x83K\xa4i\x90?^g\x83\xca:\xca\x97\xbf,\xf8\t W\xca\x90?\xb6\xef\x13\xc0\xc9\x1e\x87\xbfY\xe8\x0f\x19 \x01k\xbf\xf8\xf9C\x8e8\x03\x80?p\x1e\x8d\xbb)\xa8\xbd?f\x1e\r\xf6q\x8e\xba\xbf\x06\x89\x83\x92\xbcx\xb8\xbf\x07\x89\x83\x90\xbe\xba\xb4?\xcd\x07\xd9G\xe1\x06\x9d\xbf\x13\x08\xd9\xa7\xb5}\x96?=\x15VRX\x8aj\xbf\x9b\xc2Jj\xd3i\x95?\x1c\xb1L\xbf\x86\xed\x84\xbf\xfbN\xb3|\xc3\xd6\x81\xbf\xb5\xc0V#\xd4\xb9\xa1\xbf\xfb\xc0V\xb1A\xf8\xa0?\xee1\xcf!\x014\xb0\xbf\x0bd\x1e>\xa5~\xac?\xd6\x95\x85\x1e\xb1\xcf\xc0?\xd8\x95eZ\x8d\x0b\xc2\xbf\xfa\x05$n3\x9e\x96\xbf\xe1\x02\x12\xb3U\xb6\xa8?\xcf-2\xc9\xb3\xff\xbb\xbf\xdd-\xb2\xf7]C\xbe?\x13\x11\x86\xeeJ\xc3j\xbfS\x84\xa1\xebw\xaf\x89?\x1a#\xe0\xcdl.\x94\xbf\xc8\xe5\xfe\x90\x10\xf2i\xbf\x87\x12{\xa9\xa6\xde\xb7\xbf\x99\x12{\xb3\x91(\xb6?IL5\x13#\xc0\xba?/L5M \x93\xbd\xbf\xda\x1a]\xd7#*\x90\xbf\x9a\x92\x8b\xc2\x12\xae|\xbf\xb0\xc1ab\xc6[\xbc\xbf\xbd\xc1a\xbeh\xc8\xbc?\xc0%J\xd4K\xbcr?0\xed\xda\xa5\'O\x82?\x1e\xad\xbb<\xb9g\xd1\xbf\x1f\xad\xbb\x9a\xde_\xd1?\x84Gg\xa8\xff\xe9U?\xe7\xa13T\x14\x8dd\xbfe0y%\xd9\x91\xc6?g0y\x1d+\x15\xc5\xbf.\xb4_\x0f\x9e\x86\xc0?;\xb4_\xcc\x929\xc3\xbf\xf5\x02\x91\x7f\xe5\x91\x93?\xa3\x02\x91\xe3\x13\x9c\x9e\xbf?B*\xcd)\x9e\xc2?:B\xaa\xfdOb\xc2\xbf\xd0vN\x83\xc8F\xb8?\xb4vN^\x11\xdd\xb3\xbf\x95\x07\x06)\xd6a\x81?\xc2\x03\x83\xfc\xe6\xf2\x90\xbf\xc9\x96\xc1E\xad\xd9\xab\xbfe\xcb\xe0\x10\xcf3\xb0?\x8f\x86Z\x07\xf9\xb0\xc1\xbf\xa3\x86\xda@\x0c\xf1\xc2?\x9f_c\xcc\xe61\x98?h_c0nC\x98\xbf\xed\xfbde1\xd7\x87\xbf$~\xb2\xd2\x98\x96\x9b?M\x04\xf6\xfc\\\xbb\xb6?H\x04\xf6\x1cj\xbc\xb5\xbf\xdb]\xba\x113\xcfB?\x16/\xddH\xe1\x99^\xbf\'/P\xbe\x85\x12\xb2\xbfW^\xa0h~\xa7\xab?{\xacw\x0c+\xcf\x95\xbfM\xc7z\xb3\x0c\xa6X?}\xca\xf0\x8f\xc7\x19\xd5\xbf~\xca\xf0s\xa7Z\xd3?\xd5zn8\xf6\xa0\xb0?Z\xf5\xdc\x80\x9a~\xa6\xbf\xdfD6\xd9f\xcb\x90\xbfj\x89lR\x8d\x17\x82?\x88\xf6\xba>;\x13\xa2\xbf\xb9\xf6\xbap;\xb1\xa3?\x9dm\xac\xcc\xcdm\x84\xbf\xeem\xac\xdcI\xb8\x8c?\x80\xa3A\xbf\xbd>\xcb?{\xa3\xc1QPl\xcc\xbf\xf7u\xd001P|\xbf\x97\x1d4P\x1dB\x90?\xf6\xcd\x86;\xea$\xc1?\xd2\x9b\r\xcb/g\xbc\xbf\x93v\xe4\x07lg\x9f?dv\xe4\xd5\x9bg\x99\xbf\xf5\xd2\xeb\xc8>C\xbf\xbf\xeb\xd2\xeb\x04j{\xbe?\xd2\x1a|\xe1o\xbe\x81\xbf\x9f\xe4\x83.\x93Z\x80\xbf\xbfZ\xbf\xdd\xa4\xe0\xb1\xbf\xb6\xb5~\x03h\x18\xad?\xbc\xea\xbc2*\xce\xb0\xbf\xb1\xea\xbc\x05\xd1`\xb2?\xe1\x9c\x8d7\x8d\xbd\xb0?\xca\x9cm\x00@\xeb\xb2\xbf_\x94\xbb\x98\x05\r\xa6\xbf\xfe(w!\xbdA\x9b?~S\x15\xf8\xef\xd3\xa9\xbf\x83S\x95\xd5\xfb\xd9\xa7?\xaa\xb1\xff,\xd4\xccp\xbf;\x13\xc0D\xb8\xca\x9b\xbf\xb2l\xc9\x8c\xea\x18\xa3\xbf\xc1\xd9\x92E<y\x9a?n\xb6\xb94\x11\xac\xc6?f\xb69\x94#W\xc6\xbf\xd3\x8c\xe7\xea4\x93\x81\xbf\xbf\xc6s1\xces\x97?z\xf4/\x8c/\xe3\x9e?"\xfa\x97\x1e\xc5\xbd\xa2\xbf\xc5\xc5k\xb2\x0e\xdf\x8b\xbf\x12\xe351\xff\xb3\x9b?3\x14\xa7\xd1\xdd\x1a\x8a\xbf2\x8a\xd3X\xe9u\x9c?\x86\xdb1EMw\x8c\xbf5\xeeX\xf0]W\x9e?I\xa4\x16\x06o\x14\x94?\x11\xa4\x16\xd1\xe1\xf3\x92\xbfT7>\x97\xcfP\x7f\xbf\x0c\x8e\xcfe\x0b\xe8\x95?pQ\xe1cN\xc3\xcf?\\Q\xe1\xffP"\xcf\xbf\xbb\x97O\x08M\xe3\x92\xbf\xae\xbd|\xe2@9k?!\x05\xe9w\xbc\xf0\xa0\xbfK\x15\xa4\x7f \xd7\x84?\xddk8\x11\xb6`\x81\xbf#\x94\xc7.\xd3\xa5\x80\xbfx\xf9g\xc3\xda\xde\xb4\xbfb\xf9g\xf9\xffx\xb6?}\xec2\xfaF\xc8t?\xc7\xd7e\x94LTa\xbfd0Hqpt\x8b\xbf\xa40H\xc1\xa9~\x86?`m\x82\x1cE(\x93\xbf\xad6A\xda\xd9\x86\xa1?\xadd \x0c\xde\xdbp?N\xc9@\x18\xfdla\xbf3<\x83\x87s\xb2c?\xe4\xf0\x0c\xfe\xbe\xb2A\xbf\xc7x\x13\xa7L\x01\xc8?\xcbx\x93\xf7]\xf5\xc9\xbf\xfc\x1e\xdb\xbe)\x1a\x9b\xbf\x0b>\xb6=\xc4o\x80?S\x95\x8eZ\x07a\x99?\xefT:\xea\xd8Du\xbfiu\x07\xb8N\xdb{?\x87\xdd\x01>D\xe1\x9b\xbf\xcbj\xbc\xb4)V\xd1\xbf\xd9j<j\xa6\x1a\xd2?\x86\x87)y\x1d\x08\xc5\xbf\x85\x87\x89\xf3~]\xc3?\xdc\r\xe83\xfa\xc0\xb0\xbf\x1d\x1c\xd0c\x905\xa9?\xfe@\xe8j\x9a0\xb5\xbf\x19A\xc8\xedP\x04\xb5?K\xb7\xe8&j\x8b\xb0\xbfU\xb7\xe8\x14\xf1W\xb3?q\xeb\x89\xf9\x015\xa1?V\xeb\x898\x18f\xa2\xbf,\x07y\xed\xce\xc5\xd0?(\x07y\xea\xd4\xd4\xd2\xbf\x8d\x195}\x143\xb1\xbf\x9c\x195\x7f\x98\x84\xb1?\xee {\xb0\xd9\xc6z\xbf\x12\xdf\x84O\xcajr\xbf\x80\xd1\x13\xa1\x9d\x05\x8a\xbf\x05\x1a=I\xde\xcfE?\xde\xc4\x058?k\xa7\xbf\xe9\xc4\x85rpX\xa5?l\x80\x12\xee$W\xa6\xbf{\x80\x12\x86!r\xa5?]S\xcc\x9dyA\xad?\x01S\xcc\xcd\x06\xa4\xa7\xbf<\x00\x0bY\x00\x0b\xae\xbf\x1e\x80\x85\x18\x93\xe9\xb0?\xcd8.Y\xb0P\xb5?\xac8.\xb2o6\xb3\xbf\xa9jW)\xb9w\xa0?\x90jW\xb9\xc8\xf0\xa2\xbf\xb3G\xac\x81\x1bS\xc0?\xc6G,\x8e\xaf\xa6\xc1\xbf+2\x0f\x16\xbe\x11\xb2?!2\x0fN\x08p\xb2\xbf\xa9\x89\xf0\xe2\xf5-\xc6\xbf\xac\x89\xf0\x103\xb5\xc6?\x0b\x7f\x15\xb6\xcaz\x9d\xbf\x15\x7f\x15\xa8\xac\x13\x94?\xa8\x17_\xa8Wo\xc4?\x9f\x17\x1fQ\x81\xdf\xc4\xbf\xe7\x84\x9dy<K\xa9?\x95\t;\xf3\n\xa8\x98\xbf\xfc\\\xb6\x1f5t\x91\xbf\x11]\xb6_\'\xc7\x93?\xc9h\xa6\xfc\x1e!\xc7?\xc9h\xa6B\x8ca\xc7\xbf\x1d\xd8\x13\xf5\x01\x00\x92\xbfraO\x94\xcdVw?i\x98\xf5\xcf\xbf\x86\x9f\xbf\x96\xcc\xfa\xd4\xe5#\xa7?\x91.M\xd8\x18\x9a\x90?/]:\xc2\xc8\xba\x80\xbf\xeeK\x06\xa9\x12\xde\xaa?\x1fK\x06\xdb\x01\xbe\xad\xbf8\xd6{\x02}r\xad?\xf9\xd5{2\xe0U\xa8\xbfUk\x15\x9fo\x86\x95\xbf@l\x95\xda,\xa5\x99?\xf7\xbc\x01oT\xb3r\xbf\xf8\xde\x80\'\x83\xbf\x88?Im\xb6W`%m\xbf\x18\x99\x84\xeaz\x84\xa6\xbfK*Fnu?\x9d\xbf\xfe+Foy\xa7\x93?\xb0\x08U"\x15\x07\xb3?\x87\x08U\x8c\xcbs\xb2\xbf\xdbJt)73\xaf?QJt#\x10\xf3\xa6\xbf6\x80jy\xee\x86d\xbf\xd3\xe3\xabt\x86\x9a7\xbf\x17\x9eu\x8bS\xd0\xaf\xbfM\x9eu\x97\x94j\xab?T\xd2\x92?\x93q\x84?\xf1h\xc9o$L\x90\xbfa\r(f\xae\xed\xa2?a\x1aP\xc6\x98\xfb\x98\xbf\x94\xce\xf3{\xd8u\xb0?\x85\x9c\xe7\x08J\xb8\xae\xbf;\xad?\xaa*r\xb3?\xe2\xac\x1f(\xcf\x1e\xb0\xbf\x02\xe1/{$\xf9\xc0\xbf,\xe1/aH:\xc0?O\x14\xbb\x85\x97T\x9e\xbf\x01+vk\t\x00\x85?W\xae\xe4\xc0}\xdeN\xbfM\xda\xf8\xd1w\xe1\x95\xbf\x02\xbb\xa42u\x08\xa5?\xf1\xba\xa4c]-\xa1\xbf\x86\xe6O\xf1\x02\xd9\x9b\xbf\xb7\xf3\xa7\xc0=\x97\xaa?\x83\xbc\x01\xcb\xcfQ\xb6?s\xbc\x81\xc5\xd4\xfc\xb1\xbf]%\xb7\xb9=>\xb0\xbf\x87%\xb7\x8b\x17!\xb1?J.c\xca>\xf4\xac?\x17.c.7\x15\xa6\xbf\xf3\xbb`:\xe6\xe8\xab\xbf>^0&\x02\xda\xb1?wb\x15\'.\x10\xa9\xbf\xb5b\x15\'\x97\xe5\xa7?+\xc0\xd3\xdc\x93\xf4t\xbf:\xe0i\xee=\xdd\x80?\x95E\xf3\xb0\xfd\xca\x94\xbf\xfc\x19\xcd\xdb\xe9\xaa\x7f?\x10m\x16\xbe3F\x81\xbf\xdfm\x16>\xd3-\x8b?\xe48\x1d\x1a\xdd\xc2\xb2\xbf\x089\x1d\x02\x15\xb1\xb3?\xb7Sp\xb4\xa2p\x9a\xbf\x96\xa9\xe0\xe8\x95\xff\x86?\xb6\xa09\xcb\xd9\x82\xa3\xbfu\x83\xe6Ls\xb3\x89?\xeaZm\x18w\x99B?]*y\xc8\xe4\xdb\x8b?9\xa8q\xdfD\x9bp\xbf\xc0jL$\xff\x10\x91?\x87\xdf\xff\xce\xceO\xb6\xbf\xa3\xdf\xff\xbc(Q\xb7?\xd2(w\xb5\x9f\x00\x89?\x02\xca]\xab"1\xa0\xbf=\xfbG@\xc4\xb6s\xbf\xfd\xfe#\xf09_\x88?q\x0e\xe3\xe5\x8a\x05\xa1?\xcd8\x8cw\xb45\x80\xbfi2\xa2\xafX\xf5q\xbfT\xc7]\x182L{\xbf\xff\xcc\x9b@\xbf$\x9e?-\xe6?D\xc2Z\xa3\xbf\x0b\xc2.\xbf\xef\x02\x9d\xbf\xc2\xc2.yB\xaa\x9b?\x86\xfb\xbf\xeb=\xd1\xaa?{\xf6\x7f\xc7\xc3\xc3\x92\xbf\xcf\x03\x92o\xe2\xd0R?\xa8\xfc\x91\xef\xb9\x1fT\xbf\xc1\x06u\x9ar\x8ex?0A\x9d6\xce\x18\x99\xbf\r"\x0b\x1c\xad\\\x89?\rC\x16\x98\xcc\xfd}\xbf\x8dum\xb3\xb6\x1e\xb5\xbf\xc2u\xedH\x98\x91\xb4?`\xec\xebZ\xa3\xfe\xba?\x1e\xec\xeb\x10\xbcs\xb6\xbf\xc71\x1a\x7f\xcd\x97\x91?\x1dc4N\xc5\xf0\x89\xbfF \x8d\x91E\xc2\xa8?" \x8d\x11\xa5d\xa2\xbf\xeeE\xd0\x1e\x8dr\x94?S\x8b\xa0\x9d\x04\x9f\x82\xbf\xee\xdf}\xbb\x8a<l\xbf7\xbcog\xb2\x9a\x9c?f\xd0;r\xa4 \x96?\xba\xe7\x1dI,\xb5\xa7\xbf\xb0y\x03\x03A\xbc\xad?\x92\xbc\x81\xd5\x7fT\xb3\xbff\x91T\x7f\xfa7\xa9\xbf\xa8\x91T\x01,\xbb\xac?\xb9\xa4\xaa\xd0\xc3G\xac\xbf\xff\xa4\xaa\xc4^\xb1\xa5?\x16\x01%\x83\xa5\xbb\xa0\xbfR\x01%/ \xf0\xaa?\xf6\xf5Ng\xa1Hd?7\xde\xe94\x15\xe4\x95\xbf-\x99\xae\xd5\xabQj?_\x98\xae\x95\x81\xd7e\xbf\xfe\xed\x17\xd8\xef\x95\xac\xbf|\xee\x17\xdcE\xaf\xa5?G\x02\x083\xd9\x87\xca\xbfn\x02X\xd3\xf8:\xc9?6\xef\xae\xabz7\xc5\xbf?\xef\xae\xd5Z\r\xc7?E\xa1\xa8\xca\x01j\x90\xbf\x80\x8a\xa2*s\xd1u?\xb4v\x10\xc4\x06\x95x?\x8bv\x10\x04)\xdas\xbf\xc0n\x1bS\xd6\x83\xa9\xbf\xfdn\x1b\x03\xff\x82\xad?2\x00\xec\xb6\x03"\x82?k\x00\xd8\xed\xac\rt\xbf\xbf\xe9\xedN\x9b>\x83\xbf=\xf5v\xf5\xccM\x90?\x90\x06\xda&\xeb?\xbd?\x18\x03m\xef\xee\xc2\xc1\xbf\xbd\x95A\x08\xe6\xdb\xc6?\xb0\x95\xc1\xc2\xd3!\xc7\xbf5\xac\xc0\x99\x84\x87\xb9?\x0b\xac\xc0\xda\xf1\x1b\xbb\xbf<\x90y\xa0\xd94\x85\xbf~\x82\xccsf\xe0[?\xbf7\xd6\x1fw\x8cs?\xbe7\xd6_\xbe\'\x7f\xbf\xe5\xb8\xe0\xc7@\x9bs?\x91<\xfa\x802\xa5H?\x89D\x87\x01\xe8\xbf\xb9\xbf\xbcD\x87G\xcfQ\xbd?\xd7\xc2&\xf8/\xb3\xa8?e\xc2\xa6\xa6\x13\x14\xac\xbf,e\xc6ND\xd5\xaa\xbfIe\xc6\x06\xab\x8e\xa4?\xaa\xedY\xc5\xb8\x19\xb0?\xb0\xda\xb3\x81\x9dv\xab\xbf\xf6vU\t\x9c\xe8\xaa\xbf\x9d\xbb\xaa2\x07\xa1\xb1?\xe3\x834\xdb\x06\xb1\x9b?\x9aA\x9a\x11%\x0e\xa9\xbf\xa3\x811\xe7,<\xb7?A\x811\x9eu\xe7\xb6\xbf\x8c\xc2@o\xc9\x85\xaa\xbf\xed\xc2@uVt\xa6?\xe3\xf5\x19\x1d\xc0\xdd\xbd\xbf\x13\xfb\x8cf\x00\xfa\xc0?\xd7\x8fZ>r\xa0\xac\xbf1\x90Z2Q\xbd\xa7?%\xa8\xeb\xe0a)\xc7\xbf7\xa8\xeb\x1c\xcb\xf8\xc8?1\x9f\x88D\xc1\x96r?\xcd\'\xce\x8aC\x88\x94\xbf\x15\xe0\xba\xd9\x14\xf6\x99?9\xfc\xa3\xc8\xb7\xbbG?\xf7\xa2?\xdf\x7f0\x8a\xbfL\xd2\x9f5\x18\xbf\x9c?\xc3\xeb\'\x05\x0cQV?\xcf\x8b\x9f\x14\xed\x82:\xbfdg?\xaf\xde\t\xc7?-g\xbf\x0f\x08Z\xc4\xbf\x10\xe3E\xb3f-\xa0?\x95\xc5\x8b\xe6-P\x9b\xbf\xd2\x80\xdeCh\x0f\xae?]\x80\xde\xe7\x9aI\xaf\xbfo\xe4\xeb\x91\x98\x08\xbf\xbf\x8d\xe4k\x8e\xe9Y\xbd?D\x97\x1fh\xa8r\xa4?k.?\x0c\xc2{\x9e\xbf\xc8\xdf\xcd\x04\x0c\xd7\xbc?\x87\xdf\xcdx\xd9$\xbd\xbf|\xf3xVq"\xb8\xbf\x9e\xf3x\xb0T\x90\xb5?\xef[\xb78y\x80\xb5\xbf\x18\\\xb7n\xe0\xaf\xb2?\x19\xd6\x8a\x1d^\x11\xbb?3\xd6\x8a\xf6\x1aH\xbf\xbf\x89\x90\xc8[\xbb3\xb0\xbf\xc7\x90\xc8\xb9\xcb\x9f\xb3?\x80\'\x12\xd6\x81\xdb\x91?W\x9bHxcmz\xbf\xdbZ\xa6\x000\xa0t?\xe2\x89i\xd6\xd7\xb9\x1e?\xc2?\xb3gxb\x96?o\xf0g\xf6\x95\xf8F\xbf\xfd\xbf\x13\xec{\xa3\xb9\xbf1\xc0\x93n\xc2\x96\xbe?\x1d\xf9\xd5&\x1e\x86\x92\xbf\'\x94_\r\x90\xeb_?L\xf3<\xae^\x9f\xcd\xbfl\xf3<"\xffz\xcf?^i\x1a\xc7N\xfc\xa6?/i\x9a\x00\xa2\x8f\xa1\xbf\xbc)Tr\xcf\xfb\xad?p)TfnQ\xab\xbf\x11U$\xf5\xc1\xb9\xc1?\xfd\xa9H\xec\xfb\xe8\xbb\xbf\x8a5\x84\xae\xea\x96x?Z\r\xa1\x1a\xc8=\x94\xbf\xf2\xc1\x9e(\xcb\xab\xb5\xbf!\xc2\x9e\xe2\x87\xf3\xb6?\x85=Ur\x05\x17\xcb?w=U\xd3b7\xcd\xbf2\xe7e\x87\x02\x8e\xc2?\x1b\xe7\xe5C\xfbj\xc3\xbfv7!K\xec<\xb7?j7!\x8fG\x96\xb7\xbf\xc6\xb4\xa9\xc5s\xeb\xb9\xbf\xd6\xb4)g\xec\xf0\xb8?\x08G\x91\xe3\xe0\x80p?\xf7\xb8n\x1c0\xefw?\xe3\xb0\xbd\x16\x81X\xae\xbf\xe8\xb0\xbd\xb4\xbb\xc1\xa7?)\x9c\xf0\xe6\xb6\xbd\xbe?\xfa\x9b\xf0\xb05\xc1\xbc\xbf=M\xd6/<^\xba?\xf8L\xd6\xcf\xcc\x12\xbc\xbf\xaf\x96]\xa1\xa5Q\xa7\xbf\xf6\x96]\xe7\xbfV\xa5?\xbeQ\xe1t\xa0R\x87?uP\xe1\xb4g\xf9\x89\xbf\xadu\x12\x9bI\x1e\x91\xbf\xd8\xeb$\x164$\x87?\xd1?}\xe4\xf1\xe6\x9f?\xb0?}\xa4\xc28\x9d\xbf\x98\x90\xdd\xb8\xdc\xa1\xad?O\x90\xddL\xb9C\xaa\xbf\x08\xcb\xedp\xd5\x1b\xb1?\xfa\x95\xdb\xeda\x93\xad\xbf\xc5#<\xe4\x9a\xbb\xb5?\x84#<\x19\xbb\xe4\xb3\xbf0\xd2\x02`\x7f\xe2\x9d?\xd2h\x014\xb1\x88\xa3\xbfOM]\x04\x1c\xe1\x94\xbf\xafM]l1\x10\x9c?\xb0p@\xd5\x0c\x1e\xa4\xbf\xbfp@M\xfd\xb7\xa7?/\x88\x93#\xf1\xbb\x96?)\x88\x93\xa7P\xb6\x9c\xbfB\x00\xd9\x00\xec\xca\x95\xbf\xd5\xcd\xbf\xc9C\xb89\xbf\xc1k\xf7\t\xb0k\xc2\xbf\xcbkw\xd9\x05Z\xc2?\x8d\x89\xbe\x85\xf7B\xbb?u\x89\xbe\xcf%\xd0\xbc\xbf\x08q\xb5\x9ec\x92\x96?.p\xb5\x86\xef\xa8\x92\xbf\xa1\xba\xc3W\xf3\t$?b+\x1e\x94\xcb{:?\x18o\xe3\xc2\x9a0}\xbf\xe8\x90\x1c\x1dr\xeeu\xbf\xbc\xc7b\x9cC\xaac\xbf\x17\x9b\xce\x11\x91\xe4y\xbf\xdb\xdb\x19J\xf7\xf5\xbc\xbf\xca\xed\x0c\r>\x7f\xc0?:w\x85\xf9\xb0\x1e]\xbff\xb00\x07\x1aU\x8d?\xe8M\xa8\xf1p\x85\xb4?\xedM\xa8qx:\xbc\xbf \xe6\x1d\xd6*\xe8\xab\xbf-\xe6\x1df!t\xac?sC\xa1d\x1d\x8f\xab?#C\xa1\x04\xc9\xf3\xa9\xbf\xa9\xdcE\xb6\xa5\xf8\xc1?L\xb9\x8b\xc8\xcb\x11\xbe\xbfmQ\x9f\xf68\x96\xa0?\x1cQ\x1f\x90;!\xa3\xbfh\xc4!)\x08\xa0\xb2?[\xc4\xa1\xd6\x15\xd8\xb5\xbfQk\x1d\xbd\xf2y\xb1?\xd8\xd6:\xbe\xe7o\xab\xbf\x185\xaa\xf9\xc6\xeb\xa2?\xff4\xaak\x98\xb8\xae\xbfL\xbd\x9aO\xc5i\xa9?\x04\xbd\x9a\'\xda\x17\xa1\xbfn\x11\xc1b<\xb2\x94\xbf\xd9\x88`\xd8p\xcc\xa0?\ny\x92\x94L\xb0\xe4\xbf\x06y"\xaf\x1c\x08\xe4?\xac\xa66\xc3\xdb0\x8e\xbf\xd9\xa66\x11\xd7w\x82?\x88s\xf2T}\xec\xa3?\xfb\xe6\xe4\xd5r\xbc\x9f\xbf\x822%y\xdd\xdb\xa2?\x882%\xc1p\'\xad\xbf\x94\xff\x95\xe9\x97\x02\x82\xbf\xf1\xff\xca\xd4o\x1c\x96?\xee;\xf4$\x1e\x99\xc6\xbf\n<\xf4\x1e2W\xc9?\xe2\x05\x0f\xa1U#\xb3?\xd3\x05\x0f^!I\xb5\xbfE\x19,\xec\x01o\xb1\xbf\xf02X\x94\x18\xfd\xaa?$\x9f\x84\x1a{\x93\xc1\xbfV>\t\xdd\xe5\x8e\xbe?I\x9b\xfb\xb6\xd8\xa8\xbb?3\x9b\xfb\xb1;\xc8\xba\xbfd\x95\x87\x97\xd3M\xb7?G\x95\x87\xf3\xa66\xb6\xbf;\x18[\x87\x1f\x10e\xbf|\x18[\x07\x9cei?\'H\x1b\tNV\xa2\xbf\x8aH\x1b+\x9c\xaf\xa6?\x7f.\xf6\x9d\xb4X\xb9\xbf\xac.\xf6\xed#\x95\xb9?\xc0s\xb3\xe2\xa9\x8a\x9f?\x95\xb9Y\xf5\xe3N\xa1\xbff\n\xc5\xee\x7f\x9b\xaa?\x11\n\x05\xb2b\xce\xae\xbf\xe5R\xe8\xa0\xc7\x05\x8d?\xdeR\xe8\xa0t9\x85\xbf\xfb?\xb2>P\xd9\x91\xbf;@\xb2Nl\xaa\x91?-\x8f\x96\xa1W`\x87\xbf6\xe1\xd2\x1c\xa6&p\xbf\xd7\x82A\xc5\xf8\xa8\xa3?\xba\x82AU~\x1a\xa0\xbf\x86{fx;\xa3\xb3?w{fjhy\xb6\xbfJ\xec\x8c\xb1\xfe\x00\xd0?\x96\xd8\x19\xe3\xf0\xd1\xce\xbf3\x1f]z\xef\xd3\xc7?/\x1f]\xda\xb8\x81\xc8\xbfN\xe3\xbeg\x9e\xd5K\xbf\xdf\x11\x84\xc3aA\x83\xbf\xa0\x19C!\xc2bF\xbf_\xce\xeb\xb3\xd6\xce\x8a\xbf\x84\xf3\xc4M\xab\xbf\x9a?t\xf3D\xe6\xbc\xb6\x9b\xbf\x84\xe2\xd3$\x8c\x04\xa5\xbf\xf9\xe2\xd3\xce\t\xc3\xa8?\x876\x03\xc8\x86ya\xbf\xfcb\xfeKP=q\xbf9U\xd6\xd3x%\xb9\xbfdUV\xe0\x8f\'\xbc?\x8a\xdc\xcd\xd3\xeb\x07\x90?\x07\xb7\x9bC\x89\xf1\x88\xbf\x8f\'}Uo-r?[I_\x0f\xdf\x9b\x91\xbf\xd0\xec\xd0\xc2Z\xd6\xbd?\xc2\xec\xd0\x03\xea\x15\xbc\xbf.XK\xbfjq\xc3?\x1fX\x8b\xd2\x1f\x1a\xc5\xbfkt2[S0\x85?\x0836\xd3.%m?\x02\xd7~\xc7\x98\xd0\xd0\xbf\x0c\xd7n\xffg_\xd0?\xb5\xca\xbaP\xb7\xa8\x94\xbf4\xcb\xba\x961\xf1\x95?\xdf\xce\xfaYm[\xcc\xbf\xed\xce\xfaM\x17\xe7\xcd?\nXpL\xf2\x00g\xbf\xfe\x15\x1cs\x04\xbe\x89?u\x81\x0f\xb7\x8ccY\xbfG?xT\xf2jc\xbf\x13\x0e\xb5\xb7,9\xc2?\xfb\r\xb5\x7f\x83\x8d\xc1\xbf\xaf\xfe\x98\x80\x1c\x0b\xa7?`\xfe\x98\x009\xb2\xaf\xbf\xfa\x89\xcc\xb2\xb6\xb1\x95\xbf\xbe\x15\x99\x85\xb9\x86\x86?`A96\x91<\xaf?5A\xb9*\xd4\xd9\xaf\xbf\x8b\xc76*\x8c\x8e\xc6?x\xc76\x0c\x84\xad\xc6\xbf:\xe6\xd4\xc6\x9c,\xcf\xbfP\xe6\xd4\xdc\xf6I\xcb?A\x881O9\n\xae?5\xc4\x98\xaf.D\xb4\xbf\x7f\xd5\xe1<Q\\\xb8?h\xd5q\xe7\xa4\xb1\xb8\xbf\x07+\xf5\xd3\xe3,\x9c\xbf\x84+\xf5\x00%\xd5\x97?q\x84\xce\xca\x80\xdf\xb8\xbf\x96\x84\xceE\x05\xe3\xba?\\\x90\xb62\x8c\x02\xc4?]\x90\xb6\xd4\xc6\xb5\xc5\xbf|V=O\xcb\'\x9f?\xd2\xaa\x9eo=\xe8\xaa\xbfW}Z\xbd:\xa7\xba\xbf\x8d}Z\x00#X\xb7?\xba\xbe\\#)\xd6\x96\xbf2~\xb9F\x00D\x8f?\xfe\x85\x0f\x0e\xe9BJ\xbf\xd7\x83\x8fSU\xad\x90\xbf\x7fT\xd7\xde\x82\xd8\xb6\xbf\x80T\xd7\x9e\xef\n\xb6?Q\x9b\xab\xc8\x1di\x95?im\xaeb\x83\x95~\xbf\xfb\xe9\x1daI \x95\xbfc\xa8w\x14%+u?J\r\xb5\x7fb\x11\xd6\xbfH\ru\xf0\'\xc7\xd5?"$\xad\xa9\r\xf8\xcb\xbf\'$\xada\xa6W\xc8?"\x1f\xa1-\xfe\x97\xb6\xbfH>B{\xbe\xd5\xae?\xf9%\x14\xdd<Qv\xbf\x17\x13\x8a\x8e\xb0%\x87?E\xa4\xf2e\xbfw\xc0?;\xa4\xf2\xb1\xdd\xb0\xc0\xbfP\xc0\xcf\xd6ZE\xc4?M\xc0\xcf^\xdb\xe5\xc5\xbfE/\xabbp\x95\xbe\xbf\xa1\x97\x15\x90\xfc\'\xc1?\xd9\xc1\xbe[W\x85\xa9?\x06\xc2\xbe\xb3\x1d\xd2\xaf\xbft\xda\x19\xd9\xa0\x16\xbb?>\xed\x8cr\xf1\x88\xc0\xbf\x91\x91\xff\x08N`\x12?\xac\x01\xdco\r\x81p?\xa5\x83>\x1c\xe5\x83\xc5?\x9d\x83\xbe\xea\xde\xd4\xc4\xbf\xae\xa6\\\x10h\xfc\xce\xbf\xb2\xa6\\>n\xcb\xcf?Q\xd2;\x9c\x81\xeb\x8f\xbfG\xe9\x1dF\xde\x7f\x93?\xbb2\xc2i\x00\xcf\x93\xbf\xd12\xc2E\x8fA\x95?\x8dF-\xa0!\x7f\x90\xbf\x12\x8dZp\x1b\xc1\x84?\xd0=\xb4^\xc8\xea\xba\xbf\xcd=\xb4b\x97\x85\xbc?7\x15]\xe4%/\xc5?:\x15]ts\x86\xc6\xbfp\x12\xfc`\xa4\xc9\xbb\xbfl\x12\xfc&,%\xbb?\x82\x07g\x8e\xbe_\x7f\xbfc\xf11sV\xb3l\xbf\x89g\x94\xae\xa6\xccl?\xa6\xcc\xb5\x80\xf7v\x7f?\xa5K\x9f4\t\x0e\xe0\xbfG\x97\x06W\xfd\xbd\xdf?\xbcUU\x07w\xdc\xcf?\xb7UU\xad\xd7\xd2\xcc\xbf \xc2\tx\x06J\xa2\xbf5\x84\x13\xa8\x06\x93\x9f?\x8c\xc3(\xa5\x1a}\xa3?\x8b\xc3\xe8\x01\xe8\xaa\xab\xbf\x80\x97\xf9Q\x0e\xe1\xa0\xbf\xba\xcb\xfc`]\xac\xb1?\xa3\xe4\xa9\xa1\xe1\x07\xb8?\x90\xe4)\xcb\xb9Y\xbb\xbf\x14+\xd0\xfdTu\xc8?\x11+P\xfe\xd7\xc1\xc5\xbfJp\xf1\xf12\xf1\xa3\xbf\xc9\xe0\xe2\xb3o2\x9b?rk\ra\xf0\x1a\xcb?uk\r\x97\xfd\xbf\xcf\xbf\x90\xfcL\xac/I\x8b?s\xf9\x99x\xee\xe2p\xbf\xb0&\xdd\x1d/\xea\xb6?\xb3&\xdd\x01\x9f1\xb7\xbf\xb4\\U\xaf\xa3`\xbd?\xc3\\UG~m\xb5\xbf\x14\xb5z\x8a\xaf\x81\xb8\xbf\x18\xb5z\\\x83S\xb3?\x0b\xab\xdf\xeeM\x0b\xa6\xbf\x11\xab\xdf\x992\x03\xab?\xba\xde]\xd8=8\xc2?\xb5\xde]\xfaB)\xc0\xbf,\x03\xb9\xbd\xbf\xa7\xc0\xbf.\x039\x81\x1e\xcd\xc1?\x12\xc4\xa2\x13\x84\x05\xc0?{\x88E\x0f>\xdc\xbe\xbf\xf9T\xc0h&[\xd9?\xf7T\xc0AI\xf6\xd7\xbf\xf0\xb9\xd7w\x089\xc4?\xeb\xb9W\x9f\x17K\xc6\xbf\x96B\xcfN\x14\x94m\xbfl\xa1gg\xa6\xfbx?\x9c\x18\xa3\x85\xef\xf4\xc1\xbfO1F\xdb\x04y\xba?C\t\x0e\x7f3\x07\xce?f\t\x0e\x17\xb3\xe9\xcb\xbf\xbcv*J\x92\xb6p\xbfR;\x15\xc5!\x06\x8c?\x82\x95\x16^>zz\xbf\xeaZz\x98\xab\xab\x91\xbf\'k\xc6\xab\xfd\xd4a\xbfm\xcdx\xe5\x89\x01\x95?\xb7\xeb\xad\x18\xa1\xc6\xa4?\xb3\xeb\xad\xd8\x1a\x9f\xac\xbf\x84&\x1d\x92\x00G\x94?ji\xd2Q<\xbfZ\xbf\xa4\xbd6]8b\xb8\xbf\xa2\xbdVv\x84\xc1\xb6?@\xc5\\J7k\x04?\xb4\xd1ZP\xc4=\x93?\xb1\x8f\x04\xca\xf2\x9f\xc9?\xac\x8f\x04Gw2\xc8\xbf\xe8%J\xf6\xeb\xd8\x9d?\xcf%JZr\xda\x98\xbf\xe0\x96\x9f\xc2\x13\xda\xc2?\xde\x96\x9f\x8cn\xe7\xc2\xbfw\t\x89#\xb7\x1e\xc2?\x83\t\x89\xf9`\x96\xc0\xbf+\x8fB(\x02F\xc5?\x1c\x8fB 5\xfe\xc2\xbfA\xdbR\xbb3\xbb\xc0\xbfA\xdbR\n\xc5\xd0\xc0?\x90S\x13\xe1\x1b\x82w\xbf\xff\xa7&R\x87Hg?0-\x0c-\xb1\x8a\xa4?gZ\x18z\xbe \x9b\xbf\x9d\x98\xed\x0bu\\\xbc\xbf\x9a\x98\xed;\x9f\x9e\xbe?\x86\xaa\xbbR\xc8t\xb0?\\\xaa\xbb\xc2\xec\xcd\xb2\xbfe5\xa5\x16\xa2\t\x81\xbf\xad\x9aRg`Q\x92?\xddl~[DI\x83?~\x93\x81\x04\xack\x85?\xc4\x9a\xe1\x04<\rw?\xb8Q3\xdc\xc3\x9d-\xbfMG\r(b\xf1|\xbf \xb8\xf2wR\xdfz\xbfe\xf9\\\x1bs\x8d\xb3\xbfi\xf9\\\xdb\xf6z\xb7?\xcb\xe0\x02\x10\x0ba\x99?\x8bp\x01X<\x16\xad\xbf.\x19\x069\x088\xb2\xbf\xa42\x0c\x8a7\xc6\xab?\xf4\xf2\x05\xdf\xec\x0b\x9d? \xe6\x0b\xde\x12f\x8a\xbf\xc2{\x18\xa91\xe8\x84\xbf\x1c\xde\xc3\x08Y\xf6P?$\xd3\xff\xe4\xbf\x02\x9e?\xf9Y\x00Z\xc6\x89\x82?\xd2V\xa5\x18\x85I}?\x91X\x95\xa2B\xdcU\xbf@\x97\xb0\xff\x19b\xc7?6\x970\x98\xe9\xa2\xc6\xbfp\xa6x}\x13N\xbb?u\xa6x\x91\xf8\x84\xb9\xbfu\x9d<>\x15c\xa0?\xfc:y\n4\x8c\x9a\xbf\xf1\x0en\xd9\x89\xaf\xc1?\xeb\x0en\x15\x87\xe5\xc2\xbf\x07$\xdaH\x92\x1f\xd4?\x04$\xba\xcb\xd0\xa0\xd4\xbf\x83\xf2o\x90\x109\xbf?\x86\xf2o+N \xbe\xbf\x08\x8a\\G\x80g\xcc\xbf\x04\x8a\xdcW\x9d(\xc8?\xff\xe6>_\xcc\xd9\xe4?\x03\xe7\xfe\xec:\x82\xe5\xbf\x14\x8a\x02\xe5\x8b/\xa4\xbf\x84\x14\x05\xee\x8a\x80\x96?\xc2\x8c\xec\t\x96\xef\xa5\xbf\xa3\x8c\xecI\xb9\xb0\xa1?\xaf\x1d\x01\xdcY\x0eN\xbf\xad#\x80;\xfc\xbdz?\x170=\x18|\x04\x88?7`z\xd0]\xa1{\xbf;\xfe\xedI\xb6\x82\xae?:\xfe\xed\x19OO\xae\xbf[\xdd\'i\xa6H\xca?a\xdd\x13\x0b\xf4\xf8\xc8\xbfJ\xeb\xebi\xdc\xd2\xa1?V\xeb\x97\xbf\x8b\x85\xae\xbf{\xcd\xb3g\xb1c\xeb?y\xcd\x03\xf4T5\xeb\xbf\xe0,K\x0e\xb8m\xb2\xbf\xfa,K\xa6U+\xb8?)\xe3\xeb\xcfs\x1a\xd1\xbf-\xe3k\xfa\xf8\xdc\xd1?\x18\x9c\xa8\x7f\x83\xbb\x81\xbf\xf6\xc7\xae \x9a\xe5p\xbf43\xea\xe6\xbcb\x83\xbf\xb4\x19u\x0b@\xb8\x90?bOp\xd5#f\x9e\xbf\x92\'\xb8J\x86\x0c\xa8?#\xb5\xe9\xcb\xc5\x04\xb7\xbf)\xb5\xe9\xd4";\xb4?\xffk\xf2\xfc}\xd1\xd3\xbf\xf9kr\x86\x05\xef\xd2?\x16\xe9@\x1e\x11\x08\xbb?\x13\xe9@x,\xc9\xb6\xbf]5H\xb9\xc5\x05\xdb\xbfY5\xc8\x08\xff\xb8\xd9?\x07\xaf\xac~\xa3I\xac\xbfWWV\x8f\xbd\x7f\xb9?W$\xc0\xb2\xdc\xc2\x91\xbf\x04I\x80\xfd\xc9\xc4\x82?\x07A\x1d\xec\xc7\xb9\xbf\xbf\x08A\x1d:\x12J\xbe?\x7f$5\x1c\xfc\x0f\x90\xbf\xae\x91\xd4\x10;\xf2w?\x84`Q\x8f\x89I\xaf?j`Q\x07V\xa1\xae\xbf9\x0b\xb3q,\x91\x8f?\x03\x0b\xb3\xe1n7\x83\xbfF\x0c_r\x9e\xde\xc9?F\x0c_\xb1\xaf\xd7\xcb\xbf3\xc0\xc5-\xd1DD?\x15\xd2\x91\xe6\xfa\xb7\x91?\x8f\xf6\x89\xbb\x1b;\xa8?\r\xed\x13\'\xd0\x85\x92\xbf\xf4\xe3YV\xa4\xad\xa8\xbf*\xe4Y>\xc1\xde\xa8?]\x8b\xef\x9c\xfd,\xbc\xbfU\x8b\xef\xec&\xbe\xb5?B\x0e\x9b\xd1\xd8\xe5o?\xf8\xb0\x19\xbd#\xfb\xa4\xbf\\o8\xe7\xd3\x11}\xbf\xfa\xdep\xca\xa4\x1ao?\x0e\xd8\t\xb3\xb9(\x9b?\x17\xd8\t\x97\x83V\x9c\xbf;\xa3\x18\xd1\xad\xda^?\x14F1\xa2%\xa7G\xbf\xf99\'y\x9fr~\xbf\xa7\xd39\x89\xbe\xfaB?\xc1\x9a-\x1c#\xbc\xa5\xbf\xc0\x9a\xad\\\xe2\xb8\xa9?\xd0\x86\x9a\x11<\x8a\x9a?\x97\x86\x9a-\xe9E\x95\xbf\xe2>\x90\x8b\xa0\xb9\xa9?\xcb>\x90{j\xa6\xa2\xbf\xba]\xbcZ3\x1d\xa3?d\xbbx%\x0b\x8c\x93\xbf\xaaD\xc2\xdb\xdd\x14\xc2\xbf\xadD\xc2o\x14\xc6\xc0?A\x90\xe6Q3\x0f\xa6\xbfS\x90\xa6\xab\t\xf5\xad?\xe3\x15\xe9\xb3\xaf(\x9a\xbf\x1d\x16\xe9\xd3\xf7b\x9d?Lh\x1a\xc7D\xbe\xa4\xbf_h\x1a-u\'\xa6?4TR\xfaiG\x8b?\x82))\r\x1f\x16\x9e\xbf\xa6:f\xfa\xa5\x01\x89?>\x1d3\x17\x84m\x93\xbf\xeas\x80\xb4o\x9e\xb2\xbf\xf6s\x80\xbc\xe1U\xb0?\x01\x13u\xf0\xa7;\x86?B\x89:\xb0\xae\x89\x98\xbf\xc8\xde\x04\xa7\xf48\xa1\xbf\x89\xbd\tv\xf7\xe9\x9d?)o\x1d\x16\xb0\xb2\x82\xbf\xf7[\x87\r~\xed\xa0?\xd5^f>\x18W\xac?\xc9^f\xde[\xff\xa3\xbfc\xea\x0b\x93\xcb\xe0\x9e\xbf%\xf5\x851\xc6\x80\xa8?ox\xdc\x06R\x8f\x91?m\xf0\xb8\x8d\x0b\xbb\x8b\xbf\xd1x,\x13T\t\xa0?\x83\xf1X\x8c\xd0\xee\x95\xbf\xc8\x17\x98t\xdc[\x89\xbf\x84\xa0\x9f-W\xdfh\xbf^F\xa1\x96Mu\xae?qF\xa1\x92\x83\xed\xa9\xbf-p\x8fZef\xae?\x1ap\x8f1\x8e\xe9\xab\xbf\x04\x98\xb5\xb8\xfe\xba\xa7?\n\x98\xb5\xe4z_\xa2\xbf<\x9c\xc3\xfb\x14\xdd\xba?/\x9c\xc3\x1ew}\xbd\xbf\xe1\x0b\xda\x185\xba\xb1?\xe7\x0b\xda\xc0\xb6)\xb3\xbfcM\xd1\r\xde\xae\xb2?TM\xd1\xdb\xbb\x06\xb4\xbf\xc1\xbcc\xd1\xc1p\xc1\xbf\xc0\xbcc\xb9G\x85\xc1?6\x16\xfa=\x0f\x80\x95\xbfQ\x16\xfa\x8dzt\x98?j\xc9\x8f\xd83\xa7\xb2?k\xc9\x8f\x00\x95\x8b\xb1\xbf4!|"\xfa\xe5\x97?\x8c\x10>a*\xbf\xa1\xbf\x86_\x03\xd3\xe6\x94\xb1\xbf\x8e_\x03\xf7\x13\xb3\xb1?-\x7fg\xe4\xad]\xc0\xbf\x14\xfe\xce\xfc\xb4B\xbb?SJ\xcf\xdeWK\xb5?KJ\xcf\xe6\xd96\xb6\xbf\x08%\n\xae\x9f\xc0\xad\xbf\x1e%\nJ\xef\xaf\xa6?\x8f<\x84X\xf9\xe8\x9d?&y\x08Q\xeb\xeb\x84\xbf\xd7\xfa(\xa4\x93\xf4\xa4\xbf\xdf\xf5Q@\x92\xef\x9a?\x86\xa5n\xf1\x13\xd2\xa1\xbf\xe4J\xdd\xb6\x97\x05\x98?\xea4\x95\xd1\x89P\xac\xbf\xf44\x95i\xb8\xb4\xa0?1\x89\x93\x149n\xaa\xbfO\x89\x93\xc0\xe6\xda\xa6?\xc9Y\xf4\xd4\x0bB\xb8\xbf\xc8Y\xf4f\x1a`\xb6?\x98\x08\x95\x8e\xbf\xfb\xa6\xbf\x8b\x08\x95\xaa\xb8\xb4\xa1?\x8f4\xa5\x93\xa4.\x83?6qY\x8b\x8d\xa83?\xaaw\xbaMv\x97\xb3\xbf\xb3wJ\xcb\x11\x1e\xb0?\xb3\xe8\x0b<\xa0\xea\xb7\xbf\xc7\xe8\x0b\xd9\xa2B\xbd?\xbfEl\x0b \x17\xa3?w\x8b\xd8\x1e\xd4\x12\x9e\xbf\xc8\xcfa\xbe\x1a\xa2\x99?/0\x9e\xf1f\x13\x91?\x8f)\x1eH~\xd5\xb5\xbf\xa4)\x9e\x0b5\xd4\xb2?\xc1\x1e\x94TI\x19\x99?\xa6\x1e\x94\xf4\x92\xda\x99\xbf\x90}\xa6\xe8Kk\xad?N}&\xaa\xb2\x8f\xa7\xbf\xd6\x14\xe7\xb16\x82\xac?\x86)\xce\xc5\x92 \x9b\xbf\x00\x94\x86\xd4\xb6^\xb4?\xf4\x93Fn\xe7\xf8\xb4\xbfk?*\xb4\xfc\xb6\x90?\x87\x02W\xaf8\xf4{?\x19\xacXi|\xe2\x85\xbf\'d\xc5\xca9\xcc^?\xf9\x17\xb9Y+or?8\xba\x919K\xc4\x91?\xca\xa0\x84\x9f\\\xb1\xce?\xd4\xa0\x84\xa8\xc2\xbb\xcc\xbf\xcc\x8e\x11\x17\xd7\t\xa8\xbf\xc9\x8e\x11J\xca\xec\xa1?\xc8\xa8\x92`\xc67\x8d?EWm\xdf \xac\x8c?\x11\x0cD\xbb\xe4\x9d\x81\xbf\x16\x06\xa2\x1d\'\xd9\x93?\xbb\x81\xbb\x85\xc2\xd6\xa9\xbf\xbf\x81\xbb\xc7)\xac\xa9?\xc1\xd8\xfeR7\x05\xb3\xbf\x89\xb1\xfd\xed\xf8\xf0\xae?\xa8\'1\xcd\x02\n\xb0?\x99\'q\xe1\x96\xd7\xb0\xbfS\x02\xdav\x92\xfa\xb0\xbfP\x02\x1a\xc3Y\xbb\xb1?\xa69u\xab\x910\x9a\xbf~s\xea\x1e\x8c\x92\x82?\xbb\xfb\x17\xe9v\xef\xa2\xbf\xa5\xee_d\xea\xbe\x8f?p\xa0=q\xdag\xa5?f\xa0=\xad\x13\xf8\xa6\xbf\x9dyaOm\xe6q\xbfv\xbd\xb0\x97\xcdH\x87?!\xb5\xcea\xd2;\xc0?Nj\x9d9\xa7^\xbb\xbf\xe3\x80\x8cW\xfe\xc9\x94?\xc9\x80\x8c\x97\xb2f\x92\xbf\xcd\x9d\xc3\xef\xae\xc2s?o\xe7\xf0\xe7\x85\xe6\x90\xbf\x01\xc1O\xd7\x9fY\xb9\xbf\x01\xc1O,i\x04\xbc?)\xcaZ\x9a\xc4/b\xbf\xe7\x9a\xd2\xe2\xdf\xe8{\xbf3\xb2So\xackx\xbfz\x13+\\"\xda\x90\xbf3\x03\x86\x94\xea\xde\x8e?\x00\x03\x86\x94\xa6\x89\x8a\xbf\x1a&\x0ck\xba\x1e\xb5\xbf5&\x0c\x14\xf1B\xb2?!o\xd4Z\xe0\xc1\xcd?\x17o\xd4_\xabw\xcb\xbf\x86\x8fT\x89J\xf7\xb6\xbfu\x8fT9\xc7\xaf\xb1?\x96I\xf3\x82\xdbB\xc3\xbf\xadI\xf3\xae\x89\xf3\xc0?\xcc\x9f\xdeM\xbe]\xa4\xbf\xc7\x9f\xde"e4\xae?$\x10C/$\xdb\x86?\x11\x88\xa1\x87]\xf5\x97\xbfN\x92\x8c\xad\x89\xaa\xc5\xbfZ\x92\xec\xc5ZE\xc5?"\x9f\x85\xddp\xda\xb2?\xfe\x9e\x85,6\x85\xb9\xbf\x0e"o%\x10F\xc4\xbf\x16"o\x01\xd4\xb7\xc5?\xc8.j\x830*\xab?\x98.j\x9f\x11\x0f\xa2\xbf2Y\xb0?\x05\x92\xb9\xbfBY\xb0\xde\x13\xc3\xb9?8\xb9<\xaa\xba\xd1\xb2\xbf.\xb9\x9c\xee\xc2\xb2\xb6?\xe9\x8b\x19g3\x8a\x90?\xf6\x8b\x19\x07+F\x95\xbf'
p118
tp119
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp120
Rp121
(dp122
g78
(I00
I00
I00
tp123
sg80
S'float64'
p124
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg53
g88
sg85
Nsg73
g121
sbsS'b1'
p125
g0
(g10
g5
Ntp126
Rp127
(dp128
g14
S'auto_14120'
p129
sg16
Nsg17
g0
(g18
g5
Ntp130
Rp131
(dp132
g22
(lp133
(lp134
(g25
I306
g26
S'nade_train( * args[1:] )'
p135
tp136
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p137
tp138
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p139
tp140
a(g37
I25
g38
S'self.add_parameter(TensorParameter("b1", (n_hidden), theano=True), optimise=True, regularise=False)'
p141
tp142
a(g41
I29
g42
S'parameter.add_to_model(self)'
p143
tp144
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p145
tp146
aasbsg48
g0
(g49
g5
Ntp147
Rp148
(dp149
g53
g125
sg54
(lp150
g56
(g57
(I0
tp151
g59
tp152
Rp153
(I1
(I100
tp154
g66
I00
S'f\xefv\xec1\xbb\x87\xbfkn x\xe0,\xe4?\x02Y\xd9v\x9a\xc5\xe7?\xf9% \x03x\xdaq\xbf\x99MA\xfa\xf7\xa3\xdc?\x99z\xa8\xdd\x89.\xe6?_\x9f\xdc\x14\xcc\xb9\xab?L<\xbc\xca\xe1\xba\x94\xbf\xa6~\x0bO\xd1!\xd9\xbf\x0b58\xb3!9\xbf\xbf6\xdb\xd1\x88$\xf6\x91\xbfbk\xba\x8a\x95#\xdc\xbf;J\xff\x84. \xd7?q\xac\xce\x8eOR\xc7\xbfx*J$}2x\xbf\x9d\xae:\xf0\xd25\xd9?8\xddw\xd5h\xc3\xd2\xbf\xd1\xe3\xccr\xb2\xec\xea?=\x80\xb3P0\xfb\x83\xbf\xee\xf6N\x10\xbe\xc8}\xbfE\x00\xa7\xbe\xc9J\xc1\xbf\xcbcv\xca\x05\x96\xe1\xbfU\n:z\x83\xca\xcc?\x82w\xc6\xa1\x96\x95\xd0?n\xba\x83s\x0c\xae\xc4?5\xf7\x11!7L\xc5\xbf\x84\x8a)}h\x82\xb2\xbf\x1dM\x87\xd0m\xd7\xda\xbfN\xf6\x014\xba \xb2?\xff\x97U\x98k\x0e\xca?\xdekX\xae8h\xe3\xbfsF\xfb\xdb\xbc=\x92\xbf\x05i\x08\xd7\xdad\xcc?N\xfa\x80\xcaa(\xec?\xfe\n%V8%\x98\xbf7\xf6\xd1\xc7Jw\xcf?Z\x9bLG\x13m\xa5\xbf\xaa\x0e\x08\xdfN6\xe0?w\x9f\xcb}\x1e)\x90\xbf#J\x1c\x86p\x95\x8d\xbfD;\x94\xb0\x8bj\xd7?x\xcb\xd3s\x82\xbe\xbc?M\x02svMz\xe1\xbf\xf97\xd37\xae\x87\xdc?\xec\x00\xea\xdd\xb0\x9d\xe0\xbf\x86=+\xb5\x11}\xbe?\xfbTZ\x86\x868\xc0?\xe9R\xb0\xbc-\xf6\xc1?]\x86\x1b\xae\xe3\xe1\xd6?7\xf6r\xc6k\x95\xc0?j\xda}\x90\xbf\xea\xcf?\xe3+s\x98\xac7\xb8?\xf8V\'\x0f\x02-\xa2?\x80\xea\xa3w{\xdb\xe2?\xd1\xc06\xab\xa1\xa6\xbe\xbf\x1d#\xbe\xadW\x1e\x9d?\x837\x8aRyQ\xdd\xbf\xb0\xf2\xb4\x9d}.\xe5?I\xbe\xea\x90\x1e`\xcb?\xc7\xc2\x03\xd3\xb8\xf2\xd3?\x0cJ\x86,\xdf2\xe2?|\x01\xabB D\xc5?q\x16\x18\xb1a\r\xe4?\xac%\x90R\xe9\xe9\xc0\xbf"\xc3&\x0f_\xfd\xc1\xbf\xb0\'{G\xb8\x05\xc1\xbf=\xee\xc8\x89Bo\xc4?\xd9XKu\xa9\xcb\xc1?\xe0\x9cx\x81|\x89\xd8?(3\xa91\xeb2\xdf?\xb7\x17~v\xd0\xbe\xa5?\xc0\xe6\x99F0A\xe0?\x9e\xd5\xc6,e\x07\xcb?\xfa\x99\xcb\xe2b\x8em\xbf\x89\xb2y\xf4?a\xb2?\x85\xed\xd7\xd2\xb0\r\xe2?i\x1b/T\x9b\x1e\xb9?T\x1bTN.\xb9\xd3?Rj!R\x00Z\xc4?\x8dH:\xaf\xa4\xd8\xcd?\xe5\xb5\xed59:\xd0?\x0c\xdc^\'\x8e \xd1?\xbf\xf9\xec|\xe2E\xd3?\xd3\x97\x17\x99D\x06\xe2?dgr\x8df\xddp\xbf\xfa.\xb2c*\'\xde?\xef\xb6{\\R\xae\xe1\xbf\xae\xf0J<\x85\xab\x94\xbfU\xed\x86\xd7\r\x1f{?\xc8UL\xc7kW\xb0?\xd2.x\x0fL\xe2\xa0\xbf\xe5\x1a\xb4\x1c\xb6\'\xd1?\xd8\xd7\xe9\x89\x03\xdc\xda?\xeej\x96)\xb6V\xdd?\x1f_\x1b\x11.\x0f\xd9?It\x0b\x9c\x00\xf6\xb5?1MI]\xf1{\xda\xbfrD\x81\xfcC\xc4\xbb?\xa8Y9\xe8\x12\x9e\xd4?\x87%\x94\xb3W\x17\xe1?'
p155
tp156
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp157
Rp158
(dp159
g78
(I00
tp160
sg80
S'float64'
p161
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg53
g125
sg85
Nsg73
g158
sbsS'V_sigma'
p162
g0
(g10
g5
Ntp163
Rp164
(dp165
g14
S'auto_14125'
p166
sg16
Nsg17
g0
(g18
g5
Ntp167
Rp168
(dp169
g22
(lp170
(lp171
(g25
I306
g26
S'nade_train( * args[1:] )'
p172
tp173
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p174
tp175
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p176
tp177
a(g37
I31
g38
S'self.add_parameter(TensorParameter("V_sigma", (n_visible, n_hidden, n_components), theano=True), optimise=True, regularise=False)'
p178
tp179
a(g41
I29
g42
S'parameter.add_to_model(self)'
p180
tp181
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p182
tp183
aasbsg48
g0
(g49
g5
Ntp184
Rp185
(dp186
g53
g162
sg54
(lp187
g56
(g57
(I0
tp188
g59
tp189
Rp190
(I1
(I21
I100
I2
tp191
g66
I00
S'mr\xbc\xeeP\xf5\x87?\xab\x11\xb0r\x00\t\xa8?\xfc\xc8\xb8s\xd4\xc5\xb5?+\xfb7\xf5\xc1\x03\xbc\xbf\xe8^\xfb!3\x00\x94\xbf\xe8\x08\xf9A\xbaS\x97\xbf\xf1v\xea\xdf\xc9\xb5\xb4\xbf\xb1^\xc1v\\\xe6\xaa\xbft\xb4\xbc\xf1\xf5\xf9\xbe\xbf\x08\x84\x81eu\xa8\xa3\xbf\xd8\xd8\xe8\x1b\x94\x9f\xc2\xbf \xee\x87D\xd3\xb6\x80\xbf#v\xf0\x03\x9d\xa5\xaf?\xd0t\xad\xf1pw\x83?m<[\xb4Z\xe5\x90\xbf$\x8a$l\x8c\'"?3\x9b2\xd5\xb02\xb5\xbf\xe2\x9c\xa53g\xa0\xd7\xbfv\x1c$Q\xca\xf6\xa8?|\xa9k?\x84\xf3\xb0\xbfx%w\x03\xbc\xaa\xaf\xbfy O\xb6&\x9dr\xbf\xbf2\xf2m\xe4+\x83\xbf\xb3so\x96\x1d\xd0\x88\xbfM\x9d\xf3\xd1"V\x9f\xbf~M\x1f\xde\'\xce\x82?-\x9d\xc1Y0\x16\x93\xbf~\x87\xaaA\xd2\xa1\x93\xbf\xd9 \xeb\xca\xf1\x89\xa4\xbf\x86\x8e\xd6(\x9d\xdd\xa7?~\xc0\xd4\x95 Y\xc5\xbf\xda\xd3f\n\xff\x03\xb4?|\x9b\xe1\x0f\x96\x8f\xb3\xbf\xc90\x81\xe9Tm\xc2\xbf\xa27\xd0\xed\xce\x94\x9b?\xdd\xc9p\x1c\xe5\xab]?F\xa8d\xfd\xbe3Q?\xd6\xfd\x03s\x87d\xb5\xbf\x7fT\xe1\xfd\xaa\x15\xa3\xbf\x1a\xb6X^\x93\xfe\xa7?\xc5c\x0b5\xf3\xfc\xa8?\xb6\x10\xdaD\xb9e\x98?\x02\xd6\xa4\xef\x82J\xbc\xbf\x86\x018\x0c\xca\xa0\xa5\xbf\xa3\xfdl\x83\xe8\x95\xa5?\x13r\x8c\x14\xa1=\x91?\xacvR\x0fY\x1f\xaa\xbf\xa0\xde`\xd5\x9d\xf9\xb1?l\x9a\xa6\x98c\x9c\xbe\xbf\xad\xb6\xe9\x1c\xf4C\xb3?\x1an\xe2_\x1fl\xc2?\xe2^\x1c\xc6\x90\xe5|\xbf\x97i,$\xb9\x07\x88\xbf\x1f\xcdfd:\xf2\xb7\xbf\x9bx\x15\xabYV\x94?X9\x1d%5f\xa6?\x1d+n\xdeux\x96\xbfe\x92;\x02\xe9\x10\xaa\xbf\xd25\x8d\xc6\xd9\x18\x99\xbfb\x93G\xbce\xde\xb2\xbfmjg2\xc9%\xbc\xbf\xbc\xd8\xb3\x08\xa8\xd2z\xbf\r\x1b\x1f^\xf7<S?7~\xcfY[\xbc\x89\xbfS\x84\xfaG\xa3\x0b\xaf?\xeb\'\xe2\x9d\xe6\xf6\xa3\xbfz\xea#n].\x80?\xbbW\x9b\xf2n\\o\xbf\xc9ip\x8a\x0e\x15\x80?\x11\xe0F\xc4\xd8\xc2t\xbf\xcb\xe9U\x98AXh\xbf^Py0\xb8y\x91\xbfD\xb0\x9d5\xe0/\x8f\xbf\xfb<\xb8\xe6\x96h\xa9?\x15:,IP\x1a\xb6\xbf\xfb\xfa@J\x07T\xb5\xbfx\xd0\x9by3\x0e\xab?^\x16(\xa5\xab\xf8\xa1?\xc0\xad\xeb\x1fZe\xa5?Ot\x83\xd9\x19\tc\xbf\t`\xb5\xee\xa0\xb8x?\r\x96S\xdf\xf1\x97\xae\xbfF\xf8\x84aX\xda\xa1?V\x1a\xef\x89\x18N\xbf\xbf\xb2a \x98\xb7Z\x9b\xbf\x0e((\x1f\x0e\xb4\xb0\xbf\xf2\xddK\xee\x98\xe8\xbf\xbf\xe5\x14\xa6D\x88T\x8a?_}\x9d\x8d0;\x9f\xbfGd\x9b\x0b3:\xa1?\x1e\x15\x8e\xea=E\xa6\xbf{]\xd6x\x84\x06\xbf\xbfh\xab\xde\x07\x8d\x89\xa2\xbf<\xe1RoS\x97\x88?\x01\xd9-v2\x10s?2 JQz\x8a\xae\xbf\x18\x8a\x9f\n\x01\xbf\x88?5ks\xe4\x16\xf6\xa9?\xeb>\xe9+r1\xa9\xbf]B\xce*36\xa0\xbf\x90\\?6\xd2\x1d\x9a?\xd7\x81\xbeP\xf8\x97\xb2?D\xb9\xbb\x9a\xbe\xea\xa5?\xf6[\x99\xeb]T\xad\xbff\xe4b6oo\x91?\xc9?\x04\xa8X\xc2\xab?\xb6\xa7\xb7\xb7B\xbf\xa8?\xad\xbb\x18\x9e8<\xc0?\xf8\x0e\xc82\x8fv\xa0?#\xb4\x9d\x96\xe9\x02\xa3\xbf\xd5\xfa\xb0s\x85h\xb2\xbf}\x02\xac\x97\x1b\xee\xa4\xbf1m\x9f\x10\x1b\x1c\x81?\xe46\'\x0bm\xdap?b90\xd9\xfd\xae\x8f?\x00\xa9\xd1\x80\\f\xb4\xbf\xaa\x82g>\xc6\xa9Q\xbf\x94\x15\xbb_R[\xad\xbf\x9a\x9a\xfe\xfaw*\xad\xbf\x99\xb2\x9d\x98|;\x94?\xb4\xaa\xdf\xbf@\t\xca\xbfOe\x17\x17\xe3I\xc5\xbf&\x89\xc3\x14g3\x8d\xbf\x87X\xf6\n\xd8\xac\xb1\xbfWc\xacw\xea\xdb\xab\xbfd\x13\xfd\xd0\xb4\x0fJ?\x11\xf3\xb6DQ\xde\x99\xbf\x8a2*h>7\x9a\xbf\xc7\xb3@\xbb\x11s\x93\xbf\x16mc\xd77M\xbf?i&)m\n\x88B\xbf^h\x9b\x0bj\xf8t?\x8f_\xa0\xba\x0fRu?\x0fU\xed=\xa8fD?\xf0$\xd2\xe3\xcbkv\xbf\x82\x7f+\xfe\x8e\xaaU?\x0b\x8cGc\x13\xd7\x80?\x85\xf3\xe3\xf5-^\xb1\xbfj\xf3\x83I\x84>\xa9\xbf\xcdM7\xb5\xab\xdd\x98\xbfL\xb7\xd0\xb6\xd4Q\x8d?\x9be\xb0\xb8*T\x90?\x18\xda\x1b\x958\xbee?h\xe6+\xc5\xb0\xd2\x83?O\xb8\xb5\x0cVA\x92?\xfc\xfc\x06\x0bC4q?\x96\x8b,\xd8\xb6\x8e\x82\xbf\xae\xe6\xebu\xc7x\xc1\xbf\x85\xac^V\xf6\x14\x9b?\x80\x97\xddjm\xfc\xb0\xbf\x12\x99K\xa3j\x7f\xa4?u\xb0\x9c\x98\xfe\xc7\xa5?\xb5\xb0\xdb9b\xff\x90\xbfU\xb7\x1f\xd3D\xb3;\xbf\xfa\xceM\xa8\x8e\xf2\xb4?&\xfaG\x8bS0\xa7\xbf/@|\x07\x13G\xb0?\x1fu\x9b8l\xa9\x8e?\x82\xf99Y@$\xa1\xbfB-s\x08\xb5\x1d\xb5\xbfP?\x08 j\xe5\x92?k\xff2\xca\xd3\x85\xb5\xbf\x93?\x86\xf4\x18C\xc0?\xfc\xad\xdc7z\xf3\xbe\xbfP\x16\x04Ybp\x8b?\x070\xf1k>\xd4\x9c\xbfU\x7f7\xcfJ\xe8\xa6\xbf\xd50(Ivp\xa5?\xa5i\xcaS\xae\xfc\x87\xbf\xa2\xbc\x04\xcc\x8cj\x8d\xbfo\xcf\x86.\xc6\xec\x9a\xbf3\x18\t)\xe3\x99x\xbf\xff~\xfa\xc2R7\xa2\xbfB\x042\x92B\x0f\xa9?v\xf9\x86\x98\x89\xd4s?\xfbu\xe2p\x03]\xc2\xbf\x95\x84\xe3\x83\xb4~\xa4\xbfp\xd4\xb0\x9dA\xfa\xab\xbf$\xbc*\xcc\xabN\xcd?r\xd7\xf2\x8d2]\xb6\xbfa\xdd\xe81A\xc9\x98\xbf\xc4\x1bL\xfd_U\xba\xbfP\xe7!\x7f\'\xfd\xa2\xbf\x15\x99\xaeN\x8c\x15\x97\xbf\x85\xc3\xec\x7f\x14\xa5v?\x9f\x10DB\xc8\xba\xb8?@Y]a\x95\xdb\x92\xbf.Mg"I\xb4\xaf?J\x81\xfcu\x1c\xbd\xa9\xbf\x969\xac\xe0L\xc8\xac\xbf\xce\xcdGs\xf2I\xb3?\xfa\xcb\xdc\xc6(\xb1\xba?\x03\x13\'=\xb9\xb9\xab\xbf\x89:\xb2\x1f\x1e\'\xbd?SR\xa7n,\xb7\x9b?\x0b\x02\x1dHm\x8e\xb2?\xa3\xeb\xe0\x1f\xc0\xc2\xbc\xbfd\xb12\xf2\xf6\xab\x8d?\xbbw\x9f$\xe0(\x9b\xbfYf\x843\x8a\x19m\xbf?\xca\x15\x83\xaf\x81\xac?Q\xec\x7f\x01\x91\xbb\xa2?<,\xaa0\xff\x93\xa8\xbf\x00\xfby\x03\xaf \xaf\xbf\xed+}\xb1\xb1\xec\x8d\xbfF\x8b\xf7^"6\xa3\xbfx\xce\xbd6\xddi\xb1\xbf/\xd4\xe0\xb50\xec\xb0\xbft\x18eJ2\xab\xae\xbf\xc7\xae!tv\xd3\xa8\xbf\xf6\xc1\x1b\x88#\xef\xab\xbf\xbe#4\x89\x1f[\xb4\xbf\xf1\xbb\x8f\xc0W\xc1\xaf?\x8b\x999\x06=(\xa3?c\xa6\xce\xf4\xbcY\xa7\xbf\xb7\xf9\x0f\xc5\xc2I\xa9\xbf\xb5G13\x07H\xcd\xbf\xf1\x95u:\xf9w\xca\xbfKiR[G\xb3\xa0?=\xdf\x03\x9b\xcd\xe4\xb0?\x1c\xe7\x93\xda\xb1v\xa9\xbf\x84\xf7e_8ys\xbf\x10\x04K\xf1\xd5\x8a~\xbf"h\x8d\x8f\xbc|\x7f\xbf\xa7\x0b\xc7V\x8c\xad\xa1?_\xfe\x1d\x80\\\xd2\x92?\x9b\xb1QE\xe7\x83\x87?o\x86_\xc9\\\xebw\xbf9\xdbjN2\xfa\xaa\xbf]\x10\x1c\xb7\xa8P\x92\xbf\x9c/\t\x7fr\xf3\x90?Mnc\xfe[N\x92\xbf\xde\xaa\xa3\xf4F\xbb\xbc\xbf\xa5\nl\xd86C\xbf\xbf\xe1\x83\x00\x9a\xf2*z?5\xbd\x8f-\xcd.\xb4\xbf\xf1\xde\xf4\x16d\xe7z?Y\x9e\xb8z\xa9\xa2\x9d\xbf\xb3\x9e\xf8\x8f\xb2\x08\xb5\xbfDlH[\xb6\xee\xac\xbf\xc4E\xcb\x82\xf8\x9c\x81\xbf\xcbM\xf1&v\xb8g?\xb8M\xde\xa4\x19"\xbe\xbf\xf8\x0c\xd4R%\xb6\xbf\xbf\xe8\x8b\xab\x9d|~\xa6?R\x03\x96\x12\xc2+\x81?\tdL\xdc\xda_y?\xba\xb3\xf1\xab_\xc5s\xbf\xb6\x06\xbf\x05\x1c\xb1\x8a?\xac\xf8\xc7I\xa8t\x97?\x12<\xaf\x1a\x8e\x9d\x83\xbf\xba\xa1^\xd3@|\x91?\xd9\xb7\x9c\x06>\x9d\x90\xbf\x8b\xdc\xa5B\xe9\xea\xa1\xbfj\x98\x81\xa0iW\x9b\xbf\x93\xbd\x80\xc1\xc3w\x9b\xbfS\x99\xf1q\xa1\x0b]\xbf\xed\xf1X:\xcb\x7f\x90?\x80iL\xe6+\x97\xb4\xbf\xf0\xa8\xc0\x1e\xbd\xd3\xb8\xbfij\x0b\xef\x11\x84q?\xb7_\xaa[\x90\x89\xa0\xbfC4\x0b_ Zu\xbf\xbec;\xbd\xde\x0cY\xbf&\xfa\xccY/\x0b\x82\xbf\x9fn\xcf\xdb\xb3V\x8d\xbf\x88\xa0:\xa4\x0bN\x8e\xbf-\xadp\xcb\xc0\xe6\x87\xbf\xcd\x16\x12\x80\x1a\x18~\xbf-Ap\xc9\xfeD\x9b\xbf\xbb"\x10\xae\xc7\xfb\x87?}R\xd6f\x14q\x8b?E\x8f\x08r\x02\xfc\x95?\x9b\xdd\x1b\x9d\xc4\x05\x83?\x92\xe3\x90\x1f\xfb\xf0\xb9\xbfT\x8a\x02\xd1\\a\xb6\xbf\xf6\\\xaa+O\x95o?\xc1qu\xadC\xed\x9d?h\xaav\xbay\xdd\xa2\xbf8\xc3\xa8\xf4\x8aW\x91\xbf\xac\xd9K\xae-\xda\xa3\xbf\x0b\x10>\xdcU\x12x\xbf\x9c\x0e\xd1\xea\x8e\xd4\xab\xbfm\xaa\x10[\x18\x1a\xb2\xbf\xd6\xcf\xc19\x17\xe6\x86?s\x7f\xf7S\xe6\xc7\x92\xbf\xe8\xf2\xc0\t\x19X\xaa\xbf\xf9\xef\xb0\xf7\xfd{\xa6\xbf\xce\xa9h"cH\xab?\xdaV\xbb.W\x03\xaf?\xa7fF\xd7<}\xb9\xbf1\x90F\xa6\xf39\xbc\xbf \x90>J\x07\x1d\xb1?\xa7\xc0T\x19\xcb`\xc3\xbf;\x18\xb8\x02\x04%\x80\xbfD=_\x1b\x19\xf6\x8e?\xc3\x8b\xc1~\xe2\xe2v?\xcb\xfa\xcf\x83@\xa8|\xbf~\xf2\xf2\x86k\x17d?X\xbf\x10<\x9b\xd1\x95\xbf\xfd\x9a\xf1(\x908\xa5?LpJ\xc5\x17\'\xa8?\x9b\xaaA\xd7\xeb\xe1\x8e\xbf\xf4/\x14\x96Xn\x98\xbf\x81\xce\x86Y\x00L\xa8?pZ\xee\xc35\xa4t?"\t\x08\xbd\xcc5\xb5?\xc2\xac\x0bJ\xc5jv?\xc7\xf9\xd1\x06\xa4\xb1_\xbf\xc4\nU\xa6;Qo\xbf\xe9\xf1\xa1\x89\xf04\xa6\xbf\'\xc6\xc0z\xe0\xde\xa6\xbf\xcb\xba&\xbc\xd0o\xb3\xbfX\xc3\xbd\xa7V\n\x94?\x7f\xb9\x1f\xe7j\x8a\xa6?i\xb5h\xfeQB\xa9?\xec\xc1\x92|t}\x84\xbfi[_g\xb3\x03\x98\xbf.\x9a\x16\xb3YV\xc4\xbf\xc37\xc0x\ta\xc0?\xd6n;\x80v\xbd\xb2\xbf%qrv"a\xb8\xbf\xcec\xe1-\xf0\xa4w\xbfLF\xef\xadZ\xbc\x9d\xbf\xbd`7\x08Ere\xbf\xb6\xd9\xcb\x05\x80\x0f\x81\xbf;A\x8e2\xc8\xb4]\xbf\xe2\x84d\xf15\xf0y\xbfL\x16\x07@r\x93u?\x1a/q\xcc\x11\x94\x89?\xf8\x9e\xc0\x95\x8f\xfei?\xbee\xf0\x12\xc8.\x82?\xb5\xeb\xa8F\x1a\xe6m?\x197\xf1\xf7\'\x05\x96?\x0f/\xb8\xc25/\xa3\xbf\x16\xf4s$\x8fa\xbf\xbfkR\xf0i\xe2/\x8c\xbfl\xeb\x1e\xea\xf1\x96\xa9\xbf\xad\r\xe4\xdf!:\xb1\xbf\xe6y\xcaq9\xf6P\xbf>\xb9o2~\xe0\x83?\xd4\x16\xf78\xa1\xe5\x8e?\x05z;\xfeO\x98\xa1?\xff\x05\xc0@lQq?\x91\x8d\x91\xed\x1b\xd8\x80?^\tZ\xdf\xe4\x1d\x9c?\xa5\xe7\x1a\xfe\xc30\xc5\xbfn\xc7\xa3\x12\xf0\xd8\xbb\xbf\xfe\x00\xf0\xf1\x17\xe1\xaa\xbf\xd0(\xbb\xd9\xec\xee\xa3\xbf..\xb2\xeb\xe4\x83\x98?BS-\xa7\xe2\x00\x96?\xcdz\xc2\x8b\x1c\xba\x9b\xbf\x1f7q\xf1Y\xf1p\xbf\xf0*\xac\xbf\x14\x9fd\xbf\xc4WD\x85x\xc1\x99?\xe5\xd8\xd2\x07,2}\xbf^z\\\x1b\x86\x85\x84\xbf\xf6/K\xe7\xa9\xe3\xad?\xa4\xf9\x18\x18~2\xb1?\xac^\x1f\xdc;\xe7J\xbf\x0e\xdb\x10\n8\xc4\x8f\xbf+\xad\x18\x0f\x83\xea\x9b\xbf*\xa3\x80\x04\x80ox\xbfa\x1b\x07\xe2L\xd8\x97?Lz\xe6\x9f3\xa2c\xbf\x17M\xa2)-\r\x9b?\xe6\xcd\xdec\xa3Q\x91?\x1f\xfe\xe7\xab\xd0\xe4h?O\xad\xb6\x04khY\xbf\x0b\x10\xd5/\\\xad]\xbf\xa4\x1d\x86\x98\xb7\x8bg?\xb4\x1e\x9f.\xe9\xaa\xa6?8\xf9\x1d\x06\xa8\x1d\xac?P\x95\xeeK0H\xb3\xbf\x9c\xf0no]o\xaf\xbf\x1c\x1c\x16AX\x04\xb0\xbf\x18\x10\xf3!\xccY\xb1\xbfsN\xbe\xa4\xd2\xa2\x88?\xcb\x17\xaa|LT\x88?\x11]i\xd7\x82\xcd\xa5\xbf{\x1e\xf8\xf3i"\xb6\xbf\x0e\xcf\x15\x05\xb6)\xf2\xbem\xc1\xb9\x9b,=\x9b\xbf\x9c\x12\x959#\x1a\x9b?N8G\x82\xdb\xb6\x8d?f\xff"\x82}\xe7\xa5?H!cP=\xeb\xaa?\x10.o-\xd9\xbb\x83\xbf\x03\xb4N~\x00s\x9d\xbf\x18\xe2(\'g\xc7\xb5?U9#\x96\xa3%\xb4?3mb\xedMU\x90\xbf\xa7\xcb~\x8d#\xcdk\xbf\xeaZ\x8fC2\x1cv\xbf\xbc\xbf\xbd\xb7y\xf23\xbfJ9\xc94\xe2\x1b\x99\xbfE>\xaa\xb2\xe5\xde\xab\xbf&\xe7\x92%\xbf\xd6\x84\xbf\xa2\xfe[>D\xf7\x98\xbf\xc7arX#|\xad?\xa8\x89X\x94!\xde\xb8\xbf{8\xe9\xb7\x90\xe6\xa4\xbfzG\x90\xf0>=\x98?\xbe\x96l2\xb2t\x97\xbf\xbd\xc9\xf3\x19\xae\xe2Q\xbf\xbc\x1c.\t\xc2\x7f\xad\xbf,\xd5\x9b\x18[\xc1\xa6\xbf\xcdOW\xd8\x02\x12\xb4\xbf\x16\xde\xe6\xdf\x92\xca\xa1\xbf\xf9\xa0\xda==|\xb5?\x1bf\x99\xc1\xa0\x8e\xa2\xbf\x19E\x08\xe5\xf9\x0f\x93\xbfO`q\x04\x957\xa7\xbfc\x84\xd18HR\xa7?\xd9G\x16\xdb7I\xb4\xbf-\xc56_\xf8r\xab\xbfY\x19\xbeu\x80\x03\xbb\xbfC\xc2\xb5\x96\x90:\xc4?6\x8e\x9a\x0b.\xbd\xc5?\xf9\x7f\x06 o\xc9\xa5\xbfP\xbb\xe5\xafuC\xb6?\xdd\xeclS\xbe\x03\x8e?t\x00\xacJ\xec\xcd\xbb\xbf%\x0b%v\x8c\xc9\xb5?\x14\xc7\x83\xa9\xed\xaaz?\x04!\xd8V\x16\xf1\x90?\xae\xe3\x8e\x16U\xcb]\xbfN\xd6\x8a\xf7Ub\xb4?\xb5\xf5\xf6#\xee\x07\xd2\xbf\xbcO\x8d\xe3\xcc`\x8b\xbf\xe8\xd4\xabL^\x06e?L\xe9\x85\x9b\xb2\\\xc3\xbf\xe9\xcd/\xed\xb8\xdd\xab\xbf\x03\xd10\xe8;\xea\x9c\xbf\xe6\x00\x02,\xac*\xa4\xbfe\x0f\xce\x81\xb7\x7f\xa0\xbf8\xaa9\xa4q\x94\x92\xbf\xf3\xc0\xf1\xa8\xd1W\xa4\xbfu>k\xcc\xea\x9b\xa8\xbfD\x0e1\xd0\xa56\xc5\xbf\x00\x90\xec]\xaf\xc3\xc2\xbf\xbd\x95\xaaI\x8br\x8a?\xc4N/j\x93\x1e\xa6\xbf\x89\x10\x83SE\xfb\xb6\xbf\xbd2r\xb5\x10|\xa6\xbfsY\xc7D\x81\x14s?(2\x88\xaf+\xe5\xc0?\xf0\x14\xee\xaay\x91\xb8?7\xe7\xe9t5\xcb\xaa?rG\x90G8+\xc4?y\xb6\xe9\xdf\x9eL\xd0\xbfZ\xc3dsUO\xa9\xbf\x93\xb3\xf6\x82|9\x92\xbf\xe2\xbe2n\xcb\x97\x92\xbf\xa0\xb3c\x93\x02\xd8\x81\xbf\xc6B\xe7\xbb "\x85?\x13|\xe4\x82N\xff\xae?9\x18\x11CT\x99\xc4\xbfI\xe3\xee\xd8\xba\xec\xcb\xbf\x1e\x9a\r\xe8\xa24\xb1\xbf\xaa\x02\x148>?\x8b\xbf\xeb\xeb\xfe\x022\x0e\xb0?O\xed\xbeP\xb5\xe9\xcf\xbf\x8e=\x01\t\xb5\x16\xcf\xbf\xa0^\x87\xafQ\x18\xc2\xbfa\xe2\x17N\x10#S?\xd6\xf7\x80\xcf;\xe9\x85?v\x96\x84\xed\x9aJ\xc0\xbf2\xd4\x1c\x8c\xfc1\xa2?)%\xe5\x8d>~\xac?\xc6\xf5\r^\xa4\xbf\xb5?\xeb\xd1v\xa1v\x9a\xc2\xbfAB\xb0p\xb1h\xba\xbf\xf3\xdey\x13\xa4\x03\xc5\xbfq|\xac[\xfa\xd6\xbd\xbfN\xf8\x009\xd2@\x92?4)~\xd2\xd8w\xb1\xbf9\xda\xe1\xb5\x02J\xa4?+~2\xe1\xd7\xb3\xad?\x94\xe4\xba\x1e`1\x9f\xbf\x93\xdd`\xa2\xa4|\xb8?Y\xd9\xde)\xd6~\xd8\xbf2tn@\xcbv\xba?=\x08\xdaX\x15]\xc1?\xbf\x94\x00\xef 3\xc8?S\xf5\xea8\xb7\x0c\xb6\xbf\xfb\x92\x8e:v\x1e\xa5\xbfZ\xb8\xa6\xd6!-\xb9?b\x8cK\xa4\xa8W\xc7?\x94%k\xb9\xde\xa0\xd0?-\x10 a[\xa8\xd1\xbf\xf9\x7f5@\xa4\xcf\x99\xbf\x11,%\xb8#\xa7\x93?\xc0~\xf8\x80CFj\xbf\x03\xd3\xe3\xc3 \x1e\xf9>v\xaf\t}\x8a\xe4\xb1?U\xc6t\x8b%4\x80?\xc6\xe7]\xd3\x1d\x13\xb8\xbf\x96U\x06^\t \xb4\xbf\xb8y\xd0\x92\xa35\xc9?hP\x0b\xf7l\xf7\xc8?\xa2\x81\xd7\xb8\x03\x94\xdb\xbf\xf5@w\xafuK\xc8?\xd7\xaf\xaf\xc2\x86\xd7\xb4?\x90\x11\x95\xbe\x95\xd1\xb4?T\xf2\xf7\xf8%\xf9\xa8?\x00\x7f\xe4\x0c\xd7\xe4\xba?\xd9\xb4\xc9\x1d\xac\xf7\xbe\xbf\xad\xb2\xab\xdd.\xca\xdc\xbf\'\x02\x94\x12I5\xc3?o\xb3\xe4\x0c\xa5f\xc4?\x9eC\xe1\x16\xe1!\xb7?v\xde\xd9\xa6O\xd5\xac\xbf\xd05\xba\t\x10\x10\xa2\xbf\xfabJ\xa4\x0b3\xb1\xbfl{tqTU\xa1?\xa3)\x0c3\x0f\'\xd0\xbfF\x8a>_\xfa\x04\x90\xbfXA\x97\xa1\xe2Qh?\t\x0e\x00\xbe\x11\x18\xbe\xbf_\xe1\x14\xf5\x9eK\xc1\xbf\x93\xb6\x9b\xb2\x83\x1f\xc6\xbf\xbaJ\xda\xf07U\xa7\xbf.~\xd7\x9c\xb0\xae\xcd\xbf+Qg\x80\xe1\x1e\xd2\xbf\x1e\x82.V\xa4\x8e\xa4\xbf\xf6\x18G2\x99\xc9\xc6\xbf\xb2M{FG\xec\xbc?,\xbb\xae\x10y\xc5\xc0?\xa02I\xca\x05\x1d\x93\xbfH\xba\x896,\xe4\x92?\xb64\'\xbb\xe9\xe5\xc0?nH\x067\x01\n\xa0?3\xf2\xad\xa5\xb1\x8a\x98?\x8d\xd7\xe47\xf9\xba\xa2?\x8a\xa8\xa3u\x99X\x95?h+\xfdL\x97\x08\xb7?b*\x1c\xd3\x91 \x92?KD\xce\xae\x14\x9f\x99\xbf\x86\x07}\x81\x18\x93\x7f?\x7f\x97{\xd6r\x8f\x9c?\x9b\xf53P:\xb6{\xbf\xc6\xd9o\xe8\x86\xb8F\xbf:.\x9f\xd6\xa3Y\xbd?s\xad"\xfaI\x97\x81?.\xfbQ^\x1b\x01@\xbf$\x0c5\x83\xf9:\xb0\xbf\xbeh\xdd\x84\xb0+j\xbf\x98\x81\xe1dVQ\xa7\xbfd:\xa0\x8d\xc1\xb2\x80\xbf\'\x9d\xeb\xabl\x1f\xa9\xbfV\xd1\xca\x99l\x94\xcc\xbf\xa1|\xbb9\xbb\xce\xa4?x\xb5\xd8\xf6\x81(\xc7\xbf~\x93\xd3\x9e\t\xd2\xb2\xbf\x8d\xba\xc8\xcf\xacI\xc1\xbf8\x13\xe6\xf3\xf8K\xdc\xbfBI\xc4\x07\xe9\x95\xa1\xbfwj\x01\x0b[\x05\xa2\xbf9`\x0c*\xc9\xe0\x8f?\t!R\x1c\x1b\'\xb3\xbf\xf6\xdf\xa4\xb2\x1e\x02\x9a\xbf\xa1\xa5E\xdf%a\xac?yy\x0bE\x95B\xcd\xbf\xa6(tU\x15\x90\xa7?9:\x03\xd6d8\xa7?\xa5\xc8n_\xd1&\xcc?\xe9Q\x9ev\xcb\xa0t\xbf\xa8\x8a\x84\xcbkVs?\xe3\xac\xa4e\x04\x02n?\x9bSKy\x1bl\x90\xbf\xc5\xfb@~\xa5\xae\xb5?\x18k,\xd6J\x87\xaf?e\x9d\xa3\xeaH\xa2\xbd\xbfB_{\x19@q\xa4?\xa54e\xd4\xd3\xcf\xc1\xbf]\xad\xd2\xb9\x02\xbb\xc6\xbfY\xf1\xda\xe7\xfe\xc1\xd0\xbf\xe0\tZ\xd0s\xe9\xb7\xbf\xf6(\x11d\x91\xcb\xa6\xbf\x0fk\x04,NO\xc4\xbf\xac\x9a\xc2\xeb\x9d\x87\x85?PM\xc4\xc2\x03\x1f\xb1\xbfgg\xea~W\xc3\xc6?\xdcl\x90SUe\xcf?\x90|\xc9\xe1O\nm\xbf<%`7\x14 c?/\xf7\xc1H_\x86\xc3?0\x82\xda{\x84\xe0\xa4?\xf9z\x9ebU\xa3\x81\xbfk]\xee\x9d\xea"\x94?\xf3\xc1\x8c\xb2\xd4\x93\xb0?\x00\xd7B_\xd3K\x94\xbf\xda\x89d\xa5\xd5\xf0\x85\xbf\xdf\xd7j\xfeL\xa1\x85\xbfis1O\xe7\x03\xc6\xbf\x10\x812\x0c\xb1Y\xd0\xbf\xff\xaa\xca\xbc"\xe6\xbd\xbf_\xc9;)\xb3t\xa0\xbf\xc7\xdf\xb5\x17\xcb~\x9e? \x8dT\xb3+e\xa0?\x9c\xa04\xb4\x8a\xcf\xa7?\x94\xba\xdbw\x15j\xae\xbf\x8d\xa9$,9W\x9e\xbf\xcc9{\xb7\xed\x90\x9b\xbf\xcf\xc3\xb2%\x8e\xc0B?\xb1\x03.\x9efD\xa5\xbf?\xa3^\xef\xf0e\xb0\xbf\xb6Y\xdd\xdc\xfb\x08\xab\xbf\x90\xb8*\xad\x03l\xd3\xbf!\x8e#]\rS\xbe\xbf&\xf9K\x92\xf8\xf8\x8b\xbf\xd6\x9c\x04\x87\x08\xcd\x9a\xbf\xeb|\xba\xc9\xa7\xcc\xb2?\xe2\x1e?b\xe1\xae\xab?\n\x83\x9c7\x7f\xc3\xdb\xbf:Vn\xdc\xaa\xf2\xde\xbft\x13l\xec\x10+\xa9?\xfe\x041\xb9A\xf9\xb1\xbft\xf3\x9c\xb6\xcdk\xad\xbf\xab\xd4\xf1\xf8$S\xab\xbf\xe5;\x14\x1c$O\xa0\xbf\xa6\x85=Q\xc1\xe3\x8c?\xc3\xbaH>lr\x97\xbf\x8c\xb7h\xc5\xbau\xae?\xc6\xcc\xc2\x87\xd5\xbb\x9d\xbf\xad\x8d\xea\x13\x1f\xe2f\xbf#B\x99\x9e\x81\x81\xb7?\xcc\xfbxt3\xde\xa9?\x02\r\x89\xe2d?\xb5\xbf<2\xcb\x97\xb0\xb1\x9a?nwx\xb3\xe4s\xcf\xbf\x0e\x1d\x15)#p\xc9\xbfv\xf8\xeb\x9e\x80\xf1z?$\x03{V\xf5V\x87?7\x11\x1e@\x84\xe1\x88\xbf\xa8\xba\\\xc2/\x9f\xb9\xbf\xecG\xcfa\xf4\r\xa4?\xeb\x84\x8e\xab\xcd\xdf\xa4?\x05\xf9B@&\xd0\x8d?\x1e\x85\xb4\xc75\xd3c?\xfb\xe2\xa4*h\n\xcd\xbft\xc9\x80d\xec\x07\xc1\xbf\\\x81)\x8a\xf2A\xb3?\x02\xe2\x94\xe4\xec_\x96\xbf\xa8\xcdf\x1e\xab>\xac\xbf\x84;\xb95\xb0\x8b\xad\xbf\xcab0\x13\xf0\x18\xba\xbf^c\x1a#\xcf\xdd\xc1?\x0c)v\x86\xfan\x9d\xbf^bs\xe1bV\x8e?wn\x9a\x9ad\x10\x9f\xbf+\xb96\xc3B\x03\xae\xbf\xcf^\x15\xe6\x9cm\xa5?f\xa08\x12#\x93\x89?\xf06\xadK\xb8G\x94?(\xd2x\x8fpk\xa5\xbf\x83\x11\xd5\xfa\xda\x8b\xb8\xbf_\xd9\x19~{\xc8\xc4\xbf\x15\xa9o\x7f\x85a\xa5\xbf\xd0\x9b\x98\xf7G\xa4\xb5\xbf\x1e!\xa4\x1d\xf3\x83\xa8\xbf\xc8\xa2\xceo\x9aa\xa2\xbf\x95P\x01\xb8\xa3\x18\xab?\xaa\xf5\xfaQ\xc76\xa7\xbf}\xe8\x1d\xbc\xfeh\x8b?4ph\xd1\xb3L\x8b?KI\xecq\x1e%\x81?\xe8\xd6\x12[\x0b\ng\xbf\x86s\xfbf\xcd%\x97\xbf\xf8\xce\xd3\xc3\x0f\xb7\xc2\xbf\x1b\x01dP\x9a\x0c\xad?\x94\xab\xcb3\xe3\x01\xbd?^\xe4N\xff\xda\xa5\xc0\xbfD\xe3\xcayYD\xc6\xbf`\x94=o\x02`\xbd?\xe9\xa7\xcd\xa6\x8ei\xb2?\xfd\xbag\xc5\xdc\xa7\xae?\x94\x1e\xa4\x99\x999\xa3?\xd0. \x8dhb\xa8\xbf\xdcS\x83C\x93\xfb\x98\xbfv^\xb7W\xc2\x0e\x88\xbfrFG\xa9\xb7\xfb\xb2\xbf\x0e\xae\xb8\xebU\\\xca\xbf^\x07\xf2}\xb2\xd8\xc0\xbf\x98\xe7\xc0\xe2\xd5\xb0\xc2?\xef\x1b\x03)\ts\xac?\x94\xd5\xf1C\xa1;\x94?5,\x07\xb8\x7fi\xb3?\x1d\x87)z\x0c\xa3\xb6\xbf8P}`\xf99\xc5\xbfsQ\x9d\xe8;l\x98\xbf\xfdXHK\x8e\xf2g\xbf \xdb\xed\x8d\xdd\x18\xbd\xbf\x94\x81\xcc\xa1\x87%\xb9\xbfx\xa8$\xc6R\xe1|?\xd0e*\xc0M]\xa9?\x9b\xc6\x81u6\x19\xc0?\x13[3\xf3\x88\xe1\xb2?\x81\x9d\xcd\xec\xd3\xb2\x94?\xc4X\x11\xe5\x13\x1c\xb0?qG\xe5\xfd\xc1\xa0[\xbf\x86zs`<uo?9\xa2=\x9e\xd5\xc4\x91?`=\x85)\xa8i\xb1?.#\xe9\x86\xd4\xdc\xbd?\xa5\x98>\x11\xdd\xc9\xbd?\xc0\x06\\\xa6\x95\x8d\xa5?T\x8f4\xd1X\x8f\xa9\xbf\xc3\x14\x89_\xd1N\xba\xbf\xaa\xd3\x9a\xec!\xf6\xb2\xbf\xb8t\x88}\x01\'\xa9\xbf\xae\xf2\x16\r\x83\xaa\x9a\xbf\x86\xf8)\x8e&9\xa6?\xf6\nL9\nL\x9e\xbf\x85v\xe1\xb0\x02\xa9\xa9\xbf7\x03\x92\x06\xd1n\x96\xbf\xd2A\xc4\x0f^\xb7=\xbf\xe6.\x1df\xc2\xee\x90?\xd3\xc5\xd4\x96\xab\xe9\xd7\xbfM\xeb9_\xdc\xc3\xd0\xbfs\x8b\x7fD\xcd\xae\xae\xbfI\xf2\xdaDt"\xc0\xbf\xf49u\xde\x84}\x8b?\x15\x05\xec\xb8\xben\xad?\x01\xfe\xf8\xc7o\xae\xb9?\xa0\x14\x88\xad_]\xa4?oD\x81>\xd5|\xaf\xbfC5\x93\xc0\xb4\x86\xb7?\x88\xc2\xf2!e\xa3\x83?(\xe4i\x8e\xda\xb6\x82\xbf)bj\x9ei\xa6\x8e\xbf\xf5\xfd\xf4\xfb\xf9\x05\x86\xbf\x7f\xbf\x86\xe6}\xee\xa6\xbf#\x06\x10\xa2\xd2\x18y\xbf\xc8P;\x8c\xd0~\xb9\xbf\xcf\x16<\xb3sO\xb3\xbf\x11\xe63\xc1n\xef\xa5\xbf>\x08\xdfg&Q\xa3\xbf\x14#\xd4\xfc;\x9c\xa2?\x8c\xf4a|6=\xa9?B3\x98\xffrpl?v\xd1=\x99)\xcd\x81?\x97.I\xdd\xf6^\x95?+\xba1x}}\xa0\xbf\x04g</\x81 \xb6\xbf\x1a\xfd\xc5\n\xad\x1f\xbe\xbf\xa9\x0cD)\xc9\x96\xa5?\x03\t\xc2\xb7\xaa\xae\xab\xbf\x88\xea\xf8\xda\x8b\xefg?C\xf1\xa8\xe7\n\xe3\xa2?\xb2\xa9fy\x95\xa8\x87?e+\x8dx\xb5\'u\xbf\xf9\x87\x97\xef\xf3\xaf\xa9\xbfi\xb0\x04F\x18\xce\xb2\xbf\xf087\xdd\xaa\x86\xb1?\x80\x96\x119\x19\xe5\x92?\xeb\x17\xa7\x16p\r\xc3\xbfT\t\xd2\x9d|\x8c\xc0\xbf\x1b\x91\x914\xdb\xd8\xa8\xbf/\x85\x1a-\xeb@\xa1\xbf\x98,q1r\x92\x9b?33\xc3p\t\xf1\xb3\xbf-yq\xd3$\x83\x9c?*\x91\xf5\x8d\xfe>\x9d\xbf\x1e8\x9e\xa0\x9a\xd5\x97\xbf=U\xad\x87)\xd8\x99?\x13~5\x89s(\x8a\xbf;.\xe3\x94r\xa7\x94\xbf\xe5\xfe\xf1L\xf8p\x8d\xbfh#\xf8\xf6\xea\xb9\x92\xbf%\xe1\xf5\x17\x0fP\x94\xbf\xbb\t2\tQ6\x98?\x9ag\xb5\x92=\xbb\xb1?\x93\xbe~\x91\xd9\xcb\xc1\xbfCG\xe958\x9b\x88\xbf\x91\xeb\xba\xae\xaeK\xaa\xbf,q;\xdd!\xe9\xb7?\xee\x92\xe1n\xf6\xf8\xb7\xbf\xc0\x99,kz*\xa2\xbfUP\xfcLu]\xa8\xbf\x7f\xf9\x90\xab\xa1\xac\x9e\xbf\xc0\x0b\x94\xfc\x0b\x0c\xa7\xbf\xb1\xbd\xceX\x92zx?T\xe0\x1b\xa2$9\xb5?5\xde\xbc\x19\xa5\xd4\x97?\xc0\xd7mm\xb4\'\xb0?\xe8G\x13\xc1\xc4\x88\x9f\xbf#\xe5\x8f;yau?/i\xd5C\xff\r\xc0?\xee}\xa3\xd2b\xea\xc4?7\xaf\xab\xd3\x94&\xbf\xbf\xb3\xf4\xc5l\x05\xab\xb4?\x8d#\x86\xa7\xf3\x08\x8e\xbf\xa8\xbaF\x00J\xccS\xbf\xd6\xa1+B\xf7\xee\x96\xbf\\5\x13C\x85?\xa5?N+\xa9-^\x8c\xa0\xbf\xbb\x85\xbe1\\\rW\xbf6\xde\x06\xefA\xe1\xa7\xbf\xb2r\x83\x1d\xc63\xbd\xbf\xb7\r\xf5U\xf4G\xa3\xbf\x02\x8dRl\x86\xdd\xa2?\xdc\x9c\x1d\xa5%\x00\x92\xbf@\xbbG\x93\x81$m\xbf%\x06\xb0\xce\\\x1e\xc4\xbf\xe3\x19\x96\xfe\xe5\x1f\xbe\xbf!\xe8\xe0\xb4\x9ca\x9f\xbf\x10\xc9\xc4\xbb\xbb\xd4\xa3?^)S\xa3\x8e\x1c\xb4?\xe3|q`\x8ea\x8e\xbf\xd0\xce\xd7\x0cg|\x83\xbf\xc1\xfe\xcf|o0\xb3\xbf\xf8\x15{\xd9sk\x92?\x9a\x00zy\xde\x00\xb1\xbf\xd7\x18BK<Q\xad\xbf\x0c\xe1\x87\xf9\xab\xdb\xc8\xbf\x10O\x94\xd0\xd3\x92\x97\xbfr$\x968G\xdf\xae\xbfc&Tz52\xb2\xbf\x13\xb5\x05\xd7!>\xa3?{\x81\x94\xbd_\xa2\xad\xbf\xf7:\x85\xa5\x98,}\xbf\xbam\xda\xec\xcc\xa6\xd1?\xc6`\xfc\xa1R\xe1\xa3\xbfY\xfb\xe98\xd2\xfd{?}"\xab\xa2\xce\xb1,?\xf1\xf4\x13\x01\xe6\xef\xc8?KE\xccS\xebJ\xd5\xbf\x82\xcf\xdf\xd7\xd9\xb3\x9a\xbf\xa2@\x9a\xd6\x8a\xdd\xc1\xbf\xe7)\x9b\xed\xb3=\xb9\xbf\x95M\xec\xd4\x84s\x90?\x19Dl\xfb\x9e\x1e\xa3?\xb5\xf4TMD\xa2\x98\xbf\xb5!\xd3LCY\xb4? $\x9d12\xe3\xc7\xbf\xf5,\x98\x03\xb9r\xb2\xbfz\xce\xc3\xc5\x05\xc6\x88?\x93\xa5\xe4\xcc\xb0\xea\xcf\xbf,\x96\x8a\xa3\x1f\x84\xc5\xbf[\xb2l\x01\xac\xd8\x93\xbf\xc8\xab\xb9$XB\xb6\xbf\xcb\x08re6\x90\xc6\xbfGi1|\xcf\x9e\xb6\xbf\xd2)^{Qu\xb0\xbf\'\xa4DCkJ\xa7\xbf\x7f`\xdf\x95Fu\xca?G\x8a\x84\x8c"\xdd\xba?\x8d\xf7\x86)nW\xc0?\xfb.\xb3\x96\x02\x8a\xcb\xbf2R2\xbd\xc3$\xb2?\xa8\xf5`\xa0k\x0e\xb3?\x91\x9b\xc6\x8e\xe5\x7f\xa9\xbfv\xe3\xe5_\xf0\x8f\x86\xbf)\xb8\x87E\xd9L\xc4\xbf6\x06!\x84\xe6\xe1\x8d\xbf\xb6e/z\xa8:\xd2\xbf"\xa2\x14\xf2a~\x98\xbf\x14\xe75\xcf\xcf\xc7\xb9\xbf/J\xf7\xec\xf8)\xc3\xbf&\xfdI\xf8_3\xad?c-=?\xac\xcb\xcf\xbf\x937x*\\\xfd\x92\xbfJ\xec\x14\xab\xd7\xcb\xc2\xbf\xcf\x9b\xe6\xbf#\x1ep\xbf\xbc\x13.\x92\x9fL\x98?\xa6\x90\x8b\x8cp\xa0\xce\xbf\xee\xf7\xb5\xeb5\x0c\xc0?\x11h*V|K\xbc\xbf\x062\xefs\xeck\xb0\xbf\xb9X\xc14\x0f\x0c\xd0\xbf\xfcc\xf4\xef\x0c)\xa9\xbf\xa3\xb8"\xa6.J\xb5\xbfE{\xb5\xba\rB\xa0\xbf@-\x95\x9b\xba\xf7\xa8?\xd7\xebET\xfc\xcf\x92\xbfJ\x8cN\xcdvu\xa3?\x13W\x8b\xae\xd5N\xa9?L\xee%\x93\xd0\xf0u\xbf\xad\x15\xed\x89\xe7\xb0\xcc?\xd1\\|e/L\xdc\xbf\x8en\x06\xfa\x19M\xc7?0\xcb%\xf5\x9a)\xd2?\x8e\x0c\x0e\xe4\xeeE\xce?j.\xee\x1b;O\x94\xbfXV\xffvU\x04\xcc\xbf5\xb5s5\x1c\x9a\xaf?\xa2\xe25\xd2qy\xcf?q\xf0\x82\r\xed\xa9\xcd?\x04\xbenV\x94e\xd0\xbf2\x16\xdd\x90\x88\xfc\x90\xbf\x86\xf6\xa6\x98\x0f\x83A?\xe8\xb0\xe5\xa7\xc0\xc0\x91?vv\xa1B\xbd4\x98?\xe5\xe8\xec\xc1k\xca\xc1\xbflj\xc9-.M\x9a?\xb1\xd9\xa7]\xe4\n\xb9\xbf\x81\x03\xb6\xb8S\x1e\xb5\xbf$\xcda\xb9\x8eQ\xce?6\xcc\x1dJ\xc2\x8a\xcd?\xc1d\xae\xc7\x85\xde\xd9?h19lEF\xa7\xbf\xa0I*\x02\t!\xae?\xc4\xbc\xf1\xe15s\xa8?\xad\xd5\xea\xa8\xa3\xaa\xa4\xbf\r\xb3\xbe\xe7\xbf\x88\xc1?e+%i\x8b\xb5\xb3\xbf&\x1b\xb3S\x8e\xab\xd1\xbfJw\x89,`\xc5\xa3?\x03\xe9\x0f\x9eFv\xc3?\x9d2))\xf4\'\xa7?\xd2;\xe00\x1c\x8e\x91\xbf\xa6\xbe\x1e\n\r(\x9d\xbf\xf7\n-\x13\x1d\'\xb3\xbf\x04\x19l\x96\xae\x17\xa0?\xe4\x92\xcb\xd4\xc0\xdc\xd1?\x82\x0c\xcdJ\xd8}\x95\xbf\xfc\xb1\xcb\xaa\xd3\x9f\x90?\x9f?\x01Bk6\xc9\xbf\x110\x80\xa8\x14B\xb1\xbfz\x18\xd7\xe2\xd3s\xc0\xbfw\x98\x94b\x8d\x1bx?\xac"\x0b\xbf\x7f\xb4\xb0\xbf\x08n\x8ez\xedU\xd8\xbf:6\xbe\xc5\xa5\xbd\xab\xbfe=\xca\xb6n\x9a\xbe?\xc3\xc2\xa4\xccU%\xbe?V{U\xf5\xef\xea\xa2?2A~\xfa{\x93o?\xd8\xab\x18\x19F\xa1a?`c~\xcf\xb5H\xc1?\xf1\xd0^\xdd.L\xb6\xbf\x86n\x07Q\xa0V\xab?\xbc!\xf4x\xb7\xc0\xb4?\xbe?t\xc1$\x8c\xb0?\xe4\x87\xfe\xdb\xee\x94\x85?lR\xd0\xa8\xc4\xc8\x9a\xbf\xea]d_;\x1e\x7f?c\x19!,\x108\x8f?\xe2\xe3\x0c\xf2\x9d\x7f\xa4?>\xbb\xc1\xbd[zi?Y\xad~\xd1\x0b\xa9I\xbf\xe0.\xddi|\x8e\xb1\xbf\x04\x96\xc8\xa0\x97\xc8\xa7?\xf5\xfd\x92\\\xcc\xa3\xbb\xbf\x10*X\x96\x8a!\xac\xbf\xf6o\xee\n\xd1-\xae\xbfA`\xc8e\xe7\xaf\xb7\xbf\xc3\xa5C`"\x0e\xb0?Z\xba[\x94.\xbd\xc3\xbf\xb9\xc5\x9bT+,\xb4\xbfP\t\xbd\xac\n\xed\x90?G#u\xed\x9d\xb1\xc4\xbf\xd6AD}\xcf\xcfj\xbf\xea\x9c\xc9\xa7\xfe\xb1\xd2\xbfE\x95\x10\xe6\xc5;\xd7\xbf\x1c\x1a(\xc4\xbbC\x9e\xbf|P*\xb4\xb3_\xbd\xbfu\x06\xaf\xb5J.\x88?hsvB\x02\xc3d?\x03\x1c\x89A\xbb\t\x95?\xb4\xc0Z\xe4\xca\xbb\x89?\xe2F@I\xc6-\xc5\xbf!\x0cT0\x13H\xb4?\xff\x13R\x00\x90L\xac?\xd2c\x1c\x90\x84E\xbb?bqs\x94P\x8d\x97\xbf1\x81A*\n\x04\x92\xbf\x7f\t\x03Ox\x10\x88\xbf\xf0z\xc1~)\xb6\x98\xbf\xe9p7C\xd7}\xa9?\xeek\x8b\xd7\x19\xa4\xa4?M\xd9\x9c)\xf3O\xb0\xbf\xf3\x80p~\x88\x95\xb1\xbf8x\xc4\x07\xfd\x0b\xb9\xbfL\xa6\x05\xfc9\xd8\xa8\xbf\xa3\xdfD\x82y\xec\xd2\xbf\xb8\x02B\xa2\x83\xd1\xcd\xbfvv\xdc\x1e\xbdZ\xa6?\xdb\xd1\xfar-\xeaV?n\xb6\x81\xd9\xb7\xcc\xad?\xd0YR\xcd\xe0\xef\xb3\xbf\x9d\x81\xe1t\x8a\x8c\xbf??\xac\xbd\\\x8f\x91\xd3?%:7\x87\x98\x1f\xb2\xbf;as\xe4\x04\xc3\xa4\xbfW\xf7\xca\x12`\xdf\xc1?\xd2\x9c/n\x01L\xd1?\x89\xd9`\xbf\xb2\xcd\xa3?\x1c\x97^y\x81^\x9e?\xdf)x\xfa~\xd5\xc6?\xb2\x07Q\x94\x04\xc1\xc8?\xc4\\3\x1b\rn\x97?\xc7\xcdY\x0f3\xcc\xaa?W:4\xcfP\xd6\xaf\xbf\x0e\xf5HtA\x8d\xb0?62\xf7\xddlp\xb6\xbf\x85-\xdap\xc3\xed\x8e?<}`\x00\x160\xbd?\xdb\xfb\x97\xaf\tT\x81?\x7f\xfc~\x05\x93~\xc9\xbf\x18\xe9\xd6D@\xe8\xd3\xbf\x14\x9f6K\xc4}\x81\xbf?\xc7Q-\x04B\xa3\xbfQR\xff\xde\xad\xbe\x80?M\x02\xfak.\xc6\xb3\xbfV\xe1\xf7\x08\xe1\xee\xbb\xbf\xb9d\xf9\xb8\xdc\x04\xb5\xbf\xe1\xeb\x86s\\\x87\xbd\xbf\xf4^\xadZ4\xc4\x95\xbf\xd7\xc3\xd9\x9c\xfa \xc0?\xc8z\xa7\x9d\x96\x0f\xb2\xbf\x86)\x12\xd2\x06\x82\x9a\xbf\xbc\xaa\xbb_l\xb7j?\x04SwkN3\xc8\xbf\xb7i\x1f\'\xe0\xf3\xd2\xbf\xfe\x08\xf9\xa3\xe2\x04\xc1?\xfd\xd5\xa2x&\xecq\xbf^u\xd6\x06tE\xd7\xbfy\xeb\xe0\'\xbcl\xa2\xbf7\xee\xcb\xd7\x10\xe5\x91\xbf^d\xd5\x9eji\x8c\xbf\xda_\xd1\xb4\xab\x8e\xc6?\xf4[Z\x9b\x82\xc6\x83?\xc6t\xa8\xc8\xf54{\xbf\x83jV\xba\xe8-\x9c\xbf\xc9@\xa9\x94\x8e\xd3\xa6\xbf\xc6c\xe3\xff\x80s\x9a?\x96h\xa8\xc8\x89j\xd3\xbf\x07\x8d\xd5\xa1Z0\xb9\xbf\x7f\xef\x88-R\xfd\xb0?8\xb4\xe0i\xd8\x9b\xbc\xbf\x16\xba$\xb9\xe5r\xde\xbf\xe6\xa5\xb2\xe21\xa8\xc9\xbfG|y \x9b\x9b]?\xb7\xc6t\xfe\xa1\xce\xab\xbf\xa2\x94\x13\xb3\xc6N\xd0?C\x1a\xef\x0f\xb94\xbc\xbf\xac)\x83\x99\xe3\x13\x96\xbf\xfbd\x8b\x15\x1f\xd7x\xbfhR\xa4\x04\xedH\x91?@\xd7\xb4\xe0 K\x9c\xbf0\xc9c\xbf\xcfo\xa5\xbfd\xf2\x95XPD\x89?\xfep\\\xd8\x0f\xcd\xc2\xbf>\x17\xf0i|*\xb1\xbf\xb4TGm\xd05\xbf?u_k\x0f\xfa\\\xad?n\xff\xe0\xee\x05\x8d\x95\xbf\xd5\x9e\xf8\xa78r\xb6\xbf\t\x93C\xace9\x9d?e\xafK\xac"\xfa\xae\xbf\xb3\x82|\xba\rE\x90?\x91\xee\x1a\xcd\xa46\xa5?uz\x91<\xa0sm\xbf\xd0\xcb\xb7\xcb\xe0\xdbI\xbfG@\x92\xbbz&\x83\xbf\x8c\xe9\x87\xc4\xab\xc3\xbb\xbf\xf3\xf5\x16@\xe4:\xc2\xbf[\x82bt\x0b`\xbc\xbf-\x92\xdea\x9f\x8a\xa5\xbfy\x18Q\xf8\x14am\xbf\\|@\xf2L9\xa6\xbfk\x05D\xa5W\xb2\x96\xbf\x14\x83+\x14#Cl?\xc0J\x89\x18W\xf7\x9b?\xe1\xa0\xb6\xafa$S\xbfvZ\x9b\x0f=Y\xa2\xbf\x1aj\x03\xff%E\xbf\xbf\xad\x11\x95#gfb\xbf\xd4/\x8bC\xc8/\xa8\xbf\x7fKW\x9f\xf7\xc8}?\x81Po\x12\xbd\x07\xd9\xbf\x94\x8e\xb9\xe2\x80F\xcf\xbf\x95\xc7\xdb}\xd4\xc0\xbe?\x03K\\\x03\xc6\x86\xbb?\xca\xae~\xe3V\x91\xb4?\xfd\xf7`8\xd6U\xa5\xbfYM\xe3r\x8ep\xbb?\xe78\xc7\x81\x7fR\x89?\x18S\x11\x8f~\xd8\xae?W\xd9\xbew\xd9c\x9d\xbf`\xab<\xc4\xeb\x16\xb7?a\xcatx\x89\x88\xab?\x9d\xd1A\xea\x96-z\xbfB\xa3\xd6<\xf2\xbe\xba\xbfr\x12/\xbd!\xc8\xb0?\x90\xde\xa2=\x97V\xba?\xfe\xa67\xe0\xfe\x01\xbb\xbf{\x96Y\x86\xb1\x93\xb4\xbfU\xa6\n\xfa:\x13}\xbf\xed\x01OVv}\xb3?\xf6k#\xfb\x81\x18\xbb\xbf\xdd]%\x9fz\n\xb5\xbfl\x8f\xa7\xacX\x9di?\xd8\xb9&Np\x9fz?+B\xd1Dx \x91\xbfD\x95\xca\x8cr\x0c\xc1?}61<`\x97s\xbf\x8f\xd1\xad\xe9\xecC\xa5?|\x05\x82\xb7\x0b\x13\x97\xbf\x01z{\x07\xc5\xa1\xa9\xbfS\xb2\xb0\xe7ab\xaa?_\xbe\xe4\xf4\x96\xc3\x8d?\xd0!\x84\x17}\x80\xcf\xbf\xbe\xf6\xf4\x88\xbe\xf8\x93?\x04|\xf9\x1a\xb4X\x84?!\xf8\xba6Q\xf6\xaa\xbfp\xf5XH\xc2\xc3\xbf?\xac\xa53\xe3\xee\x00\xc7\xbfE=p\xb5\x05y\xd9\xbf\xff\x99\xc5\x8bw\xeb\xb7\xbf!R\xf6PR)\xc9\xbf\x98D\x11\x90\xb2a\xa4?\x8f\xe5\x0b\xb0\xe2\xbet?\x00\xc4Qq^\xdd\xa1\xbf\x95\xfc\x0f\x84\xd5\xaa\xae\xbf\xa4\x86\xd5\x90\xc1\x0b\xab?\xbeD5\xe3\x87\xb4\xd7\xbf\x19|MPo\xa5\xa2\xbf\xa2\x90\xe7\xd0\x83\xfb\xc8?\'6\xfe\\\x97\xa1\xb4\xbf\x003:\xb6\xa9\xdf\xa0\xbf\xc7IP\xdc\xd5\xce\x9f\xbf~\xfcGdS\x96q?\xaa\xab\x8b\xc3\xd1Z\xa7\xbf_\xff\x8a\xb3\x9f\xc1\xc9\xbfoG\x1f\x01\x94v\xbe\xbfl\xab\x01\x02H<{?\x8f\xb5D\xc2\xa9>b\xbf\xf0\x7fh\xd1\x9fQ\xa3?Z(\xfe_\xe0\xec{?\x9d\xa8\x8e9\xbd\xce\xbf\xbf\xe2it\xfaNN\xb4\xbf\xbc\x06;\xda\x1b{\xca\xbf\xfd\x0e\x08\xc1\r\xb7\xb6\xbf\x87 ?\x9d\xc7k\x9d\xbf?\x9b\xe7\xd0C\xc6\xb9\xbfNr\xa8\xab\x84xS?/-LRS|\x82\xbf\xeb\x1a\x11\xb3_\xe4v?\xd8\x0b\xc5\xb9\x847y?:\x8f^\xe9\x9f\xf2\xa8\xbf\xb3|<\xac0{\x8f?+}\xd2 \x1d\xa2\x96?{~\xf0\xf5\x16q\xac\xbf\xba\x02\x06\x9f\xebh\x9e?g4X\xd7\xa8\xa4\xb9\xbf<\xfd\x95\xb5E\xb6\xcc?\x05\xdb\x83\xfd\xdbf\xa2\xbf\xad"E\xa8\x8a\xd8q?\x90\x86\'\x94\xb5}t\xbf\xab\x93\x9d\xa9d\xc2t\xbfKc\xbf\xedgB\xa1?\xc2sT;\x9c\x0f\xa2?U\xcc0\x90 N\x9b?\x95v\xa5|\xe1I\xcc\xbf\xa5\x07u\x96\'\x84\xa5\xbf|\x9d\x9b\x11v+\xc1\xbf-\x91\x9a#\x9a\x19\xba\xbfI\x07\xed\xd3\x16\xcf\x8b\xbfwR\x07\xe0\x7f\x17\xb1\xbf\xf2)\n\xf7\xa0\xe5\xb0?\x1c=\xe4\xce\x190\xa3?g\xc5\xd1 \xfa\xb7\x98\xbfY\x98)`\x95\xa2\xb8\xbf\xf0uQU6Y\x91?;OE\xd3\xe3\x9a\x91\xbf\x93\x1b\x1c1\x96,\x83\xbf>n1F&\t\xa3\xbf\x08\x87\xcd\xabA\x16\xd1?\xb1J\x15\xcb\x92\xcf\xd0?6\x92\x0c\x86&\xa6\xa9\xbf>\xb3\xbf\xf5a\xc1\x8e\xbf\xa9\xde\xf5\xfa\x17\x05\xb0\xbf\x87\xfa-j&e\x9a\xbf\xee\xc8\x94h-d\xa5\xbf\x88\xab\xeb\x17\xaf\x87\x9a?\xc0\xf1t:[\t\xcc\xbf\x95$\xc1\xff\x05)\xb7\xbf\xaa\x90\x15\xa8\xb6\xd6\xa1\xbf\xd2\x1e\xb2\nW\x16\xa8\xbfi89\xa8]\xac\xaa?\x0e,w\x83\xbeA4\xbf\x9b\xde&\xc0>.{?\xddoVX/\xc6\xa6?\x11\x01A\xf7\xb4\xe9\xbc?zr\x01\xe23\x1a\xaf\xbf\x89g\x12\xc6\xae\xf1\x85\xbf_\xb9\xb28\xb1\xa0\xd0?\x9f@.\xc4rn\x9f\xbf]^\x9d\x97\x95J\xc8?\x15\xf6\xc3\x92\xe5"\xdd\xbfPQ\x15o\x91d\xb2\xbf&\x05\'N\xd3\x7f\x98?bW\x1e\x07!\xa4\xa9\xbf\x00o\xfe\xad\xc5Ys\xbf\x9d\xb1l;\xf9\xaf}\xbf\x8el~)\xfd\xe1d\xbf\xd3.\xd5\xc1b]\x8a?\x97,\xa9\xf9\x16\xf6\xcb\xbf\xec\xc2\xecj\\\xf5\xae\xbf\xd7\x92*3)G\x91\xbfiZ\xf7\x13\xe9\xe7u?k\x16\xac\x1b\xae\x8a\xc1\xbf]d;\xbb\x7f\xcb\xa9?_\x84\xe9\x94I\x1f\xa5\xbf\xd3\xbe\x0f?)_\x95?s/\xb6V(\xda\xaa\xbf\x1d\xb3#}\xaa\x9b\xc4\xbf\xf3\xe9\x83|\x0c\x9e\xc7?\x98\xa0\xddy\x1f\xb1\xcb?\xae\x83\xc5w\xf7\xef\x8f?\x8c[#\x11\xe8~\x99\xbfT\x1fORT\xcf\xd0\xbf\xed\xce\xe3==\xbd\xcc\xbfT\xfd\x92\xa5\xa5*u\xbf,]!Z\xdb\xa9\xb0\xbf\xd9\x01un\x80\xc4\x8e?\xb8\x84>\xd9;\x98\xa1\xbf<\x1fTXVa\x8b?n\xc9(m\xc4\x8e\x8f\xbf\xd8\x88\xe0x\xc4\xcdp\xbf\xb9\xd9\xe5\x84\xfcQ\xa6\xbf\xd7\x86U\xb6\xb6$y\xbf]!xF7\xf0q?Q\x08\xcd`\x97r\x9f\xbf\x02\xf9f\xfdiR\x8c\xbf\xc6\r\x8b\xb1`V\xb0\xbf:/\x86\x8d\xe1\xc4h\xbf\xb4\xbc\\\xf8\xad\x07\xc5\xbf\xb6\x91\xa4G\x9e\x12\xa3\xbf\x85{Y\xee\x91\xbc\x99\xbf\x83\x07z)>\xad\x97\xbf\n\xd8\xe7\xd92_\x85\xbf\xd7Wf\x9b\x8cY\xb1\xbf\x10\xfc\xe0\xff!\x18\x88?\x7f!N/\x06\x17H\xbf\xbe\x90&\xf3Q\xd0\xa2?\x99|p\xf2\xdd\xff\xa2?T\xde\xb6\x14n\xe4\xc6\xbfAS\xca\x845\x90\x9e\xbf\x9b\xb5\xf9)/Z\xac?\xcfz\xff:n\xfd\x98?\xbc\xad%X\xf0\xad\xa2\xbfv\xd6cj5\xbc\xa5\xbf;\xa1\xa6\xe2\xb6\x1e\xb9?|\xffi\xd2\xd6\x05\xb0?\xa0\x89\x8bq\x048\x94\xbf_\xf0+\xe3 \x94\xac?!\xc7\xbf\xe8i\x9c\xa9\xbf\xf7\x18vLe\x10\xb0\xbf\xc8\xd15\xfc\xf3\xdb\x9f\xbf\x03\x01B8K\x16\x93?l\x8a9($5A\xbf\x9ap[\x99?\x86\x95\xbfX\xfe\xb5\xe8-k\xbb\xbf\xfeLY\xed]1\xb3\xbf\xfa\x8b\xa8\xf5\xf4k\xb8\xbf&\xd2\x17\xa5\xf8\x15\x83\xbf\xc3\xa4\x96\xc8\xab\xf4\x85?v\x8e/\x1fB/p\xbf\x9c\xe7\xe7Qa\x9eP?\xd3\x83\x90\xa2(R\x91\xbf[\xb09j\x1d\xa67?M\x83\xa8\xda\x12\xe9`\xbf\xc0\x0b\xebJ-\xfa\x97\xbfF\xda\xe7)\x1b\xfa\xa8\xbf(\x86\xa8\xee\xc5T\x97\xbf\x1a\xddx$N\x96\x95?v@\x88\xef\xad4\xa4?\xa1\xcd,C\xf8\xaf\xad?\x82O\x8bP\x00_\x93?^\xee.\xe5\x84\x7f\xc0\xbf\xb0\xa6\x98\xe8\x87\xd3\x94?\xb4\xb2 \xe8\xbbef?\x8c\xb1v\x8d@\xa9\x85\xbf\x7fT\x03aH\x98w\xbf@\x87\x8a\x13\xf0;_?N\xdcZ\xb2D\xca\x82\xbf\xbc\rKA\xdc\xb3\xb2\xbfT\xd1\xc3\x8a\xd2\xc5\xa3\xbf\xb4{s\xe7\xf2o\xaa?\xa7\xd6\xaeZ\x89T\xb3?\xc8\x00\x93\x8d\xce\xea\xb7\xbf\xb6\xd5\x15\xd8\xfd\r\xb6\xbf\x83\x01\xb2\x03q)\xa7?\xe8\x88\xac}\xb3\xc5\xa3?Dv\x82\x18\xbb\xd7\xae\xbfj\xc9\xd2\x04\x17\x9a\xb9\xbf\xf3\x8eC\xc0\xdd>\xbc??\x86{\xab\x93\xd8\xc4\xbf\x9c\xae\xfdM\xf4\x95\x8e\xbf\xb4\xfc\x19#6\xc6\x9b\xbf\x11]\xaf^\xb67r\xbf\x07\xb8\xfb\xba\xc3]\xa2?\x0b\x95\xf5\xbc\x96\x81\xb1?\xd6\xf0\xe7d\xb0\x19\xb7?\x10\x89+G\x1e\xaf\xa2?\x14\x1fz5\xf0\xe6\x9c?\x11\xf6\xd9\xc4\xef\x81\x81\xbf*\x05\xa2\xd0\n:r\xbfT4\x1d\x83\xc2\xb9\xa0?R\x9eUqA\xd7\xa4\xbf\x07\xf2*\xdf\xcca\x97?\x01\x15\xe7$\x06%\xa1\xbf\x18\x86\xd7\xe06fm\xbfB\xb7\xbd\xc4\x1e\xfd\x9c\xbf,H\xbcF\x9a\xb4\x9f\xbfG[\xba=J\xb7\xb4\xbfK\xf8\x9c\x93(\x85\xb3\xbfy.\xa2\xd8\x8a\xf3\xa7?H\xd0\x05\x88\x83\x8f\x99?1\x8d\xe0\x84\x8f\x1d\xb2?^e\xd5lR\x15x\xbf\xec\xd0\xa6\xf6\x92\x14\x94\xbf\xb3y\x8e\xc6;\x0e\xc8\xbfo\x8f\xda\x91~\x11\xbf?\xc2j\x95\xc5\xdf\xc7\xae\xbfmV\xe2\xa0C\x08\xc5\xbf\xcdH\x904\xe7\xd9\x96?\xe5\xf2I?T\xba\xc0\xbf\x18\xda!\xc3\xe8]N\xbf\xf3d\xd3\xa1\x96\xcc`\xbf\xa1\x8b\xbfs\x08\x1a\x9e\xbf\xbf/\xb9!\xff\xb7\x9a\xbf]V\x9d\xe9\x14N\x86\xbf~\xdcX\xaeD\xd6\x91\xbfc>\x86>\x0est\xbf0\x10\xfb\x89\xe4\x89t?\xd7\xb8ph]\xb9\x95\xbf\x1e.\xaaH8H\x89\xbf#\xbb\xd9.u\xf4\xa9?*)\xf6\xb1N\xcf\xd0\xbf\r\x92\x0b;\xd1\xcd\xb4\xbf2\xaf\xa6\x07\rD\xad\xbf\'tw\x85\x0e\x1c\xce\xbf\xeaN\x02\x89\xadm\xbe?\xf4C\nLu\xecv?\xa9\xaf\xcd\xb2\x90\x87\x94?\xdc\xa1\x8dm\xd3\x9c\x8a?2\xa4\xf7\xbcF5r\xbf\xe7\\\xbfY\x12\xd7\x8d?\xb3\xed%\x97\xa9\r\x98?TbX^A\xf8\xbb\xbfO\xdf\xdd\x06\xffu\xaa\xbf\xc6\x9013\x85$\x8e?\xa4,\x06\xc8\xa4\x87\xc4\xbf\x93\x9fkr\xe8p\x8b?\xde\xe4+\x0b8\xbe\xa6?\xfb4P\x1b\xc2\xc1{?z\xbehgR\xa5\x90?\x97\xa52\x8d\x9b&{?q\x9e\xef\x9c\xfaf\xa4?p\x16\xd4D\x83\xc5\x8e\xbf\xfb\xd8\x98\xd6\xa3\xdf\x9d\xbfS\xcac\xc3\xa9?\xa3?#|\x12\xb8M\xe3\x95\xbfm\xf1\xec}a\x12\xb2?.\x96\x05\xa1q5\x90\xbfo\xb3\xea\x8fV\xff\xa5\xbf\xd0a\xe4x\x8d\x1e\x96?\x99\x8d\xc0\x0c\x89\xa3\x90?{\x89\xc8\xaf\r\xa2\xa4\xbf\xc8\xa3\xff\x8b\xcb\xc7\xb9\xbf\xcaD\x14\x0fut\xb1\xbfF\x07\xce\x05\\\x9b\x94\xbf\x10\xcf\xfb\xdd\x9a\x1f\x89\xbf\xe1\xfa\x8a\xea\xa5\xec\x96\xbfB\xc8\x86Ul\xce{\xbf\xd3d\x85\xfczN\xa2?\t\xc08\xb7P\x97\xa5?\x001\x94\x04\x8a\xfc\xa3\xbf\xae\xb2+G\xae\xa3\xa4\xbf"~\xef\x8d\xfb\xbc\xb0?\xe6\xae\xa9$\xc6\xb0\x86?\xcd\xbeU\xe4\xdc)\x84?\\\xe8\xf7{=bD\xbf\x01\xa5?\x9bF\xf8\x83\xbf\xf1?3\nOy\xb8\xbf\x17\xca\xce3AD\xaf\xbf\x10\xcb\x12\x8c\xeb\xc3i\xbf\x8e8Q\x94}\xb6{?\xc3\x90\x86\xe9K\x89f\xbf\xed\xdb,G\x9ev\xb6?\x8b\xa3\x01b\x19\r\xa4\xbf\x94\x96\x97E\x1d1\xa8\xbf\t\xf7r\x1f\xf5\xaf\xab\xbfB\x85\xa6\xe9\x8e\x82\xc4?"\x9c\x1d\xbaNM\xb5?{4\xd3\x03)\xca\x9c\xbf\xa4\xd5N\xb9\xc79\xb2?\x97!\x8d\xa5h\xf8\x80\xbf\x0e"k\x9cS\x1f\x8b?\xd2\x01\xc3D\xcc\xc7\x84?D\xba\xfaH\x1ed\x91\xbf\xec \x9d\x8a.\xb4D\xbfQ\xb8\x17t\xff\xf6\x95\xbf\xb0\xf9\x9a\x87\xd5I\xbb\xbf>\x1f\xe0\xb7\xcf\xdc\xa0?\xf8pU\x06\xcd\x07\xa1\xbf%]\xffZ\t\xeb\xc8\xbf,0\x91x\xd3y\x91\xbf\x0b#!R\xb8\xb7\x93\xbfBXg\xb4\xeb\xc2X\xbf5\x01\xb1\xdf)\xc1\x81?\x91\xf7\xf6\x18O\xcc\xd5\xbfI\x8a\'\xa6\xa0\xfe\xdc\xbf\x95\x1e\xaa/\xceB\xc2\xbf\xfb\x0f\xa5\x02S\xc8\xa9\xbfr\x9f6\xc87ms?\xd6\xc0\x9a716\x9e\xbf\x8c\xd3\xc7\xd8\x1fZ\xc2?\xde?\xa2\xdb\xe2u\xa4\xbfDX\x1c\x0c\xc9\xf9\xd0\xbf\xb9\xae<\xc2\x08\xe9\xce\xbf\xbf\xca&W\xb4\xe1}?\xdd\xb0x\x1a\xa4!\x8e?\x98\xfc\xc5\xa6\xf5\xc3\xc2\xbf\xe4\x13\xea\x92=\x07\xc9\xbf\x07\x8e9\tt%\xc4\xbf6\x0b\x14\x8a\x1a\xc8\xba\xbf\x9aV\xa9|D\xd2\xad\xbf\xff\xcb\x11b\x9a\xe2\xb5\xbf,H\n\xc4\x11`m\xbfK\xe8\xae\xf1\x07\x93\x89?\x8f"P\xbb\xcdP\xa6?\xd5\x86\xd8)\x12l\x81\xbf\x1f\xfb\xde%\x1d\x1f\xd1\xbfS\x8b\xbd\xa2]\xa4\xd0\xbf\x92\x0c\xeb\x9d\x9a\xfaW?uj\x0eX\xd7\xc9\x7f\xbf\x81fA\xae\x14\xef\xa7\xbf\xc8d\xa5|Ui\xc1?ji$\x7f*\xe2\xdf\xbf\x81\xbayi\x84\xdd\xbc\xbfL\xdci\xf6\xd1\x1e\xac?\x1b\x17\x8f\xf1l\x8b\xb5\xbfm\xdc\xfd\xc8z\xb0\xd9?\t5W|H\xe2\xd6\xbf\xd9w\xa5F\xef|\xcd\xbfd\x91^\x82o>\x9a\xbfL\xbd\x8b~\xb3\xf0\x7f\xbf\x92\xca\x89}\xec\xa0\xb5\xbf[\x9c\x11\x95(\xe2\xc9\xbf>\xf3\x9f\xaf\xf1\xfa\xb3\xbf\x8a\t\x0bJ=\x0b\xb7?\xe1\xee\x83\xbf\x95\x07\xa8?\x81\xb1a\x95\x9e\xa2\xd6\xbf\x19^\x1f\xf2\xd0\x7f\xcd?\x03\xe9\xabk\xe6\xb9\xcb\xbf\xad\xd1\xa1T\xad\xe8\xd8\xbfv\x16\x1d\xf5\xfd\x17\xac\xbf\x1f\x9bVu\xe2\x8f\xc3?\x7fC\xd0t.\x1c\x96?\xe3\xea\n~iL\x9e\xbf+C\x92_J\xd2\xa2?\x95\x9b\x87\x9bl\xf7\xc8\xbf \xda/\xa6\x8a\xeb\x81\xbf"O\xe3\xa9\xf3\x0f\xc3\xbf?\x15\xcf\xe5\x18\xb5\xd9\xbfG\xe5U\xd3\xfc7\xc9\xbf:=A\x072\xb0\x8e?\x98\x14\xbf\x19\xf8F\xdb?w\xe2\xd5c\xb2\xe3\x95?/x\xcd9\na\x85\xbfQ\xffl\xdf\x1e\x85\xc6\xbf\xf7\xbc[\x06;\xb7\xd4?\xc8gNx\xcc$\xab\xbfQ-\x90M\xfe\xa7\x93?\x83\xfb\xb9"\x1a\x92\xb8\xbf\xbbhX9\xc3\x04\xda\xbf\xd8\xe4u\xa7\xfdF\xc3\xbf\x07\xa8V\x0e\xe2\x13\x92\xbf\xd4\x04\x16n\xfer\xaf?_\x8an\x8a\xc3\x9e\xb4\xbfsu\xc1\x94\xd6\x86\xa2?/\xcb\x92\xda\xd8\xcbx\xbf\xed\xce\x00\xfe\x92\x90\xcc\xbf\x8awjy\x120\xc4\xbfl\x138\x01\x87t\xd2?TY\xb9-s\r\xd3\xbf!\xa2\x01>\xf5V\xc5\xbfo\x84\xd6\xcf\x07\xea\x83?\xbaC\x92\x82\xb3\xfc\xcc\xbf\xd8\xe5D\x1c@\x06\xbb?\xc1\x8d\xa1\xd5\xaf\xf8\xb8\xbf\x1cI+\xae%v\xb5?\x97E\xf8\xc9\xa60\xca\xbf\x02\x8a\xf2\xbe\xeeI\xb1?8V<\x87?h\xa1?\x8b\xdb\x0f\xc7\x05\x9b|\xbf\xe6\xda\xea\x9aG\xac\x9b\xbfA7e\xb21\x07\x93\xbf|\x1b\xc2\x94\x07&\xb4?\x1fp\xae\xf8wc\xb1?_\xd3\x98\xfdPM\xb5\xbf\xb8T\xf2\xf4Og\xc8\xbf\x94Hj\x0b\xc0;\xdf?U\xb2>t\xbf\x8d\xc9?\x9f<m\xaa\xab\x00\xc9?\x9c2\x8f\x94\x0f\xf9\xc1\xbfiU\xd8,\xb1)u\xbfPdJ,1\xeb\xa6?;\x89W\xcc\x85\x81\xc2?\x04\xacm\xaa\xe5\xf0w?\xe4\xf1i\xe6\xd5\xc3\xb6?p\x0f\xf1)kk\xbb\xbf\x9f\xf2Q\\\x9b\x96\xc3?\xfd\xa6\x1b;\x8b\xe9\xcb\xbf\xd2\xf2z\xe2\xbfY\xc4\xbf/\xb0<\x81/\xa2\xc0?\xbe\x8c\xdf[\xf0\xb8\xa4?Zbx=H\xed\xad?V\xb4\xe5\x10\xeas\xc2\xbf\xef8\xa4\xc4\x14\xdaE?\x89\xb0\x19\x91@\xee\xa2?\xbc\x82u\xcc\xb6>\x90?\xb0\xc0^\xe5\xec\xe4\xa9?R\x84\x89\x9b\xa3\x0c\xb3\xbf\xfdb\xa8"\xcf\x1f\xc4\xbf\x00U\xc3>\x14\x94\xa7\xbfP\x8b\x83\xcc\x03t\xd3\xbf\xcb\xd6_L}^\xd0\xbf\r\xc8\xe6\x87,\xef\x99\xbf\x9eP6\xa53\x0c\x86?\x15;\xaf\xe7E\xd0h??\xcdw&7\xb9\xc9?O&\x1f\x08"\x1b~?1\x18\x0eF\xca\x9dp\xbfY\xa1\x8e=f#\xd3\xbf}\x06M>\xc0\xfd\xc8\xbfi\xd8i\xe9X\xc4\xb1\xbf\x90\xc33\xc3=]\x98\xbf\xb8b\xb1;;\xea}?\xd9\x973*\x11\xb4n?\x02\x1d[\xff\xb0M\xa8\xbf\x06\xd5]\x97k\xa8z\xbf\x0fJ4\xc3H\x8d\x85?\xfe+\x9f\xadOY\x82\xbf{4\xcd\x06\x8dK\x81\xbf\xcb\xc3K\t8\x1b\x80\xbf\xbd\xcc\xd9`\xd6K\x9d\xbfAH\x99\x1c\xb9\xbe\x9e?\x93@\x8fh\xd1\x0e\x9a?\xfac\xab?H\xcc\xb4\xbfk}\x17\xbc\x08n\xb1?\xfc\xe82\xc0l\xdc\xb3?\xf6\xf3\x81\xc8\x8d\xf0\x8b\xbfTK\xda\xa0\xfed\xbd?\xae\xdds\xcaEJ\x98?\xa0\xd4\x99\x83JI\xa0?lZ7\xff\x02m\xdb?\x83C+\xf1\x9a\x90\xd0\xbf\xb4Y\xd8\xadx\x96\xd1\xbfVck\xfe3\x05\xcd?\xe43\xa7\xa60\xee\xa4\xbf\x924I\xed~\r\xbb\xbf\x81\x90\x05Q2\x84\xb5?]@\xa1\x04\x08\x17j?Mv\xf7\xd0VR\xc8\xbf\x13\xb5o\x87k\x80\xa4\xbf\x13\x9e\xb8U@\xa4\xd1\xbf\xd6\x14\x8c*B[\xae?\x8a\xd0\x82w+<\xb0\xbf\x10\xeax\xdc\xe1\xe8\xc2?\xeb\x89a\x17\x95\xd7\x80\xbf\x8c#\x1c<\x8a\x01\x8e?\x10\xaf\x10\xf3\x9b`]?\x86\xd0\xa4\xd1\xbf\x8a\x8e\xbf\xf2\xbc\xf4\x82\x1b\x14\xb3?y\xb7\xcb\xfb\x1et\xc0\xbf1|}\xf4LO\xb9?\x8b\x91\xa10Tm\x98\xbf\xa1\x85+\r\xff\xc4\x99\xbf\xbc\xec\xe3\xa9\x01\xf8\x81\xbf\xe2\xae]2\x13\xdb\xb2?\xde\xa0\xf7\x02A\xfc\xaa?\xb9^\xd4\xc2\x18"\xaf\xbf`\xf9\xd0\xcf\xf9\xfe\xb2\xbf\xbeaM\x0f\xcf\xb0\xbf\xbfiz"\xe2,\'\xc6\xbfQ}1\xfa\x84\xe5\xc8?\x8db3\xae\xe6\xa1\xcd?\xdd}\xa8\xea#8\xac?e9eIK[\xc1?\x12o\xcci\x18\x8f\xa2?}S\xeb\x00\xe1\xc0\xd6\xbf\xf1D\xd7nU2\xc1?H\xe1\xc2\x04\xc7\x13\xb7?\xd7\x1a\x92\xb1[\x80\xab?>\xcc\xdc\x04\x89N\xca?2}\xa0\xf0\xb4K\xa3?\x98\xb1\x00\xd7.\xa6\xa8?\x0e\x0eV\xe9\x92w\xb6\xbf\x0c\xf6\xca\xea\x1f\'\x9e\xbf\x1b\x18\xbb[\xd5\x84\xcd?&Fa\xc4F\'\xd2\xbf6\xda\x1f9\x0f\xe1~?^{g\xee\xd7s\xb1?\xa4+\xf0\xec\xca\xd8q?\xe9\xe9z}f\xac\x8d?iz\xfe\xb8\xc3\xf3\x9a\xbf\xd8\xd7h\xc8\x126\xa0\xbfG\xd77\\\x98>\xb1\xbf)\xfb\x9cn1n\xb7\xbf\x008\xf2\xf7\xf6\xae\xac\xbft\x83H\xc3\xef\x04\xae\xbf\xd4\xbd\x1a\x11\xa4\xf9\xe1\xbf\r\x94\x94\x9f_$\xc2\xbf\xc41f&\x9c\x03\xb5?\x86\xce\x90\xfeJ\xef\x88?0\x06e1\xf9~\x9f?\x85\x86\xbc\xa3\x87\x0c\xa6?\x10\xcf\xa9\xd5\x96\xce\xce\xbf3!\xc7d+\xf8\xad\xbf\xa0_\xc1\x96T\x98\xba\xbfT6\xb3\xdck\xf5\xb2\xbf\r\x12\x95\x0c\x0c\xd6G\xbf\xbd\x12b\x8b\x83\xaa\xb5\xbf\xce\x850\xa3\xb8\xc9\xb2?\xd7\xbf\xc5\x04d\xae\x96?\xe2\xa4\x85R)\x93\xae?\x8a(\x91\x80{\xb7\xb9?\x92\xd6\x0e?\x1c\xbcL\xbf\xacz\x1c\xa0\xe4\xc8\x8b\xbf\x00\xc1\xab\xff\x93$\xa0\xbf\'\x1c\xa7\x04c\xb4}\xbf:\x93Rf\xf2\xc5\xc2\xbf<\xb1\x00\xa8D\xdb\xb0\xbf\xb2\x9dH\x87\x92X\xc0\xbf\xde\x9d\xf7Y\xcd\x13\xc2\xbfr\xdabK|[\xc2\xbf\xe0\x8e\x90r0\xca\xb6\xbf\x0bZ\x85\xa6t\x07\x95\xbf\xe6\xbd\xdaE\x92r\xa8\xbf\xf6\x88\xb6\xc1b\xa0\xbd?\xf3x\xf9\x0f\xb8\xcf\xcc\xbf\t\xb7\xee\xe6\xf2o\x9c\xbfp\x9a\x8cm\xb8\xa8\xaf?\xa4=_|\x86\xe2\xc4?\xc7Ck\xee\x91\x8f\xce\xbf#\xfe\x13X?\xcd\x94\xbf\xd7\xf0/\x16\xd0\xe2\xb2\xbf\xcdWf\x90\xda\x1f\xd3\xbf\xa6\xd0\xfc\x87\x88^\x86?jA>\x00o\x94\xbe?{\x9bo&U\xa2\xa3?@\xd4\x81~\x1e\xd0\xae?j3=\x88\xe8\x14\xa2?k\x9c\\\x80P\x19\xb2\xbf\xa1\x8b\x1cu\x0f\t\xa0\xbf!x[9\xf0\xcb\x9f?\x00\xde\xee\x84y\t\x99\xbf\xcd\xe9\xf6\xd5\xaa\xc9\xa9?\xe3R\x0b\x13\xfd\xb8\x92?+\xf4\x04xzS\x85?\x07\xe8\xbd\xe3\xb2\x96\xa4\xbf\x0c\xe8\x90\x9e@\xe5\xca\xbf\xe9\x85z\xab\x8d\xc9\xc1\xbf\x06a\t,\xcc\xe2\xa2\xbfbcU\xe2\x8a\xbf\x8c\xbf\xed\xbd\x89\xfdo-{\xbf\x1bJ\xaf\x8eN\x8fw?\xf3{=K\xd2\x08\x92?a\xc6\xdc\x81\x95\xf0h?j|\xa8t\xeb\x1d\x88?$R\x00\x95\xbd\xe3\xa4\xbf+C\xe7\xa1\xc6\xab\xc7?\x87S\xd2\x00\x93M\xd1\xbf\x9aQN\xf173\x99\xbf\x8d\xf4\xac\x15B\x9b\x89\xbf=\xd9\xd8iB\xa3\xd4\xbf\x84\x0b\xfb-\x9d\x16\xd2\xbf\xd4\x80\xf2\xe4\xba\xaa\xa1?\xe4\x8f9\xaek2\xb9?\xc2\xf8\x19\xd3\xf0h\xcf\xbfn\x17=7\xf3\x8a\xa6?/W\x16HF\xff\xb1\xbf\xb0\xfe\xa30p\x01\xa7\xbf\x89\x91\x00\xc7\x8c\x84\xa9?*&{\x97\x19E\xb6?\xfd\x1d:\xd3E\x10\xc0?\x9c\xac\xe0ua\x85\x9f?\x822\x9c\x7fk\xeez?\xaf\xf8\xba\xb0\x9b\xe0\xb0?\xd7($.\xb0<\xbd?W\xb2t<+\xd6\x9b?\xd1\xdeI`K\xdf\x87?O9\x93\xcbb\xbc\xb2?u\xeaW\xca\xc0\x82\xaf\xbf\xa9\xdd\xbb\xc9\xe3\xaa\xb3\xbf_v^\x04\xe5\x01\xb3\xbf\x0eW0\x12\xbaz\xbd\xbf\x1f\xaa\xa9\xcd\x02\xc2\xb2?6\xb4\x03x\x86\x99\x82\xbf\xe9P\xa3\xa7n[\xb7?[4\x05\x0e~\xde\xa3?H\xca\x95\x0bO\x1f\x90\xbf\x8a\xffI\xb7X4\xae?\xfdw$\xd4\x0c\x80q?|d\xa9\xacnp|\xbf?\xe1\xc6\x9d\n\xe7\xb9?4\x1d\x91\x1f\x1f\xc5\xbd?\xb5\xac\x1c\x97io\xac?\x8f\x83\xaf\x8c\x8el\xc0\xbf\x1cA)&]\xd0r?\x11\n\xfa\xa2W\xe3\x81?c\x91\xe7u\x00s\xbd?\xc7 \xc5MO\xcb\xc0?\x16\x87a\xc2i\x9e\xad?&a\x14\xecg\x9b\x81\xbf~/t\x85^\xbe\xcf\xbf\xad\x84%\xdc7\xae\xb0?\xf8\x15\xd7\x99\x1c\x7f\xa2?\xea\xac\x9d\x8aMU\xa6\xbf\xef\rU:#\xf4^\xbf\xe71\xe3\x0c\r\xc3\xa4\xbf\xa9\x80XYc5\xad\xbf3b_\x9a!P\xb5?\xbe1\n\x99\xdf\xb7\xb6?\x99\xa4\xe9\xf6q\x12\x9c\xbf\xe4+\xcd\t\x93\xb9\x9f?T\x83z`4\x92\xa6\xbf\xac\xc8\xfd\xaf=\xb9s?\x7f5J\x8f%2\xa1\xbf\x14\x01\x7fb\xd5\x13\xc9?t\xe6\xef\x98\xcdp\xdf\xbfk-c\x9ew\xear\xbf\xcf\xc0\xc9\xd5\xad\x9d:\xbf!0L\x07>_\x86\xbf\xc8\x0c\xbc\x88\xd2\x01\xa0\xbf\xe2S\x87\xc0\xedU\xae?f\tF\xf6\xd0(\xb0\xbf\x97\x7fT\x96[\xc1\xbd\xbf\xe88\x9bc\xca~\xc7\xbf\xc9\xb8\xee\xf8\xbd\x9bi\xbf\xad\xc4)\xee\x8b\xc1\xb8\xbf\x8e\xbf8\x04\x18:\xa4?N\xb1\xca\xc2\xdb\xeb_\xbf\xc2\xf5\xde\x19\x1a<r\xbf6\x0bv\xa8\xaf\x88v?ma\x8dw\x8e5\xa1?ZP\x9aj7\xe1\xa9\xbf\xcf\xc2c\xaf\xbf\xd3\xd0\xbf\x03s\xa0\x8d\xe7\x14\xc3?\x82\xeb\xd9d\x86\xc9\x95\xbfc\xcd\x07\xe4{\xbe\xc3\xbf\xc5>z\x02\x18\x92_\xbf\xbc=\xc5\xea3J\xb8?#sc\xf5\xcf\xb4\x87?_\xa4g-o\xbd\x92?T\x93\xd8\xb7"\xd0\x9b?V\xce\x06\xabWB\xb8\xbfLQv\xa8]\xc4\x8f\xbf\xa8\x18\xfc\x19\x81\x02\x91\xbf\x7f\xf7\xe9:%G\xc2\xbf\x19\x9edQD\x8f\xa2\xbf+\xf3\xc6m\xcc1\xc3?\x89\t^\xe3\x95!\xd3\xbf0\xf7\x9a\x1c/\x19\xb0\xbf\xd5\x082\x1a\xa9)\xa1\xbf\x1d\x86\t\xcdw\xb1\x87\xbfxq\x9e\xd5k\x0f\x92?G>\x86\xcbq\x8f\x9a\xbf\xd9\xbe\x8f\x0b\x91I\x89\xbfJw+\x0b(t\x81\xbf\x90\xa5\xf4\xadp\xec\x8a\xbfQ\xae\xa7\x0c!K\x90\xbf\xe1\xaa\xba\xfc\xbd\xd1m\xbf\x01)\xc7\xa5RA\xab\xbf\xbe,$K\r\x19\xd2?\x0c\xef\xb4f~$\xcb\xbf\xcf*\x13\xdeMw\xd8\xbf\x8a\xce#N\xec\x81\xb6\xbfh\x9b\xde\x8d\x1dm\xa2\xbf\x0b\xbfDc\x87\x96\x9e\xbf\xe3\x16y\xdc\xdc1\x8f?\x9a\xa5{\x84c\x8d\xbf?I\xc7\x91\x11\xe0\xdb\x9e?\xd8\xa7\n\x06\xcc\xbc\x9d\xbf\xe6>\xce\x94RQ\xb0?\xe0\x02\xa7z7\x9a\x87?\x16\xb3B\x7f\xdb\xba\xa3?\xcb\x04i_#z\xb2\xbf\xc0\xdb\x8d%c\xe1\xa5\xbf.\x94Y\xfd\x98#\xb4?\x87\xe3\x0f\xcf\xc7\xbf\xb6\xbf\xa6\xb7\xe8^p\x9b\xbf?\xf62\x00\x02\xb4_\xa9?\xdb\xba`\x838W\xc3\xbfiN\xa6E\x80\xcd\xc4\xbfg\xc5|/R\xb3\xd8\xbf\x1f\xdb\x0f\xa7\xb0Y\xe4\xbf\x1c\xfd_\xb3\x870\x98\xbf,\t\x9dgE\xf7\xb8?\x18\xfe\x07\xde,\xc1\xb3?\r\xac\xd5KN\xfe\xb6?\xde4\x00\xac\xbd\x84y?\xdb4\xdbgJ\xa3\x82\xbf\x0f\xf8\x85\xeb\xdd\xba\xb6\xbf\xf5\x1f\xd5\xd7\xf4+\xa4\xbf\x10l_<\xb6\xf9\x97\xbf1\xd8\x8c\x19X\xc4\x90\xbf~\x9a\x9dg1J\xab\xbf\x83\x1a\x8a\xde:\x05\x91\xbfW8\x82M$7m\xbf\xf9\x89\xb4gFi\x9e?\x85\\}*I\x10\xc0\xbf\xfdW\xba\xd8\xdf\xd7\xc5\xbfdC\xb5\xf9\xbc1\x9a\xbf\xd2<\xb0\ryL\x8e?\xbe\xd4c\xc4>\xc8\x91?\x940\xc7\xb2\x8c\x8b\x99\xbf\x7fE\x8f\xe6\r=\xc2\xbf\x14j\xb1\x07)\xe6\xc1\xbf\xb1\x1b\x9e,\x7fZ\xb0\xbf\x92"#\x8bH\xb9\xb1\xbf\xf4k\xac\x90\xd8t\xb3\xbfv\x89\xee\x95\x9bg\x81?\xf9\xe6\xcd\x02\xb9\xfcb?~\xce8\x05\x1d7\xa0?\xac\x06\x16\xb4\xf0\x15\xa2?\xd7\x8b\x0e\x15\x8cY`?\xd9\xc0K;\xdb\xecI\xbf\xbe$\xac\xb7\xe5\xeb\x98\xbf\x1f\x9c\x9d\xab\xbd\xe7\x9b\xbf\x01\x89zHa\r\x8f\xbf,V\xde\xe0\xfcZ\xa6\xbf\x058\xca\x1e\x9aM\xb4\xbfK\xd64\xcd\xcb+\xb7\xbf\xd2\r\x915`\x8d\xb9\xbf\xdaH\x89\xe4\xc3)\x8a?XWV%\xb1\xe6\xb7\xbf`\xd3\xca\x9c-\x85\x80?\xea\xaa\xa2S\xa65\x82\xbf\xe6\xa0\xdd\x0e\xac\x85\xa2?Q\xd6\x8c\x08\x1eu\xae?\x0c\xb1R.w\x9a\x91?\xea\xb7\xb5-\x8d\x9e\x9c?\xd7h\x19U\xfbZ\xc4\xbf1\xed\xab\x83\xed\x8a\xb0\xbfI\x1e\xf8\x02\rB\x97?\xc9\x88\x1b^\xef\xed\x90?\xe2\x16\x9c\x91\xb3\xda\x9f\xbf\x1a\xe5=\xb3~n\xaa\xbfQ\x0c`d\xca\xb6\xa7?3\xa0\xf4{\xdbF\xa2?\xbc\xcf\xc9\xc4\x9a\xaf\xb0?!\x9cgRC\xf6\xb6?\xeb\xb3\xe6\xc1Y\xecw\xbfW\x010\xf0\xcd\xa0s\xbf\xb5\xba\xa8\xc0\xffFq?\x89\xf5\xef/\xc9~\x99?q\x8d\x82\xda#\x18\x83?\xb2H0\xea\xedQn?\xd4LER!\xff\xbf\xbf< }\x88cd\xb7\xbf\x9eZz\x9f*\xf4\xb6\xbf\x9bld\xd3j\xb3\xc6\xbf}\x18:l:\xb7\x90?\x9d\n\x93\xce\xa5\x85t?\x8ek\xdf;r\xdb\x85?\x04\xbf|\xb5\x83\xf9\x95\xbfRwG_D\x93\x88\xbf\xfd(\xd6\xa3\xf4t\x85\xbf<\xee\xbf\xbcZ\xbe\xa3\xbf8\x96\x93\xe9g\xc8\xa0\xbf\xdc{\x8b\xeaE\x7f\xbe\xbf\xa7RO\xe1R\xa5\xc8\xbf\x91N\xcb\xb6\xa0\x04\x93?\x15=\xa9z\x96?~?1\xb7\xe0\x81\x1d\x92\xa1?\\\x87{\r\xebfj\xbfW@\xa6\xb6\xac\x96\x80\xbf\xfcg\xc4:Rs\x9b\xbf9~=\x0c\xeb\xb6f?\xe5<\xc4,\x0e\x07\x95?\x16\xee\xf4mU\xfa\x98?\xaa{\xcd\xc1\x0c\xde\x82?\xa1\x7f\'\xect\xf2}?\xab\t\xcb\x04\xa0\xfbv?\xc4\x8c\x1d\xf0\xfd\xeb\xa4\xbf\xe7\xd1\xb8\x92\xbc%\x92\xbf\xa7\xb5\x98\x14\xa3l\xa3\xbf\xf8\x14\xe3*p\x13\xb7\xbfa\xc9\xe5\xcd\xdc\xd7\xaa?\xc6\x8a\x07\xc9\xb7\x15\xb5?\xcf#e\x00\x9e\xaa\x88\xbf^*\xe3fl\xf1\xa8\xbfN\x95\xb6\xcd"\xee\xc5?\xd4\xed\x82\x1b\xa0w\xc8\xbf\x9bZ\x14~\xb6\xa1\xa4\xbf\xaeN\xa8o3\x0e\x9f\xbf\xb5\xa2|(x\xc5\x95\xbf\xab\xd9\xabq\x7f}T?\xc4\xa1\x94\x86\xb9\xec\xaa?\x15\x9c\xb7\x0c\xf0\x05\xa5?\xde\x91z)\xf9\xf4|?\xed\x91e@\xece\x88?\x00\xc1\xd6\xa8.\xba\x8b?;\x9cY9\xec6\x8d?\xc1\x93B"\x99_|\xbf\x1f1\xfe\xc4\x90\x0be\xbf\xf9h\xe4gd\x85\xaa?\x9e>|\x9fD:\x96\xbf$\xdaG\xcf\xb5\xc0\x9c?\x1e\x95\xe9\xd9>\xf4\x90?5\x07\xb5A\x04Y\x96?-z\xce\xa2\xa4\xe7\xa1?\xc4\xba\xfe?\x8ac\x8b\xbf\xbc\xe0HE!d\xb4?Hz+\xe7\x89\x86\xb3?\xa1\xc55\xa0C\x00\xb4?\xa2\xd5\xc5\x01\xb4\x91l\xbf\xa9\x12\x15b\x14\xa6g\xbf%\xbbVt"L\xd0\xbfz\xf1\x0c\x9f\x8d\xf9\xce?\xfe^\x7fR(\x05\xbb\xbfj\xf7*\x97\xa8\x07\xcb\xbfj2W\xc6.\xcd\x7f\xbf\x19-\rb\xab\xba\xb5\xbfc\t\xfb\\\xa8mQ?Mt+\x00\xd8\xcdJ\xbf\x90\xba\xa3]\xe1\xec\xa3\xbf\x03\xb3\t\xc4<\xb8\xa5\xbf\x9f\xfa\x0bv\xaf\xfc\xab\xbf\xb5\xe8\xc2}7\x19\xa7\xbfV\x1b?\xc4\xa5i\x91?\xd6\x0e1\xdd\xe8Z\x84?\xd75>\xa9I:\x8e\xbfr\x9c}\xdc\xffj\x81\xbf\xa2\r\x92\xf0\x87\x13\x82\xbf\xb1\xb8\xd2\xc1~"\xc1\xbf\xa1\xdb\xc1\xbe\x18.\xa0\xbf\xf7f\xf5\x83[=\x96?<+}\xbb\xaf\xb3\xc6\xbf\xcba\x9d\xfc\xbcX\x9d?\xef\x1c\xa5\xc1\x8e\x01\x8d\xbf\xa6\x81\\\xd4?,\x9d\xbf\xc9\xec\xe5\x8f\xf0\x14\x90?\xda\x96}\xf4.Gm\xbf\x82\xfd\xcbe\x8e\xfac?J\x01\x0f\xbem+\x9d?\xb2G\x0c\x0fd\x02\xb2\xbf\xa2\x92UzxT\xaa?\x1a\xbd\x85\x07\x03\xd6\xb9\xbf\xca*>\xe3\x8c_q?\xf8\xaa\xbb\x03\xeeZ\x8a?!\xbf/\x8a\xff;\xa9?\xe8\x1c/\x04:\xfa~\xbf\xd9h\x0eEfeh?+\xab\xd1\x16\xe2 \x89\xbf\x0fu\x93\xbe\xf0)\x9f\xbf\x0f\xcb\x91\xf5E\xe0\xa2\xbf%r\xca[Xj\x8c\xbf\x04+7K\x8c\x99\xb2?\x8a\xc7)\xd1\xc8\xe2\x9d?$\x95\xf4\xf0P\xd4M?\x97\xae%\xeb\x86\xba\xb4\xbf\xd48\xd7\xc1\xacJ\x8b?\xd2q\x0e\xdcf\xe8\x9c?G\x8f`\xd5\x0f\xb2\xa9?\xd5\xad3\xaf\xc9\xc4\x91?\xe0q\xf2\x1b\xbc\x13\x90\xbf\xb7\xa8\xc7p\x87\'f\xbf\xd8\xa4:\x89\xba1\x98\xbf\x82\xd8\x87f\xd8\xda\x93\xbf\x03\xfe\x95z\xe1`\x96\xbf\xea\xabOfLR\x9a\xbf\xcd\xe9\x0fQt\x9b\x85?\x16A\xe6q`\xb1t?\xa1\x86\x1bJ\x95\xe5\x86?\xf3\xb2f\xb2\xbf:\x88\xbf\x01\xf4\x90\xbeY\xec\xa9?p\x03\xb7\xf7oX\xa0?^\xdf\xd2!\x0f\xf4j\xbf\x889\xc5ycX\x9e?\xfbh\xe7\xc7ap\xa6\xbfK\x8e\x18N\xcc\xec\xc0\xbf\x7f&\xfdC+[\x85?\x8b\xb0/\xd5\x82tr\xbf/M\xcc\x92\xd0\x0b\x86?\xb1\r\x19\x0fp\xcc\x8d\xbf\x1e\x8e\x0c#\xc1\xe2B\xbf\x8e\xb9\nTd\xc7\xa7\xbfs\x10\x83T$m\x88\xbf0\xb9\xaa\x13\x7f\xf9g?^~\xb0\xdb\xdc\x8a\xc9?\x7f\x9e\xa8\nuU\xbc?\x19\xe5[\xe2_\xe8\xa7\xbfIa\x8d\xd8M\xf7\xad\xbf\x7f\n\xd7\xef\x7f\x1e\xa5\xbfbm\\\x8c\xba\x83u\xbf\xa2\xd6\x8e\xe2\x07\xc3\x98?\xa4x\x89\x93\xcd\xc9\x8a?`\xaa\x05\xec\x9f\x99K?<\x1c"+\x9a\x13v?\xe1S\x1a\xc4\xeb\xe1\xb0?\xe4\x0cc\x8b}\xd9\x87?2\x81\xb0m\x9dwq\xbf\xc1\xc9^\x93\x8fD\xa1\xbf\xaaQJ-i\xf2\x9d\xbf\xe1>\xe5*\x17\x0cC\xbf\xa5\xd0G?\xbe\xd7\xaa?Wc\xdeq\xb9\xd7\x8f\xbf\xf5i\xf11\x8dp\xc7\xbfX\x9b\x993\xbaG\xd5\xbf\xefu\xe5\x13\xdd\xe0\xc5\xbft\x7f\xcf\x0b\xe4~\xb4\xbf\xaa\x1e{\x0e=v\xb2?\xbd+gT\xb1\x0c\xac?8N\xda\xb0CS\xa5\xbf\xa2\x90\xee\xdd\xcc\xc4\xae?\x0f\x99\xb1\xcfd\xa4\xb6\xbfV\xf3R\xb8\x11\xf2\xbe\xbf0\x0c\xed\xa2\x7f\x9d\x91\xbf\xc1\xfbL\n1/\x89\xbf\xec~\x7fL\x7f\xa9\xa5\xbf@\xd1\xe7\x14\x84\xdc\xc1\xbf\xbd(\xdf\xeba\x9d\xc2\xbf\xa0\xdbM*\xb7\x0e\x96\xbf\xec\xcd7\xba|\xcc\xdc?\x01b\xbcE&x\xac?{n\xbeh\xeeZ\x96\xbf\xf8t\xf4+B`\x98\xbf\x0f\xe6\xa6\x10kP\xa7\xbf\xe6\xad\x1f\xa2K\xfd\xb2?>\x05\x04\xa6\xd6g\xb6\xbf\\\x81\xdaX\x11\x07\xc8\xbf\x91@\xc6\xe7\x11\xbd\xc6\xbfg\xef\x1bo\\\xa2\xa9\xbf\xbb\xd9\xcfE\xfaZ\x9e\xbf\xd3{\x91\xbd\xc27\xb1?v\xde\x8a\xe5\x14x\xc5?<\x889\x95\xb1\x19\xb2\xbf\xbe\x01\xfe\xc5\xc3\xbc\xc3?g\x15\xcb\xcc\xf6\xed\xb3?\xb4\xb5\x11I.\xf4\xca?\x11\x00\xe0\n\x07D\xb9\xbf+l\x1d\xaa\x0c\xf9\xb1\xbfXnN$\x1bk\xc1\xbf\x8b\t?\xde~&\xd6\xbf\xbdZ\xe0?\xa2)\xc9\xbf_}\xf5\xe7\xf4t\xc5\xbf\x08\xcb\x9e\xd5\xa1U\x9b?I\x98w\x9a\xe2\xad\xb6?H\xbe8&L\x89\x8f?z&\xb5\x04\xd5\xc8\xc0\xbf\x99\x9a\xe7O.\xde\xd1?@y\xc4\xa7\xc9"\xc4\xbf\x08=HYk\xf4\xc6\xbf\xf9\x8f\xd9\xf9\xea\n\x89\xbf\xc9vp\xff\xf4\x8b\xaa?\xd9U\xb6\xf6\x83\xb2\xbe\xbf\xff"2F\x1f\xaa\xab?V\x80\x961\xec4\xe2\xbf\xcf\xc7\x93_)\x8b\xdd?\x0e\x91\xe1\xd4n\x88\xa5\xbf\x7f\xed\xf7\x13P\xa0\x92\xbf&\x1f\x1c`\x18\xa9\xb8?\xde#@\xb1M\x86\xc8\xbfFv\x96\x1d\xb6\xa2\xb4?\xff\x1fl6\xc6\x14\xc2?\xd0\xbc\x12mJ\xd7\x94?\x8c\x034\x92\xdcY[\xbf\xae\xd77\x88\x8d\x1f\xc0?\x9e\xad\xd0\xdbL\xc8\xc5\xbf?\'\n\xf4?\xc6\xb6\xbfX\r;\xa8\xeb\xdb\xc0\xbf\x01\xb6\xe2Kj(\xc0?\x86l\xf5\x1e\x17\x1c\xc7\xbf\xc8\x11\xff\x0fL~\xa5?\x1b/\xd2\x7fW\xce\x97?v\x9f\x14\xc5l\r\x98?\xa2;\x8a2\xb1\xd4\x88\xbf\xe3\xf9\xe7\x10\xf2(\xa6?H\xc3\xa6]j\xa4\xa0?\xb7\x1f\xcc\x88a\xa8\xa6\xbf#;\x01\xb2G\x9ez?\xee:\x8a\xfb\xac\x08\xc8\xbf\xc1\xa0v+8\x86\xa3?4B\xe6\xcf\x80\xc7\xc0\xbf\x84\xef\x8f^\xd6\x13\xb3\xbf\xbe\x1b\x8b \x10\xc5\xae\xbfg\xd2lF9\xf6\xa3\xbf\xff\xe2\xeeQ\x19\x8c\xa8?5Op\xd8\xb9\x8f\xcf?1*U\xf8u[\xc2\xbf\x0e\xa9\x02\xf3\xa4i\xa1\xbf\xa2\x86Y\x16\x05\xe9a\xbf\xc2YI\xbb\xc0\xe4|?2\xf2=/>\xdf\xb6\xbf\xfb\xdb\xca \x9bX\xa3\xbfv\xf6\xe7Mjp\xc1\xbf\x99\x08N\xeeo\xd7\xb8\xbf4\'\x96\xf6]\xdb\xbc\xbf\x01c\xecwK"\xdc?\x04\xbd\x08\x9fA\x8a\xd0?\x17\x1f"\x19^y\xc0?\xa3\xca\xe8\xab4\xbc\x85\xbfQ\xc8u#\xf4\x9b\x93?\xea\x1c\xde\xa9\xc2\xe9\xa3?\x94\x93ya\x0fE\x95?\x04\xee\x8c\xaa\xbde\xb9?\xb3\xb5\x9az@\xae\xb3?4\x95\xd0<C\x1d\xba?\xc0\xd5"c\x9e\x1f\xb0?f\x8f;\xb3\xd6P\xbe?Q\x10\xea\xe5+9\xbf?\xc8\x98\xd4;\xd0\x89\xc0\xbf\xfd\x96\xd6A)\n\x9f\xbfo\xb1\xfd1\xedL\x84\xbf\x02]\x18>\xc8\xcd\xb1?\xcdv\x88\xc214\x9f?AH\xe1\xf4\xbe\xd2~?e\x99#\x07\xcf\xd2e?\x0b\'\x9fa\xbdz}?\rg\x9cJxh\xc7\xbf\x1c\x8e\xc1X\r\xa7\xb7\xbf\x04\x99\xfd,",\xc2\xbfl\xa92\xd9\'\xe5\xb7\xbfYK\t!L\xdf\xc8\xbf\x7f\xe9\x1d\xfc\x18J\xc6\xbfC\x0cK\xfe\x15iu\xbf\x10\xd0GRPA\xb5\xbf\x05\x88\x93vuv\xbb\xbf\\K\xaf\xc6\xb9\xb6\xcc\xbf\xce3x\x8e\x80\\x?>\xbe{\xf3ex\x88?\x18\xc80\xb6TW\xcd\xbf\xcd\x81\xc34\xae\x81\xda\xbf"\xe2\xef4@n\x9c\xbf\xf8\x04\x0c\xd8\x87B\x80\xbf\xc9\x88\xa4\xca_}\x83?\x8a\x80qd\x06\x91\xab\xbfz\xfbxF\n\xd1\xa1\xbf\x0f\xcb\xfeX\x0f\xc6\x90\xbf\xa8\xe0\x9b\x13\xd8\x8cV?\x91`cp\x06x\xa5?8\x80\xd93E\xb6\x92\xbf\xfe8I\x04\xdb\xb8|\xbf\xb9\x95\x04G;e\xb0\xbf\xc9\xa9\xdc\xbf\xca|\xb0?8T\x1b/\xad5\xb7\xbf\x19\xed\x96ag\x0f\xc3\xbf6m\xcd\xab\xa9+\x86\xbf\x08\xad\x1bMCt\xb0?\xbc&,k\xf2)\xb7?<>:}v\xe2\x8e\xbfyg(\n#\x9e\xbb\xbfY\xc9\x1b!\xb6\xca\xc0\xbf\xaaD\x8d\x9d\x9d\x0e\xd6?=\\\xda\x1d%\x95\xd6\xbf\xc57\x8a\x9e\xb8\xbb\xd3\xbfv\r{-\xe7\x8b\xb4?\x05nE\xa8>\x7f\xa8\xbfY2\x0b\x06\xe7\x82\xa6\xbfc\xf8\x8a@u1\xa0\xbfKq\xc46\r\x05\x92?\xb6\x0b\xb5\xb4\x91Y\xa0?\xbf,\xbc\x1eY\xe1\xae?p\xba"\xf0Sx\xd7\xbf7\xc4\x97\x9ds\x9c\xd2?\x8c\xcf\xe8\xa8\x9c\x83\xa5\xbf\xb9\xc6\xa6\x1d\x0c\xe1\xb5?jr\xb4!i\xe3\x81?\xe9\x8e%\xf4YN\x87\xbf\xed\xbf9qt\xb6}\xbf\xccf\xef[\x02%\x88\xbf5e=\xb9\xc5\x97\x9b?d\t\xca\x17\xf8\x94\x9f?\xee1\xc2\xb9\xeb\x8c\xb1\xbf\xbf\xc4\r\xf81\x04\xb0\xbf\x8c\x8d\xc6\x13g\xab\xb3\xbf\xebL\xc9q{\xb9\x9e\xbfl\xdb\x94\xb0\xa5\xa2\xb3?\x840\x087<D\xa1?\x89\xaai\xae\xbc\xc6\xb1\xbf\x80\x04*\x9f\xd8X\xa8\xbf\x82M\xbbF\x9e\xaf\x9e?\x93\xdf\x19\xd4\xa2`k\xbf\xf7\xde?i\x97\x1b\xc5\xbf61\xc4Sn\xe9\x87?\xc0G\xa88P\xf9\xae\xbf[\xd8\x13B!\x16\x91\xbf\xc5\xe9\xd6\xd1\x95\x8f\xc9\xbf\xd5e\x8f\x02C\x9c\xe3?\xb4\x18\xe1\xc0\xa06\xa9?\xe0\xa0\xe1\xc5\xac$\xa9?3&c\xfao\xca\xc4?\x19zQ\xeb\x1c\x88\xba?PP\xd5\xcf\x04\x8c\x9e?\x82-\xbb\xa0h\xec\xa2\xbf\xba\x83\xe45\xb3%\xa6?|\xbb\xadT\xccl\xb7\xbf\x96\xe0\x999\t\xf5\xc8?y\xe4\xe2\xaft\xd1\xb3\xbf\xfah%\xdc\xa1\xe5\x89\xbf\xd3I\xfd\xe8\x94\x84\x84\xbf\xa2kE\x05\xc3:\xb7\xbf>\xa7&\xad\xcb\xe7\xda\xbf\xbd\x82\x8c\xffA\xb2\x93\xbf\xa3\x0cq\xee\xaf\x02\x8c\xbf]\xc1\xcf\xd4\xddU\xb6?\xe9\xd8\x9d\x06+\x13\xa7\xbf\xf6\x04?\xb0M\'\xad?\x91\xf2M\x9b\xdc\r\x9c\xbf\xe2\xc4\n\x08"\xae\xc3?\x89\xed\xe0\xa3\x93\x12\xcd\xbf\xbc\xb7\xd6\xfb\x85C\xc0?\xacI\xde\x8d\xa1\x11\x9d\xbf\x7f>\xec\x86\x12\xb2\x85?=\r\xa7kjJ\x86\xbf\x1dm\xd0G\xfd^\xa9?\xb2\xec=\xb5\xc5\xd0\xc4\xbf\x98\xb6#-\xb8Z\xb1\xbf\xb9\xf6\x1b\xa7I\xba\xaf\xbf/\x00\xf7\xdbKwR\xbf\xa4\xf8\xc0]\xbb\xa1\xbb\xbf\x95\xbdzF\xad:\x9d?<=G\x15K]\x9d?i\xa3\x8b\xec\x13s\x91\xbfu\xeb\x8f\x91\xdf\xa0\xa7?>\xa0\xb6\xf6\x9c\xfc\x91?A\x8eH\xe7\xc9h\x84\xbf\xb9\xb5\x8b\xe7eM\xba\xbf\xa7]\x9a\xf7\x98\xd3P?\x88\x8e\xfb|g1\x97\xbf\x10\xady\xad\xf0\xc7\xc5\xbf\x0b(\xbc\x92\xcd\x90\xc8\xbf \x96(\x95a\x9b\xb1\xbf=`\x8dN/\x9a\xd0\xbf^\xfa\x86\x1a\x0c{\x91?G2\xef8\xdbV\xb0?\xe1[\xa3\xc6\xb0\x15m?\xab\xc4\xea\xd5\x8ap\x97?\x13\xdb\x00\x7fc3\x9d\xbfb4\x1f]?A\x88\xbf\x93\\\xf7\xfa\xbfp\x90\xbf*\x18\xc6\xf4\x87\xe5\xd6\xbf\x9bo\xb0?>w\xa3?\x90\x14\xd1\xf4\xf5\'\x80?\xe8/\x80\xde\xf3\x97\xb0?)>\x9e\x04\xb8R\xc8\xbf2\x1e\xf6\xcd\xea\xe1\xc5\xbf\xe0{*-\xf2\x91\xae?Z\x82\x01f\xd6\xa3\xb0?B\xdd\xd3q]\xc6\xa0\xbf\x15F\xfb%\xca\xe0\xa3\xbf\xe9>@e\x0e\x91\xb9\xbf\xee\xe8I\xe2o\xbfq\xbf\x11pm\xaa\xa3\xae\xa2?\xfer\\|^\x94\x9e\xbf\xda\x12\xbbY\x11\x99\xa1\xbf\x87\xd1\x18(\x86\xaa\xb5?M\x81\x13\xf8\xae \x91\xbf\x7fp%g70s\xbfA6":\x82t\xd1\xbfCU\x90\xac\x0f\xfd\xc3\xbf\xf6\xef(\xd3/\xaa\xa7\xbf\xaf\x91\x8a\xbd\xca\x83\x93?T\xfc\xa8 T\x05\x9e\xbf\\\xc6\xef\x9b\x97Pp\xbf\xae\xf5\x19\xc7q\xc3\\\xbf\xd4\xcc\xd3\x84\xd8kb\xbf\x1e\t\xa8K\xbf\x14\x92\xbf\x0fm\xed\x8a\x8f|\x96?N\xad\xc3i\xbf\x1e\x9b\xbf\xa9Q\x92,i|\xbb?.0\xd0\xd8\xa4\xc6\x91?\xdfX\xca\xba\x0e\xb1\xae\xbfRr\xa6\xe8Y\xd6\xbd?\xf9\xcf\xf5<\xeb\x11\xd9\xbfF\x07d\x7f\x01(\xba?\xea\t\xc7~\x8f\xe4\xad?\xe8!\xe9\xcaf=\xd3\xbf0\x06Dw\xdfT\xb8\xbf?\x0f\x14b\xd5{\xc5\xbf\xc1H5\xc02\xd4\x91?i\x10\x07w\x11F\xa4\xbf\xf9m\xef\xa2\xd8t\xb0?&\xd4\xc3"G\xa5\xbb?\x92c.\x0e\x85\xd1\xc1?\xd2\n\xe9W\x8c\x9e\x94\xbfP\x8dk\xe9\xb3\xf5\xa2?\xd6\xdeJ6\x81\xf9\xba?!\x0f\x1ct^H\xa9\xbf\xb7\x7f/\xae\xc1\xd1\xb4\xbf\xc0\x9c\xf6nZ\xc1\xaf\xbf\xa0\xf9\xd7F\x83\xec\xa6?\xfb\xd2\x96\x8a\x9dJ\x99?\xb6\x9b8Xn\x98\xa5?\n3\x00@\xd4B\xa7\xbf\xc2\x7f\x893\xa5\xc3\xa6?+-\xda\xe22R\xb0?\xb6r||TVu\xbf\n\xaaU\xc0\xc5Q\xac?\x89\xa2\xd5*\xcc\x8c\xa7?l\xab\x84\x85\n/\x80\xbfn\xc3D\xb9v\x9b\x94\xbf\xe3x\xeeu?7y?\x91\xe7\x8f\xacv\xc4\xc4\xbf\xff\xe6\xeb@Bn\xa5\xbfe%\xbe)\xcbT\xa7\xbf/n\x1b\x1a(\xc3\x84?m\xbcX\x1a\xb6\xf3\x85?\x9e<Is\xd3\xca\xa4?D1\x87\xf6E\x9c\x95\xbf\xc5gP\xealc\xab?u\xb6\x12"\xc0\xfa\xbe\xbf\xd9\x98\x98\xc7\xb7]\xc0\xbf1\x0f\xed\xe0\xdd\x82\xa2?\xcdc\xea\'\xa8\x9b\xd1\xbf~Z\xdc\tu\xdfz?\xd5\x17\xf4H\xe6\rP\xbf=\xa6\xd5\xa4!\xe4\x98?\xf8\xd0\xf3g\xdc4\xac?\xddk\xb8\xa26\xf2\xaf\xbf\x05\x1a\xb3>\xbd\xe8\xd2\xbf\\\xbdY\xfc\x16\x16\xd5\xbf|\xf4\'\xea&\xf4\xc9?\xfa\xfc\xb0\xa0(\xe1\x9f\xbf\x19G(d6\xc4\x8f\xbf{.R\xd1Q`\x84?\x04\xf6\'n\xc67\xa7?<\xc8\x1b\x0f(O\xa9?\xc4\xa8B\xae\x0f\xf6\x89?\xccv\xd3p\xea\xcb\x90\xbf5\x83\xdc,\xfeY\x80\xbf.\xb6:_\x98IR?\xffMH\xd6f\xa6p\xbf\xcf25k0^\xc0?\xfe*\xf3K\xd3=\x9b?\x9c\xcd\x85c\xfd\xf9\xb4\xbf\xb0\xc1\x95\xa5\xd4W\xc8\xbfl\xdf\xbc7\x9d\x9f\x84?:X\xdd\xa5Q\xab\x9b?^6\xde/H\x1ey\xbf6\xc6\xed*P\x11r?v;\x02\xc5\xd5Rx\xbf<\xefR\xcd\xf3A[\xbf\xcc\xb5\xe2\x9f\xff!\xa7?\xb6\xd3|\x1f@\xe6t\xbf\xf3\xfdD\xa3j\x0b\x9e?"\xe7\xb8F<\xb7\xbc?\xb6\xd5[7\xcb\xa8\xbd\xbf<\tX\xe6\x03\x87\xa1\xbf\x17&Z\xe3\x90\xd3\x85?\xf3\x83H\xc3\xa8\x17\x93?\x0b\x08\xf5b\xe0\xdb\xa4?\x87Kr\x1c.\x96i\xbf\xf9\xdax\xec\xda&\x8e?\xac\x86\xde\x99s \xa2?\xbb&\x87F\xb8\x1f\xad?F!p\xfbTp\xa4?Y\xde&\xb1\xda\xad\xd6\xbfZ\x85\xfaSk\xa2\xc7\xbf\n\x807\x7f\x9d\xae\xbd?\xa1\xe2/\xcf\x06\xa8\xba\xbf\xe0\x89\x02-\xc3F\x9b?\x10\x95\xdf\xab\xa0\xac\xa2\xbf\xd4\x1f\xa7BP\n\x90?\xf0\x1f\'\xf0\x9f\x00f?%\xab\xf5p\xbdd\xc1?\xb3\xb3UQYK\x85?\xae\xbc\xc0\tv7\x94\xbf\xd2\xb6\x88\xdd\x0bZ\x8b\xbf6\tr\xacs\x96\xf7\xbe\xe0\x168\x16w\xd1\x93\xbfw}\xde\xbdO\xa2\xac\xbf\xb0\x0e\x8aOP\xf0\x9f?\xf3\r\xa1\xd2\x94I\x9d?\x9c\xb0\xfc!y\x89\xd3\xbf\xfa\xb6\xb5?\x0c@\xcd\xbf\x97\x12O\xec\xf5)\xb3\xbf\xd1\xf4\xd3\xc5+"\x9b?B\xce\xfe\xbe6\xe6\x94?\x9c\xa9\x03o\xce\xf2\xc3?\xbda\xb5\xe0\x04\xa3\xa4?\xdd{\xa5\xc5\xe9N]\xbf\x84\xf4\x0f$\xc82\xab?\x98eOhk;\x8d?\xa6!\x8ag1\x1c\x8a\xbfH\x85\x07\xc3\x9b_\xc0?x\xc5\x12M\xefg\x92\xbf\x0b\x84\xd3\xd03<\x8a\xbf+\x9b^t\xa5\x90\x82\xbf8W\xf0\xc9x\x9c\xc3?>\x93\x8b\xf2\xf4H\xba?>.\xb0!\x90\x1c\xaa\xbf\x80EX&\xa8\xe5\xca\xbfA\xc3\xeb\xc0\xcaM\xa5?\xe8\xb1\xb5}3\xe9\xb0\xbf\x86\xe5oE\x9d"\xb3\xbf9}p\xc2\x8d\xd1\xb2?\x8f\xe7\xd9c\x0b\x0f\xa6\xbf\x0b>#\x12\xa2\xfc\x9e?\xe8xk\xb6\xd5\x1e!?\xcbJ\xd7\xe2+\xff\x82?]\x9b\x114c\xaf\xab\xbf\x00\x1b\x1f#\xd1\x12`\xbf\x15\x01\xc5\xf1\xa9f\x9d\xbfwS`\x8e\x1a\x04\xa0\xbf\xdbM^\xea\x11\xf5\xb3\xbf\\\xady\x0f`B\xa8?\xff2\xb9\xe7\xa2\xa3p\xbf\x99\xe5\x1f\xa4{6\x9d?\xf7\xb4\xc6\xaf\xda\x13\xc0\xbf\x85n6\xab\xb71\xc2\xbf;\xb7\xbd\x1e\xa55\x82\xbf\xeb\r\xec\xaa\xedD\x96?R\xef\xe50C-\xa3\xbf\xf7\xff\x96\x01o\x9e\xa4\xbf:V\xf5\x11\xd5\x9a\xc3\xbf\xff\x8cB\x1e\xb8?\xb8\xbf\xec\x1a\xb8\xd4\x9c\x0e\xa8\xbf;\x9e\xeb\xcf\xc9\xe3\xa1\xbfnP\xa9\xf3,\xd3\x85\xbf\x13K\xf5\xc6\xc0\x0e\x9c\xbfGq\xe0\x86k9\x90?B4\xbc\xb1n}\x86?\xf6\xfc-y\xdf\xa5\xa1?C\xd88\x85\xfc\x15\x91?\xc8t\x9a\xe7\xa4ki?\x80\xffEs\x87\x16j\xbfp.\xbc\xb09\xdc\x99\xbf\x9e\x19\x91~\xdc\xf7\x8f?\xc7<\xa6=g\xc3\x98\xbf\xcd(Z]\x03\xa4\xb1\xbf.N\x0b\x89\xf8V\xbc\xbfh\x882\x9f>#\xae\xbfu\xbe\x15\x8b\xe8\x0bW?\xf0Q\xc6gv\xd3\x95\xbf\\PT\x05\x83a}?nN\x0b-L\x92\x9b\xbf\x1d\x801v"\x86\xb6?\xfc\xd8\x06\xe1\xb1\x94\xb0?A\xffO\xa8\xcd}\x9d\xbf.,>\xae\x0b\x7f\x82\xbf\xc4\xef%>6\xc8\xbd\xbf\xb3\x1d\x86\xd1\xdc\xf5\x94\xbf\xb4\xbd\xcdp\xeeR\x8f?\xf7p\xcc\xed\x8c\x1c\x93\xbf\x7f\x9cS\xae\xa6\x9a\x98\xbf\'\xb7\x03t\x02\xb2\xa8\xbf)Gbj\xaa1\xaa?\xf3m\xd6X\x1cX\xa0?\x0eJ\xd5\xb0\x0f\x19\x9a?\x82\xa2\x8b\xe0\x0b\xf5\x96?-\x19$\x19-#\xa4?\xab1}\xac\x84W\xa9?5\xd9>\xaa \xc9\x96?\xdc"\xe7\xa0)p\x90?\xe9\xefa\x1b\x85\x83\x83?\x88U$\x17S\x0e\x98?\xe1\xb3\xf6\xbdGE\x9f\xbf=\xfd\xa9xsHz\xbf \xad\t \xd5\x82\xbc\xbf:2\xdb\xd7\x80\xcf\xb6\xbfe\xdb4K\xa0\x83\x81?\xba\x1a\x05\xa61g\x97\xbf\xb0\xaf.\xfb\x87\x9b\x80\xbf}\x8fW/\xdb\xcc\x97\xbfY\x03\n\x97\xe3M\x87\xbf\x90\xda\xc1 Z\xc4\x96\xbf\xa0F\xb5\n\xad\xc5\x94\xbf\x84 \xff<H\x86\xa0\xbfV\xcb\xd0}\xf6K\xa7\xbf\x0fV(\xb08\x8e\xa5\xbf>\xdb\x947\x11i\x81\xbf\x9c\xce\x02\t\x9e\x94I?\x1fC\xb0\xb2F\x91\x99?\'\xaa\xb19\xed\xd5\xa4\xbf\xb9ubkW\xe9\x9a?`\x0b\xbf\xfc\xcd\x95o\xbf\xd85\xde{\xa9\x15\x93?\xf6\xa4\xf7\x9f\xa8\xdb\x7f?r\x0b \x89\x19\xcc\x83?!\xef\xd1\xfa\x8dy\x92?\x05x\x1d\xb0\x9e\x8d\x8f\xbf\x10\xca\xfdN\xf2\xf4i\xbf{\x19\x97j\xcaXr?9\x9a\xac\xe0LJw\xbf=\xbeD\xe02\xab\x99\xbf\xdc\x93\x05\x9a\xf6\xe2\xa8\xbf\n,6\x94\xb4\xa0\xab?\x13\xc9jR\xeeb\xa6?\xa2a=%@\xd2\x93\xbfp\x98\x12\x9d9V\xab\xbf\xd5\x1b\x988j\xd7\xc5?&\\\x1c\x18%\x88\xbf\xbf,uJ\x94\x06\xbd\x91\xbf\xe4O\xf6o\xa8\xd5\xa3\xbfu#\xbf\xa7N{\x9e\xbf\xc4<\xd9\x0c\xb9\xae\x95?\x12\xed\xcc\xefR\x92\x8e?\xca\xd4\xa1\x87\xa3\x0c\xa0?\xc9f\x01\xa6\x8b\'z?~S"\x84\xa8\xe3\x8f?+@\xa4\x90\n\t\x82\xbf\x173\x05f\x95\xf9\x80\xbf\xc9\xda\xcd\x12\x92\n\x96?A\xedr\x0b\xac\xa9d?b\x7f\x9ab\xe8\x04\x96?\xb3\x01\x7f\xcd\x02\xfb\xa0\xbf2\xdfu\xb8\xff+\x93?\x92\x7f\x04\x07\xba\xb4\x97?\xc0>k\x8c\xd6b\x8f?\xb3\x8a\x83.\xb5\x9c\x94?\xfc\xff,\xaf\x02\xf9\x9b\xbf\x14\x83\x14\xc9\xe0\xce\xb2?\x01\x8d\xb0\xe1\x84y\x97?\xca \xc1\xb9\xca\xc0\xa0?Ra\xc4\xeb\x1aUq\xbf\xd6\xdb%\x80\xbe\x1a\x87\xbf}\x86\x0e/_J\xc3\xbf\x0b\x12\xfd\xca\x88\xef\xc8?\xb8\x99rH\xb0~\xba\xbf\xf6\x85\x0eR#/\xc3\xbf\x87\xc0\xe1\xb9oV\x95\xbf\xba\xaf\xc7F\xbd\xd3\xc0\xbfD\'\xd2!d\x96\x85?\xc3\xf5\xfa\n\x97\xe0\x92?\x94"\xfa\xf3i \x8a\xbf\xfc\xfd\xf9\xbb\xd6\x13o?b\x16\xac\xb7\xfc\x91\x95?\xa7\xc9d\xa3aa\x9d?\xc5k0+(k\x93?\x15\x19`2\x002\x90?G;\xaf\xd4f\x8d\xa2?\x07M0\x89B\\\x96?\x84\x11\xffrG\'\xaa?\x1a2\xaf\xd1\x9b\xb0\xc0\xbfs]\xa6uV\xdf\xa0\xbf\x7f\xb6\xa3\x1b\x81u\xa5?\xc6lxh\xaeC\xc1\xbft\x10\xd6\xa5r\xed\xb0?\xb6\x042\x13/U\x89\xbf_J\xf0f\xed\x91i\xbf@B~\x1c\x07.\x97?\xd8\xf0\xb2N\xe4\x80\x94?\xb4i;\x03\x810\x92\xbfz\x98\x9b\xe8\x0e\xfc\x80?\xf0\'\x12\x99\x85I\xaf\xbf\xa3\xab\x186\xec\xe2\x8d\xbfv\xbd=\xb9\xe3g\xa6?\xd7\\7\xad\xa3\xc5\xb5\xbf\x1c.\x06\x10\xad&\xa1\xbf\xd0\xc46j\x85\xe2\x97?oB\x10k\xd1\x10\x84\xbf\xd2\x92\xf6\xaf\xf9{\x82\xbf\x0cht\xce@Y\x86\xbf\x11\x82?\xc2\xe0\xc8\x88\xbf\x8f\xba4\xd7v\xcf\x8d\xbf\tM\x0e\xfc\xa0\x99\x98?\xc6L\x0c\x00\xba\xdb\xa2?^\xf1\x94\x83v\x06\xa5?\xe2]!\x18Q\xba\xa3\xbf\x80\xe2J\xb2\x90\x19\xad\xbfV\\S\xbff\xfa\x83\xbfo\x17\x84\xf4\x17MP?+\xf9cl\x0bE\xa1?\x1b\xd4\xab\xeci\xd6g\xbf\x84\xa4\xac\xe1\xdf\x95\x96?\x03d\x84Z\xc4$\xa2?\xa0Iiq\xb6q\x80?K\r@{\xfb\xab\x10?0zf\x83-?\x93\xbf\t\xe0\t\x97"W\x7f\xbf!\x08\xb8\x06\x817\x97?\xc7+m\xe7\xaf=\x96?\r+\x8e\\\x04\x8b\xae\xbf\xa2\xfe-q\x1e8\xa6\xbf]\x04a\x0e\xfej\x82?9\xe8]\x17i\xa9\xa0\xbf,EX\xd9\xf0\xfaI\xbf\xe8\x17\x17&l\xace\xbfN\xa4\x06\xd8\xdb\xbf\xae\xbf,\x15\xe9\xd7\xb5]\xc1\xbf\x18\xdeS\x14i,\x81?_\xd6f\xb2\xe9\xe2\x91?\x8d\xce\xf6\xca_\x1fi\xbfb\xce\xd8W\xdf\x01\x92?k\xc8!\xbc>\xd8\x8d?F\x92\x8fa\xbdO\xb2\xbf\x9bC:bp\x97\xa1?\x1b\\\x05#I)\xa5?\xe657\xda\xc0F\xa3?\x90\xf8\xd1\xa1\xa3\x0b\x95?\x90\xf0M\x04\xaf\xb5\xbe\xbf"\xef\xffc\xef\xaa\xa6\xbfn\x82\xcb\x1d^+\x8e\xbfDD\x89\xf3\x9d\xec\x93\xbfGjC(H\xac\x9b?5\xff\xbb\t\xba\x1e\x9c?\x83\xb0\xdb\xaa\x86 g?\xf6\x83\x01k\xb1\xd6s\xbf\x02\x9bHD2\n\xa1?\xa0x\xe8\xb66\xe1\xc1\xbfC\xc6\x08@\xf4b\x7f\xbf\xc1N\x8d\x13\xc8\x89q?\x8e\x80\x11\xedy\xc6\x95\xbf%\x90\xfb\xcb\xc9\xbd\x9b\xbfwQ\xb2\xcbbLh?\xca\xea6U\x12\xa4~?/I\r\xc4L\xa0\xd4\xbf\xf1\x1a\x8d\xcde\xf8\xda\xbf\x89\xe5\xef\xac\xcb\xa2\xbc\xbf\xf5\xdb\xd5J\'I\xb9\xbf\x11\xcbg1\xd1Q\xa4?\xaar\xfb\x98?u\x83?\xa0\x9eXt\x9aZ\x9d?\x1aN\xe4\x97A\xf7\x9a\xbf\xd7[\x8b:\xe4(\xc0\xbfI\xb2C\x97\x81\x10\xc2\xbf\x12\xe8K>\xeb\xd8\x9c\xbf\x99=\xe2\n\xf7\x91\x85\xbf\x91\xe8\xf3\x97\xdb\x0e\xb1\xbf\x1f\x10\xf1\xf7sa\xc5\xbf\xd1\x14\x85n\xb6\x99\xc3\xbf\x8d\x1f\x19\x01\x81\xff\xb2\xbf\x8f\x8dyn\x15\x02\xce?Ze\xbc:\x1dvo\xbf\xe7\x9f\xfc\xf7gKk\xbf\xddx\xe0`\xceP\x93\xbf\xe8]9(\x15\xb5v\xbf@v\x8f\xd2^\x87{?\xcap\x1d\xf70r\xbb\xbf\x00K\xe1s\x19\xd6\xc1\xbf\xbd\xcbC\x12\r\xca\xb5\xbf\xc4`\xe7s\xdb\x96\xac?>9\x02X`P\xa9?\x9f\x0e\xab\x93\x14%\xa9?\x83\x1e\x92\xb3\'\xd4\x8d?(TB\x08_}y\xbf\xab\xe6\xe1\x02\xf7\xf7\xb2?\x175.\xc6\x95E\xae?&\x032\x0f\x01\xee\xd5?g\xbc\xdf\x16\xf6b\xcc\xbf\xb7\\\x83@\xf5\xf2\xb6\xbf\xcd\xecnQ\t[\xb7\xbf\xa9\xce\xa3$\x07\x81\xd4\xbf\xf8E\x00xM\xe1\x9e\xbf\xfbJ\x14\xdb8\xeb\xc6\xbf\x1b\x98\xff\xf3\x87\xb3k?\xfe\xa1\x18\xe2+\\\xae?i\xf0\xfc\xcb\xb3z]?Jo\x9e\xed\x83l\xb9\xbf\x89\xea\xbe|Kq\xd3?\xda\x9a\n\xf6\x8b\x91\x9c\xbf\xeb\x89\xf0\r\x93\x86\xc4\xbf\xce\xd8\xf2\x18x\x1f\xa2?\xc4r\xcb\xe5\x03bv?\x02\xef\x19\xe4\x02v\xab?\x93\xb4\xdb\x9c&P\xa7?\xd9\xddof\xc7\xc8\x93\xbfT\x04\x97w:\xf4\xbb\xbfUj\\\xb5<u\xb7\xbf\x1e\x13\x9f\x15\xb95\xb2\xbfY\xad\xdb\x94\x10>\xa4?\xc1\x14\x923\x18\xd9\xb5\xbf\x84zq|\x80%\x9c?l\xe9\xb6\xc5g\xf0\xcd?Gc\xa5obNm?\x9a%h\t\xfeDp?\xd1\x88sqn!\xac?&\x1b\xcem\xdd\x0e\xb0\xbf\xc9\xcb\x00\\l\x1a\xa3\xbf\x82\xd6\x9f|D\x14}?\xe9<m\x89\xbf0\xc8?\x19`\xe4\x99\xca\x9b\xc9\xbf)\xdeh\x82\xe2Q\x9c\xbf\x19\xbbc\x9c-r\x91\xbf=\xc3`\xe8o\xf4\x93?c\x89\x9b=\xeb\xc8\xac\xbf\x0f\xe41\xa0S%\xa7?\nWu\xf8\x16\x8a\x93?W\x96\x9eB\xf8\xc5\x81?\x96\xe2\x01C\xd8\x0b\x91\xbf\xa4z\x91,\xb3\x11\xc3\xbf\xa4>\xf5y\xa9\x81\xbc?GCi/@\xf1\xb4?\xa9D&\xf5V\x0e\x92\xbf\xec\xe4`\xfd[\x9b\xc1\xbf\xc0\xf8\xea\xab\xc9F\xbf?yV\xa5\xeb\x08\x03\xad?K4FFZ\x0f\xc6?\xbf\xf1\x01\xda\x82H\x8f\xbf\x05d\xdarN\xa1\xbd\xbf?:R\xf1h\xf50\xbf\x12\xc3)\xa2\xa1\xe9\x92?\xaa\xd2\x0b2\xee\xec\xad\xbfP\xac\xd6K\r\xea\xb1\xbf9\xf4\x11\xf6\x9f.\xb1?\xed\x1a\xe9<\xe5_\xc4\xbf\xdc\x1c\xb7L`G\xad\xbf\xfe\xb5(\xa2\x9c\xfb\xc7?\xb9\xb5\x8c\x05\xc5\xf3\xbd?\x84H\xd7\xf7x\x14j?\x9b\x03\xf7yjt\xa9?\xa5\xc6\x06\xc4\x8c^\x9f?\x02H\xd6\xdc\xf9`\xab?\xccP;C\xb1\x0e\xb4?\xb7\x1e\t;\x95\xba\x97?\xf2\xfb\xe9<WQ\xba?\x07\x8bO~\xc6Z\xa4\xbfp\x18\x9f\x06\x8b\xec\xbd?_/K\xac\x1e\xd2\x96?\n\xf1*a4-\x93\xbf\x82\xdc\x1cJB\x1f\xa2\xbf>-\xc4\rK\x14\xa0\xbfp\x17\xc9\xf0\x9d\xa3\x9f\xbf\xd2/\x90\x91[\x01\xa8?\x1e\xc7\xd7\x15\x01\xbfp?q\xeb\xa0\xd4\x8c\xd8\xa2?t|\xdc\t{\x8c\x81?\x88+M\x9e2\xad\x8e?\xc4p\xfc\xa1NW\xb9\xbf-\xce2~\xb7\xd8\xb0\xbf\r\x85\xa5\xc6\xdb\xaf\xba\xbf\xc8\xfbx\xe1;w\xb5\xbfM}\x97\xb9l\r\xb7\xbf L\xeau\xdb,\xba\xbfn\x8a<L\x97@\x8d\xbf\xbb\x9f\x15\x19x\x19m\xbf\x1e\xf8O\xd9d9\xa7?\xb8\x00\x07\xdcv\x8c\x94\xbfwt\xa0\xca\x10\x18c?\x9d\xfe>e\x0euT?\xef\xa2\xa7.|\xff\xc2\xbf\x93\x04(\x9b\xb4\x1b\xc5\xbf\x99\xe1\xb6djy\x9b\xbfZ\x8d\xf6m\xbe4\x8c\xbf\x07Eg\xc9\xdd\xedc?\x17\xbe\xc1%\xed\xc7\xb3\xbf\xb2\x9e\\\x8f\xd0p\xa5\xbf \x1a\xa2\xca\x9c\x05\x97\xbf\r\xca\xa7\x06\x06\x07Z?<\xc9eX+\x01\xa8\xbf\x84 \x90(\x9c\xacr?\xfe\xe1\xceh\x82Z\x8e\xbfHH\x12\xf0\xc8\xfc\xc1\xbfRR\x9f2\xaa\xd0\xd3?\x87\xbaS\xee>z\xb1\xbf\x87la\xcb\xba\x15\xbb\xbf\xa0\x18v\xb8\x03\xbf\x9c\xbfP\x14\x15\xc8\xd8Q\xac?? "q<\xa4\x98\xbf\xca\xeb^s\xde\xe4\x95\xbf\t\xfe\xfe\\}\xa0\xaf\xbf\x9d\xcdw\x1c\xee\xf3\xb4\xbf \x89kC\xce\xc6\xcb?<\x9dK\xee\x1a\x07\xb4\xbf)%\x1e`\xa5\xee\xcd\xbf\x80g\xc7\xf0\x87\xd4\xbd?\x8cA\x9c\x7fl\t\xa8\xbf\xba\x7f\xaaw\xb2\xc9\xaf\xbfX\xc6e\x0ew\x86e\xbf$\x0f\x15\x98\x1e"\x92?\x1c\xac<\xdcR\xd1\xb3\xbf\x8cP\xf6\xaf\xed\x91\xa0\xbf\x87dv.\xc3q\xc9\xbfM"+g\x9d\xf2\xcb?\xa8\x8bi\xe0\xc1\x80\xa3?!\x8aF\x08\x11t\xb5?\xad\xf3\xc3\x11d\xf7y\xbf\x07\x85|4\x1a\xbe\x91\xbf,v\x92\xb1\x1c\xfd\x82\xbf\xa8\xcfo3jP.\xbf>I\xce\xf2R\x8d\xa6?Lx\xb8L\x93\x91\x9b\xbf: \xb8J\xaa(\x95\xbfbE|1\x18\xb5\xb9\xbf\xb7\xb3\x81\x1d\xaa\xd4\xb5\xbf="\xc18\xc7t\xa0\xbfP\xad\x9c^\x12\xfb\xc0?\xd1@\x1c\xc8$\xf7\xa9?\xaa\x05\xfe\xa8\x1e\x9b\xb8\xbf"s\x89|\xeeS\xb5\xbfK\x1d\x97\xed\xae\xcbr?\x80\xf9g\x80\xaf\xf8\xa6\xbf\x0e\x95\x15\x84\xd0j\xb3\xbf K\x857\xe2Gr\xbfh\\\xc0t\xbdZJ\xbf}\xd7\xa9\x93\xfc)\x8f\xbf\x90\xbf\x10k\xba\xb7\xbb?\x16\x08\x0b\xf6\xbc\x03\xb2\xbf\xd9\xb7\xd3\xcc\xfa\x05\xab?\x14\xc2z\xfam\x92\xad?\xa4\xa5\xcdB\x8a,\x90?\x08\xe0\xea\x17\x1d\x00\xaa?\xd9I\x83\x81\xc9E\xa0\xbf\x95\x8a<1:\x9e\x9e\xbf?Amh\xf7I\xa0?\x8a\xecp\x95\xbd\xf3\x87?\x90\x94V\xc1?\x92\xc1\xbf\x9a\xc8\xa7\x90\xb8\xe8\xb9?\x9eHZ\x03\x10\xdc\x8d?V\xaecNdo?\xbf\xcc\xcce\x19KK\xba\xbf\xfd\x14>\xad.\x08\xc7\xbf\x7f\xdao\xa7\x966\x9f\xbfo\xe5Q\x88\xddC\x8e\xbf\xb9\x98_\x9cX\x8c\x9a?O0\xeb\xa8\x9b\xfd\xa4\xbf\xca\xd7\xf5\xda\x13\xc5\x81?\xcf\xd9\x1b\r\x7fr\x8d\xbf\xdc\x0ew\xd8\xffL\xa2?e\x9c\xae[W\xd3\xd9\xbfJ\xaco\xbf\xcd\x8c\x95?\xa5\xc1\xfa&\xaf\x04\xa1?b\xf10 \x11H\xa0?\xe7\xa9\xe4S\x8d\x00\xa2?\xf4\xa5\xb9m\xef!\xc4\xbf\xfdR\xc2Y\x1f|\xd4\xbf\xdf\xc0\xa2|\xb5c\x82?:T-?\xad\x0f\xbb\xbfb\xe0\x80\x8e\x9f\x81\xa7\xbfm\x00I\x90(\xbd\xb4\xbf;\x7f\xef\x05s\xb3\xa3?u"\x8d\t\x06\xff\x92\xbf\xfa\xdd\xeeR\xc1\xe5w\xbfL\xc9\x9cx\x97\xb4\xa5?\xf3\xb1N\xafR\xec|\xbf@\x8c\xa9\xcc\xa5\x0c\x8b\xbf\x8fp\x07\x9c\x94\x15\xa7\xbf\x1f\xde?`\x89p\x8a?T\x00Y\xd1\xa9\xb2\x88\xbf\xf8;\xe9LvF\xd2\xbfB3\xfarN5\xb4\xbf\xc7\xe7\xb4\xf9a\xa9\xd2\xbf\xae\xf5\x05\xc9\xb7\x81\xab\xbfF"H\xaa\xf7x\xc1\xbf&=\x08%\x05\xdd\x87?iy\xc8\\mD3?\x1e\xd2\x08U\xe7\x97\xa6?\xa6^+\x1a\x1f\xf9\x8e\xbfS%o\xcbx\x19g\xbf\x0c\xe0\x84;5\x81\x9d\xbft\xee\x96\xfd6/\xc5\xbf\x9c\x9e\x0b8\x0e*\xd8?\x93g\xf4b\xcc\x0e{?q\xc2\xde8\xea%\x98?\x81\xa7\x1cD\xc4\xa8\x9a\xbf\xcf\xaaV\xc4Wb\xc3\xbf\xc9\xfc\x01\x9b\x81c\x95?\xddW\xc3a\x18:\xbf?\xdcm]\x1c\xbc\xe7}?o\xe5 \xc2\x11\x96\xac\xbfU6R\xeb\xff\xf0\x98?j\x8di\xbf%\xa6\xa8?\xe7\xfc\x0e\xa6\xad\xd3\x9b\xbfv\xde\xde\xd5D>\x9c\xbf~\xa8\x94\xddx\xe9\xa3\xbf\xac\x86\xe8\x90\x05\xfd\x90?\xd2SdNx\xfa\xa0\xbf\x9f\x12\x16O\xa0\xac\xa5\xbf\xd0\xff\x99\x0b\x08:\xb7\xbf\xa3\xef\xb5!6\xec\xbc\xbf\x95_\x86s\xdd\x9d\x87?\xea\xd1)\x15\x85hC?\xb1\x83r&.\r\xa0?\xe6\x8f\xcb@\xa5\xbfg?6\xaci\x8d\x85\xda\x82?\xd6\xe4\xe2\x07)\x9d\x8a?\x05\xac \xa1\r\x14\x89\xbf?mTE\x9d\xb7\x9c\xbf\x84i\xc97\xb9\xd3\xba\xbfx\xc2\xc8\x9e\xec\x94\x9e?-F\xf3\xd7h\xeat\xbf\xfdm.5yb\x95\xbf*7\xce\x06c\xf0\x87?0\xeef\x99\xe96\xcc\xbfW\xe0\x17.\x07V\x9c?L\xd7\xff\xf4FP\xb1?\x9ak `\xb0t\x9c?\xb3.\x92\xa3,\xce\xb5?.\x07:B*\xc7\xb5\xbf\xdd\xa0\x04\xfe\x84\xc4\xb4\xbf\x06\xc1\x0eCy\xf8\xa1\xbf\xe5\x8b\xa7\x1b\x81\xb2\x82?\x16\xb6n\xe6\xd0\xf5\xaa?$\xb3\x9d`\r\xa7\xaf?\x9c\xda\x13\x15}c\x9f\xbf\xfa\xfb<\xd0\x86\xf0\x96?\xc9\x82\x16V\x8ef\x93?\x04\xca\\\xa36\x94\x8e\xbf\xbc!\x10\xfd\xb0\xac\xb8\xbfq&t\xc8#\x0b\xc0\xbfUjW%\xc8\x84\x97?J\xb2v\xc0\xd5\r\x9b?\xb4y\xb6w\x12\xad\x9b?O\x96\x00\xf8\x8b\x19\xaf\xbfh\x0f\ruQ!\x8f\xbf\x9c\xc4\xb2\xd4\'\x17\x8b?n:\xfd\x87\x91Qc\xbf-\xb7`\xc5\x83\xdd\xb1?(\xd0\xd9\x95)\x00\x96?>\r\xf6\x01\xfe\r\x9b\xbf\x1f\x95\xb8\x1b\xc8\xdfu\xbf\x05\xe4\xd0\x1db(7\xbf\xc6\xe5\x9a\x9b\x9cD\xb2\xbf\x9a\xfd}%\xd8U\xad?6\xe4d\xa5\x1a*\xa0?N^\x13\xfa\x92m`?\xbaM\xb3\xf1h\xad\x90\xbf\x05%g\xe8&s|?\x13\x19\xe7\xcel\xc9\xae\xbf\xad\xa9\xa8u\x03\xd9\x9c\xbf\xe5\x1c\xca|\x1f\xac\x90\xbf\xbe\x8a\xd1\xec\xf0\x00\x84?\x87Fp\x17-\x1f\xb3?\x91\xf4\x95\xfaE\x19\xc2\xbfP\xfbx\xaad\x95x\xbf\xd1\x95n~yQ\xad?\xc8\xaf\x86_u\xbbl\xbfo\x05\x1e\x8a\x03\x1d\x94?JqG\x87,\xd9\xcb\xbf\x84G\x9d\\\xf5\xd1\xb7\xbf\x01{\xfbz\\\xb4\xc7\xbf\xce\xdd`\x1aW2\xbb?`\xb0\x19r1\xbf\x94\xbf`0.\xea\xa6c\xa1\xbf\xe8f\\c\xfb|Y?J\x12fh\xa3\xa5\x88\xbf\xd34\xea}\xf8O\xa8?n\xc4:\x7f#\xa2\xb0?\xed\xf4\xe1\xa4\x9e=Q\xbf\x94\xd6\x11\xba\xea\xc7\x84?\xa4\xf6\xd6"7H\x9c?\xe7\xaa9\xc6\xf6\xbbP?A.k\'\xc4\xb3\xb0?\x0e\xa7\xe6X\x1e\x1c\x8a?\xa4\xf1y\xa0&\x99\xae?\xa6\x14\xd54b\xd5\xa9?75\xec\xd8\x03G\x94\xbf\xd2\xa4\xa0\x03\xdf\x9f\x91?s\xc1\xe8\xba\xa9\x80\x86\xbf12\x86\x80R\x12\x7f?=\x00\xf0\xf3\xc7\x95\x8b?\r\xa6\\[D^\x86?\xddbOu?L\x95\xbf\x9b\x9e\x84\x99\xe1qp?\xc9\x06\xffl\xeb\xc4\xa8\xbf\xa1/7\x07\xdb\xe2\xc0\xbfT\xcb\x13^"\xfe\xae\xbf\x9dY]\xe2\xd8.\xc7\xbf$\x0b-\xf2\x819\xd2\xbfa>\x0679\x8a\xd1\xbfI\xf1\xe9\xed\xec\x96\x82\xbf)\xcb\x01F\xc5\x98\x8d\xbf\xda\xa8\x95\xee\xef\x9c\x88?\x12j_\xde\xba\xc0\x90\xbf5\xd6(\x85\xe4m\x92\xbf \x15y\x14\xa0 u\xbf.K\xcf\xce\xa2L\\?\xfef\x84\x04\x9de\x98?\x13\xf5hI:\x06\xa5\xbf#J\xab\xfcN\xba\x8b?08\x89x\xa1\x14\xa0?\x81:\x85 \x00\xa1\xac?UE|\xf9Y\xf1U\xbf0o\xab\x00\xb8\xb7\xa3?\xff\xc4_7\xacZ\xaf?F]\x1exr1\xbd?{\xf9\xbe\xd0Z\x92\x9c\xbfp\x1f\xd4U\xc2qQ\xbf\xcb\x0e\xdfv\x12\x12\x95\xbf\xc2\x8atU\xafn\x93\xbf\xfd\xe7\xdd\xdf@\xb0\xcd\xbfED"\xe4\x0cB\xc7\xbf\xd9h\x83\x1f\x0c5\xb3?\xac\xffY\xb1\xd9\x8a\xbf\xbfo\xab*Dw\x01\xb7\xbf[\x91\xac\x1dD\xd3\x9b?\xa5\x08\x7f\x00N\xc0\x92?`\xc10}\x83_^?\x9d@M\x04\xab\xd2\xaf?\x02\xd2\xd2\xbe\x14\x18\xc0? \xa0\x1b\x16\r}t\xbf_\x83\xd9\xd6\xb8\xf8\x9c\xbfk\x17e\x8c\x03\xcb\x82\xbfl\\|\x9as\xfa\x82\xbfy\xd2\xf7Udb\x98\xbf\xf4\x90\x0f\x97\xdc\x95\xb0\xbf}\xc8\xeb\xa5\xf2\xe9\x83?\xf8\x93sn\x87\xec\x91?\xe1\x1a\xb1\x8b\x07y\x98?\xe1]\xe9\xbd\x187\xa5?\xb4q\'\x06\xa8\xe1\x88?\xae\xcf\xc7\x99O\xe2\xbb\xbf\xfcKA&\xa4\xb5\x82?\x1fL\xb5,\xd5\x1c\x91?\x97\x88&- \xc4\xba\xbf\x17R\xde?g\xda\xc8\xbfF\xd5=\x9e\xe0\xe1x\xbfzya\x1c\x1a\xda\xa6?\x05\xd6\xb5\x83\x92Vo?&\x84\x03\r\xd3\xa0q?\xd0\xb7@\rG\xe4\x9e\xbf\x9e\x16\xf0\xc9\xab\x94c\xbf\x01>"\xac\x0ep\x8f\xbff\x1e3\xa3\x15ML\xbfYe9:M\x1b\xbe\xbf\xa5:\xe6\xc9\xd3.\xa9?\x13\x87>p-\x14\x9e\xbf\xe4\xecX\xa2\xa1F\x80\xbf^Z\xa5p\xd3\x95\xb2\xbf\xcc9\x86p9\x16\xb1\xbf\x83\xc7\xd60S\x92\x93\xbf[\xc4$y&\x13\x87?\xe5\x04\xa8"\xd5\xd9\x7f\xbf-}\x0e^\xa9!\x8e\xbf\xf1=P\x07A\xf2\xc4\xbf)k@\x9e\xab\xc7\xbd\xbf\x8d\xd6\xd5\xba\xb9\x1a\x8f\xbf\x19L\xe07\xec2\xa2\xbf\xf8\xd8\x01g\xb1ib?\xa3\x03l7\x94\xe3\xa9\xbf\xaa\xb6\x08\xf3\x91\xb7\x82?\x90J\xf4\\\t\xd4\x86\xbf\xf1\xaer\xf0&\xcd\x9f?\xbcd\xa3\xb3\xdd\xc9\x91?\x80\x0e\x06\xa4\xaa\xc4z\xbflWF(\xab\xe8\x94\xbf#L\x11\xc3\xcb\x03\xa2\xbf8\xc72\x80\x7f\x1a\x8a\xbf\x11\xda/\xe0\xef\xf7\x87\xbf\xee\x1c\x1e\xb9YH\xbb\xbfKl\x13N\x17D\xbe\xbf\x0c\xdcCP\xe4\x8f\xb8\xbf\xf4\x1amX\xe2-\x82?\xc9\xc1\x9f\xf2\x83\x9f|?\xdf}\xc9KR\xb2\x92?\xf1P\x08\xd6y\xb9t\xbfg\xe8\x83\xf8\x86\xfe\x91?M\xfd\x0b\xc2\xfa\xd1n?g\xcfW6i\xf4\x92\xbf=7\xae\xf8\xf4\xe1\x8e?\xc8\xd0\xb2\x8dj\xc6\xbc\xbf\xe2\\\xcb\x05\xb3\xfa\xa5\xbf\xb1\xa3\xcc\x95\xe9q\x81?Os\x9d\xb4DR\x8c?{Uu\xa5\xad3\x81\xbf}-\x10\xa1\x87/\x83\xbf\x0e\xf1o\xd8\xb3_\x9b?Up\x18$\xbek\x97??\x81\x05\xab\xd1\x15g\xbf\x85}\x87\xf3w\x11\x95?\x01e?V\xc2\x84\x93?\x89\xa9&\xe7\x81w^\xbfZ\xb8."\xbe\x18\x8b?A?z\xca\xd6\xf8\x8d\xbf\xba\xac\\\x83U6R?\x0f\x84\xc6\x1a\xe8\xf5\x82?\xf3)@rq\x8c\xa7\xbf\x9d\x0bw#[\x17\x98\xbf\x92\xf6( h\xae\xc1\xbf,q\xbfI\x8e\xe6\xa4\xbf\xc18:\x0f3)y?\x0bq\r\x8b\xd3\x86\x85\xbf\xc8\xd5\x0c\xe3\x08\xceq?\x1f:\xf8\xf7Z\xa6r\xbf\xa1\xe9\xd2+\xbaW\x8c\xbf\xcd\x9e\x835^2|?\xe1\x93D\x91\x97X\x83?\x18%\xde\x15\x9f\x8b`?=\xd4\x80=Db\xa2\xbf\xdcW\x8a\x1c\xf7\x17\x90\xbf\xe5F\xe1_\xb8\xa1t?\x0c\xb8\xcb\xe8\xd4/\x89?\x82s^\xca\n(\xae\xbf\xb8\x99\xfa\xa9_\xd3\xb1\xbfZ\x87\x9e\xee\xa0\xa1\x92?\xb9\xdd\xe9{\xad\xcbq?\x08K\x19\xe0\xa0G\xab?c\xa9h\xc3\x99\x1c\x99?\xf1^\n\x15y\xd0\xab\xbf\xe5\xe5uItI\xa9\xbf\xd4N\x0c\xf4\x05\xcad?\x96~\x81{^\xafQ?\xf4<0\xc3\x00\xdcz?\xc5\x8f}M\xb6i\x9d\xbf\x01\xaa{\x0b\xc8\r\x81?d\xba\xe8\x0e\xe6\xe0\x93?>\x82Q,z\n\x91?\xea\xa7\xc0\xfb\xaa\x9b\x9c?\xd7i\x9a\xf8\x11<\x9f\xbf\xb2\xf8O\x00@\x9a\xa8\xbfe\rP\x81\xbb>\xba?\x9b\xabFiT\x8b\xb9\xbf\x87\xacR\x9c$\x1c\x95?Z t\xbcF\x9c\xa4\xbf\xc9\x8c\xfd\xce\xa8\xc2{\xbf\xeaw2\x1e\x8c/y?\x0c\xd8\t\xf3\xbd\xba\x7f?!\r\x05n!\xc5\x9f?]\x12)\x92\x82\'^\xbfy\x9b\xb4\xbe\x85Z\x95?\xb2\xbf\xe5!\x17Uq\xbf\xa1\x14\xdd\x19\tG\x8b?\xdb\xaf\xb1\x93\xb0\x87\x99?7\x85\xa9W\xd8\xe5x?^\xedIv#y\xa5?y\xba\xee}Z~\x93?#p:u\x12\\\x99?\x87\x14\xe9\xc12\xa8w?<\xb9sp\x95N\x91?"Q\x90*6g\x99?q\xc90C\xb6\x1c\xbd\xbf=\xca\xe6\xaf\xb7\xc9\xa8?\x1bnL\x88\x03\x17\x97?D\xbd>\xe6\x19\xf5\x8e?\'\xb1\xb8\x97\xa0\xe4g\xbf\xa0\x012k\x19\x04\x8b?I\xd6\xae\x7fi\xad\xb8\xbf\x98\x17J\x8a\x1e\xbd\xbf?\xf8K\x81\x0e\xf2\x1e\xb8\xbf\xea\x1d\x07V"\x15\xc5\xbf\xcb\x1a\xa9Ml~\x93?\x81)6x\x0c\x98\xa7\xbf}\xb3\x98\xd4\x17\xbf\x8f?0\xdc\x94\x9byc\x8a\xbf\x8f\x0b\x83"\xa4\x0e\x97?\x8b\x86\x80\x99Q\xb1\xa0?a8\xd5\x889\xa2\x87?\xe6\x1a\xc7\x8e\xd2\xf7\x9e?u\xeb\xfb.0E\x9c?\x7f\x91\x8aD\xce\xd4o?uk\xc7kqMd?\x9d\x12\x94\'e5\x89?\x9d\xa41\xd3*p\xaa?\x9c\xb9\xf8\xe6\xfd\x1c\xaa\xbf\x1bD\xd3\xb2\x1b\x99{?\xfd\x1ah\x83`x\xb0?\x1af\xaeKf<\xb3\xbf04%\xecz\xdb\xa6?\xd5HA\xa5\xe4[q\xbf\x1ex6\x86\xb7\x0cj?\x85\xc2\x0f\xed\xe1\xbd\x83\xbfr\xb5ny\xf2-q?\xc2\x1c\x97\xaa\xe0\x83\x8a\xbf\xa2\xb2h\xe7\xc5\xfbk?0:,\xb7\xa5\xaf\xa7\xbf{ \x03\xea\x04\xec\x94\xbf\x8a\xe0\x1f\xe2\x8d\x1e\xaa?\x86GRz\x1d[\xc4\xbf\xc9\x84\x91\x08.\xde\x8f\xbf."\x00t\xe5\x8a\x98?\xc7\xe2\xf8\xd8\xa4\xa6\x97\xbf\x17\xb5\xaf\x03\xe7\x85\x91\xbf\xcaDz\x9d\xa7\xae\x8c\xbf\x97#\xd8\xaf\xcc\xdfr\xbf\x88\x1f\x90\xadF2v?q\xefD\xa2}I\x96?>\xdf\xa7\x9b\xc2\x92u\xbf s\xc7Fv\xbd\x9c?b\xa3((%}\xa0\xbf\xba\xf7Z\x9c\xf5\xa7\x8e\xbfq\n\r\x7f\xa1,\x93?\xa7\xb4\x9f+5\x8f\xa8?I`E2R\x98\x9e?@"!\x96\x17ca?sa\xba\xf5\x99\x8d\x96?\xe5\x03\x1c\xd8\xa9\xe1\x9c?\x81\xdd\xaeg\t\xa8I\xbf\xc349g\x9e\x9e\x8e\xbf\xd3\xb7\xd9|\xcc\xc6\x8f\xbf\x1bDw9*GH\xbf\x7f\x02?\x06\x8a\xb9a\xbf\x1f\x81\x10\x93Ip\xa2?\xaa>\xd9\x1d\x8a\x96\x92\xbfe\xf4\x86Z\x8d@\x91\xbfc\x06\xdf\xd4\xe3\xe8\xa7\xbfs\x12\x85\xf2\xc1\'\xb0\xbf\xc4\xd5\x96\xc9q3S\xbf\xb3\xec\x05\xe1\x12^\x8f\xbf\xddN\xd9\xcf\x97K\xa4?M\x08J]\x08m\xa7\xbfW\xbaO\x86\xdc\xa5\x99?\xa9?\x9c\x00N\x88\x91?mZ\xf3\xe5\x82@y?\x9d\x9a\xeb\xa4\xb00f? \xbd\xf1\x0er\x7f\x8e?\xf4\x8b\x94\x15\xea\xd8\xab\xbf\x1a\xf0\x8b\x06v\x13]\xbf\x1c\x8e\xddd:\xa6\x89?\xad\x1e\xe3i6\x83\xa1?\xf4\x94\xb7N\xf0~v\xbf\xaf\xe3\x92\xcfh\x05\xb0\xbfP\xa3\xb4\'8m\xa1\xbfX\xfb\x1f\xcak`\x8f?\x9b\xe4\\K;\xdb\x87\xbf\xac\xb7+D\xb5wW?\xc4^\x91\xddP\xba\xa0?i)\\\xfe\xe18\x89\xbf\xca\xeb\xae\x85U\xccu\xbf\x97au\x05\xce\x9b=?f\xdf\xf2\xcf\xfe$\xb4\xbf\x9dl\x87\xe6]\xd9\xa4?F\x075\xe1\xe0\xa9\x95?\xad1\xa7\x81\xa8\xb5|\xbf\x94\xda}Mh\xae\x94\xbf\xef\xcdXQ\xe3\x0c\xa5?\x0bk\x910y=X?\x8b"\xb1\x1a\x0b\x93\xcd\xbf~\xa8\xf9x\x9e\x88\xd4\xbf\xfe\xa9\x89\xb0\x0f\x02\xae\xbf\xa6\xc4mt\xeb\xa4\xaa\xbf\xf4\tV\xa5\xee%\x8e?z\x1d\x7f\x07+E\x98?,\x14\x17\x07:\xad\x94\xbf\xae\xe5\x8f\x98\xd9\xd1\xa0\xbf\x04Y\xf1\xd5_%\xbf\xbf\xdb"\xc2\xd8RE\xc1\xbf@\xa9\xc7\xc4\xd1\x02\x9a\xbfI\xd5\x11\xab\xc1I\x9f\xbf\xa7\xed\xdc\xa5e+\x95\xbf\n\x14\x89\xf87\x01\xbe\xbf\x15\xf6\xdc.8\xcf\xbe\xbfB\xe2\x96\xc2\xb5A\xab\xbfC\xb1\xb9\x84\xc3\xd9\xb7?\xca\x97\xaf\xbd\n\xc8\x96\xbf\xed\x16\xf9\xa2\xc6\xa8u\xbf\xd6Y\xda\x80\x8b\x90\x97\xbfA\xb4-/h-\x96\xbf\xfd\x05\x86\xef\xcdY\xaa\xbf\xe4 \x93@\xdc\xf8\xba\xbf\xbd\x9eE\xfe\x17\xff\xb2\xbf\xc9\x88\x83h!\x8b\xb5\xbf\x85,lN\x98\x11\x83\xbf\xbd\xce4\xd1\xda\x12x?\xa9\x1e\t\xb3\xbb\x9eU\xbf\x8bfq"\xb9\xf2\x97?\xf2I\xf3I:\xe1\xa6?\x9c\xdb!\xc0\xcf\xeb\x8a\xbf\x1b\x8d\x99?N4h?NU\x0e{2e\xc1?\xea\x8bq\xc1B)\xba\xbf\x10r\x17\xde\xd1|\xbe\xbf\x0f\x01MZ\xb2\xdf\xbc\xbf fSk7\xf5\xc3\xbfM\xdfi\x1c\xa63\x97\xbf\xef\r\xaan\xaf\x19\xc6\xbf\xda\x927\x16\xc7\xa9\xa5\xbf\xec\xa5\xa4\xd3o\'\xa7?\xc4\xf4\x01\x17\xfb5e?\xbcE\xcc\x9b\x9d\x9a\xa6\xbfl\x9b[~\xb6(\xbd?\x9a\x8e!\x84R\xca\xa2\xbf3\xe1\x9c%\xb2\xe3\xc0\xbf\xa5\xbe\xff\x0bm\xdf\x8b\xbfE\xec\xf3\xed\x0e\x80~\xbf\x00\xdcQL2\x86\xa5?\x1e\xeax\x1a\xb4\xe6\xb2?\xa1,h\xff?-\x9c\xbfP!\x9e\xc3\xf7\xc6\xa9\xbf\x12A\x9e\\\n8\xb1\xbf~\xca\x17\x18\xd4\xcc\xb1\xbf\x17\x9f\xdc\x07I\xf4\xaa?_X\x01\xe1\xb1V\xa5\xbf\x04\xacI$\'e\xa9?-\xdai~^\xad\xbe?WV4b&\x1at?\x8a\xcd\xb5\xc5\xd9=\x82\xbf\xda\xeak\r\x11\x9b\x97?\x1b\xc0r\xbd\xec\x0c\xb7\xbfVY\x8fD\x11j\x9f\xbf\xab\n8\xd0\x81\xb1\x89\xbfb\x1b\xaa/%7\xc1?\xd6\xf2\xb4\xb8:g\xad\xbf\xa3\xd9.t+\x1f\xbd\xbf\xe7K;\xf6\xben\xb8\xbfh\xfc\xa1\xb1\xe4\xfah\xbf3\x87\xa8\x90\xd7o\xab\xbf\xfbr\xfc\xe4\xdd\xc5\xb0?/\xe1Ma\x0c\xc8\xae?\xdb\x8dR\x08\x06\xff\xbc\xbf\xecI\x90\x1c\x16\xb6\xbd\xbf\xd2\xe5\x97a{~\xad\xbf\x92\xb3a\x0e&+\xb2?x\xac\xe5\xe5\xd1&\xb0?d\x89\x10l;[\x83\xbf\xe0Fe\x998\xd2\xaf\xbf\x94\xf7\x7f\xe0\xbd\xf3\x91?\xcf!\x82\xad\xee;\x86\xbf\x8e\xa8\x1cR:\xee\xb0?_\xe6sU\xc0\x9e\x93?z\xc1o\x18t\x19\xa7\xbfS\x13\x93\x01\x19\xd8\x89?\xf5\x03\xeet\xb1\x92f?z\x80\xb9\xcf\xd9\xc4\x99\xbf\xf2\xa6!)\x08\xbe\x87\xbf\x16\xda\xc5\x16\xdc\x85\x9c?\xb42\xa1Y\x01\xb3\xa1\xbf\x04\xf6\t\xa5\x0c\xbb\xb2\xbf\x00\xe9NJ\xee_\x97?\x9f\x16\xe9\x04\xae\x10\x90?\xf8\xf7\xc0>\xfaG\xa5\xbf5\xffK5\xaa\xec\xa0?\x97\x9c=\xb8<\xe2\xa2?J\x8f\x90\xd3\xf0\x00\x82?\x0c\xbf:y\x1e\xa0\xa6?\xd7\xd4m}%\xc3v\xbf_#\x1f_&\xfb\x98?\xe0\x15N@+\xb7\xb8\xbf\x08\xb6\x17\r%B\xb3?`\x8e\x05\xb4\xc9\x85\xa5\xbfh\x9eiV\xa8Kb?\xc9<+:\xaa\xc7\x97\xbfg\xd9h\xff\xf3\xa5\xa5\xbfdg\x8fz\xb4,\x99\xbf\xf8\x0b1\x15\x0c\x7fl\xbf\xdd\xcc\xf1fo\x1b\x93?b\xf0\x92\xf4Q\x0f\x95?\x99!\x17\xe3\xbb2T\xbfx\x88\xa6\xba\xffo\x92?\xf7\xf37\x91\x10c\xbc\xbfz\x86ns\xa6+\xba\xbfU\xae =\x1d\xc0\x8b?dR\xec\xc4V\xc6\x8b\xbf\xa0;!\xc2\x81\x9az\xbfx\x91\xca\xd1f\xf5\xb2\xbf\xb4 \x0c$/\x90\x90?-]i\xd0%\xc5u\xbfX\x08\x19\xae\xf1K\x97?\x18G\xa4(\xbes\x8b\xbf^\xffs\n\xe8\xf0y?\x07\xbf\xab\x00\xce\xcf~?\xb9\xb6,\xbe\xbc=\xb7\xbf\xae\x95{z6\xc1\xb6\xbf\\G\rvN0\x91\xbfQ$\xa7b\x91z\x97?G\x7fQ\tQ]\x86?\x03\x0b\xea\xe0d\x88\xa1\xbf\x12\x12\xd2\x96\xfa\xdbe\xbf\xb3x\xf7j\t\x9f\x8c?xi\xd9\n79\x82?\xee/\xc4J*a\x86?\xfb\xd9\xdf\xcc\xa7=6\xbf\xc2\xe5\x0bL^\x1bc?2S\xb5w\x9dy\xb7\xbf\xdc\x11\xa0\xdeu\xce\xc7?\xaaV\x88\xe9y\x1d\x84\xbf"b\xa9\x99\xe6\xb7\xa1\xbf\xe6\xcf\xf0\x08=\xd1\x8d\xbf\x7f\x1c\xca\xb9\x91+\xa8?x\xe4\x8a\xaf{\xea\xa5\xbf\xb1\'\xf3\xf5\xfc\xaf\x94\xbfL\xeb\xd8\x1a\xaa\'\xa8\xbf8\xf8r\xf6\x19\x85\xa6\xbfV\xdaq\xe3\xcbQ\xc3?\xfe\x8bG{\x05-\xa3\xbf\x19\x8f\x00\xbb\x8a\x93\xc2\xbf\xf2\x85+\xd14\x12\xb5?\xca\xb4\xbe\x9f\xd4\xf1\x98\xbf\xc9\xa5?*[\x05\xb2\xbfs\xa3\xfaR0\xe5\x8c?u\\\xeb\xd7\xfbf\xb4?G\xd5\xe4\xb2f\x88~\xbf\xcac\xd8\x03\x05\n\xa0?\x01GB\xa2\x91\xc2\xb4\xbf\xbd m\x10n\xa1\xc2?=i\xd1\x02K"\x80\xbf\xb2>)\xc7\xfe\xf7\xa5?\xd7R;\xd2}\x82h\xbf\xda\xb5\x9b\x9d\xb1`4\xbf\xebA/?\xd7\x85S\xbf\x1b\x06\x82\x18\x880\x8c\xbfz\x9e\xf6V\xaf\xb7\xa6?\xde\t\x8aT\rS\x92\xbf\xba\x08V\x9e\xe8\xc2\x9d\xbf\xb8a\x89\xb3\x18\x83\xac\xbfC\x99\xba2\xefv\xba\xbfn\x97{\xd97\xa6\xb3\xbf\x94\xf6\x9e\xfa\x9f\xb7\xb5?\xb0[G\x8b\xaft\xa2?\x16d\x8d\xf4\x90G~?\xa5\x02u\xdf\xdc\xba\x87?\xf1\x81\x08\xacGe\x82?\xd1\xb7P\xe1\xf3\x9f\xaa\xbf\xc1\xa2\xd7}\xe5\xe3\x91\xbfUy&\xd0\xbby\x93\xbf\x19V\xc0\xc0,)\xa3\xbf+5\xd4\x1ahh\xa2\xbf\xfc\x86\xd0\xcd\xbcV\x9e?\xee\xbc\xf5\xe7\xdf\x03\xb4\xbf\xbb\xa5\x18\x87O\n\xa8?T\x7fHxK\x04\xa1?\x9f\xd8\xd8\xae\x0c\x16\xa7\xbfp\x8a\x8d,Z\xf3\x92?\x04\x01\x7f\xba\x83\x01t\xbf\x9ay\x08\xcbA\x95y\xbf\xe1\xee\xf3\xc5\xfc\x9c\x8d\xbf\xdb\xaf#\x12K\xe1\xa7\xbf48\xefR\x0eF\xb6\xbf\xe4\xf0\x1bNv\x88\xb5?^J\xb7\x08\xec$\xb1?\xf1\xbf\xb9UOR\xb1?dyQ\xaa\\7^?\x95\x80\xb7\x16\x14\x1c\xac\xbfy\x8f2\xf6\x1c\x9e\x85\xbff9 e\xb74\x99\xbf\x16n\xa8m\x8fx\xa9\xbfU,NL\x05\xba\xb7\xbf$\x80\xbc\xb3\xcfj\xa0?\xd2\x9d\x83\x1e7\x99\xb1\xbf\xe8m\x1br\xef,\xb3\xbf\xed\x01V\rk\xd3\xc0\xbf5\x0f\xb4\xfcj-\x95\xbferwM\x00\xcf\xa8?\xa0\xb2\xf4\xac\xf6\xa7\x9b\xbf\xb0\xce\xecR\x9dp\x91\xbf&8\x9a\x96\xc3\x91\xcf\xbfq\x15\xf5yJp\xdd\xbf\xcd\xf2\xe5\xe3\xef\xa5\x8d\xbfD\xc6\xa3\x99u\x08\x88?P\xf9\xddmQU\x96\xbf\x15\x86\x17\xce\xe3\xad\xb6\xbf,_\x06\xf2NHb\xbf\xa2\xd6w\xba)0\x95?\x1eA$|-D~?\xd8\x07\x9c8#I\xa7?\xf4\xa2\x92\xf7wa\x9a\xbfB\x9d-\x05\xe7Nl\xbf\tEe\x13j\xec\xa8\xbf0\x97\\O\xd6w\xa2\xbf\xe38\x9f\xa8_\xb7\xca\xbfj\xec\x9f\xf0\xcf:\xc6\xbf`\x1f\xf9\x8cb}\xcc\xbf\xe4)\xf8\x13\x8b\x01\xc3\xbfM\x89b-\xf1\xa7\xbb?g\xefl\x9b\xb8\x1d\xb2?\x04\x92\xa8c\xed\x13\x8a\xbf\x06z\xb1j\xe9e\x94?\xc7\xe6\xe2YD\xca\xa2?j\xfcv\x9du\xe5j\xbf\x0b\xfaR!\xfd\xff\x98\xbf\x98\x00\x1c7\x85\'\x82\xbf\xb4k\x04\x18\'\xb4\xba\xbf\x0f\xf2\xc0N\xb4\xa1\xb0\xbf\xf1\xbf\xc02\x11D\x85\xbf\xae\x0b\xa77\xfa\xea\xab\xbf\x01\xb7\x86\x1agr\x93?\x8e\xa8\xd2\xa7\x8b\xb1{?\x04\xb1~\x90\x13\n\xa8?@\x86=\xca5X\x85\xbf\xb5j/\xa7\xca\xd4K?\xed\x9c(\xb8\xe0\n\x80\xbf\xffDP\x92\xb5\xb7\x92?[\xbb!\x1a\x93\xfe\xa9?e\xd7\xcf\xce\xc0H\xa2\xbf$\xe5\xc5\xd8D\x10\xa7?G\xca y\xf8\xe3\xa1?\xe0\x8ab\x7f\xdf\xc8~?\xb1\x88"\xeb\xb3\x8d\x9a\xbf\xa9\xd5:?<\x8c\xb1\xbfp}a\xca1`\xb1\xbf\x8a~\xf10X\xec\x86?U\xb3\xa7=\xc5\xb8\x8a\xbf8\x13.\xdd@\x8cr?\xa6!\xbchq\x1d\xac?\xdf\x13 \x95\xf4x\xa1?\x0b:\x93\xb3\xc3\x15t\xbfE\xd2\x9f\x94;\x99^\xbf-\x12\xe9\xe9\x1b\xd6\x90\xbf<\xd6"^\xe6\x17\x91\xbf\x83*\xb2\x83\xa8\xfe\xc6?2o\xc2\xf6\xca\xbd\x9b\xbf\xe8U\x8f-\xcd\x1d\x81?\xd4Pm\xb7Q\x8e}?O_U\xccG\xd9\xc1\xbf\xc7\x12\xf2\xa5D\xa3\xbc\xbf;{\x14,\x03\t\xb2?\x9bM\x16871\xa9?\xaa@7\xffC\xe2\xb6?\xae\xc2\xad\xbf\xadj\xa1\xbf\x80\x0fl^\x01I\xba\xbf\x1a\xf1\x81\xf6\x81\x0b\xad\xbf\xc9\x07m24^\xad\xbf3\xb0~\xdd\x84m \xbf\xc4G\xe4\xd2F\x19\xb3?P \xa9\x0eZ:i\xbf\x14\x98\xbe<,n\xa8?\xfa\xe6\x80\x13\x91\x93\x8d?R\x12\x04\xcbaf\xaa?\xa76\xbb\x89\x8e\xe2\xa4?\x99\xeca\xfe_\xf3\xbf\xbfy\xd6rX7\x08\xa3\xbf2\'\x13\xaf\xc6\xc8\xb8?\xcd\x0b\xf5\xfc\xb3\xca\x9b?@R\xb0\x08\xc5\xe2\xc6\xbf\x14?\x0c\x1a&\x15\xcb?p\x9a\xdc\xfa\xd3_h?\xe2r\xfe&\x88\xc5:?\x93\xe3\x8f\xe1\x965\x86\xbf\xec\xcf-A:\xae\xb1\xbf\xa8\x86$\xed\xb15\x90\xbf\x93u\xec\'\x02%\xa3\xbf\x8d\x81S\xd0\xd2_\x92\xbf>H\xd6\xab\x03\xceq?#\x0e\xb8\xd7\x05b\xa3?!\x84\xa7\'\x90\xb3\x9d?\xb9O\xdf\xe8\x80k\xc4\xbf\xe4X\x84\xb3\x0e\xe6\xc4\xbfs\xcd_\xb0\xb8\xf2f?\x95\x91D\xfa\t\xac\x8f?-E\xce%\x91\x1f\x92?\xbc\xde\xf4\xd8\x1f\xc3\xa5?\x11z\xf4LF\xd1N\xbf\r?\xc6;\x14\x84\x81\xbf\xce\xb0?\x04z7\x96?\x13\xef\x93w\xb0O\xbd?\xfb\x0e}\x9d\xd8T\xa2\xbf\xeb\xf7\xe7Q\x99\xe7\x90?\xd0\x8a\xc3\xba\xd2[\xad?\x9ed\x9f,\x8e\x93\x94\xbf\xd6x\x96\x98\x81{\xc2\xbfr\xa5\xf4U\xac\n\x85?2-\xb6\xaf\xd4\x95\xae?\xc0,)ceI\xa0?\xcf\xe4\xaf\xa7\xbf\xb0i?<\x1cc\x06\x1fL\x94?\xc5\xdd\x9a\xd3\xcf=d\xbfM\x92EV\'\xc7q?\xe5[\xe4\xc5\x1eI\x97?L\xee\x83\xc2\x9a\x81\x88\xbf\xa5#]2\xf0\xdbg?\xc8.w\xfe_a\x85?s_\xf1\xce_\x18\x83?\x06\x02\x1c\xc1\x91\x94n?\xa5m\xa7C\x01\xe4\xd0\xbf\xe2h\xb0J\xa6T\xb7\xbf\xb0\xbc^J\t\x13\xc7\xbfgV\x94C\xa1\xc6\xb7\xbf\xf7g.\xe6\xa8y\xd0\xbf\xa7\x0f\x15\xe3\no\xbb\xbf\xfb\xdb[\xa5\xdb\x8d\x96?\xee&b\xc0\xd9\xa5\x84?K\xc4\x04\x83\x81wp\xbf\x84\x1f\x86\xf7\xb15\x82\xbf\\\x19%\xbdzf\x90?)\x1b\x12\xff\xa6\xb5a?e\xdc\x1c\xae\xa7\xf8x?\xb3\x9c\xc0\xee)\xd6\xb7?\xba^\xa2\xf9\x06\x9b\x83?u\x95_\xd3\x17\xfc\xc1\xbfny\xe0H\xb8\x0c\xa9?u\xe8\xc4\xf7\xaf\xdc\x93\xbf\xf9\xd3\xe3\xc7l^\x92\xbf\xcdnf\xf6\xbf\xc7\xa9\xbf%l}\xd8#\xdf\x81?\xda\x11;0\xf2Q\x7f\xbf\xc4\x03\xafq\xb3\xa8s?`\xd6"\xf1\xbf\x82\x9f\xbf\xd8\x8a\r\xa5I\xec\xc2\xbf\xbbFJ\x1f`\t\x8c\xbf\xd9\xfe\xe1\'\x97\xf6\xc3?\x07g\n\x0c\xc05\xb5?M^\xff\xbbf\n\xc0?\xd9R3{B\x9d\xc2?\xb8\xba\xab\xa2V\xf4c?\x06]\x01\x81\xebK\xa6?N3[g\xb1\xd0\xb5?\xd5SnI\x16(\xba?\xe7Y\xe9C\xb0\xf7\x90\xbf\xfd\x0e\xc0 )\xe0o\xbf\x10 \x8c,\x86\xed\x92\xbf,\xda\x196*\x18\x9a\xbf\xbc\x93"\xd0Q\xfe\xbf?\x1f\x9dI\xc2\x0c\xee\x93?\x87\xac{\xa3\x8d\xf0\x80\xbf\xa4\x05\xb3=\x8bzB?\xcaH\x1f\xcc\xff\x83\xc5\xbfW\xc2\xc7\x17&b\xce\xbf\'\xae0\x0b\xe7\xa2\xa1\xbf\xbe\x9c\xb1@\xc6m\xa7\xbf\x14\xc58\xcc\x01\x15\xbd\xbf\xa6\xea18\x0e=\xbe\xbf\x16z\xd0L\x06\xe5\xc0?j\xdfO\xa2\x19\x94\xbe?\\\xd0\xc1t\\\x91\x96\xbfipI\xc3K\x0f\x94\xbfPL"\x0b\xa9&\xd5\xbf\x14\xd1\xa2\xca\xb5\x1d\xd4\xbf\x82\xf9m\xbd\x1b\xcc\xb0?\x9c\xc1\x89E\xdev\xa4?\x19\x92a\xcf%\x8e\xb3??\xa4%F\xc2.\xbd?\x89\xe8\xb4\x10\x0c\x1c\x92?\'\xaf\x90\xb1+\x96t\xbf\xe2\x1aA\x8d\xd6\x93T?o\x8e\xee\x1fv\xe1\x8c?\xe6\xee%\xeb\x19\x9a\x9d?#7x.\x93\x8d\xb5?\xb6wU\xf8\xa9!\x90\xbf\xe5\xfdmk\x8c,\x96\xbf\x8b4o\xc5\'\x93\x91\xbf\x04Z\xbd\xd4:\x92\x9d\xbf>(\x18\xc9\xb9\xc7\xaf\xbf\x10\xfc%\xdf\x9a\x93\xc4\xbf\\\xf8\xba\xf0\xc5\xa1\x9a\xbfP\xb7\x16#\xc9\xc8\xa3\xbf\xe1&\x1a c\xd3\xc7\xbf!\xbaM}\x82T\xbb\xbf5J|2#-\x99\xbfs<\xaf\xbc\xcf\x0c\x0e?\x7f\x10\xc7)=\xf9\xc1\xbf\xf8\x02\xda\xeaV,f\xbf\xeae\xa9\xa1\xd8O\xac?n\x12m>\xacR\xa7\xbf\x0e\x93T\x81\\\xd1{?\xb8"p\xbc\xd9\x9f\x92?\xfd\x03\x05\xf3Ul\xd2\xbf\xc9Yzum\xa7\xc3?\x9c\x05\xf4\xfe\x97\xb6\xa4\xbfA\t\x92q=\x9c\xb0\xbf\xfa\x99V\xce\xaf(\xae\xbf\x81,M\x980T\x8a\xbf\xb5\xa4\x0b\xd6\x7f\x8f\xb2?mc\xad8\xf4\x96\x92\xbf\x93m\xf6\x81\xe8d\x97?RZ\xfe\x06\xaf\xaa\xae?\xaf\xc01\xc9\xbc8\x96\xbf\x9f\x91!\x03\xeb\x87\x84?r\xea\x03u\xbe<\xbf\xbfE\x9e\x18\x9dw#\xa2\xbf\x9c<\x17\xca\xd0,\xcb\xbfP\xc4\x9cu\x8d\x81\xa8?\x02\xde\xca\xeb\xb9y\xd6\xbfQN\xf5\xc8\xddU\xc1\xbf\xb5\x955\x15t\xf2\x95?\xfd\xf1\xb8\n\xd4\x11\xb3?\xf9\xfa\x9c\xe8\x02\x98\x8e?\xa9\x90\x95>!\xc7\x94?\x9d\xeb\x04\xa1\xd1\x82\xa8?\xa3J\xb4"6_\x9d\xbf\xe4o\x12\x86\x03\xbf\xb2\xbf\x12\x13\x9c\xad.@\xa0\xbf\x1a\xe9\x83(b\xef\xd4\xbf\x14>f)\xa4\x82\xd1\xbfs\xaf\xf1)\xe5\xef\xad?\x15\x9a-K\x87\xe9\x90??58\xe8\xb0\xf6\xcc\xbf\x97hf\xebG0\xc3\xbf\'E^\xc3\xfa\x14\xbe?fa\xab\xe9\x8d\x87\xa0?\xebGE\x00\xcc\t\xa3?|"T\x00G\x08\xa6\xbf\xa0G\xcc\x8d\xe2\xac\x9e\xbf\x80F\xf8 \r\x83y\xbf{\x15\x91\'\xa0\x89\x83?\x98\x81T\xe2\xd0\xe1\xa6?\xa1\x8d\xa0HVI\xb9?9Z\x1f\x8c\xeb\xa3\x8a?\xcdz\xd0j \x99\xc4\xbfcx\xc15\t\xd4\xa9\xbf\xc07\x92\x18,\x0e\xd6\xbfw\xa5u\x91%\x04\xd6\xbf.\xfa\xc2N^si?\xba\xc7\x90\x87\xe4m\x9b?\xcd\xa7\x98\x19\xbfL\x82\xbf[\xd0\xc3wZ\xb7\x9c\xbf6\x8f\xaeR\xf3\'\x8e\xbf\x8d\xc0\\\x82v\x8c?\xbf:\xbc\xe0\xe5@\x1a\x1a\xbf0-\xf7\xa0\x9b\xb1\x96\xbfQN2G\x18`\xb7?\xed\xce\xea}\x97\x81\xac\xbf/~c\x98N\xa4\xa9?\xe8A\xdd\x9d\x13\xa6K\xbf~i\xab[\xf7G\xd4\xbf\x8bB\xbd`\xeb]\xdf\xbfc\xf8\x0bL\n@\xa3?\xfb\xc1\xab\xd0\x19\xc6\xab?\xe0\xa8+F\xd6\x05\xbd?A\xc9\xdd\xc1g1\x9e?\xbe\xaf\xd3\xd1R\xf2\xbc\xbfr\xef\xc6\x8c\xd3\x1e\xb0\xbf\xac\xa4R\xb0\t\x13\x82?\x0cs\xdcR\xfdW\x94\xbf\xaf\x8c\xef\xb42\xe0\xbe?\xa2=\xf3Pv;\x7f\xbfml\'\x9e\xaa\x95\xa5?\xb3H\xce\xfeP"\xa2\xbf\x82\xe1\xd2n\xbb\xe5\xb3?l\xa7\x9c\xec\xa3\x8f\xa7?$\xf7z\x055T\xce\xbflI\x84\xd8OU\xb9\xbf8\x1e[N\x11\xc7\xb5?\xe5mI\x19`\xb1\xa2?\xd58\xc8hFV\xd8\xbf\xe4\xfe2\x16\xf1P\xd3\xbf\x7f\xd9\ns\x07?\x9b\xbf\xe4w\tZ\xec\xf2\x8d?}\xea%O~$\x82?\x90\xc7\x0cl\xb7D\xa2?\x01\xf9\xf7\x13\x1b\xb9\x9c?\xd3\xd0\xc6\xfc\xff\xf7\x93\xbf-\x16\xb8K\xd2\xa9\x95\xbf\xfaL\xf6\xd3\xdf\x04\x90\xbf\xb3\x87>>a\xa3\xba\xbf\xdbx!\x91\x99{\xbd\xbfo`~\nt\xc4\xad?h\xa4\x15\xeb\xd1\xef\xc2?\x88\xbf\xad\xd1#0\x87?\x1e\x1f\xd2\xbb\x0b\x15\x81\xbf\xa5JV\xd6\xbb\xa4\x89\xbf\xff\xc4+\x06\x01X\xa4\xbf!\xb6\xab\x89\xde!\x92?\xbd~\x98\xcd\x0e\x03\x95\xbf\xa0\xf1 \tN\x98\\?\xb5\xb7\xafi\xd9P\x91\xbf\xbfP\xba\xcc\x8b\xff\xa1?\x1d\x88\xf2\x15\xe9\xa7\x91\xbf\xa9G"\r\tU\xa7?L$\xb00\xdb\x91\xae?\x92\x1d\x9aT\xe7\x10\xdf\xbfzE\xfe\xcf\xdcM\xc3\xbf=\xf3\xd1\xc9o\x9b\xc9?\x1a\x0e}\x15\x08]\xb8?\xb8\xdf\x8d\xcbx\x87}?w`\x16\x89\xf2\xbb\x9c\xbf\x04n\xccb#\xb7\x85?\xa3\xc0\xbdK=m\xa3\xbf\x1b\xab\x0f\xef\x1c\x9b\xba?\xb4\xf2\x9a\xf8H\xe9\xa4?\xad\xb8\xdb?\xfbsq\xbfm\xc8\x0b\xa5[\x96z?\xe6\xfatNN\r\x9e?\n\xe3\r\x05>U}?t\xd1\xf9\x01\x19\x84\xbb?[\xd8TYKO\xab?\x96\xeb\'\x9a\xdbU\xbe?\xcf<\x84\x92\xe8P\xa9\xbf\xe2~X\xfa\xc4K\xc6?.=Y*1\x1c\xbf?F\xe2\x81\xb7r\xcf\x9d?>\xc3;\xbf\x05V\xac?+\'\x1d`\xd3Ll?#UQ"\xdc\x12\x82\xbf\tI\xd1\xdd\x13\xc1t?K9\x06\xc9\x08\x1d`\xbf\x90\xd3\x0b+\xd4G\xcb\xbfw\x8fR\xf0\xae\xcc\xe1\xbf\x1fDKKS\x87\xc6\xbf\xe4}\xf1\xa9@\x0b\xc2\xbfJ\xc4\x95B&\xfd\xd0?/\xbd\x01\\G\x00\xbd?]\xce\x80}\x92+\xbc\xbf\x07\xd0hZ\x88\x04y\xbfQ\xb0\x1fs\xe8\xb5\x95\xbf\xe3\x86-\x86\x91\xe2\x8b?\xddH\x87\xbdHL\x94?\xb1\xb9&\xee \x06f?\x99\xdbS\x9c2\xd1\xbf?6\xd6D[\xf9\xdd\xbe?w\xf0N\x8cX\x9c\xb0?\xb2e\xde\xea\x91\xfe\xbc\xbf\x8c\xe4\xec\xa7\x1e\xbcg\xbf\xfdE7\xee\xd0\xde\xb3\xbf\xed\x00\xeb\r\x0f\xfb\xa5?\xd0\x069\xc9\xc1X\xab?\xba\xc9,l\x11\x9d\xbb?\xe8*qH\x97\x8f\xa8?\xd8\x0b\x81m\x13\xed\x96\xbf\xf2\xd8f\x85\xc6#\x96\xbf\xfb;\x15\xa5\xe7z\x93\xbfA\xc7\x94\xb6G\x10\x95\xbf\xa5\xa0i\x01\xac\xb4\xc5?v\xf3\xc0\xc0\r\xa2\xbc?\x1bo\xf3\xe2\xa5\x97\xa3\xbf\xf6\xad\xbe\x86\xe3\xc7\xb2\xbfp\xffG<SU\xc0\xbf\xdc\x9f\xba\xb7\xef]\xc0?\x19\x05\x05$\xc3Y\xa6\xbf\xb3F\xfc\x12X\x82|\xbf7J\x02\x8el\xff\xb9?)c.\xb4c6\x97\xbf\x9d\x96r\xce\t\x85\xaf\xbf\xf3\x8e\xa2?\x95\xd5\x81\xbfhz\xae\x8f/\x7fx\xbf\xf9\x95\x9c\xe4\xf0\xde\x9f?\x1d\xd3]\xed\xcdu\xc2?\x7f\x01\xbb2/~\xd2?gk[ce[\xbd?;\xff\xbc\xdc\xca\xdd\x94?\xdbrmw\xaeF\xc2?@\xf5\xa2\xf9\x81\xb0\xc5?K\x89\xf2\xf9T"\xbb\xbfI,1J\x9b\xde\x81?kc\xf2Q\xae\x8e\xb4?\x15\xae\x98\xc2z\xca\x9c?\nJ\xde"Zs\xc2\xbf\x17\x1a\xc2V\xa9y\xa6\xbf$\x1a\xb4\\\xbfj\x98?\xe3\xb3\r\x19B\xf6n?\x10\n\x89\x13\x13l\xbd\xbf$\xeb\x05\x8e\xd1|\xaf\xbf\x7f\xb1\xe6\xc1 \xcf\x94?Mh\xcaiZh\xaf\xbf\x18\x92\xce\xbajF\xa2\xbfz\xe6\xbf\xf1\xbe"\x98\xbf\xfc\x12\xc5\xec\xc6\xe8\xb2\xbf\x00\x97\x7f-\xe8\x0b\xa7\xbfB\x125\x1f/\x92\xc0\xbfrr\xdad\xdf\x96\xb8\xbf\xdfs~\x1b\xed\xed\xd1\xbf\xc6zR\xa4\x86\xdb\xc4\xbf\xea\xa9\xab\rgo\xc1?\x7f\xe6\xd9\x13\xfe\xe4\xbd?\xd3\xc3E\x1e.\x03\xb7?M$x\x93\xc3s\xbc?|e~\x18\xd5\xc2\xe1\xbf\\Z_\xc3\x89Z\xd5\xbf)J\xb6i|\x02\xd2\xbf\xcf\xb2q\xd8\x1c \xef\xbf\xa1\xb9\x15\xad\xef\x9cd\xbf\xb1f\xefs]n\xc0?\xe0\xb4}\xb3{\xfdh\xbf\xe1.\x0c\x14\x12\xc9\xc3\xbfk\xec\xe9UK\xc4\xb1\xbf\xd5\xcd\x94:6\xdf\x9d?\xbe8\xe8\x0f\xe7\xd8\x97\xbf\x96\x7f\x0e2b\x9dt\xbfMj\xe7\x7f\xcd,\x9d?\xff\x84\x9292!\xcf?\xf2\xca%w \xb3\xd1\xbf\r\xe3\x01\xbf\x02\xdd\x96\xbf\xb7\xd4\xaf\x8e\x9f\xff\xd1\xbf\xb6\xec8\xb4\xd1w\xd0\xbf\xa7"\xde5\x12\xb1\xa0?3\xa9\xea\xa6\xd4a\x9e\xbf\x1d\x15\xb3\x19xo\x9c?\x8a\x83\xf5a\x85h\xb4\xbf\xa2\xda\xb4\xe2n"\x9d?\xd7\x00\x8f&\xbc\xd4\xb6?\x80\xd4\x1a\xc5\xcb\xed\xb9?\xdb\x01\xf7!;\x88w?\xda\x8a\x80\x98=\x81\xd4\xbf\x0fOx\xb2\xd1\xb4\xcb\xbfp<9\xbb4\x8b\xac?\xe4\xe2\xbf\xefF\x00\xb5?\xb6\xb5/\xad)\x91\xc6\xbf\xb7\xb8\xc0\xbeJ\xce\xa3\xbf{LJ?Q\x9c\xc3\xbf\x18\xa9\xe7\xc6M\x04\x8e\xbfcR\xdd\xd9\xe7\xc2\xbc?S\xf1\x80\xd6|\x00\xca\xbf/\x1e\xea\x944\xda\xa1\xbf\xf271k\xc2n\xb3\xbfN\xf8\x97\xe9\x0f\xe5\xbb?b\x04\x07\x0f\xec}\xa6?\t\xdc;\xcbD\xc5\xa9\xbf3\x8b\x1a\xde\xf5pq\xbf\xf6\x05g+\x04"\xa8\xbf%\x12z\xbb&\xd9\xd4\xbf\xd6\xbd\xb5\x88\x86\xcf\xc1\xbfh.\x1a\x87!\xe6\xb6\xbf\xf16x[V\xf0\x97?\xc5\x14/\xfc\xc4\xb9H?\xb8L\x18\x85\xccl\xc0?\xae\xa5\xddi\xe9a\xb2\xbf\xf2\xe7}u`)\x80\xbf\t\x06\xb2E\xa4\xf6<?\x85f\xe7Gb\x1f\xa6?9\xccQ\xa5\x90\xf2\x9b?\x01\x16\xcbh`n\x93?\x0ery\x0e\x81\'\xb9\xbf\xbb\xad\x9f\xce\xb1>\x83?W\x84\xd64\xf9>\xbc?\xa6\x0f\x9a\x85\xa9]\xcc\xbf\xd4\x94S\x18`~\xbc\xbft\xfb\xda\xd0\xca\xee\xb8?/,\xaai\xf4\xe7\xb5?\x87\xa8\x89\nE\x96\xac?\x80v\xd7\x1a\x1e\xd1\xcc?)\t8zl\xd6\xb2\xbfP\xc4\x8d\r\x9b\xe2\xab\xbfO\x9bl\xaf,\xbc\xc8?\xccY\x11\x827C\xca\xbf\xa5\xd4\xa3\xbc\xc4d\xa6?O\x16\'Ol9\xcc\xbfOIN!V%\xae\xbfr\x8cu\xb51\x93\xb7\xbf\xe7\xdf\x87,\t`\xbd\xbf\xb6Jn\x80\xd4|\xb6?C\x1ae\x0b\xe6\xec\xc5?\x86o\xc7\xfc-Z\xb7\xbf\xa1r\x01>\x14V\x92?\xfb\xa5\xe4\xc0w\xcf\xa1?wu\x91\x02\xd6\xd7\xc5\xbf\x05m\xe4?\x98\x9e\xba\xbf\xf8A\xdb0\x81f\x87?\xb7\'}{<\xb6\x9d?)vc\x98\x01\xd6\xbd?\xf6EsF@\x85\xd1?\x04\xb2\xd3Rc\x9b\xab\xbfk\x7f\xafc\xf9\xf4\xad?\x9c\xec(\xca\xed\x97\x92\xbf^\x1d\x95_\x07j\xb4\xbf\xe4\x12H\xfc\xa5\xfb\x9f?t\xde\x1f\x9ck\n\xb4?\x14\xe1\x96T\xfcj\x88\xbfj\xafL1\xd5~\xc5?\xdd\xcd\xf6\xff\xc5\xfa\xbe?\xd5\xc9\xa3\x81\xad\n\xac?\xc1\xf7\xe2\xf2\xfdU\xa0\xbf\x03^\xa9\xf9\xd9+\xc8\xbfz2sw\x04\xb0\xa6\xbf\x9f\xc2\xf8@#\xa4\xa8?\xa4\nB_u:\xb9?H\xada\xbbZ\xd9\xaf\xbf\xae\x128\xf9Z\xc4\xa2\xbf\x80\x03\x95\xdd?4\xa2\xbf\x86<\xe8{A@\xa4?\x92\xb2\xd0\x8f\xaeT\xba?&\x0e~\x04t\x82\xe4\xbf\x94\xd6\xb2A\xce \xd4\xbf_\x9aM\'\xad\xf7\xb9\xbfe}\x1b\x17h\xd5\xa4?\x84\t\xa0G4\xc9i?\xeb\x1b\xcaur\xbe\xb1\xbfXp40\xb0\x80\x8e\xbfM\x7f\xbdi\xccS\xa0?\x0c\xb1p\x1e\xb3\x0e\xb7\xbf\xa0e\xb7\xf7\x1d\x1f\x9a??\x9b \x06"\x90\x80?I\xe94\xb0\xd0i\x8a?\x15w\x0c\xcb+\xaf\x8d\xbf\xe1\\\xea\xb2\xcb\xa6\xa5?\xda\xf1[co\x98\xb9\xbf\n\xd5\x0e\x83\xba\xf7\xb9\xbfC46\xba\xf7`P\xbf\xbc\x0b\x8f\xc5D\xc1\xc9\xbfj\xc4\xa8\xd3\xfa2\xa1\xbf\xec\x8bfB\x9dg\xae\xbf5\x00\xd8>\xa7\x9aj?\xe5\xba\xa8\xf4n\x8a\x83?p\xe9\xa0\xb2~\xa2<\xbf\xa3\xa0\x06\x9e\xe4J\x90?\x81\xe1\x88\xaf\xbe6\x99\xbf\x1fN\n\x8f(E\x9a?\x89\xf9\xf1\xb5\xb5t\xba\xbf\xb3\xe4\x1f\xe1vr\xbd\xbf\xdab\xc40\xd0\x88\x94?0B[D\xe6\xeb\xb2?\x88\x0f8\xd2?\xba\xb9?=\xac\x94\xdb\xc1\xaf\x9d?\x17!0\xe1Ba\x9e?\xf8TF\x0b7\x19b?\xbc>\x1b\xbe\t\x92\xb0?\xfcc\xe6\t\xf2\x10\xc4\xbf\xae\xb2\x84\xa8!_\xc9?\x1f\x1bK&\xae\xa1\xc1\xbf\xb9\xbcF\x8a\x892\xb3\xbf\x88\x14\x17\x86@#\xb4\xbfw\xa8<km\xfd\x93\xbf\xcf\xacv\xa16\xd0\xc2?Q\x88\xcb\x1dmM\xc0?\xf2]\xb0\xed\x8d\x90\xc7\xbf4Bk\xd8e\xe5\xa3?\xfb\xdb\xa6Qv\xc0\xa4?\xc2\xfc\xb9\xf6\xfb\x02\xc6\xbfX\xbd\xe5\x1dH{\xc7\xbfLq\x17V\x1d\xbb\x9c\xbfW\xd3\xe3\xcf\xc5\x16\x94\xbf\xd8\x1e\x87\xcd\xee\x8a\x92\xbf\xdd}\x8e\xcd\xa0\x06S\xbf\xadx@\xfb\xfc\xa6\xbd\xbfi\xf8\xb0\x96\xfd\x90\xa4?|\x9a\x0f\xbd\xdf,\xba?\xd6\xe6+YE\xe2\xc8\xbf*\xd0|\x16>t\xad?x\xc8"\x8c\xc6\x9f\xd8\xbf\x95cR\xac\xcd\x8e\xd9?\xccNLA\x16\x80\xcd\xbf\x1f\xb9\x15\xcd\xbf\xfc\xb0?b\xcf\x9d;/\xe7\xd5\xbf\xdcU\x84M\x9e\xc4\xc9?\x8c\x91\x12\xb0\x89\x9a\xdd?5O\xf7\x1c\x8b_\xa5\xbf\x80c\x10\xa5\x9d&l\xbf.]\x82\xfe<c\xc4\xbf\xd5\x9c*\x9eR\xc6\xb2?\xb5\xd3\xe9xN\x8c\xc1\xbfs\xbds\n\x84\xf5\xb7\xbf\x9c<\x95\xb2\xa9\xe3\xb8?B0\'r\xe3\xa5\xc1?\xb0\x01\x82\xac\xc2\xe2\xc1\xbfq\xc2\xa7\x8bYz\xb8?\xf0\xac\xecWy\xac\xb0\xbf\xe1\xfc\xf3\xbb\xf6\xe9\xa0\xbf\x96\x83\xeb\x82 \x05\xa4\xbf\xe5\xd8\xe8?\x99\x87\xb5\xbfg;`\xbb\xa0\x01\xba\xbf\xba\x02\xab\x00\x13\x93\xa4\xbfb\xc9u}\xe1I\x93\xbf\xad\xb72\x7fZ\xa0\xa8?\x1dT\xd6\x97\xc4\x16\xc2?^\x96`\xe2O\x0b\xd0\xbf\xec\x8a4\x1a\xa6x\x9e\xbf\xa7\x1b\xc4I&_\xa5\xbf\x12\xbc8U\xc7"\x90\xbf\xe9\xd7)\xa2;]\xab?\xa3\x04\x87\x1e\xe2!\xa7\xbfMW\xd4\xb7\x81]\xad\xbf\x0e\xb8\xba\xff\x8cR\xcb\xbfg\x11WI\x95B\xa7\xbf\xef\x96\x9a\xc1\xf8C\xa3?\x1e\x1a\xf2\xdc\xa0\xf1\xb9?\xfe\xf7\x95c\xcf"\xa5\xbf\x12\xda\xc0\xbc\xd2\x1f\xa7\xbfF3\x80\x0cGe\xce\xbf\xa6\t\xea\xbe!\xcb\xd4\xbfI\x04\x01\xc6\x1d\xce\xbb?\x0c\xadA1S\xd2\xcd?\xfa\xa0\xcdty\xf2\xa2\xbf1St\x15\x93Q\x98?]\xddA\x8b\xd0Y\x94?\xde-\x03\x05\x83,\x81?t\xd2\xa1\xe5\xb1\xba\xa6\xbfP\x10\xc4;\x10\x98e?\x04T\xd8*?Wr?\x1ag|\xe5\xe2H\x99\xbf\x14\x8b)\x13\x98\x89\xb0\xbf\'v|{\xfa\xa1\x96?4\xb2>\xf5\x9d\xf4\xb8\xbf\xd3\r\xe4\xa9\x84\xb5\xa5?\xa41\x10K\xc0\x91\xbb\xbf\x98\x0b\x9e\xd7\x9a\xf8\xce\xbf\xca\x93\t\x8b\x06F\x99?xR\xd5\xc9m\x08\x8e\xbf~\x07n)\xc1}\x9a?\xe1x/\xc0R^\xa5\xbf@\x00}\xd7\xd1\x9a\xa0?\x97\xdf\xa2\rO7\xb1\xbf\x9aD\x94\xdbC*\x97?\xd4\x9dvY\x9cN\xae?>\xf3\x80\xbf\x0eg\xc2\xbf\xd0\xf0\x86ME"\xc2\xbfA\x15_=y\x11\xb7?\xbd\xc3\xcf{p\x05\xaa?\x95\xbe\n\xc2\t8\xa6\xbf\xda\xad\xb1\x01T\xc9\xc0?\xfc\xd0\xd4(\xd6\xdb\xad\xbf\x1ak-\x95d\xcd\xba?<\x93+\x11X\xb5\xc4?\x1ep1\xc1\xb2\x82\xc8\xbf\x1f(\xed\x92\xb0\xd1\xa8?x\xae\x9d\x9b(\xce\xba\xbf\xba\xa8n\x8fks\x8e\xbf\xd1\x86>B\x993\x9f\xbf\xb9\xa9;\x9c\xb3\x1ar?\xd4\xaby\xfc\xab\x16\xb4\xbf\'I\xb9\xbfF\xba\xb1\xbf\x9c\xb1\xbd\xe2\x9b\x9c\xa0\xbf\xf6\xed}\x1ab\x18\x95\xbf\xce8\xf2\xe2\xd5\rv\xbf9\xbe\xa5\xc5\x19\xf6\x8c?Y\x00*XP\xd7\x94\xbf\xf2Rd\xd1.\x81\x81??[\x13)\xef\xeat\xbfn\xddSB\xa9Wj\xbf\xcdR\xfe}\xee\x9f\x99\xbf\x0f3\x9f\x9f\xab7\x9b?:e*\xed\xf3E\xb3\xbf\x07\xb9\xc9\xfa\n0\xbd\xbfl\xc7\xaa~\xb5]\xc6?\xc5\xda\xd5\x19\x1fI\x89\xbf\xfc\xf2\xb9L\x99\x1b\x88?\xfcO\xd5\x96^\xb7\xc5\xbf\xceS\xf0\xf6\xf2\xc3\xb6\xbfYY)\xa1}{\xb6\xbf\x00\xb3sP\xa2O\xb4?7\xfe\xbc\xd7\x8ca\xbc?\x87\x00!D\x04\xa6\x95\xbf\xa5\xe7\xa7\xc9\xdc\xf3\xc1\xbfv\xa0\xcb\x87\x9e}\x91\xbf\xa1\xc0o\xf5\xe7\'\xb8?\xffK\x9c\xc1\x0f\xac\xc1\xbf\x9a*\xa9*9N\x8c\xbf\xaa<X:{\xb3\xad?\xc3W\x01\x91jdq?\xc3:\x95\xc0\xcf\x06\xa5\xbf(\xf6K\xda\x89\xfar?\xefI\x88\xc9LS\x94\xbf\x9c\xef\xf9\x83\xda\x9a\x87\xbff.D\xae\xcf\xcc\xce\xbf7,-v3?\xb2?\x97\xc2YV\xfd\x07\xca\xbf\xeay\x97_yR\x93\xbf\x83Q\x88\xadC\xb1\xb2\xbf\x8dNM\x10g\xec\x9d\xbfk\xb7\xe8\x03\xeaf\xb6?\x17zQ\x89\xd3\x0c\x85?\xde?\xc1tS\x7f\xbb?\xd2\xf3Dv-\x0cc\xbf(\xab@*#:\xb1?D?d\xd8\xa3D\xa9\xbf\x03\x1cf\x97\xc9\xe1P\xbf|\x1fa\x8f:\xda\x9a?\xd72\x98\x8c#}\x86?V\xb7t\xe3\xd6o\x90?\x12y\rC\x9c]\xb1?\xbf$\xc8T\x91R\xbd?\xcb\x8e-\xb4\x85_\xc7\xbf\x92`\x80\xe3\xe9\x0f\xbf?\xb88(\x14?\xc4\xd5\xbf8O\xa0]\xba\xde\x90\xbf\x17<\x18{"`\x90\xbf\xe7\xadh\x89j;\xa2?\x7f\xdf\xc6S\x16S\x98\xbf\x18\r\xd0\xfe\x8a\xbc\x92\xbfg\x95\x17\xb7\xa0\x15\x97\xbf\xffy~$\xee0\xaa?\xdc,L\xcd\xf0;\xc3\xbf\xd7@\xfeS\x1d\xc0\xda\xbf\x89\x90\x1dam\xbe\xac?\n\x97\xfe\t\x98O\xaa\xbf/\x9b\xd2\x9a\xfa\xaa\xc2\xbf\x8a\x84\xdf\xbc[P{\xbf\xd6\xd9\xafZ\x8f\xf9\xa6\xbf\xad\x9d(\x82\xd8\xcf\xa7\xbf\r\n\x92N\xc7\xa6\x85?\x13\x7f\x95\xbc\xd9C\xad\xbf\xe1X@\x8b\x85\xb2\xbf?\xbf%gQ\xeb\xe6~?c\x98`\x85\x18\xfft\xbfuo<&\x1a(`\xbf\r\xc8\xe4\x0c\xe50\x84?2?\xcaoH\xda\xa9\xbf\x8b\xf8\xa9\xea\xa4\xba\x8c\xbfB\xccx\x01\xfe\x81\x93?+\xfa*Rw\x88\xa3\xbfv\xd1\xbc\x98\x14\xed\xb2\xbf}\xf5\'\'\x97\x04\xa0?\x9191^\x01k{\xbf\xf1\x13\x17Ld$\x87?%\x02\xa1\xf0\xc9\x13\x87\xbfH{(\\\\Y\x86\xbfY\\1\xfc\x1cs\xa7?j\xf37\xa4\xf3\xdb\xa8?}Q5\xb5":\xbf\xbf\xaf[h\xd7~\x04\xba\xbf@\xe3\x85\xf3\xf8(\x92?\xdesO\xbb\xbaY\xa2\xbf\x9d\xe7?4\xa9N\xa4\xbfA!Tj\x10(p\xbf\x86\x97\xf8\x1c\x1f)\xa1\xbf\x94\xb4dC\xf7\xfe\x97?O\xc5\xe1&\x06i\xb1?>8\x15\x06,\x1e\x9b\xbf?\xd3X>\xf1.\x93?\xf8G!N\x8b2\xb6?\xa5\xf3\xeb\xd9\xcf^\x93?\xb4K\xf4D\xaeb\xc0\xbf\x0fv)\x06\x05`e?\xf4\xfc\xfan\xf2\x17\xc2\xbf\xe5\xae\x01\xa9\r\x9e\x9b?\xb0S\xe2`\xcaF\\?>[N{\xdb\x8c\xa7?\xb0\xf5G\x1f\xf1\x06\xb0\xbf\xf1\x11\xbb`\x92\xb4\xbd?\x8f\xf6\xcb\x04\xady\xa2\xbfm\x07G\x9e\\1\x92\xbf\xbd\xcc\x90Ina\x86\xbf|\xa6\xc6\xca\xf3{\x97\xbf\xbe\xe7y\x0c\x1ba\x93\xbf\x87\x0e\x80:\x04;\xb9\xbfvpt\xde\xda\xda\xd3?`%\xa3\xe8\x1e\xb8\xae?\x1e\x8d\xa7\xf7\x8e\xcb\xc0\xbf\xccD\xc4\x92\x8d\xd1\xc8\xbf\t\xa3O\xd0-H\xb3?\xefo\x83\xf28\xa5\xac?\xd4Mq\x0e\x84||?v9\xf9\xe2\xb1\x03\xa7\xbf\x8e1pnEN\x80\xbf\xc3\xcc\x92\xafL\x92\xa1\xbf\xcd\xaflR\x8a[\xb9\xbf\x93,\xe6\xc2\xac{\xa2\xbf\xa5q\xe6\xab\x12l\xa2?\xfa\rQ\xcd~v\xa7??Z\xef\xacQO\x8b\xbf\x83\xe4\xf0\x82:a\xa6\xbf\\\xf2^[\xf1\xcc\xb2\xbf*\xcf\xfb>\xca\xf7\xcf?i\x19\x81\xc0\xa92\xbd?<\xf3J\xe2w3\xc2\xbf\xe1~\xa5\\\xd3S\xba?\xbd2)\xd3d\x1a\xc4\xbf\x8e~Y%\xfcW\xbc\xbf\x10\xda\x83\xcfk\xd1\xa5?s\xdf\xd1\xb4\x93k\xd0\xbf\x11\x8c\xa8E\xf9\xbf\xab\xbfclR)\x95\x18\x9d?'
p192
tp193
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp194
Rp195
(dp196
g78
(I00
I00
I00
tp197
sg80
S'float64'
p198
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg53
g162
sg85
Nsg73
g195
sbsS'orderings'
p199
(lp200
(lp201
I12
aI11
aI3
aI8
aI5
aI14
aI0
aI20
aI4
aI1
aI17
aI6
aI15
aI18
aI16
aI7
aI19
aI10
aI2
aI9
aI13
aasS'n_hidden'
p202
I100
sS'b_mu'
p203
g0
(g10
g5
Ntp204
Rp205
(dp206
g14
S'auto_14124'
p207
sg16
Nsg17
g0
(g18
g5
Ntp208
Rp209
(dp210
g22
(lp211
(lp212
(g25
I306
g26
S'nade_train( * args[1:] )'
p213
tp214
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p215
tp216
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p217
tp218
a(g37
I30
g38
S'self.add_parameter(TensorParameter("b_mu", (n_visible, n_components), theano=True), optimise=True, regularise=False)'
p219
tp220
a(g41
I29
g42
S'parameter.add_to_model(self)'
p221
tp222
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p223
tp224
aasbsg48
g0
(g49
g5
Ntp225
Rp226
(dp227
g53
g203
sg54
(lp228
g56
(g57
(I0
tp229
g59
tp230
Rp231
(I1
(I21
I2
tp232
g66
I00
S'Z\x85\xcff\xc2\xe5\xe4\xbf\xca}9\x04\xe5v\xe2?7\xd7\x97\xce\xebb\xe1\xbf\xd9`\xc6]\xe0\x95\xe0?\xb2@\xf6_\xed\x94\xe1\xbf\xb1\xa7&\xe7\x17\x1b\xe2?B\xf0{\r\xc6\x82\x04\xc0\x00\x84^\xd6\xc5m\xd2\xbft\xdf\x0c\xc8\xefJ\xe2\xbf\xdb\x8d\xb8\x1f\xce\xe4\xe0?\xc2i\xef0\x8cA\xf8\xbfL\x11fU\xe2\xf1\xd7?n\x02\xdd_\xa1~\xe6\xbf\x02\xaf\xc6Q\x80\x1a\xe4?\xb3\x92\xf1\x1bjw\xe9\xbf\xa3\xd6\xe0\xbdC\xde\xe9?Q\x0e\nY\xf1\x82\xe5\xbf\x14W_\x7f\xf8\x97\xe9?\xe6S\xbeS\xeeh\xe2\xbf\x89\x928\xbf\x97y\xde?an\x07\x11\x14Q\xe5\xbf\xdf\x1f\xc9J\xbbP\xe4?,\xc6\xc2~u\xdb\xe2\xbf\x8cU\xca\xc9\xc0\x89\xed?\x06\xc7\x9b\xe1n\x99\xe2\xbfs\x11w?\xfb\x03\xe0?@9\x849\\\xd7\xe4\xbf\xc9\xfa\xce\n\x88\xef\xe4?\xdb\xd8#G\xf4\xf9\xbf\xbfc\xb6\x03K\x0cZ\xf5?\xc8\xc3\xa1\xa5\x1f\xeb\xdf\xbf\xd27J"]T\xde?\x82\x11z\xb8\xe8\xbe\xe4\xbfI\xadh\xe5\xa2\xd4\xe4?\xb9\xf8a\x0b3\xf7\xd4\xbf`\xc0\xa4\xean\xdc\xf7?\xeb\xf6\xaa\x1eH\x90\xd2\xbf4!2\xf0\x88\xd1\xfd?\xf1c\x1c\xd0;\xd3\xd7\xbf\xc6\x15\xae3\x96>\x0f@\x84\xab\x82\xc5\xe5\xea\xda\xbf\xabP\xf3\xf9\x04\x8a\xf6?'
p233
tp234
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp235
Rp236
(dp237
g78
(I00
I00
tp238
sg80
S'float64'
p239
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg53
g203
sg85
Nsg73
g236
sbsS'parameters'
p240
(dp241
g203
g0
(cModel.Model
TensorParameter
p242
g5
Ntp243
Rp244
(dp245
S'theano'
p246
I01
sS'shape'
p247
(I21
I2
tp248
sS'model'
p249
g7
sg53
g203
sS'theano_type'
p250
S'float64'
p251
sbsg9
g0
(g242
g5
Ntp252
Rp253
(dp254
g246
I01
sg247
(I21
I2
tp255
sg249
g7
sg53
g9
sg250
g251
sbsS'nonlinearity'
p256
g0
(cModel.Model
NonLinearityParameter
p257
g5
Ntp258
Rp259
(dp260
g249
g7
sg53
g256
sS'value'
p261
S'RLU'
p262
sS'options'
p263
(dp264
g262
(lp265
cdill._dill
_create_function
p266
(cdill._dill
_create_code
p267
(I1
I1
I3
I83
S'|\x00\x00|\x00\x00d\x01\x00k\x04\x00\x14S'
p268
(NI0
tp269
(t(S'x'
p270
tp271
g41
S'<lambda>'
p272
I231
S''
p273
(t(ttp274
Rp275
(dp276
S'__builtins__'
p277
c__builtin__
__dict__
sS'__file__'
p278
S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/Model/Model.pyc'
p279
sS'TensorParameter'
p280
g242
sS'CompositeModel'
p281
cModel.Model
CompositeModel
p282
sS'__package__'
p283
S'Model'
p284
sS'SizeParameter'
p285
cModel.Model
SizeParameter
p286
sS'floatX'
p287
g251
sS'T'
p288
cdill._dill
_import_module
p289
(S'theano.tensor'
p290
tp291
Rp292
sS'NonLinearityParameter'
p293
g257
sg246
g289
(S'theano'
p294
tp295
Rp296
sS'np'
p297
g289
(S'numpy'
p298
tp299
Rp300
sS'__name__'
p301
S'Model.Model'
p302
sS'Model'
p303
cModel.Model
Model
p304
sS'Parameter'
p305
cModel.Model
Parameter
p306
sS'__doc__'
p307
NsS'ScalarParameter'
p308
cModel.Model
ScalarParameter
p309
sg272
NN(dp310
tp311
Rp312
ag266
(g275
g276
g272
NN(dp313
tp314
Rp315
asS'sigmoid'
p316
(lp317
g0
(ctheano.tensor.elemwise
Elemwise
p318
g5
Ntp319
Rp320
(dp321
g53
g316
sS'scalar_op'
p322
g0
(ctheano.tensor.nnet.sigm
ScalarSigmoid
p323
g5
Ntp324
Rp325
(dp326
S'output_types_preference'
p327
ctheano.scalar.basic
upgrade_to_float
p328
sg53
S'scalar_sigmoid'
p329
sbsS'destroy_map'
p330
(dp331
sS'nfunc_spec'
p332
NsS'inplace_pattern'
p333
g0
(ctheano.misc.frozendict
frozendict
p334
g5
Ntp335
Rp336
(dp337
S'_hash'
p338
I0
sS'_dict'
p339
(dp340
sbsS'openmp'
p341
I00
sbag266
(g267
(I1
I1
I4
I83
S'd\x01\x00d\x01\x00t\x00\x00j\x01\x00|\x00\x00\x0b\x83\x01\x00\x17\x15S'
p342
(NF1.0
tp343
(g297
S'exp'
p344
tp345
(g270
tp346
g41
g272
I230
g273
(t(ttp347
Rp348
g276
g272
NN(dp349
tp350
Rp351
asS'softsign'
p352
(lp353
g266
(g267
(I1
I1
I4
I83
S'|\x00\x00d\x01\x00t\x00\x00j\x01\x00|\x00\x00\x83\x01\x00\x17\x15S'
p354
(NI1
tp355
(g288
S'abs_'
p356
tp357
(g270
tp358
g41
g272
I232
g273
(t(ttp359
Rp360
g276
g272
NN(dp361
tp362
Rp363
ag266
(g267
(I1
I1
I4
I83
S'|\x00\x00d\x01\x00t\x00\x00j\x01\x00|\x00\x00\x83\x01\x00\x17\x15S'
p364
(NI1
tp365
(g297
S'abs'
p366
tp367
(g270
tp368
g41
g272
I232
g273
(t(ttp369
Rp370
g276
g272
NN(dp371
tp372
Rp373
asS'exponential'
p374
(lp375
g0
(g318
g5
Ntp376
Rp377
(dp378
S'__module__'
p379
S'tensor'
p380
sg322
g0
(ctheano.scalar.basic
Exp
p381
g5
Ntp382
Rp383
(dp384
g327
g328
sg53
g344
sbsg53
S'Elemwise{exp,no_inplace}'
p385
sg330
(dp386
sg332
(g344
I1
I1
tp387
sg333
g0
(g334
g5
Ntp388
Rp389
(dp390
g338
I0
sg339
(dp391
sbsg341
I00
sg307
S"e^`a`\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p392
sbacnumpy.core
_ufunc_reconstruct
p393
(S'numpy.core.umath'
p394
S'exp'
p395
tp396
Rp397
asS'tanh'
p398
(lp399
g0
(g318
g5
Ntp400
Rp401
(dp402
g379
g380
sg322
g0
(ctheano.scalar.basic
Tanh
p403
g5
Ntp404
Rp405
(dp406
g327
g328
sg53
g398
sbsg53
S'Elemwise{tanh,no_inplace}'
p407
sg330
(dp408
sg332
(g398
I1
I1
tp409
sg333
g0
(g334
g5
Ntp410
Rp411
(dp412
g338
I0
sg339
(dp413
sbsg341
I00
sg307
S"hyperbolic tangent of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p414
sbag393
(g394
S'tanh'
p415
tp416
Rp417
assbsS'b_alpha'
p418
g0
(g242
g5
Ntp419
Rp420
(dp421
g246
I01
sg247
(I21
I2
tp422
sg249
g7
sg53
g418
sg250
g251
sbsg88
g0
(g242
g5
Ntp423
Rp424
(dp425
g246
I01
sg247
(I21
I100
I2
tp426
sg249
g7
sg53
g88
sg250
g251
sbsg87
g0
(g286
g5
Ntp427
Rp428
(dp429
g249
g7
sg53
g87
sbsS'Wflags'
p430
g0
(g242
g5
Ntp431
Rp432
(dp433
g246
I01
sg247
(I21
I100
tp434
sg249
g7
sg53
g430
sg250
g251
sbsS'Ws'
p435
g0
(g242
g5
Ntp436
Rp437
(dp438
g246
I01
sg247
(I2
I100
I100
tp439
sg249
g7
sg53
g435
sg250
g251
sbsS'n_components'
p440
g0
(g286
g5
Ntp441
Rp442
(dp443
g249
g7
sg53
g440
sbsS'W1'
p444
g0
(g242
g5
Ntp445
Rp446
(dp447
g246
I01
sg247
(I21
I100
tp448
sg249
g7
sg53
g444
sg250
g251
sbsS'bs'
p449
g0
(g242
g5
Ntp450
Rp451
(dp452
g246
I01
sg247
(I2
I100
tp453
sg249
g7
sg53
g449
sg250
g251
sbsS'n_visible'
p454
g0
(g286
g5
Ntp455
Rp456
(dp457
g249
g7
sg53
g454
sbsg162
g0
(g242
g5
Ntp458
Rp459
(dp460
g246
I01
sg247
(I21
I100
I2
tp461
sg249
g7
sg53
g162
sg250
g251
sbsS'V_mu'
p462
g0
(g242
g5
Ntp463
Rp464
(dp465
g246
I01
sg247
(I21
I100
I2
tp466
sg249
g7
sg53
g462
sg250
g251
sbsg202
g0
(g286
g5
Ntp467
Rp468
(dp469
g249
g7
sg53
g202
sbsg125
g0
(g242
g5
Ntp470
Rp471
(dp472
g246
I01
sg247
I100
sg249
g7
sg53
g125
sg250
g251
sbssg430
g0
(g10
g5
Ntp473
Rp474
(dp475
g14
S'auto_14118'
p476
sg16
Nsg17
g0
(g18
g5
Ntp477
Rp478
(dp479
g22
(lp480
(lp481
(g25
I306
g26
S'nade_train( * args[1:] )'
p482
tp483
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p484
tp485
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p486
tp487
a(g37
I23
g38
S'self.add_parameter(TensorParameter("Wflags", (n_visible, n_hidden), theano=True), optimise=True, regularise=True)'
p488
tp489
a(g41
I29
g42
S'parameter.add_to_model(self)'
p490
tp491
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p492
tp493
aasbsg48
g0
(g49
g5
Ntp494
Rp495
(dp496
g53
g430
sg54
(lp497
g56
(g57
(I0
tp498
g59
tp499
Rp500
(I1
(I21
I100
tp501
g66
I00
S'\xd7-za\x9f\x0c\x88\xbfh\xa6M\x81ZI\x87?:@\x0e\xe6\xc1%\x96?/\x86\xca\x8e\x83:\xad\xbf\xf4b\x96\x02=~\xb7\xbf\x9d:\xb4n\xa2J\xb1\xbfi\xda}\xb3y\t\xa6?\xccJ\xeb\x0e$\xb7\x93\xbf\xce\x12\xdd\xb69\xbd\xb4\xbf\xc0\x0e?\xbf\x81\xa9l?\x8a\xd0E&\xdeAU?\xdc\x80\x90m\xd3\x89\x88?\x9a\x14)G\x8c\xc9\xa5?\xd6sC\xd3\xa50\xb8\xbfV\xfb\x0c\x16{e\xb7\xbf\xb5n\n\xb3\xf7\xfc\xb1?B>i\xb7Hn\xa0?DP\x82\xbaT\xb2~\xbf\xbd\xd6\xfd\xdb\x80\xb0\x98\xbfF\xe8[\xf5`\x06\x97\xbf\xf0D\x82E\x9a\xbb\x84\xbf\xad\xea\xa1h\x1b\xd0\x94\xbf\\B\xb0\x8e\x8b\x17\xb3\xbf\x11\x064\xc7\xe13\xc1\xbf\xcd\x18\xc1\x9df\xbf\x8a?+\xa2f\xed\xff\x99\xd1?\xbd\x82\xf7M\x8cq\xcd\xbf\x92\xcb\x98\x8d}\x82\x9a?\x9e\x05K\r\xd5N\x91?\n\xa4K\xf1W\xc6\xa0?\x9d\x86-\xde\x0eL\x9c\xbf<!x\x82\x19\xacb\xbf\xfb\xc3\xd5X*\xdf\xa6?\x81\xdc\xf2\x01[\x10\x83\xbf\x97\xa7jhU\xd3\xa0\xbf\xe5\xacE\xa8\xf5\xc9\x90??\xe3\xbb\xf7\x9e\xec\xc1?\xc3a\tN\xfd\xf4\x8f?\x81\xe6\x1c\x9eP/c?%\xb7S\x14\xae \x89\xbfN\xe0<\x01\x10p\xaa\xbf\x13v\xdc\xb3\xa42\xa2?pL\xfd\xbf\x7fN\x97\xbf\xc9Q+\xea\x0c\x9e\x98\xbfGc\xc4\xa9\x80Z\x88\xbf\x8a=`\xe4\xa5Uy\xbf\xc9ll\xa2\x8cD\xb3\xbfa\x9dQJX\x92\xa0\xbf\x0f\xef\x99@M\n\x9b\xbf\xb9gj&Ys\xc1\xbf\xc3\x8b\x9f\xdb\xdb\x01\xf3\xbf\xca\x13)`\x15f\xac?\xc4\xf2ue[4\xbb?\x99x\x0f\x1b\x81\xb5\xa4?,\xc3\x94\xe5\x08e\x97\xbf(;Q\xf1\x99\xae\x89?\x16\xf2\xa2\x1b\xc7\xf7\x9d?\x11\xda\xe64\x9bC\xbd\xbf\xab\x83HW\xe6\xc3\x9f\xbfoO\x04\xf8&\xa7\x96?/\xbfI\xbdd4h\xbflA\xc3\xe4f\xf3z?Qee\xba\xd2\x19I\xbf\xcf\x18\xf3\x9d\x8cs\x98\xbf\x97;&\x90\x82\xf9\xb3?\x89\x96\xd4B(<\xc8\xbf\xc1\xbb\x08\xc0\xb0\x94\xa0\xbf<@\x9e\x92\xf7\xec\x93?\x89\x9a\xcf\x8c\x8e%\xa3\xbf\xf9\xb3|\x8c\x88\xe1\x97\xbfLQbo,\r\x86\xbfYr\xb1\xa2H,\x8a\xbf^Hld~W\x96\xbf\xfe-\xe5\x1d\xca\xd1\xbe\xbf;\xe6VB\x06\x80\xb9\xbf\xb3\xf5\xf4\x90\xfe\x90\x95\xbf\x12h\xf0\x9f\x0f\x18\xc3?K\xc8`\xfbU\xf1\x9c?\xdd\xdca\xaaC\xca\xaa?\x04se\xce\xaf\x9e\x90\xbf\x0f\x9a\x917\xe9f\x90?\xd0\x17\xf3\xf7H\xcb\x94\xbf#M7\xe8\xa4\x93r?\x9da\xd1\xa2\x9dT\xb2?\x08\xf3\xc7\x0cm\xde\xa3\xbf\x98\x93\x7f\xe3\x15\xd9\x86\xbf\x0e\xd0\x93\xbf\x8a\xb1\xb3?\\to\xe1\xc8\xc4\xa7\xbf\xac\xd7+\xf40PT?\xfa\xa1@\x9fj\x9a\x9e?\xc7.\xdf\xd1yD\xa0\xbf\xca\xa0q\xfe9 \x8d\xbf\xe7\xbc>\xec\xc1\xa9\xa2?\xd0\x19\xe4\x9a,\xbaC?2\xc8\xe2\x16\xb3\xca\x96\xbf\xd1:DzDj\x83\xbfb\xe8r\xcb\x9c\xc4\\?\x154\x8fT\x8e\xf4\xaf?\xe6\r\\\x1aLL\x93?1+\xff\x8b\x14k\xb8\xbf\xb8\x8f\xc31J\xe6\x81?\xfd=d\xa4\xd8\x03\x8d?g\xde\x14\x17\xd3fs?\x88"\xf7\xc5\xdb&\xa4\xbfK\x7f\xdc\xd6XT\x84\xbf\xccu\xda\xba\x16r\x97\xbfx\x12,\x91\x8c/\x81\xbf\x93d\xc6\x00\x12\x1aw?m\x1eo\xe9t\xcaw\xbf5\xa8\x95\x9f\xd4^\x90\xbf\xa8h\xebH\x01\x13\x91\xbf(\x02\xd4L\xc7\xcf\x8b\xbf\x8fz\x06\x01U\xbb\xa8\xbf\x8e\xca\x15\xa8\x16\x13d?\xbb\xac\x0bn\x91\xc5\xb3\xbf\x03\'%\x88\xa9\x05\x99?Pv\xee\x1awU\xa1\xbf\x98X\x96\x93\xa0\x99a?6\xb3\x06\x96!\xe7s\xbf\xbe\x81\xfbOX\xc7s\xbf&\x91\x8f\x85\xfe\xef\x87\xbf\xcaE\x9d9b\x06\x94?\xb5\xaf\xba\xe0Y\r\x87?.\xb9`E\x02\xf9\x85?\x99\xa2Y\xfa\x8e2\x85?x$\xcdi\x9aRt?{\xc5\xa1\xaa\x89\tE\xbf3\xfa\xde\xef\x94\x9c\x93\xbf\xa0\x8e,\xd2\x9cu\x96?U\x98\n\x9b/*\x9e\xbf\x9dQ\x0f%\xc2\x12j?\xa3\x81I3c^\x90\xbf\xc0\xc5\xa6\xbe\xcc\x0f\x99\xbf2"\x1c\xf5\x0b\xc0&?9u\x98\xd5\x9c\x7f\x88\xbf\xbf\xa9\xc6\x87u\x82\xa0\xbfh\xb3\xd8\x83\x81~\x96?\x1f\x1b\x190\x9b\xac\x8a\xbf\x7f\xd1\xd6\x17\xe4\xbd\xa0\xbf\x86\x107M\x88y\xa0\xbf\xb6\xe2\xb9w\x11\xcc\x91?6;\xf0)\x10\x17\x8f?\x98\xd4f\xc5\xd4\xec\x10\xbf3\x93\xc8\x17]za?\xc6\xc8\xd8\xf4\x93\x00\xc2?\x02bn\xb7f\xda\xa8\xbf\x82\x8e[\x16\xf5Z\x88?\x1e\xa2\xc3\x9e\x18B\x86?\xf4w\xab\xe7l\xcc\x82?\'\xb1\xad\x8bb\xe2Y\xbfCf\xa6\x81x\x99b?\xcd~\x1e\xa5(-~?\x0f\xdf\xe3:\xa1\x9c{?\xc8=\xb1\xd2FG\x1c?\xca\x96vyM~F?cG\t\xe7\xa5\x08\x8b\xbf\x96Vn\xaa\xd8\x89{?\xa6r_\xf5\xd8\xb6i?\x13Lwg\xe6\x7f\xaa\xbf\xf82\x85\x18\xac\x98\xb2\xbfW\xba\xf0x6\x9dh\xbf\x04ng\x08\xc7\x17\x84?\x83\xa9\x80\xdbbUG?V\x95\x1f\xb3\x07\x04u? \x94m\xa4\x82\xe4s?\xcd\xf6\xa7\xa0\x8c!\x8d?\x1d\xa0\x87\n\xea\xfcq?\x95 *x+b}\xbf\xc5\xeef=\x02\x83q?\xb5\xfa\x1a:\xdc&{?m\xbc\x91\xde\xb1\x9f\x80\xbf\xe1|\xe49\xa4\xf1\x9f\xbf\xea$\x8b\x13\xa8|Y\xbf\x95u\xf4\'r\xde\x8e\xbf\xd8}\x88x\'5\x96\xbf\x12\xbe\x8e\xe2~\xe0b\xbf\n\xe9"\x92\x1c\xe9\x8b\xbfd\x83\xee\xda\xa8\xa9C?\xe3\xbd\x08\xcd\x08Ax\xbf\t\xdb\xefB\x95\n\x82?\xafGN\xea\x19:w\xbf\r\xbe\xec\x94\x04\xea\x89\xbf\xcd\xb8\x80\xde\xfc\xdd\xb4\xbf\xf739W\xce\xe0\x99?iD\xc7@\x9e\xb9\x96\xbf\x9d?U\xff\xf5]x?\x9e \xd9\x9d\xb5\x05p?\t\xc0\x89P\xc0QX\xbf\x8e\xf9O\xe9\xc2\xe7\x85?{\x10\xcbw\xf4\xd1O\xbf$\t*\xc8\xb4\xbb\x93\xbf\xbc\x8c4\xc3\x95\x8f}?\xb9\xf6\x13\x04\x9al\xa0\xbf2*\x15\xfep\xfb`\xbf\xcc\xeb\x90\xfdcl\xc6\xbf\xa7\x9a>\xd1\xf1BD\xbfzB+\xc1\xe6Z@?\xeb\x99\x8c~\n\xd7\x8c?\x86\x92\xd4B\x98\xa3\xca\xbf.\xcb\x91\xbf|<q?\x95\xa1\x02\x136\xd6\x8c?\xc3x1\xc6\xae\xfe\x93\xbf\xde\xd3`\t\xb0\x90\xbc?\xc5\xe5\xd5\xe8\x16\xae\xad\xbf\x9f\xef_\x17\xfe\xb0\xaf\xbf\xaa\xf0\xba\x07Fe\x93?\xcfTz\xa8\x1f\xfc`?\xc3\xd0\x1f\xd7\x8e~\x89?\xc6 \xab\x8e\xaf_\x9b\xbf\x1f\x89\xaf\x98\xc0\x8b\x7f\xbfy\xc0\x81x\x92oj\xbf\xe4\x041o\xd0)\xc5?]\xae\x10\xfek\xed\x87?\xd9\x99\xd4\x857\x01\xb3?G\xeb\xf3\xc8\xf1Z\xb2\xbf\xe4\xbc\xa6\xde\x9f\xa6\xc2?\x1c\xc3\xfaq\x00\x81\x97\xbf\x19\xb2\x8b:L\t\xee\xbf}\xffT\xb7\x8eSa\xbf_;\xf1Z*\xd4`?\xfb\xf4|Vo\x86\xae?\xd0o\x9c\x8f.\xe3\x90?\xbc\x9c\xf7Pn4\x9e?\x1fi\xb8\x93\xee\xea\xc0\xbf\xd6\xdcC#\x0f\x17w?\xa6\xfe)\x9e\xe5C\xd4?\n\xdaC\xf4\xb2\xdc\xa2\xbf\xe9s\xa4\xa5j\x95{?U\xe8\xd7\x11\xdca\xb1?\xa7WY\xf9\x0e\xeb\xa7\xbf\x03\xd7\xb6\xd4x\xd7\xc4?\x94\x1bh\xa1\xdb$\x85?b\xb0K\xf4\xed>\xb4\xbf\x92\t\xe8\xc6\xfe\xd9f\xbf~,\xef\x9bNO\xa6\xbf\xe2\x160\x9b`\xfan\xbf\xd3.\xb5/\x93\xe0\xbc\xbfS\x11\x9f\xde\x02\x14\xeb\xbf\x11\x8f\xb6$\xc8\x8c\x95\xbfN\xbf,\x98\xf9+\x94\xbfr\x1co\xc9\xe3\x12\x96?\x86\x04\x9fwK\xf4\x8d?++u\x9c~\xda~\xbf5\xf0\x18\x90\x17y\xab\xbfZ_\xca\xa4.\x91\x93?\x89Z: \x12\xea|?\xfe;\xc4\xa1U\x18\xc5\xbfe\xaa\x90\xc1\'\xad\xbc?\xc8\xb2_J@\x88~?\xc1\x86S\x9f\xfb\x8d\xb5?\xad\xe5\x7fVR(\x90\xbf\xc5){H\\\xfa\x8d\xbf\xd2\n\x1c\x11\x7fJ\x97?\xee\xf7\\\xd2}\xfey?\x14+\x9c6\x87B\x97\xbf:\x82\x87\x7f\x93V\x9f\xbf\x039"c\xd0\x0f\xd8\xbf\xc6\xe0\xa6h\xcbw\xc0\xbf!\xab\x19\x1f\xe4\xd9\xad\xbfDd \xb4\xa0\x1c\x80\xbf;\x97\x12\xda+\x16\xa4?\xf2\x93o\x18K\xc8\x9b?\x0c\xf1\t\xcb\x9b\xb1\xb9?\xda\x02\xd2\xab\xe0\xb0\x95?\xc4:\xbfnhT\xc1?\xbaxVIf\xe7\xbf?\x07\x89\r\xa6.$\x9b?=\x91\xc9\xd7\x8f\xe1\xaa?\xeb\xf8@\xd7d&\xbb\xbfk3F\x06#\xdd\xbc\xbf\xce\xafDr\x08\xe0\xa4?\xb4\xd0\xb7\x15x\xb3\xbd?q\xf6\xea\xf2\r\xcd\xae\xbfkW\xcd\xa5E\x91c\xbf\xdd\x1a/\xf7\xed\xec\xa1?\xb8\x0e\xff\x00\x00\xea\x9b?,\x1fV\x92\xfc\xe3\xc3\xbf\xf0\xf2\xca\xc9\xea\x96\x8c?r\x97j<\xd7\xaa\xc6\xbf\x1a\x14\xfb\x9e]\xce\xa0\xbfb\x02\xec\xe6\xf1\xdf\xd7\xbf\x08#`p\x8fd\xa7\xbf\xec\xe5te\xc1\xd6\x8a\xbf`\xcf\n\xea\xea\x8c\xbd\xbf \xd18\xa54\xdc\xa9\xbf\x94\xe1r\x7fD\xe3\x80?\xc1\'\x98FUD\x82\xbf\x9c\xba\x9d\xc6\x8f\xd0\x93\xbf\xaa\xfc~\x8ez9\x8a\xbf\x05\x00\xec\xda\xc3R\xc9\xbf\x0b[\xaa\x9d\xbf\x17\x9d\xbf\xdfm\x18\x10\xe4\xb6u?I\x03\x13\xe4\x81\xd1\xa2?\xe9\x05\x02\xd5{$\xdb\xbf\xd8*\\\x9f\xd8\x81r?T\x078\x18V{\xa5?4\xa7{\xd5\x95\x17\xd0?t\x0b\xad\x01#^\x95?\x08\x04z\xdf\xae\xf4\x83?\xca\xa0\x0c\x97\x0bC\xd2\xbf\xd1\x8bg_9k\x8d\xbf\x1d|b\x0eM%\x9b?us\xdck\xee2\xa1?u\xe81#\xe8\x0c\xae\xbf\x91<zG\x0f\xae\xa3\xbflT\xb9\xad\xef\xd0\xb7\xbf\xdc\x99/\r\x9c\xa2\xac?\xc0\xfa\xcc^\xc8\x91\x80\xbf@\xa0\xe1@t!\xb1\xbf\x89\x81\xa4\x9c\xc2 \x82?\x1f\xe8\x11IQ\x13\\?\x15U\x17\xeebt\x8a\xbf2$2\x85y\xf8\x98?\xcd\xf8k\xcf\xc8\xeei\xbf\xc2\x95\xf1\x02\xfa\x14\xb0\xbfy\x9a+z\x98\xb9u?\xee\xe9*_(V~?\xe9\xdc\xfbpph\xb1\xbf"C\xdd\x81\xf6\x7fu?\x1d1\x00,\xc8c\x81\xbf\xdc\xf4\x872\xe5X\xa0\xbf\xc3\xc3~E\x809\x88?\xfb\xf4\x81$\xf0\xa9\xb1\xbf\xf5\xea\xd4\xd56\xe4\x96\xbf\x19\xc3P\xf2\xbe}\x82\xbf*\xca\xaen\xc66\xc1?\x11\xdb\x06iPC\xa8\xbfa\xd8\t\xa3\xe8\xc9\x88\xbf\xcb\x02"\xc6Ga\x8e\xbf\xc1\xf5.\xed\xa2\xde\x8b?\x0b\xa7\x8e_I\xc6|?\xe2&\xc7\x8b\xf0Eg\xbf\x00\xa9^\x81\xe1\x90\x92\xbf\x1fo\xdf\xe8\x11Mp?\x9a\x89\xde\'\xc21\x9d\xbfBz{w8\x12\xa7? 0\xe9+-\x0e\xba?\xcc[<\x9bq \x9e?\xf7~\x9a/)\xbbj\xbf\xb6\xd6\xc5O\x0eL\x87\xbf\xc1\xca8\xc23\x1a\x82?\x99\xa5\xc1Ftd\x9b?B\xe7c1R\xf1\xa8\xbf(k\xd2Z\x17\x1a\xa0\xbf\xb6\xfa\x99n\xcd\xf4\xa2\xbfv\x87h\xca\x06}\x89\xbf\x13\xba3h\x12\xad\xa2?\xeem?=\xf9\xc9\x9a\xbfhZK\xcd\xd9\xde\x9a\xbf\x03<\x8f\xc5_\xf6\xa5\xbf!\xd4\x19\xdc\xc8\xb8\x9a\xbf?EX{\x04\xb7\xae?\xe5\x87\xdc\xc5\xd0\xe5\xb2?\x02\xc1\x8f\x1b\xae\xaf\x9f?r\xd2_o\x9e{\x9a?K\x8cC\xcdPV\x98?\x94=]$rtC\xbfE|\xcf\x17\xc2\x0e\x83?\xaf\xee\x94\xb1-\x94\xa6\xbf\xbe.(\xee\xe0B\x8e?\x96z\x0ey\xdf;r?\xf0\xa8\xe5\\\x9f\xa1\xe4\xbf\xf1i\x1a\x85V(\x8b?q\x16\xcf\xbf\x98\x8fL\xbfs\xb6JZ\xed\x8f\xb5?V\x0fjSfs\xc0\xbfN\x1f?\x02A\xddk\xbf\x18\xf7\xec:\xfd\t\xa6?\x1c\xc9x\xde\x1c\xd3v?\x13\x14\xcdGI\x9d\x86?S\xf9^\x0b^z\x9f\xbf\xd0\x19\xc5\xfb\x85\xd4C?\x92=J\xfduH\x8c\xbfn\x0cg\xfe>{\xb6\xbf1Gc"\xb1<\xaa\xbf\xf52\xeb\xe5\xe9\x87d?E\xa8\xd4\x1a4E\xc0?\x0f_\xbb\x16\xe3\xc8\x94?\x83\xeb\x1c\xb3\xc65\x91\xbf\x0eR\xae\xc0\xc4v\x8d\xbf\xa8\x9b\xbac\xef\xb5\xa3\xbf\x18\x93a<\xbe=\xa1\xbfH\xbc|\xdc\xf9\x96\xa0\xbfw\x9d\xab\xe7%\xfb\xa2?\x98\xb8\xebq\x18\xac\x9d\xbf\xa3\xc2\x12\xfc\xf5!\x8f\xbf\xe9\xf1\xd1b\xc3\x90\xb5?;Q0a\xe8iE?\xbb\x90\x9a\xd2\xb6\xe8\x85\xbf \xe4\xe6\x9ef\xa3\xa8?\xcf\x0e)\x83\xf1K\x9e\xbfo\xd7\xf1\x06\x19\xc1\x95?A$\xcfU8;y?\xf5D\xf0O\x8c\x19\x92?\x86\x94"m\x08\xb3\x95\xbf\x9b\x85\'\xa0\xaa{\xcc\xbf\x84\xeep\x1b\xdf\xbf\xab?9\x83\xc1m\x8c\x87\xa4?<vJ\xdf\xc4\xd8v?_\xb8\xd9(\xfe\x8a\x83?I\x15J>W\xa1w\xbf4\xf6\x1e\x12\xe8Y\x7f\xbfb \xb6X\xfb\xc8\xb4?\xdb87\r\x8e&\xb1\xbfVK\xe5\xef\xb9\xb8\xb7\xbfI/\xd40\x99\xeb\xa1?]U\x10\x0b\x07\xb6\xa6?\xe9\xd3\xe6\xc4\xcf\x90\x80\xbf\xdc\xa4\xaf\x8d\x83\xec\x99\xbf\xb5]~\x99v\xa6\x90?p\x9f\x19\xc5\x15\xf6\x8d\xbf\xc1N\x10\xa2\xe4\x89\xb7?.\x11z\xac\rS\x81?k\xf6\x0e\x1bU\x06\x8c\xbfH\xe23\x941\x0b\xb1\xbfq\xfb\xa9\xdd\xb9\xb4\xb2?Q2\xa7\xa5\xac\xc5\x88\xbf\xe5\x88/<;g\xe0\xbfci\xe4\x91\x9dt\x88\xbf\xe9\x8eZI\\D\x8a\xbf"\xd2V\xbf<\xfd\xa6?\xef\xb5\x17\x01\x98\xd5\x8e?\x19\xe3\xcb\xd6G\xdd\xb0?,\xca\x1d\x00\xf2\x9d\xad\xbf\xd5,\x84\xb9\xac\x08^\xbf\xa5\xb9>\xa4G\xd8\xd3?\xc0\xef\x1a\x8dHy\xb6?Y\x11\xfbz\x1bRf?\xa8q\xb1\x8e\x90Y\xb4?lx\xcd\x92d\xf6\x8b?\xe1\xaa\xaaY\x19?\xa2?a\xb4-\xca\x15\xe9q\xbfX\xd9\xd1A%\x97\xac\xbfR\x86\x9a\xfb\xfe\xe6w\xbf\xab\xdb\x13\x05\xef\xfe\xaa\xbf\xab+\xb1\x8a\xc6up\xbf*k|gY0\xbe\xbf\xfe\x14\xf3o\n$\xee\xbf:.4W?\x19\x92\xbf\xec\xd9\xb5\xf6YR\x92\xbf\xdb\x01\xfd\xf8e;\xa7?o\xfa\x8b\xa0\xacy\x9a?u^K\x84ZR\x80?o\xc3\xc7-,\xa0\xe9\xbf\x88t\x14sZ:\x82?"\xdbs\xdd\x02\xfaY?\x1a\xff\x91\xa1\xaf\x16\xb6\xbf\xd8\xaf"\xf9|\xb9\xbe?\xb6\x18\xba\x19\xd2M\x8e\xbfosN.\xef\x08\xbd?\x15J[\xbf6\xc0\x89\xbf5\xf8g\xed\x0b`x\xbf\xe8\x8d[*\xaf\x05\xa4?\xf5|\x8b\xb0\xe7A\x82?,)\x0b\xdcoR\x97?\xb1t\xb5\xa8V\x1a\x8a?K\x0e\xb1\'\xc5\x0c\xcb\xbf%\x14\x7fg\xae\xe8\xaa\xbf8\xce\xc6\xb3\xa0\xa0\xa6\xbfh\xc6\xb4W\xa2\xa6}\xbf\x85r\x0eh\xffW\xb1?\x1c\xbdN\xec\xf2.\x9a?* \xf6[\xd3e\xbc?\xd5\xa05!\x8e\x8a\x91?]\xbf\xd0}\xdc\xa7\xcc?<\xff\xaa\xd2\xe2\xcc\xc6?\xc2-$F\x8aH\xa4?\xb5C\xbbhGr\xa2?\xd6W\xfe8JT\x96\xbfC\x13E(\xcd\x98\xc0\xbf\x9f\xe3x\x89\xb3S\xa0?\xc0k\xee\x1eMC\xba?\xe2psG\'\xd9\xa2\xbf\xae\x89\xa0\xb0\x13\x14\xa0\xbff1\xce\x8c\x85m\x85?8\x82Q\x8e\x1a\x81\xaa?\xd58\x1bP\xa9\xb1\xbe\xbf?_\xed\xca\xe9\x91\x91\xbf\x07\xbc\xd5\x92up\xbe\xbf\x11Z\xdc\xd3\xdcs\x9a\xbf\x8aX\xa3|\xfbe\xd4\xbf\xf8\xdb?\'\xa4\x19\xb0?\x8e%9\xf4,\xb7\x90\xbf\x13P\xf9\x11\xef{\xad\xbf\x10h\xc5\xe2Kh\x9a\xbf\xae{\xdeA\xd9\x81\x83?d\x9c!Y\x8eU\x7f?h>\xab\xe3\xebO\x80\xbf\xea\x8c\x80\xd7!\xd6{\xbf{\xd7\x87d-\xc7\xd1\xbf\x19\xef\xf6\xa5\r\x04\x9b\xbf\xc9\x0f\x03\xb7KI\x85?\x96\x10\xe7\xfdS\x9d\x9f?\xb56\xc3\xbf\x15_\xd5\xbf\xec\xdb\x96\xeb%\nq?\x81\xc9\x87\x05\xd72\xaf?\x0b\xed\x1c5\xe5\x0b\xc9?\xb7(/\x9fV\xe1b?k\xf4\xd3\x01\x98\xb7\x86?y\xe4\x96\x1b\x1d\xdf\xd2\xbf\xac\xd20\xe85L~??\xbe@\xf6\x0c\xf9\xb2\xbf\xd9!\xb79\xc6*T?_\x10\x016\x9b\xb4\xa6\xbf\x9c?\xba\xae\xd6\xd8|?\x05\xeb\xd5\\!|\xd0\xbf[\x8c\x00\xb5\xdf\xd6\xa5\xbf\x95\xb3I\x03R\x1b\x8d\xbfH\xb8\x8a!\xd2\x0ey?\xf6\x0f\x92xhd\xa2\xbf\x98\xc5\xfb\xae\x8c\x0cS?\n\x8b\xb5.\xe7\x03\x98?\x04rr1t\xe9\xb3\xbf\x8e\n\xc5v\xd8:~?\xc1\xf7\xfe\xcf\xfb\x02\xb2\xbf\xd6\x0f_\xb5\x06\x8c\x96?\x8b?OTD?\xb0?\xc1\n\x0f\x8d\xdeLV?\x96\x9c\x8cu\x80\xfe\x84\xbfC\xbc\xeba\xddu\x85\xbf\xa3\xbc\xd2X\x7f\xf9\xcb?\xf7\x85\xf3S1!a\xbf\x8c\x82\x04\xb4\x1e4\x9a?\x15Fy\xd6\xd7U\xa2?:\xb5\x8c\x15\xa6\xc3\xe9\xbf\x87.\x98=\xdc\xb9\xbe?\x16\xc4e\xb0c\x05\x9c?\xd9\xe6m\x9dU\xaf\xcf?\x18\xa3.m\xb9\x14\xb0\xbfm\xbd/\x9e\xcbr\x9a\xbf\xde\x1a\x91\xe5\xd6\xd6\x9a?\xf5sPJ#\xb9\x92\xbf\xd6V\xc4\nX\n\xc1\xbf!\xec\x8e>\xac\xc9\xb6\xbf]\xe3\xa5\xf2Hq\xaa\xbf\x91\'k?\xb3\x1a\xab\xbf@\x88\xf4\xb5as\xce?\xdfqBM\xe8\x9a\x95?\xdc\xcc\x1d\xd8\xf1\xb2\x92\xbfi[\xb7\xac\xbe\xc2\x86\xbf\x11S\x97\xe2\x14\xaf\xa0\xbf\r\xfe\xa3\xb2\xbb\x84\xb2\xbf\xc4u\x01,\x1a\r\x96\xbf\x14\xd1\xeb%\xd0IX\xbf8l\xf6\x1a\x159\xb3\xbf\x9a5\x8e\xfc[1\x8e\xbf\xe8\x85\xd8\xdcA7\xc0?\xff=\x8a\xd7M\x12\x8f\xbf\xa3\xfa\x18\xca\xda\x9e\x98\xbfZ^(\xc2\x88%\xc0?\x0ftD\xd8\xa8\x03\x96\xbf\xf4H\x94^\xe4\xe7\xe2\xbf\x93\xa0\x9d\x01m\x1c\xcb\xbf]\x1c\xed\x04I\x10\x99?\xc30\xae\xef4K\xa6?\xfb\xf5GI4\x99\xcc\xbf\x05\xca\x14\xe4T8\x90?\x1cdks\xb6\xbc\xca\xbf$\x1b\xa3r_\xd7D?[\xb0D}!\xd7\xab?\xd7\xde\x92\xce\xad\xba\x89\xbf!n8f\xfb,d\xbf\x1f\xdbJ\x92\n\x0e\x81?>\x10<=x\xa6\x9c?&\x9d\txVn\xa0\xbf8G\x7f\t\x02q\xb6?Ty6gW\xfbr?U,\x01\x9e$\x13\xb1?8\xee\x9f\xc5\xf0c\xb1?\x127\x8e"\xef2\x92\xbf\x1a/\x07\xaf\'\x0c\xcf\xbf\xbett>0\x1f\xbf\xbf+\x9dH\xa9\x92\xa3\xb1?\xd9\x8b\x94\x80\xfb\xc0\xaf\xbfK\x87bU=;\xb3?\xfa>@\x9d[y\xcb?=`.\xebE\xc2\xc5?\x0fZ\xdc \x14\xebH?\xfd\xbd\x8c\x1a!l\x9a?\xc7\x06\x0f\xb8\xe8\x07\xc8?\xb0Y\x9c\xfd,\x82\x9a?\x11\x10\x0cG\r\x85n?\xed\x9c\xbf\x88\xd6\x94\xa5\xbf\x19\xca.\xfd!\x98\xb4?\xb0pO\xcd\xcd\x81\x99\xbfy\x8a[\xd0\xf2\xeb\xa3?\xbb\x15\xdb\x87B$\x97?Z\x9dX8\x9c\x08\x88\xbfN:l\xf0O\xb6\xb1\xbfa\xe4B\x82/u\x86?#5\x08\xaf\xc0\xb6\x93\xbf,\xc6\xcf\xe2\x00\x02\xc4\xbf\x89\xcf\x06T\x9f\x02\x9a\xbfW|\xdeJ\tuC?\xc9#\x1e\xae-\xa6\x80?\xa6\x93g\xf2\xde\x80\xbe\xbf\xa9BU\x12\xd0\x10\x9a\xbf\xb7\xe5\x03AM\x9f)?\x11mz\xd8\x0bQ\xab?/\xbd\x19\x16kN\x80?\x90<\xa6\xb7P\xa4X?\x0e\x01\x1a\xb3\xe6\xf9\x8a?\xe6\xab\xc0\xc2\xa9&Q\xbf\xd4\xf8`\x0eP\x19\xa3\xbf\xc7\x9d\xe2\x1f}v\x83\xbf=H\x8d\x1biTl\xbf\xa6_\xc0\xc0J\xf6\x98?,;\xfcS\xb6\xe7j\xbf\xeb\xc6\\\x07/+\x8b\xbf\x8b\x83\ty\xac\x0f\x82\xbf\xab\x1f4\xa94\xe0>\xbf|n\xc9\x9d\xb6\xf6~\xbf\xf6\xb1\xec\x14\xffe\xd1\xbf\xe0\xe3\xf7\x9d\xda\x7f^?\xd3\x1e\x03x\x85\xa0\xb7\xbf\xdb\xf06]g\xdf\x96?n!\xf9\x92\xdc\xe8\xa4\xbf\xbdR\x86\xc2\xb6\xc4s\xbf\x7f\xa7\xba7Q\x08T?\x97+z\xdd\xe59\x9b\xbfuB\x82\xa5\x16\xefc\xbfl\xd2\xa8\xb4fY\xa0?\xd7\x87\xd9i,Js?u\x91\x0095T\x83?\xa74\xab\x1e\xc6\xfaR?\'\x8f a\xe5b\x9d?eb\xa6#\'\x0c\x80\xbf\xb3\xaen\x85\xd4\x96\x90\xbf\xea\xde\xa6\xb8\\8c\xbfj\xb2|I5\xc2\xa1\xbf\xbf\xfb\xf5\x94\x0cL\x82?\xeb\x8e\\Q\xbc\xaaN\xbfx]\xa9\xa8\xd3\xc8\xa0\xbf\xd3\xce\xed\xd0X,y?K\xf3P\xb8\xfd\x17\xa4\xbf\xe5\xa2I\x89\x17S\xa2\xbf]\xb8\x08M\x07\x19\x91?\x97\xbc\xdd\x1e\x98dM\xbfh\xef\x03\x98u>\x98\xbf\x96!\xcc\x91\x9dg\x98?\xed\xe5&:uQ\x82?\xa2C\xf6\xb5Md\x92?v\x8a\x1aUY\xe6j\xbf!\xab6$\x9c\xb9b?L\xc1\xf8QT\x92\x99?\xef\x13\xef\x0c\x940l\xbfnBJP\x99\x95\x88\xbf\x81\xc0\x07\xfa=h\x87?U\x05:\x06\x9f\x98u\xbf\x06\xf8\x00vF\xa5\x96\xbf?f\xb4\xcdn\x13{?A\xfc0c\xdd\x1c\x90?\xc5\xf8@ \xec0\x80?2h\xe2\xd0U\xa6`\xbf\n\x16^\xb3\x9f\xa2$?\xbe\xfc"\xd2\x11\xa5q\xbf-\x14\xde\x07\xd4#`?\xdb\x90\x97\x80n\xdfr\xbf\xdc\x99\xb5\x83zS\xa6\xbf\x86\xb8\rD\x95\x91\xc6\xbfky4z5mz?b\x1a\x8d/\xe0\xd8\x87?\x1eA\x0e\xc3\xa23Z\xbfx\x03#\xb2\x94*f\xbfE\xa0\xdb\\Yya?\xc0\xed\xee\x858\x957? \xb3\xa4\x10p\x93\x86\xbf\xd7v\xd5&f\xfaW\xbfHr\x11\x88\xec\x8ac? W\xdf\xac\xc1v=?\xcc\x116t\xc2\xd4\x97\xbf^\xd4\t\x91\xb1U\xaa\xbf\x89\x8fo\xb1n\x81y?\xca\xbcb\x1c\xf1\x9fs\xbf\x1d\xd0M\xf8~\xf1\x95\xbf\xa8\x0b`6!Lx?\xf8z\x19\x9e\xf9$k?h\xbc\x14\x0f8)y?Fr\x16\xd3\xb3\xa5;\xbf\x9d+\xcf\xb5\xff\x10\x8d?\xd6\x01\x8a\xb4\xec\x80\x82?\xbb\x11\xd2\xe8\xd2\xfbr\xbf\xd9\xbd\xeeY\xb9\x1a\xbd\xbf\x9a\t\xa2\xf4\xc9\xf9\x99?eJ\xa9\xb1\xdc\xe5\xa3\xbf\x0ef+\x91\r\xde\x8c?t\x1a!\x04\xd1\xbe|\xbf\x85 e\xe6\xd1\x04\x87\xbf\x1c7\xd7}\xde\x9bz?\xb6Rt\xe9\x1e{Q?\xb1I\x01\xa4B\xae\xa2\xbf\x0e\x95\x14\xc3\x86H\x88\xbf\xa7\x00XvH\xefv\xbf\x182\xbaf\xef\x83X?\xf3+\x90\xc6\xcd\xcc\xb2\xbf\xa3\xee\xd6\xee\xb3\xb3\x92?gTE\xc9\xbe\x19P\xbf\xf2\xfbY\xecx\x8e\x95?s \xd3\xd1\x9aN\xd2\xbf\x7f\x13S\xd9\xef\x86o\xbf\xdcj~U\x01\xa9\x8c\xbf\x14C\x82.\'\x94\x87\xbf\xa7\x04\x81\xbe2L\xf3\xbf\x82\xa7\x05Ey;\xa8\xbf\xa0A\xbcf\x93\xb5\xb4?Nr_\xfa\x92\xbbt?%\xfct\xd7J$\xd4?J\xb0v":ub\xbf\xbdt\xdc\x99\xb9\xee\x8a\xbf\xac\xc5\xe9x\x98F\x9f?\xcd]\xed\xa63\xdc{\xbf\x08\xdc\xc3s\xdct\xa0?\xf5Zy\xd9\xa1;\x97?\xd3\xe8\x91^\xa9\x0b\xad?\xbb\xc4\x87\xc9\x9c\x0c\xac\xbf\x05\x10\x1e8\\\xf8\xc0?\xa6x\xf2>\xe8k\xa7\xbf)r\x85\xcdI\xdd\xc0?\x9c;\xd4\xaf\x00\xca\x89\xbf)\xdd\xf0\xef\xf9"\x85\xbfz\xcd\xb2\xb8\xf5\x03\xc0?\xea\x03\x9f\xc1\x17\xce\x94?8\x0b[bA<\xa4?H[\xf56\x84\x8f\xc8?\xc7\xea\x85\x80dCJ\xbf/c\xc3\xdb\x18\x8c\x9b\xbf;@\x85`Lib?\x81\x844]\xdc\x1a\x81\xbfE^\x90]\x03\xd3\\?p(\xe8\x8e|\xa4\x95\xbf\xc1M\xed\xd5F\xfc\xa2\xbf@\xd8\xaa\x00\xc7\xcfD?\xab\x89\x9c\xab\xd8\x8f\xb7\xbf\xd0\x12*\xe8\x91Xs?\x1e<(\xc8\xee\xaa\xad\xbf\xd9\x90\x07\x96*5\xc0?\xb9q\xd2\x94\xac\xa8\xb3\xbf\xed)k\xdbnw\xc1\xbf\xccJX\xa04\xa4\xa0\xbf\x95\xd3\x18\xea\x8a\xdd\x96\xbfoA\x83D\x9f9\xdb\xbf\xaa\xdf\x00\xccN7\x8d\xbf\xc6\xebR\xf4G\xf6\xe1\xbf\xd2y)\xb4K\xed\xb0?\xdb\xaeX\xa7a0\x97?\xdf\x9fi\x91\x82\xe8\x8d?b\xaaK\xf58g\xc3?\xd2\xa3\\)5\x19\xb1\xbf+\xae\x87\x11\xab\x94c\xbfM\xebm\x91\x81\xa9\x95\xbf\xec\x0e\xc1[N\x9f\x86?*\'Awy(\x8d?\xd6\xfe2(\xbd}\xbd?7\xfc+\xea\xe8*\xd1\xbfn\x1a\x99X\x11\xfd\xa3\xbf\xeekW\xfc\x96}\x82\xbf\xb6"\xec\x1a\xc10i?\xe8A.\xc1\xc7\x0e\xab\xbf\x13\x97\xd1\xb3\x96\xfc\xa2\xbf\xd5\xacrM\x82\'\x89\xbf7]OF/Z\xbe\xbf]\x14\x08Inm\xb9?[\xb4\xd8\x03\xf8\xb6\xcd\xbf\xfd5\x0fv\x8eK\xa9?\'\xea\x8a\x12\x84\xa5\xec\xbf~eO\xb4\x03\xf6\x98?\xb6S\xbat\x85\t\xec?X\x89\xc2\x91_\xe3\xbb?\x82\x7f\xd5\'S\xd1\xb4\xbf8@\x1c\r\xa6\t\xef\xbfy\\q\xb5\x87\xc6\xa4?\xbd}\xfb\xd8\xf8J\xb1\xbf\xb4\xdd\n\xbc\xcc\xe7\xa1\xbfX\xccs\xd4\x8b\xc3q?N\xd7\x1dG\xfc\xe1\x90\xbf\x00\x98\x17cT.\xb3?\xeb\xc4HT\xe2\x86\xaa?\xbf\xad\xd0\x0c\x13=\xd2\xbf\x8fW\xff\x9f\x1c\xd8\xc9\xbf3\xdb?\xc0\xbd\xf7|\xbf\xc5$\xc7\x89C\xcd\xc4?\xde\x1d\xc0\x1d\xce\xae\xa1?\x10\xd6\x9b\xed\xe3\xad\x96?\x8a_\xd3\xf6X\xb5\x88?Y\x10\x8e:\x0b\xa9\x9e\xbf\xccw\x9en\xb5\x97\x8f\xbf\xbb\xc3\xdb\xf9OR\x9b\xbf\x190\x95\x12\xa1\xc8\x90\xbf\x89t$\x1c\x00\xcf{\xbf\xb6\x04\xdd\xafg7\xc9?\xa4\xa2\x16\xdf\xb4w\x9a\xbfZ-b=\xc2\xd1~?\xaetR\xb5\xd7+\xaa?7A\xfb=\x02\xd5\xd6\xbfw-\x06\x8asZ\x89?(5\x94\x0c\x97V\x90?9\x00\x9a\x81\xa6\xc9\xde?\xc3\x8e\x99\xa7\x8el\xb8?5\xf7\xd9\xf2\xc7`\x96?\xa5\xf3+\xbfo\x83\xb8?\xfb\x99u]\xc9\xe1x\xbf=\xf5\x0bN\xf6\xce\xcb\xbf6\xa8\xa4\x93\xd7\xa0q?5f\x11;\xa0\x9e\xa9\xbf\x14\xf2G{\xda\xe9\xa5?\x92\x9f\xe4\x14h`\xbb\xbf"\xa8 \x90\xf5\xfb\xa4\xbfW\xde\xc9L\x00q\x8e\xbf\xfd16\xc7\x04\x89u?M\xdeZ\x11&*\x97\xbf\xa9\x95j\xb2\xc4(\x8e\xbf\xc2_`v\xb7z\xd2?\xb0\x872IOn\x9f?\xad\xb5\x9e;2\xe7\x8d?l:_\xbd\xe0\xc8\xad\xbf\xf5\t?Q\xad\xa7\xb3\xbf?\x88\xb9\xaf\xba\xb8q\xbf\x8b*\xce\x1d\xae{f\xbf\xa9e\xdf\xfe\x8c\x9fp\xbfY\xfc\xc9\xfd\xb4\xe4\x8c\xbf\x83e7\xd38\x95\x94?!(\x11\xb2\x0b#\xa4\xbfp\xfa\xf0\xbdn\xa8\x84\xbf\x13d8w\x9ds\x86?\xc1\xb9\x07b\x0ep\xed\xbf)\xb0v\xd5\x87\xed\xb2\xbf\x85\x0e\x9f#\xb4\xfe\x9a\xbf\xce\xaf\xc3\x97\xd6R\x91?\x87\xf8r\x98\xde\x12\xad\xbf\x82\xf7\xcb\xf1e\x80\xdf?|T\x1d\x01\xe7\xde\x9c?\xb9K\n\x04\x9eA\x91?/C\xccjk\xab\xbf\xbf\xf3\xe7\xbf\xd9\xe0\x96\xed\xbf\xab\'^\xc8f\x05\xa7\xbf:\xe7\x19\xd8\xac\xdb\x97\xbfF0\xfd\x86\x83\x88\xc3?\xfe;\xfa^\xfe\x81\x92\xbf\xe2\xcb\x87W]\xe4\x92\xbfa\xebe\xbcj\xb6{?\xa1\xb2#\x87jN\xbc?\xe3\xef\x14\xf1H\xa4\xb1\xbfLE\x84\x8e\xbaLw\xbf\xe03\xbc{\xe3\xaaq\xbf(S\ta\x001\x8f?\xab\xb4c!/\xbf\x8a?c\xda0p,\xe6\xb1\xbf+\x1f\x8bV\xbe\\\xa5?Sj\xc1\xa8F\xd8\x85?\xc9\x90\xf6\x04\x9d\xfe\xb7\xbf\xa0|J\xf1\x99\x0f\x87\xbf\x95\xc2\xcd\xc5\xf9n\xe4\xbfv4\xca\x115I\xc1\xbf\x87B\xc1\x18\xbe\xf9y\xbf_\xe2\xf4#>\xad\x8f?\x18|\x90\xff\xd5\x15\xa3?}\x1e\xe4\xa1\xe8lk?3\x8f\x92\xe8u|\x8a\xbf\x84I\x14\x12\xad\t\x9d\xbf*\x877\x1d-\xaeq?\xb3j9vF\x14\x98?\x7f\xac%\xea\x823\x86\xbf\xb6M\x02\x05h\x8a\x97?i\x05\xa4\xc1\xd4\x87~\xbf\xb4\xa8\xea^\xac\xe4\x94?\xbc\x98$\xec\xcb0\xc1?\xdb\xe8\x85\x88l\xd4\x7f?\xda\xe6\xe2\xdf\x8b\x1c\xc6?\xfc3\xc8\xd1yD\x92?\x1d\xee{:\x1e<\x7f?\x0e\xff\x93\xf0\xb7(\xb5\xbfeS7\xd6\xd2\x19\xba\xbfG\xa0\x10R\xe5\x9e\xd7?\x9c\x17\xa5\xae\xe2N\xb1\xbf\x965ynN\xd8\xdd?\xd0Y\x19\x07\x9e\x9e\xdb\xbf\x80\x8fj\xec\xae0\xcb\xbf 9\xbb\x11\x9c\xfb\x99?\x8b\x8b0T:K>\xbf2\xc7\xaa\x1f\x84%\xd4?~\xf0h]\xbf\x95\x8d\xbf\xea8O\xdb\xc1\xd8\x82\xbf@\xe0\xb3\x9b\x08\x0f\xa7?\x14]\x05W\x9b\x9f\xce?tJ%\xa13\xed\xa0\xbf\xbb/\xf0d\x9b\xec\xa3?z\xc6\xd0\r f\xb5\xbf\t@0Vm\\\x92\xbf7+\x02\xc86\x0c\xa9\xbf\xc0\xba\xc1\x84\x14_\x9f?.\x84z^\x05<z?d+\xfdd\xedL\xf1\xbf\xab\xe7V\xfd\xf8M\x94?e\x1b\xb8\x90E\xbc\x95?\xf1\xef2]\x0b\x06\x95?\x11\xb7\xcaHnr\xa8\xbf\xeeD\xcf\xa7"\x98\xb5?0\x86S\xb5o\xf1\xbb?\xcc\xd4\x0b\x9c\xe7\xf6\x9a?VE\xda\'\x1d\xcb\x90?\xddF9>\x048\x7f\xbf\x16\xc50\x87R\x9af\xbfA\x99~\t\xebh|?BcrAii\xaf\xbf\xceX3e\xc1\xcb\x80\xbfC\x82>\xcc\xcef\xa6\xbf\x03\n\xb4\x93\x1e\xad\xa1?\xc5\xc1\xf9Z\xd0\xf8a\xbfW\xf1\xe8\xbc\x9c5\x8e\xbfQ\xfe\xdaxv\xb7\x8d?xji+\xe8\x1c\x90\xbf^\xe9\x98\xe3\x9f^P?\x9a\xa6!\x11\xea"\xc1\xbf~dK,H*j\xbf\xd2c\xe98\xb2(\xb6\xbf\x8f\xb3\x93\xe28\x9e\x92?7\x17\xdfj\xf7\x9c\xad\xbf\xc4#\xf0\x08\xc9\xd3\x02\xbf{\x15\x1dL\x17\xf3]\xbf\x86e\xe0\x9c\xcb\xabl?\xd4\xe6\xc2\xd8+`v\xbf\x1c\x1f8\x1cj\xec\x9d?\xac\xfd+\xbc\x8d\xca\x84?\xa9\xe7f\xcdbE\x81?r\xeepu\x19,\x87?\xd9\xb9\xb8\xe6\xc4\xb2\x88\xbfV\xa1\xbd\xb5sE\\?gZr\xfeP{\x9d?<\xf4\x04\xceK\xad\xa3?\x8f\x0c\x18m~\'\x99\xbf/\x13\x14\xab\xcd\x03\x81?\xcc\xae\x0b\xce\xdc\xf0o?\x90]#\t\xedE\xa9?k\x9e\'v\xb4\xf1f\xbf\xec\x9c:G\x04\x1e\xa7\xbfK\xf7\x16\xd3Q\xa5\x9a\xbf\x1f9\x9a\xc3\xd5\xe2\x8f?\x06\xfc\xe7\xf4\xd1\xd3\x80\xbfm\x06\x9bShkX\xbf\x17\xa8#\x931\x00\x80\xbf\xad%2\xe9\x8d\xf4N\xbf\xff\x82E\x1f>\xb35?\x07\xb6\x00\xacu]F?@a\xce\x1b\xf3\x82s?\xd9k\x87\x99%Q\x9c\xbf\xaa\xcf\x86\x9d0\n\xbd\xbfBIv\xbd\xd1\xbcr?\x16\x1e\xc3\xad\t\xe8\x93?\xe9\xd1\xab\x96G_i?\xa4\x9a(\xc0^"q\xbf\\\x16\xc9\xd86\x07\x91?\xff\x80\x87v\x11IM\xbf^\xa3\xe2\xa9\x8e\xd8\x8a\xbf\xb1\x99\x83\xc63\x81d\xbf\x9cf\x1c\x98v=k?ff\xfd\x87\xe2\x1b\x8b?\xed\xde\xc2Qp^n?\x8b\xd7\xe1\x14.\xad\x82\xbf5]\xed\xbdH\xd0\xa3\xbfS.u\t\xee\x13\xbc\xbf\x86\x8f\xb8b\x9c!x?\x85\xd5\xa91\xab\xdc\x9c?k\x9f\xb4\nZ\x86R\xbf\xb2)\xd4\x96\x89\x0cZ?\xa9j0#\xb1:\x80?\xcf\x85\x02;\x1dex?\xfc\xf5\rO\xad\r\x85\xbf\xba\xbb\x99ji\xc0\x84\xbfg\xce\xa8hpNV?\x0e\x1f\x04\xe7\x8b0h?D\xa8f\x19|\x17N?\xe0\xe7\xcb~\x95\x97\x98\xbf\xf5\xa7\xe9\xe7\x90\xf0\x9f?\x8f\\\x9aD^\xd9>\xbfa}l@D\x85\xa2\xbfG\x7f\x03\x150\xa2\x81\xbf\xaa\xc873t\x18i\xbf\x82\x9b\x1e\xfai\xc4e?\xf1\xaby@MUt\xbf\xe8X%\xe0\x0f*\x85?\xf9,\xca\xa9\x1d\x1c|?\x87\xbb\x1f\xaf\x96\xe6`\xbf\x1f\xe0\x13\xeb\x93\xc1\xad\xbf\xf9\xe8w\x17\xdd\x97}?\xee\xe5\xd5\xdf\xb8\xca\xa2\xbf&\xa7\xde\xd8s\x04\x80?\xf9\x901\x85\x00\'V?\xd0\xb0n\xb7\xff4\x85\xbf\xe1"8J\x1a\xacq?\x86\xb7BFw\xc0p?\x13\xd0C\xc4\x93H|\xbf\xfc\x91a\xb1\xf8\\\x19\xbf@\x82\xeb\x1cr\x19\xa8?\xcd\xd6\xf1\xceS\x80v\xbf\xb1\x16iv/\xce\x90?\xfdFIv\x80\x82\x87?\n\xda\x92N2k\x82?\xf6\xea\x10\x02\x0b#g\xbf\xa4\x19\xa3\x80;\x86\xc1\xbfU\xe2\x9b3\x06\xe2Q\xbf\x01\x8a\x1e,E\xd8\x83\xbf\xa86\xa7Z1\x8d\x99?:\x1ai\x90#x\xb1?\x8f\x13\x88}\xfcU\xab\xbf\xb0\xe3AW\xed\xc0\xb1?\x83\xcf\x153\x96\x15\xc6?\xe9\x19\xb8\xd2V\x9f\xd7?\xaa\xfarm\xdaH\x80\xbf$L\xf2\x8a\x1e \xac?A\x0cd\x01"\x06\x8e?\x1b\xd4xC\xf4I\x80\xbf3\xa7O8\x0eW\x95?\xac R\xcag:\x88?a+a\xfc\xd0Z\xa3?\x1c\xef\x91f\x88S\xb4\xbf\x9dGt\xa1U\r\xc6\xbf\xe5\xa0-\x01\xab\xc6\xa3?\x99\x19\x8c\xc8\n:\x98?>C\x1cR\xf6\xa1\x90\xbf\xf4\x1a B\xabV\x9f\xbf\xb9)\xe2m\x01\x87r\xbf\xfa\xc5@q\x95\xd0a?O%\xfe\xa5\x80\xda\x91?\xb8\xd0\xa5\xb8\xc4\x18\xb4?w\xe1\x14\xcd\xa1\xc0\x89\xbf\xd8\xe0\xa8\xde\x80G\xbc?R\xc1\x8d\x9a)\xa0\x93?\x99\xa1\xcbK\x10`\xa1?\x80\xa1\xa7\xa6\xf9\x90\xad\xbf\x1a\x95\xfc\xe8s\x95\x96\xbfC\xc8\xbe\xbb<\x07\xa2?\xad!\x9c6\x89\x84~\xbf\x84k\xb2\xb4!\xc7\xae?Z\xb8Y;G\x96\xa2?\xc7\xf3a\xa0_\xc0\xa9\xbf\x05>\xa0\xae\'\xb6\xaa\xbf7\xf7\x86%we\xad?\xe2x\xb5\xf7\xdf\x0bw\xbf\x83H\xe4\n\xdc\x1c\x98\xbf3Fu\x86\xc61\x8f?\xfe\xd9\x85-\x06\x0e\x99?\x8a\xafF\x9b\x15\xa7\x9a\xbf\x00\xcb\x913\xec3\xb5?\xa6\xfc\x95\x9b\xbe\xf5\xa7\xbf\x14P\xa0o\\R\x91\xbf\x87O\x1f_ ^w\xbfv\xacwa\x87;\xdb?\xbc\xcaga\xf6a\xc0?\xf9\x99\xec}C\xb6\x93\xbf/\xd8\x17\x05i@\xc8\xbf\xc9\xc2\x897"\xea{?l\xd3T\nn&p\xbf\x0e\xdd.\x12\x19\xefp\xbf+rB\xf2\xa7\x02\xce\xbf\xf4t5\xbe\x8b\xa2\x90\xbf;\xe06\x05\x81\xbd\xc7?\x08>\xbf\x1a\xe2\xfe\xb1?\xd3\x9e\xf4\x80\xae_\xc9\xbf\xb9\xb9wa{|\x83\xbf\xecu\xa54Xv\x8a?\x19\xf3%\xa0`E\xc3\xbf\x1c\xd1\xc8\xa2\xa4\xfa\x99?P\x038\xe4\x12\xbe\xe6\xbf\x9e\x02\xf9\xb4\x82$\xde\xbf\x9e\x01\x84\xcd%=\xbc?\xee@a\xb39\xc8\x94\xbf\x7f\xb5\xe0@\x1d\x17\xb2?6\x07\xb2\x88\xeb\x92\xa4\xbfU}\xf4\x1e.\x11\x98?7F\xd5\xc3\x1d\xd4\xa1\xbf\xf3\x19,0Ld\xab?d\xa8\x14v\xe6\xfc\xbe?tH\xeap\xc3\xa9\xb9\xbf \xc0\xb4R\xac9\xa6?\x08\xdaK\x18\x83\xf7\xb0?\x8f`~\xadH,\xa2\xbfv\x95~\xa1T\xbd\xb3?t\x1c\x99]a\x86\xb1?M\x1e\x05b@\xe2\xb2? \xa0\x16\x14)p\xb0?\x04\x1e\xb2m\xce]\x9f\xbf\xb1;\xce\x01\x0b\xe2\xba\xbf\x16\xf0}b\xe1\xa3\x99\xbf8\xaa\xfa0|\x97\xb1?S\xd1>5\x18\x98\x93\xbf\xc4\xc8xQ\t\xc1x\xbfN\x14\xad\x85\x18\xbe\xb0?\x8d\xc3\xcb\x9b\x86I\x94\xbf\x8a\r\x86\xa6R\xd6r\xbf\x07\xe0\xcfi\x14\x0e\xa3?\xdesA\xffx\xb2\x93\xbfH[+\xb6b\x85\xa3\xbf\xd1`\x9a\x98&\x9e\xbe\xbf\x95%\xcc\xbcZh\x91?l]q?`|\xa0?z\x8e\xc1\xa5\xf8u\xb0?)C.\x19\xfc\xb9\xdb?\xff\xbdrM\x83\xa3\xa1?Gx{\xf7\x9f\xe7\x81?\x1f{\xee\xfe\x8e\x86\xa4?w0P\r\xc6\\\\\xbf\xa7I\xca\xb2lE\xf2\xbf\xa3\'"\xec\x9bN\x91?.;\xba5\x89\xfe\xac\xbf\x82N\x03\x98x\xfe\x8a\xbf\x0c0"\x82N\x0e\xa7?\xcb2\x97\x96\xdeF\x87\xbf\xcf\xa2i\xc6k\x16\x85\xbf\xad\xca\xb3\xa7\x0fTR\xbf\xee\xdf_\'>0\x91\xbf+z%\x01\xf0\x16F?\xd1\x9d\xb7\x0c\x96L\xb3\xbf\xa1Z\xa3\xd6\xc6\xbe\xa0?\xa0\x8a\x83N\xefkr?N\x84\xd4\xc9\xb6i\xb2\xbf\xbe\x03m\xcb\xf9,\xa6?,\x84\x1a9\tw\xb7\xbf\xd0y(_\xe5gA?Hy\xe1\x9b\xa35\x8f\xbf\xf7\xd0\xb3\x8f\x99B\x91\xbf\x0ed\x87\xde\xd2`\xd3\xbfnz~\xad\x16\xe4\x81\xbf\n\x9f\x8b\xdb\xbe<d?O\xc9\x01|GQ\x90?\xf4\xf4S\x19\'^\xc8\xbf%\x93\xc6<\x0fJ\x91?(\xff\x81il:_\xbfV\x19\xd6\xed\xb7\x99\xa8\xbf.\x1f\xccc>N\xd5\xbf\x85*EW\xa3S\xd4\xbf\xa5\xec\xb0\xba\xc2D]\xbf\xe6\x17\xb4\x84\xce\xea\x81\xbf\xa3\x88\x0cw\xef\x11\xdb?\x87\xcd\x94\xbf\r\xab\xe7\xbfd\x1e\xdc\x83\xff\xec\xa4\xbfB\x86\x17\xe3\xff\x06\xa0\xbf\xfb\xc6Z_\xc9\x14\x9e?\xe9yfbt\x1eK\xbfd\x1a<\xd5\xfa\xc7\x94\xbfr\xe8d\x9c\xa7Y\x8f\xbf\xf6\x15\x82g\xbc\xcb\x92?p\xe4f7\x9ff\xe3?x\xec\x99Mr[\x87\xbf\x9fj\x18\xe6|\x91n\xbf\xec\xe9\x83\xf3\x03{w?\xea\xc3\x896\xef\xaab\xbfE\x9b<\xd4\x07v\x95\xbf=\xef\xe6\xf4m\xdb\xb0\xbf\xec\xc6SL\x06~\x95??\xa9$\x8a\xd1\x1f\x9e\xbf\xc1]\xdeRX-\x9a?\xc1&1\x03\xae\xb0i\xbf\xbbY\x9a\xc6\x11[\x82?~kdUt\x84\xa2?2\xa8\x9eQ\xed~\x96?:\x04Tb;\x9e\xa2?_j\x0b\n\nN\x80?B\xb5\xed\xebm\x11\xb2?\x1a\xb0d\xe7\xfa%b?\xd8|\xfa\xd6\x8f\xf79\xbf\xcb^\xfbe\x98J\x81\xbfZ\x99u\xb6{\x06\x97?\xf66Qu\x18\'\x86?\xe9\xb2\x0f\xc6z9\x8a?%1\x95\xa5\x85\x16\x90?\xa5>\x071:\xce\xb5\xbf\x1dE\xd8\x913\xfc\xa1?|\x0e<)uQ\xd3?\x8e\\\xdbL\xb9\x04\x9a?\xd9p\xc3\t\x89$|\xbf\x94\xc1TtE\n\xd2\xbf%i\x8a\x83\x0c\xed\x94?\xfa\xee\xe6\x1d\xc3\xf8\xdc\xbf\xabO<-\x96h\x8d\xbfr\x11LH\xa2O\x85?\x90P\xda\xd1\xe3D\xdc\xbf\xf6XsM!m\xc1?\x82\xfe\x91\x15\xd2e?\xbf\xd5\xe2D]=\x8ft?v\xbf=\x8e\x83\x84\xb0\xbf\x9e\x04\xd8\x15\xeb\\O?\xce\x9e\x9eG\xc3D\x81?\xd7\xa3\xc2\xb2\x9d\x85\xa6?\xc8l\xfd\x0f"\xde\xdb\xbfizS\xe6\xac_\x9d\xbf\xc0\xabW#\x8dm\x98?>\x1f\x17\t\xf8\xac}?\x8c\xd9B,>\'\x9f\xbf\xca\xfaD\x03\x9d0\x0c\xbf_\x7f\xd8\xee\xb0\xb0k\xbf\xfd\x99n\xd4Y\xa1\xa1\xbf\xdf\xea\n"PX\xd2?\xa9P\x9f<y\xc9\xb2?\xbe?\x98b\xe1\x86v?\x055\xb39\xffU\x83?=\xae\xbd\xa6\xb2\x0b\x8a\xbf\x10\x08\xf3\xad\xc9\xc9\x83?\x82c\x9b\xf2\xe0\x9e\xcd\xbf_j\\\x0ec\xc3\x82?\x8e@\x87i\x90\x97u\xbf\xbb,\xa3\x06\xb4\xb7\x96?Q\x81\x9fx\xe1\xber?2L\xbbK\xa9\xc3w?\xd58+W\x7f;\xab\xbf\xe2\xb2\x8dJ\\\xeb\x8b\xbfk\x00"\xd5\xfbg\xa4\xbf?\xb9\xaa\x1f\x95\x1d\x8c?\'g@\x88\xad\xe4x?1\xb5\x07\xfd\x8e\xfc\x92\xbf\xcc\xf9\x11\xae\x9d\xd0\xaa\xbf\xb7\x0590\xb0\x1e\x1c\xbfg\xe5\x948\xebc`?&L$Wi\xd9\xac\xbf\xb7\xbc_}\xab7o\xbf\xbc\xb1]0\xf3G\xb4\xbf\xce\x1f\xfat\x03:\x97?\xceY\xce\x14D\xe8\xac\xbfFb\x96\x1a\x96\xf8q?\xdf\x90\xbbf#\xa2Y?%\xc0\x1a\xd9\xe7\xa1\x9a\xbfU\x06~\xca\x9e\x8fd\xbf\xb0v[\xb4&\x15\xa5?y\xa6\x04\x08\xb8\xa6C?\n\xcb\xa5\xb6@\xe5z?\x17sH\x1f\xbfpy?\xc8\xb8\x15e\x93\r\x91\xbf\xa8WSf\xb9C|\xbf\xd1\xa7:\\\xc2\x82|\xbf\x88\xe1\xe7\xb7\xbeM\xa2?7\xa2\x87\x1c\x97\xa1\x99\xbf\xbay\x88\xab\xfey\x81?\x1c<\x16\xec|,\x83?-_\x81\x17\xe5m\xa3?\xb3J\x06\x9b\xe5\xb9o\xbfc\xb7\x10\xe1Vu\xa6\xbflY&\xee\x01\x8f\x9f\xbf\xb7\x97\xf2S\x04\x91\x86?\x01g\xc4\xd2\xedre\xbf\x1b<\xe6CW\x01}\xbf\x0cs!\xb2\x85# \xbf\x08o\x10\xec\xe045?o\x91R8\xf1\xadf?\xf3\xdaM\xeeC\xecc?\xc8\x1e\xe4\x01\x7f\xdfc?F\xf0~z\x02#\x81?\x96Y\x86\x02\xc5\x05\xad\xbf\xb7\x18\xa4\x8bz\xd5\x9b?\x95Q\x91\x93lE\x82?\x9b\xf0^\x9b>\x88}?M!\xb2\x939(_?R2\'\xb1\xf6\x92\x88?\\o\xd2\xcb\xadv\x81?\xb2\xe3\xd6N\xec\xa6s\xbf\xcf`\x957\x02\xaac\xbfKg\xc8\xdfk\x19z?\x8f\x9cz\x01\x89k\x82?\xebhS8Sty?\xa0\n\xb9\x05\x80\xcfF\xbf\x87\xeb\xe8\x11\x9e\x12`?\x00\x12U\xe2F&\xb4\xbf\x8c;\xd7\x97\xd6ts??\xa8n\x8bh\xc2\x98?\x15\xc6~c\x97\x8c^\xbf"\x83<\xa7\xa7\xaeR\xbf\x9b\xd3/\x14\xf8\xddd?\x96}\x85\xae\xff\n`?\\|E\xa3g\xfaj\xbf\x1aNw\xb4e\xbd\x82\xbfgM\x99\xda\xb2\x15w?\x0e\x7f\x83w\xce@B?\x96\x94\x02\xc4\xbfm_?\x99Q|z \x1c\x80\xbf\xc4E8Ie\x9a\x9b?\xef:\xd1\x84\x1bg\x9e\xbf\xa4\xf0V\xde\xc08\x98\xbf\xd6c\x9a\xf1\x9d\xb4z\xbf\xda\x19\x1e\xa2\x86\xf2h\xbf\x01`\x8e\x9b"\tt?\xd5vnw\xc3\rL\xbf6\n\xb7\xa3[/O?\xd5*"\xaa\xbai]\xbf:u\x82\x95\xed\xe0Y\xbf\xec5\xc2$1H\x95\xbf.B]\xd8\xcd\xec\x92?Z\x1d\\\xae\xda?\x90\xbf\x00\xcd\xa5L\'\xb6b?\r!\x1e\x10\xc88}\xbf<\x81ad\xaaU\x9d\xbf\xcc*~\xce"f\x81?\x83/\xb7\x809\xdei?jR\xc0\x05\xd88\xa3\xbfL\xab\xf1\x0bspy?\xe9\xeb\x1f\xebdZ\xa2?\xb9r\xe3\x05\xc6\xdbs\xbfZ\x19\x0e\xb3\xcdf\x91\xbf\xa3\xa6\xf7\xae\x01\x95a?\xfa\xd7:\x0cm}\t?\xf4\x9c\x1d\x84BQp\xbf\xef\xaa=6\xe81\xbb\xbf\xa2e?R\xf8\x0e^\xbf>=\xe3A\x07\x8f\x87\xbfe\xde\xd8Y\xbb\xcbr?z~\xf1\x86\xa8\t\x93??\x91B\xa6\xb3x\xaa\xbf:\x1d\x00v\x02\xa3\x87?\r\x87\xf1r\xe8\x9d\xa1?\x88\xffm\x03\\Q\xb9?\xe4\xbf\xca\xea\xec\xfda\xbf7\x96\xa6\xc1\xad\x8b\x86?\r\xdb\xc2z4\xd3w?\xcf\xb5\x9eh\xf7y\x86\xbf\'\x8f`Vc\xe4\x90\xbf\xa5+\x98\x89)2\x85?\xe9\x97+\xd8`u\x8e?\xae\xb6e\xcagZ\xb2\xbf\xda\xfeTN=\xb6g?\xe8x\xf0\x1e\x9c>\x86?\x16\x92a\x87\x08\t\x90?\xf7\x9a\x96 \x05\x92\x8b\xbf\x9c\x9c\x8b.D\xc4\xa5\xbf\xf8\xfb\x8f\x1faz\x9f\xbf6\x82"X)\xebn?>\x0e\xd6\x8b\x8e\xdfg\xbf\xe0\x04\x85\x17\xa3\xb6\x9d?\xc10\x14\xabE\xd7\x8d?>\xe5rO\xeb\x9aj\xbfX\x03]\xac\x19\t\xa3?\xa3\xbe\xc5X(Z\x80?\\\\2\xaf~\xb4\x9d?WM\xe5VN\xa3\x96\xbf]\xb7\xac\x8b\x90\xe1\x8f?\x0e\x88\xa4\x86\xe5\x8fT?\xaaF!A\x0c\xf7\x95?\x96\x92\xd1z\xfe_\x9a?z\x91\x14\x97?\xa9\xa8\xbf\x91\x13!7\x95\x97\x97?\x19\xd0\xf4\xaatrn?-\xea\x12\x95Z\xa6q\xbf\x06G\x87%.u\x99\xbf\xb1\x94\x00\x024\xd5y?\x93\x00\xeb\xaa\xf1\xdc\x96\xbfx^n\xaf]Bb\xbf\t\xac\x99\xd4\xee\x18s\xbf\xa2o\xf5\xe7 \xdf\x9d\xbfc\xf9I\x83\xc7\xfcf\xbf\x05\x1b\x88"biQ?P[\x03\xaa\xb2\xa5\xc0?R\xd9\xa6\x9b\x0f|\xca\xbf\x87\xa5\xcb\xc4\xa8\xde\xa1\xbf\xe6\xc0\x9a\xf3\xc4 \xbe\xbf\xc0\x08vj\x98\\<?\xec\xc8\x12\x9e;\xfd\x93\xbf\xbcI\xa0\xd1\xd9\'\x81\xbf\xa2\x82\xd75\x06\xd5\x94\xbfTK\xaf\x1c`\xf6\xc0\xbf\x996@.\x9f\r\x8d\xbf\x8e}\xee \xd8m\xa4?M\xb8\xfagE\x05\xb4\xbf\xd8$\xda(\x99T\x90\xbf\xaf\xe6\xe0\x8bH\xd5q?\x8e\xdc*\xec\x92\x8e\xdc\xbfq\xb2&\xfb\xd1Cq?\xb28\x97#x\x93z\xbf\xe7^\x06\x80\xd8\xe7\xab\xbf8c\x98\xc6\x1ae\x7f\xbf\xbfz\xe8\x86\xb0\xba\x96?v\xb1y\xaam4\xa2?\xaa\x9a\xc9\xf2_\xff\x8a?\xae\xa0\x802\x8an\xc3\xbf\rNTT\xbbw\x84\xbf\x00]\x88\x0cL!e?\x82]\x88=\x9f`\xa0\xbfw\xf7\xfa\xb8\tr\x91\xbf\x99\xe7\xb5X\xfb\xcb\x87\xbfe\xc6>\xa3S\xca\xa3?[oA\x89\xcc\xb4\x93\xbf\xac.M\xebo\x84\x96?a5\xac\x15^\x9a\x8e\xbf\x13\xb9\xf6Z[8\x99?N\x89\x0c1Sq\xb1?\x0c\xd8\x9f\x9a\xb8\xa4p\xbf\x15\xe1\xe9^C&\xba\xbf\x88\x91"\x83\xa8$\x85\xbf\x8e1\xbb\x1ay\x85\x94\xbf"\x99y\x12d\xfd\x91\xbfY\xe2\xc8|\xa59\x88\xbfu)-\xf0`#\x9e?j.P\x89\x947\x89\xbf*\xda\x84\x02\x9b+m?\x83\xdfx\x93\xed\x80\x8f?*\xed<\xaa\xb4Bu\xbf[\x83 VB\xb9t\xbf\xb8f0\xe9f?\xa0\xbf\xd6\xa4\xbf\xb8F\x9c\x88?\xe1\xcd\'\xdd\xae\xe0o\xbf\xca\xad\xd8"\xf0\xeeF\xbf\xb1\xa7\x1a`~\xcd\xc3?\x86\xb5\x14\xda\x93\xcf\xa3?;\x1a\x07\x87Z8l?\xc9\x03\x89\xce\xdfa\x8f?\xb6\xfd\x18h\xfb\xd4\x8e\xbfo\x87\x95g\t2\xd0\xbf\xea7\x80\xea\xdd\x1eW?$n\n\xa0u\xbe\x94\xbfq\xb1sd[\x81\xad?[\xe0\x0f\xe7t\x86\xa3?\xb6\xa6\xe4\x00\xad\x04\xb5\xbf\xb1=\xa5\xcb\xb82\x9b\xbf\xf1\x87\x12\x92\x81T\x9d?\xad U\xe8J\x03k\xbf\xe9\xef\x9a\\\x1ag\x86?-\xf71\xd4<\x9f\xa1? Z\x96B\x0c\x8c\x8a\xbfk\xa3\xf4\x0f\x0e<\x81?\x15oO\xb3\x06\xcf\xb0\xbfM\x1fk\x9c\xaf\xeb\xa1\xbf\xb7\xd5\xdb\x17\xe7\x83\xa5\xbf~\xb8~\xf9\xf0\xf0|?\x01I\xddXQt\x92\xbf$\xe7[^M\xdd\xa0\xbf\x82/ \x98#\xd9\x82?\xec\xd3exP@\x8f\xbf\xda\x96nE\xd3\x8c\x86?F>h\xbeJ|\x91\xbfl>\x11\x82\x03\x8a\x84\xbf\xf9\x10\xec\xdb\xbe@\xab?\x9c8A\x9e\xa3\xf1\x9e\xbf\xab\x88\x8b?^\xae\xa2\xbf\x9e\xb5\xbd\x91\xf1\xc7\xda?\x96O-{C\x16\xd2\xbf\xdbG\xaf\xca]\x94\x81?\xbe\r\xf2\xd9\xe5\xc2\x81\xbf\xb7\xe5!\xba\\k\x90\xbf\xe9U?n\xb7\xa3\xc6\xbf\xde\x7fX\\\xaaS\xab\xbf\x1a\xe6\x90\xeb\x11\x978?\xdb\xfa\xa58_\x0f\xb2\xbf`4\xa5\x1d[xo?\nRg\x81\x1a\xdb\x92\xbfJz7\n\xf9\xeb\x99\xbf\x18px\x0c?5\xb0\xbfe\x88\xe75\xab\x17\xd0\xbf\xc0}\'\x00:q\x8b\xbf\xc70\xc3\x05\x9f\x91\x84?9m\xb6\x01|G\x96?\xacxm0B\xb8\x96?U\xe1_\x85\xf0\n\xc9?\xc1V\xa2P\xbc\x18\xa6?\xa8\x1b[\x99\xb5[>\xbfZ\x8e\x01\x07\xb4^\xaa\xbf\n\n\x99U\x92!\x8a\xbfgI$\x8d!\xd0\x91\xbf\x9a\xd7\x99c\x00\xf2\xb1?\xc9\x11 \xc8e+\x91?\xbc\xdf\xa0\xc3\xb0\xdb\x85?\x1a\x0b^!fU7\xbfiM)\xb6\x9f\x13\x86?\xdc\xf4\xff\x88\xd4\xa7\x90?#\xd5Yky<\x94\xbf`\x1a\x90\xeek\x98\x96?`\xa4\x8e\xf7\x92\xf0\x94?\x7f;\x1aSp[\x9b\xbft+\xb3\xd8|\xa7u\xbfHs\x16$\xfe\xc4D?B\xa1U}9\x8f\x94?\xaaY\xc2\xd5t]\x98\xbf\x92\x84J\xf2y,\xa1\xbf~\xc9\x93\x96\x0c\xdbS\xbf\xc3\xa5\r\xca\xccgb?\x7f*\xb2F\x12{\x81?Q\xcf\\\xdc\xef\xe0\xd9?\x82\x0be\xf2\x95p\xb2\xbf?D\xdfV\xf2~w\xbf\xa1\xd2\xcc5\x0b\xb8\x95\xbf\xf4\x15\xcd\xdd\xa2o|?\xe3\xaa\xf8\xa7\xc4\xac\xc1?\xf4\x11$\xc2\xc85\xa4\xbf\xa8B\x91}\xd7\x92o?b\x00\xd5\xff\x80\xd3b\xbf2\xfd\xf0\xf6\x85\x11\x94\xbf\xc3\x1bs\xce\t\xfem?\xdc\xf0\xfe]\x8em\x99\xbf`\x81[\x8d\xa5l\x84\xbf\xad\xb0c\xe0Og\xa3\xbf\xcc\x16v\xf4),\xa3\xbf\xbd|{\xd8>\x19\x80?\xe1\xf5\xa9\xc7-\x8b\x86\xbf\x1e\x81\x04\xf7\xf5\x9b\x83\xbf\xd4\xc5g\x18`\x1fh\xbf\xa7_\xb2\xca\x83\xe7\x83\xbf/\xc7`\x91\xfc\t\xa4\xbfBM\x94Axa|\xbf\xdfn\x86_\xf6\xbe\xd0\xbfE"\xff\x82\x8d\xab\x83?B\x80V\xdeX{o\xbf1nz\x13N\x82n\xbf\xb4,\x96\xeb\xf4\xb9p\xbf\x8d\xdb\xd9`\xec^\xe5? \x855\x7f\xc0\xb5\x8f?\xdcK\x12S\xbb\xf3\x87?C\xf6\xa4a\x01\xd1Z\xbfB\x98\xd2\x8e+wu?\x04\xce\x82\x04a\xf8a?\xf2\x1b\xa4^\x1by\xa0\xbf\\\x95D\xd7\xfc\xb7r\xbfq$b\x14,m\x98\xbf\xfb\xe2\xd9\x07E\x0fh?\x04\xfa\xb0\x11-\xe2\x98\xbf\xd3\xe8\xdeL|\xf1\x90\xbfl\xeb\xd4j\x04\'Z?\x0c\x1a&#\x1f\xe4v\xbf\x91a\xf1\x91T\xdf\x82\xbfNy\xf9\xb2\xd8\x1a\xa1\xbf)x\xef}\xe2Ti\xbfd?\x12\x14\x97s\xb2\xbf\xb2j\x95\xd2q\xea\x8a?K\x8f\xf2\xa72]\xb0\xbf\xd9\xe9\xe3\xa0Z\xe8;\xbf/\xcb-\x13\xe2dx\xbf\xc4\xc4Z\x86\xe4\x85\xa0\xbf2\x9bp{\xaa"p?\xf0\xb6}\x83QM]\xbf&T/zW\xabl?)\xa2sN\xec\xb4~?V\xa3=r\xd2\x1ab?5\x08\x9dZ\xc4\xb9`\xbf\x11h\xee\xab\x07my\xbf\xa8\x0bWX\xec\\\x9f\xbfCV\x92\xd8E\xe5\xa3?\x95\xfc\xd2LR\xf6a?6\x93\x05\xe4t\xd1\x81?\x90\xbd\xf2g\x9a|z?\xdf`\xe0\xde\x16~\x83?\xee\xe8\x16l \xf7\x80\xbf\xef_\x0e\x8c\xb4u\xa6\xbf\xb4\x85Ysn\x11\x8e\xbf\x1c\x97m4]\xe2\x85?B\xfb\x1e1\xcb\xcep\xbf\x0b\x15I\xec3\xda\xa1\xbf\xd8\x9b\x95\xc3\x87\x8av\xbf\xa5.\xa6-\xf1@{?\xc8\x14\x95G\xa8\xa4k?\x95\xef\xd7X\xf5\xeaJ?\xc2v\x10\x9eh\xa6p?\x81\xdf\x0e\xf4\x95\xc3\x97?\xfc\xa5JB\x19\x87\x89\xbf]\xd0\x03\xb0:_\xa0?q\x1c\xde.V_\x81?\xad\x85\xcd;\xd2)|?\xee\x19\x8f[\x90\x1fw\xbf\xc7\xb6s\xfbm\xb6\x8d?\x16\xec\x86wVOi?\x8b1W\x8dk\xbd\x8a?\xa0C\xceo\xd1\xae<\xbfr1h\xe8\xf9Hj?\\\x08V\xac\xd5\xbcF\xbf\xa0\x1c\xdal\xd5\xb0u?J\xe6\xd3\x13\xce\xa1n\xbf{f\xe8\xed\xba\x8c\xa3\xbf\x1c\xc2\xc8+\x966\xae\xbf\xb5\x8c\x06\x19\xe5\xcdK?zD\x9ed\xc6[\x92?\xee\xea\xa3\xf6&\x03e?-91\xeb\xc3\xb46\xbf\xbcf\xfaj|\xbet?\xb9\xba}\x16\xd7\x13\x84\xbf\xd9I\x0b\xeci\xe8o?6\x81$|3yM?\x88\xae\x1a\x96N\xe5q?J4\xf8Bn\x0ce?,\xc5\x06"kq\x87\xbf\x84\xcb\xae\x9b\xe4\xf1n?\x90~6\xf2\xb3$\xe5>9\xf6\xf7\xcb\xae\x15\x88?G19}\xb2\xc2\x7f\xbf1\n\x1c\xc8\xc6\xe8\x8a\xbf\x99\xa2?G3\xc3~?\xe6\xf3\x91\xbc1+s?67 \xc3\xc0\x04\x0f?}\xe6\xf6\xb5\x92\xe0M?\x14\x10\x94\x94E\xd9n?\x83\x8fF\xfd\x1a\xb95\xbfH\x16Z\xdd\xde-j\xbfD\xb7\xdfY\x81]\x90?\xf6;\x01\xd2\x96\xee\xa7\xbf*K\x96@WLb\xbf\xaf\x8e`\xcaY\xcc\x86?7(\x0e\x96\x9e|d\xbf\xadfu\xf0)R\x85?JCG\x06\r\x80\x81?\xb6\xb0D\xf0\xb9\xa8\x97\xbf@f\x16\ru\x03R?J\x05B\'\xc9\xe4\x87?\xd8\x9e#\xcb?\xdb\x1a\xbf\xa6je\xd3\xb4o\xa3\xbf\xbd\xbd^\x8c\xa7*z?\xa8\xb5\r\x89p(y\xbf?\xba\x16*\x86\x18c\xbf\x96\x9b\xb1\xad\x10\x11\xb2\xbf0]a\x91\x82\x8ay\xbf\xba\x1a\xbb@\xae\x18\x90\xbf9p\xac\x1a\xf8\xedy?\xad,\xb8\x1d\x8a\x82e\xbf\x94\xe9q\xebz\xed\xad\xbf\x87\n(\tV\xf8\x93?\xfc\xe4;\xcdc\x16\x00?\xebZ\xc2)q\xa9\xa5?\xb9\x8a\x83\xb1\xcd\xf2\x8c\xbf\xca\xcb\x9f\xaf%\xcdr\xbf\xa2\x19DG\x88\x03\x93?\xe55|\xaf\xe3\x8c\x88\xbf\xfdg\xe5\x97M\xd5C\xbf\xca\xea\t\xcazI\x92?\x16\x8e\xa8\x03`0\x93?\x97\xe56\xf6Z\xfb\xb0\xbf5\x8d\xfe\xc8\xb9R\xa4\xbf\x19w\x85hH\xcf\x81?\x8aKm\xcc>H\x8c?\x04$Y,m\x9bg?\x98\xc9\xc7\'\x15\xb5\xa1\xbf\x88XV\x9b\xce\xa8|?G\x06\xd3}"zB?\xa4\xc7S\xe88\xfbq?Sz\xf8\xce\xbf\x93\xa3?MD\xa5,B\x1e\x82?\xcf\xacE\xf9R\x06\x89\xbf\x06b\x07\xe8XTr?\xb7\x95o\x93N\xa5\x80?\xdeD\xae* a\x83?r|\x90\xc7\xffhl\xbf|.\x80\x14]#c?\x8b\xcb\x8b\xf4<\xe14\xbf\xb0\xf0\xa9;\x1d\x96\xa5?\xef\xe4\'\xd6\xe3\xa1\x82?\x7f\x98\xa8\xa2\x93a\xa8\xbf\xe8\xe6d\x93_\x82m?8F\xa1\x9b\x13\xb0b\xbf\x83\xa8\xdb\xc6\xc1\xf5\x8e?\xff\xf8t\x9b4\x01\x99\xbf\xd3\x02:\xd4\xfb\xd4u\xbf%\x1er \x87\xb1\xac\xbf\xf1+\xcb\xea1Ys?\xc7\xa5!\xe8\xc6\xe6\x9f\xbf\x86\xdf}\xf5\x93\xf2\x7f?\xf1\xcb\xe0\xbb\xfa\x14\x8b\xbfu\r\xea\xc1\xc0\xec`?\xb4\\y\x9e"n\xb6?VOQ\xb6e\xc5\xbd\xbf\x04l>\xbb\xed\x0bf\xbf\xf3\x9b\x9c\x05\xfb\x9f\xb1\xbf\xa3;_\xdeJYR?"\x19\x04\x14\xa5\xd0\x91\xbf\xe1\xc1N\xe4\x18\x83\x8f?\xc8\xe2\xef`1H\xb1\xbf|\x8c\xf7\x89\x19H\x80?:\'\x00\xf5\xb0\xdb~?a\xc8\xc0O\x08\xbb\x9b\xbf1\xab\x86\x80\xce=\xac\xbf\xc0\xbb\xb3\xaa\xa1\xa6\x8f\xbf\xfc\xa6\x1f-wN\xff\xbe\t\xc5\xd1\x130\x9b\xb7\xbf\xe9k\x04\xe3\xae\xfao?Ns\xcf\r|\x06\xa4\xbf\t\x07\x87\x9b\x1b\xf6\x8c\xbf\x03x\x96\x83\n\x11\xa1\xbf\xfc^\x87-\x85\x9b~\xbf\x8aY8\x9c\xaf|\x88?\'\xba\xfe\xa1\xd6\x93\x80?\xd0\n\xff\xde\x16|\xd4\xbf\xda\xb4A\x0b\x9ek\x80\xbf\x16n\x1b\x80g\x13b\xbf\x80\x9cu\xff\xf6Y\x7f\xbf\xf0\x9d\x8f\xfe\x03\x1e\xa1\xbf\xc6\xe4H\x06\xc1\x1ap\xbf\xa1\xfd#\xc5L\xfcq?\x034\xb3\xf3D]\x90\xbf\xc3\xa8\xc2\xd0)_{?\x94\xd9Q+*\xc5\x92\xbf\xe1\x0e\x9a&\xa0\x10[?\xee\xb9.\xee8\x1e\x95?\x11%\xb3\xae\xdev\x83\xbfR\xa3\x9be\xe1a\xae\xbfA\x11UZ\x85\xe9\x9f\xbfv\x9e\x17\xd1nx\x90?\xa5\xd2\xb5\xa4\xde\xe8\xa1\xbf\n\xf0N\x8f\x7f}v\xbf\x00jZ\xd7~\xa3y?\xc4\xfc&5\x96\xb7\x99\xbf\xabP\xa6\xafG\xbbb?\x8b\t\xb1\x83\xb9EW\xbf\xd2\x90X\x8c\xd6\xdd\x95\xbf\x80jP%v4\x86\xbf\xa1\xef\xaf\x89\xa1Ac?g\xdf\xceW^\xa6e\xbf^\rx^[B}\xbf\x93\xf7\xb3\xae\x03\xff\x85\xbf\xedfV\xbc"q\xb5?\xe2\xdc\xd8\x8fI\xda\x89?\xd5qJY\x1e\xc9S\xbfst\x98w\x19r\x8b?}\xddQg\xbc\n\x9d\xbf\xe8\xd6"0\xe6\x88\x94\xbf\xb1\x08}\xa6\xceUs?\x14G:\xdb\x18\xaf\xaa\xbf?h\xb4\r\xacb\x9d\xbf\xc8\xa8\xb3\x8e\xaf\xea\x9c\xbf\x1a?DW\x80\xe0\xae\xbf\x89P9\xf9\xb2)~?\xd0\xe0\xa8\xc9\xae\x85&?75\xd9\x06\xcaG\x90\xbf\xc2_<\xd3\xed\\\x8f\xbfiBA(\xc9\x80\x8e\xbfp\xad\x98c\t`\xb1\xbf\x84Od|\xe48|\xbf\x1bg\xb8`\xe5\xa8\xb4\xbf\xf2`\x87t\xa5h\xb2?\xbbk\xca\xdb\xf0N\xd4\xbfw\xcc\xe9\xa6.\xcc\x7f\xbfd\xc9\xe7!>W ?\x13f6B\x9e\x19\xa2\xbf\xe1\x8a\x9f(\xd99\x8c\xbf\x92sv\xbcV\xb6\xd3\xbf\xb6\x18K\xe7\xe6\x0bP\xbf\xcf\xf66\x04aC\x90?4\xa1?\xdfA*\x98\xbfr\xde\xec\x9d\xe2V\xbf\xbf\xbe\xd0\xb4P\xb9\x85\xa2\xbf\x07\xa6\x0e\x83_\xcb\xca\xbf\xd0\x1c\xc2\x1dxl\xba? \xc3\xca\xc9\xa5\xa4\xb6\xbfO\xd2n0-\xf9\x8b?r`3\x97\xf8\xbc\x87?\xdd\x97I\x84\t\xcb\xc6?\t1G\xb9\xa6\xb0\x95\xbfL\xf3\x1c\xf7\xd2\x87\xab\xbf\x83\xe5X\x8b\xff0\xcd\xbf=?\xfeY\xe4\x89\x98\xbf\x7fKm\xbe\xd0\xf3v?L\x99\xfa,\xd2\x93Z\xbf!S\xf6CP:\x93\xbf\xbc\xf8|G\\\xe7|\xbfT2\x85\\\x07L\x86\xbf\xf9\xc5l\xc9\x0b2W\xbf\xf9\xfc3\xf8X3x\xbf\xe3@zk\x0f\x12\x95?\xd0\xc3\x83\xc1\xc6.I?h\x83(R\x92\x8e\xbc?\xe9\xedF\xe2\xba\xb9\x9f?\x94\x0f\x96\'\xe2\xc3\xe6\xbf\xa9\xffAI\xcfa\x96?\x9fT\x82\x90\x7feV\xbf\xb4\xd2\x0ct\\\xa7\xa0\xbfh\x18\x08\xc4jV\x88?tY\xab\x0e*4\x84?dxa\xaf\x98\xf4\x88?\xfa\xa7f.\xeb\xd0\x93\xbf\x86\x9c`\xa9\x0e\xe0q\xbfqKm\x1f\x11\xc5\x81\xbf\x97\x8c\xc9(\xe9\x03\xa5\xbf}m\xc0\xaf\xb4\xe6m?F\xa4=\xba\xf4\xc7\x8a?\xb6\xdf\x17\xa0\x0f\xc9\x90?\x85D\xf7\x9d\x1a\xd8\x8f?\xa5\xee\x0bu(\x88o?v\x109\x19\xcd\xb6m?\xe4\xde\xb2\xc3h\xeb\x82\xbf}\xd2\x1b\xe02\xa5\xaf?\x93\x8b=\x98G=\x97\xbf\xdb\x94\x93\xa2\x82\xe5s?\x95p\x98\xc1\xb2\x07z\xbf9\x11\x86E?\xcd\x9e?\xd9\xf1\x8f&.c\xc9?\x9bQ\xb4\nG\x10\xb2?d\x1bd\x81\xf1`\xb7\xbf\xef\xd8\xc7%r0\x8d?+xj\xc75U\xb1\xbfJ\xde\xb5jnb\x9c?Zr3\xe6S\xb3\x83?\x85\n5\x1e~\x94\x90?\x85\x93\xdd\x9d\xcc\xee\x87\xbf\r\xc2\xb7\x9a\xfb\xf2\x83?<bn\x95O\x99}?\xd3\x88\xe1\x7f\x7f\x97\xa1?\xbc?\xb0\xd8\xc2{\xa8?Q:\x14\xdd\x1aw\xa0\xbft\x9b\xba\xfa\xd5c\xb6?w\tx\x8eD@\x9f\xbf\x8bvZ\xb2\xbf\x0e\x93\xbf\xb7\x82\x16\x9c/L\xc0\xbf\x19\xfa\xffV^ty?\x8e\xb9z\xe1m\x9e\x8d\xbf\xe0\xff\x97\x8d$2\x80?f\'6\xa4\xf7$\xc2?\xeb\x88\xb7\xc8\x02+o\xbfJ\xc8\x97f\x08f\x9b?\xda\x8f\ttj\xfd\xa3\xbf\xbbb#\x8eS\x1c\xa6\xbfD8K\xbfW\x83\xa4\xbf5t\xe1\xcd\xba\x82\x87?\x13\x96\xe3\xfeA|C?A\\\x82\xba\xed\xb1\x81\xbfH\x00Q\xbb(\xb8\xa0?\xbc\x054~\x8cEp\xbf\xab\xf0\xe4D:\xee\xaa\xbf\xa8\xa1\xd5\xb4\xc6\xb3\x91?\xcc\xb6\x10\xbf\xff\x01\xaf?\xa6]t\x1b\x12m\xb6?5EP\x94\xf4/}\xbflBY^bX\x90?rj\x87C\x94\xf3\xa3\xbf\xfa\xa0\x7fb\x80Au\xbf\x97\xd8\x13j\x88\xbe\x8a?\xb0l\x1cd\x0b=\xc4\xbf\xe3j\x0b\xf6i]Y\xbf\x9f\t[\xb5\xbe\x1e\xb8\xbf^\x12\xdaFa\x8e\xa6\xbf%\xa1T\xb9\xda\x8a\xa3?\x01\xd2\xc7\xf1\xb5F\x8c\xbfA\t\xdeuj\xb6\x90\xbf\x19\x9c\xbc\r\xefv\xa1\xbf\xfa\x83=\xd0\x18\xbb\xa4?\xf8\xc9?`\xbfQ\xe3\xbf\x04\xf9NP\x12+A?\xa1\x0e\x0e\'\xec\'\xab?\x8b\r>\xfd)\xb2\x93\xbfeo?\x87\x81q\xb2?YfJ\rdYs\xbf\xfdxiP\x8b\xab\xcb?\xcep\x01\xd9-\x01\xa9\xbf\x11\xf4hA\x04\x05\xc0?\xca\x8ee\xd1\xd0\x9a0\xbfE\x8d\xbc\xd0\xcfd\x96\xbf\x12\xd4\x8b\x9c\xa9)\xc5\xbfu\xa2\xe8G/\x1e\x9f\xbf5b\xd7\xf8\x86\x9e\xa6\xbf\xb7\xcdr\x0b\x81\xe9\xcd?t0\x9f\x02\xb1^4?E\xc4sC\xef\xfc\x86?\x07:\xe0\xd6\xf2\x06\xa0\xbf\xf8<\x8a3fi\x96\xbf+t\x84\x94A}n?.0\x9c\x02\x923\xa5?\xa9Y]\xb6H^\x80\xbf\xdb)\xbc\x88\x07\xc5Z?\x95\xc7\xf9\xb2\xb6\xd7\x82\xbfM\x85\xb1\xf8~l\x89?\xcb_,\xafnS\x90\xbf\\Z\xa7\x93\xcc\xbe\x87\xbf5\x8d\xa3\xbf.r\xe6?\xd1\xc1K/F\'f\xbf\xf4\x89\xfe\xdc\x80c\x8d\xbf\x0fy\x11\xa1.\x8c\x94\xbff\xc1\x05U\xfb\xd8\x8e\xbf0B"\xfb8\xd3\x80?\xe7\x1ek\x17\xb7ig?\x18\x83u\xdc\x9a5\x95\xbf\x1b\x0c#$\x8c\xf3l\xbf\'\xb4\x80x\r\xb2\x98?n\x01I\xe5\x9f\x01q\xbfL!L\xe6\x8cFy\xbf\xe8K\x12o\x0f\xeda?\xb9\x8a:\'\x93aX\xbf\xcf\n\x94\x9a`\x0e/?\x81~|\x90\xd7kR?\xf2k\xc8M\x971y?\x82\xd2\xb3\xe7_\xa0\x8b?\xa7\xb4a\xbfX\xb3\xb1\xbf\xf6\xe9iGW\x1b\x8f?\xa0d\x15\x01\xcd\xfc\x8d?\xb4z\xfe\x19-\r:\xbf\x0f\x93\x95N\xaaB\x95\xbf\xfcR\\\x86\xc00\xd1\xbf:\x17\x8eg\xdf\x08\xc2\xbf\xc6MN;fn\xa1\xbf\x87G@\x06\x9fX;\xbf\x16\xa5%+\xb0\xcb\x9c\xbf\x1a&IR\xfdFq?\x03\x99Y\x8d:\xear?\xe1q\xa5;\xe9\x04V\xbf\x1b\xa8\xfe\xaa1]x\xbf`\x01\x01\xf7-\x0f\x8c?\xa7\xfa?j\x8f\xb8n?\x03\xa1BJ\xc4\xc2\x9a?\xf6w\xd9\xfb\x93_\x9a?i\xd7\x89T\xee{\x80\xbfS\xf6x\xb5\xb2\x98\xe7\xbf\\\x9f\xb6\xab\x1c\xc4\x89?a\xd0X>\x80\x1d\x87\xbf\n\xcck\xf8\xfe\xa2\xe0?\x0f\x06\x04\x15\xb6i\x96?\xaa\x01\x01\x06\xe1 \x86?}\xb2\xae\xa1X\xe2\x9c\xbf\x04q\x89\xd6\x9f\xcf\xbd\xbfd\x8c\xe8\xbeatE\xbf\xc3\xc5\xf2y\xf1\x08\x86?\x19hgG\'&\xa3\xbf\x19\xfb\xef\xec\x19\x9f}?\xe3\xe6"_}\xf2\x98?p\xaa/\xe5\xab\xf8\x8f\xbf\x11c\xabGfg\x84\xbf\xcdg\x83>y\'\x92\xbf\xc4\x85,\xe1\x8b\x07\x8a?\xc1s\x8ee\x9fa\x9c\xbf\x0c^\'\x1d\xe8\xaa\x93\xbf\xa4\x8c\xfec\xd6a\xab?\x9c\x03}\xbe\xdaX\x97\xbf~e\x9e\xbbu\x8fz?.od\xb2\xf9\xb0\x88\xbf\xba\xb3\x08\x13E\xd6r\xbf\xa3\xfa_}]9\x85?\x1e>7\x82\xd4\x0c{\xbf\x97\x84\x1e\n\xe4\x83\xa7?\x8f\x95\xe2Z\x19\x033\xbf\xd34\\\xc4gM\xb3\xbf\x0b\xeapT\xfa\x87\xa8\xbf?\xacR\xe8\xc6\xf3\xa4?\xa4\x8e!\x90\xc3\x8d\x8a?\xd6\x18\xd82\x82\xde\xa0\xbf7\xa8/v\xc4[Y\xbf\xfe\x11\x87h\x11\xea\x90\xbflk\x87\'\x19\xd8\x92?\xd0\xe6\x18\x04#\xdf\x80?\x7fu\x01\xbbV6\xa2?\xfb\xf0\x86y\'\x10\xb9\xbf\xd21\xb2O\x18\xda\x88\xbf\xbe\xbb\x02\x18b\xb5\xb4?h\x1a_\xa4\xa4\x94\xc7\xbf\xceS\x10^k\xeet?\xb9\xb6\xe9K\xba<\x96\xbf\xd1\xae0\xfaB\x02\x85?\xeb\xad\x19)$\xce\xb0?By\x83\xce\x01\x19q\xbf\xb7H\x97em\xa2\xb6?I`\xd6\xcf\r\xa6j?\xebzU\xf4Fs\xac\xbf`\xf0\xbc7\xe7F\xab?yJ\xec\xf5\x8a\xcfp?\x1deD\xcbY\x7f\x96?\x1d\x041\xd7\x8b\xce\x87\xbf\xb9\xfb_\x8b\xbc\'C?\x1f&\x99\xc8\xafN\x92\xbfD\xf0Jo\xab9\x9d?<\xce\xd9\x81\xb9(\x8a\xbf\xf9\xc8-\'A\x06\x98\xbf\x1f\x8fN\xa0\x90\x8fs?\xd7\xbe\xbb\x04b!\x94\xbf\xb3\x9dhG\x05G\xac\xbf;\xe4\x1a\xd3VAv\xbf\xf66\x81\x15\xcbr\x8f\xbf\x06\x86\xcfr3\xb3\x9a?\xb9\xfe\x83$\xeah\xad?4`!C\xf0\xd3~?\xfaq\x1c\x9c}\xc4\x9c?\x7f\xc0C\x80\x01\xd7m\xbf\xdd\xa7Q\xe3j\x85\x83\xbf+\xb2\xf7b_\xe3\x87?\xc4\xf0q\x18\xf1\x12\xaf?\x8f`q\x90~\x94\xa2?\xe5\x08\xc3\x0c\x0c\x81\x95\xbf\xe4\xb7\xce\x04j>\x8f?"\x7f=1\x88\xe6v?kX=I\x8c\xc2\xb8\xbf\xcd\xcd\xa3\xceV\x03i\xbf\xffv\xa4\xca-R{\xbf\x82\\\x13\xd9z6p\xbf\xf5\xa9\x13\x02]J\xa0\xbf\x83DP"\xe3|\x81?\xc4\xbd\x99\xb3\xb6\xd5\x88\xbf\xd1-~\x80\xbe\x17\x8e\xbf\xa0\x9fW\xb6)X\x94?\xdch\xf9\xd0Z\xa0\x93\xbf\xb7%\xae\xda\xf7zL?w\x92\xc0a^\x00\xa0\xbf(\x9d\xeb_\x8381?\x90B\xaf\xba\x1b-\x83\xbf\x04\xa1\x91\xb3\xa69u\xbf\x84\xa9\x88x\xa9\x8e\x88?X\x823IMa\x83\xbf?\xbe^\xeb`Dw\xbfE\'\xae"\xd2d\x9f?,V}\xb45\x96[?\xd6J\x99\x15If{?h}\xa74\x08\x81\x92?R\xfb\xd7\xb2\x10h\xaa?\xc9D\xb8]\x8fW\x8e\xbf\x0e/\xe3,v\re\xbfd\x95@\xf8Y\x0eU?\xcd\xf9\x8a\x10\xeb\x84=\xbfY\xcb\x03mm\xd2\x86?\x14\xbaN\xd4\x18\x12\x91\xbf\x81\xc0J\'\x92\x1dP?\xae\x84?@\xf5\xcf\x93\xbf\x13\xd1O\xcfr;\x9f\xbf\x1fO\xb2P\x8a-\x96?2\x10\xaa!f\x9e\x7f\xbf\x9c\x0fY\xbfO\x18z?4\x92nB\xfb\x06\x9e?\x9b\xbb\xcc\xb9\xe7\x1d\xad?\x0b\xea\xab\xfd\xc3G`?YT\x1aF\xfe\xdd\xa6\xbf8\xd540\x8e\xf5v?d\xd4\xa1\xe5\xd0\x19u\xbf\xf5\x11\xf5U\xda0\x94?m\x06\xa1\xaa\x05\x9d\xa4\xbf\xe8\xaaX\x97\',\xbd\xbf\xbf\x0eh\x9c\xbd\xfd\xd5\xbf\xc4\x8eqy\x1e1\xb3?\x11\xd88%\xf5\xc1\x93\xbff\xa9%\xf4HD\xdd\xbf\x19\xb9\xfcT\x9fZ\x97\xbfU\x11\xcfl\xd3\xee\x95\xbf\x84\xb9L\xe1\xf9\xb8\x84\xbf-(\xa5X\xb2\x9c\x95\xbf\xb7\x8en\x8dL\xe9\x87?\x9b\xed\xe1\xb6Q\xd0\xab\xbfP\xf8\xf3D\xd19\x93?v*\x14\x8b\x04_\xb6\xbf:\xf6\x85\x8f\xffr\x80?\xb1\xee\x19z\xf3"B\xbf/@\xe0\x84\xb8\xa7\x97\xbf\x82\x8eS\x00!pj\xbf\xd0\xac`\xc1;\x0e\x8d?j\xbb#\x0c\x01d\xb2?\xb0\xed\xc3>\xcd\xed\xb5\xbf\x8f\xa3[\xe3\x00\x19\xa8?\xb4\x10\xd1\xb4\xf8_\x85\xbf\xa7n@}\x14\xb5\xc1\xbf\xbf\x16}\xf7\xdd\xc9\x89?$\x94\x01/U\x80\x92?\xac\xcb\x87Q\x05\xb1b\xbf\xb6#\xb8\xe3\xab\xfc\x88\xbf\xe4\x84\xaf\x17\x1d\xc1q\xbf&\x94x]\xee\xfb\xa3\xbfK\xef,\x14m\xd2\x89?GF\x95\xe4\x111t\xbf\xf5\xee"\rpQ\x8f\xbf\x15\xd78\xf5\x8d\xb6\xa7\xbf[\x0c\xc4\xdc\x96<\x87\xbf\x0b\xfe\x9e>\x11\x92\xa0\xbfc\xc9\x96\xe3\x8bwc\xbf\xb39r{/\x9dq?\x80\xd5\xb4\xf3\xc2\x1e\x91?lM\x9dU\x03_s?\x19j\x01:\\\x91\x97\xbf\xea\x90eVh\x8a\x93?7\x91\xde\xde\xf3r\x85?\xd6>\xcdy\xe8\x8f\xb5\xbf\x90\xf8\x13\x82\x16\xdc\x90\xbf3N\x18\xae\x9d`\x8e?\xad\x9dE\x01:\xdb\x9d\xbf\xf9\xca\xafl\xf2\xaa\x8e?\xb1a\x15x\x15\xa6\xad\xbf\xe2\xf6Cp\xb4\xf9\x92\xbfN\x03\x8e\xb2\x90\t\x87\xbf\xdc\xec\xae\x8d\xc8\xc0\x91?6\x9d\x9dy]\xef\x82?3iu<\x91\xa8Y?\xb9\x0c\x16\x84Y\x9b\xa0\xbf\x9d\x12\x18\xe9MEz\xbfd\xcf\xe7\xfdo\xa1I\xbf\xab.\xda.\xe9\x01\x80?\x9c\x8c\xfeA[K\x9a\xbf\xe7\xb6\xbe\xbf{\xecA\xbf\xb6\xe6,B\xef\xd7{?T\t\xb5\xfd\x9c^g?\xe71d\x17{\xee\xa3\xbf!\x95\xdbB7\xa9\x98\xbf7\x9dK\xc6o\xe8\xa6? 2/\xa7\x88\xcb\x9a?;=\xff\xb29\x95\x06\xbf\x07T\xb95/^\x9d\xbf\xba\xe2\x9f\x15\x98\'\xa0\xbfm!\x18\x84\x1bs\xac?\x0c\x95\xab\\,\x86\xa9?\xcfq\x1a\xad\x0b\xda\x94\xbf\x0cP\xc1\xc7gF\xa2\xbf\x945\x83\xef5\xb6\x82?y\xdb\xb8\x03\xef\x81\x80?M\x05g|\xacbs\xbf\xf6\xb5\xa8\x81\x07\x9d\x88?p\xc8\xcb\x1a\xfeEv?~\xde\xff\xdc\xfa\x99\x9f?\xc5J\xa1i\xea;\xb7?N\x87\xde\x92\xbc\xe2\xa1\xbf\xd42\x1e\x87\x12o\xa6\xbf\xc4k\x8aG\x85\xe0\x90\xbf\xd5\xfe\x83X\x8e\xa6\xa4\xbfY\x0fY\x1c\xb5\xe6p\xbfV\xf4$Gtf\x91\xbf\x82R\x04\xed\x8d\x16\x90\xbfF\x01\xe1\xe1\xe9!\x95\xbf\xaa\xd3\xf2\x01\x8c\xcdr?\x1e+\xcd\xe1\x89N\xb4?*Q\xc9\xb8\xd9\xaa\x93\xbf;\xc7\xe1\x14\xe7r\xa6?\xc9\x95\x97\x91\x932\xa7?(\x9d\xd3\xa1\x1a2\x82\xbfu\x1a\xff\x9e\x03\xe9\x8a\xbf\xd0I\xc9\t\xfc\xe2\xa1?\xa30tZ\xefY\x9d?'
p502
tp503
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp504
Rp505
(dp506
g78
(I00
I00
tp507
sg80
S'float64'
p508
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg53
g430
sg85
Nsg73
g505
sbsg435
g0
(g10
g5
Ntp509
Rp510
(dp511
g14
S'auto_14121'
p512
sg16
Nsg17
g0
(g18
g5
Ntp513
Rp514
(dp515
g22
(lp516
(lp517
(g25
I306
g26
S'nade_train( * args[1:] )'
p518
tp519
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p520
tp521
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p522
tp523
a(g37
I27
g38
S'self.add_parameter(TensorParameter("Ws", (n_layers, n_hidden, n_hidden), theano=True), optimise=True, regularise=True)'
p524
tp525
a(g41
I29
g42
S'parameter.add_to_model(self)'
p526
tp527
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p528
tp529
aasbsg48
g0
(g49
g5
Ntp530
Rp531
(dp532
g53
g435
sg54
(lp533
g56
(g57
(I0
tp534
g59
tp535
Rp536
(I1
(I2
I100
I100
tp537
g66
I00
S'>e\xcbw8\xe8m?YO\xe1V\xbf\x06\x92?\x7f\x92\xbc\xafB\x05\x80?"\xe7,\x80\xce\xb0\x98\xbf\xd0\xbc\xbc\x85Mef\xbf\xc4l\xc7\xd5b\x9a\x98\xbf\x17\xeb\xd0\x9aV^Q?\xa2\x1f\x17\xe8\xa8\xf8\x8c?\xea\xf7^\xc3J\xff$?7\xfd\xc8\xdac\xa3\x96\xbf@\xb6\xefBaW\x82\xbf\xc0\xfab\xda\xc6\xa7Y\xbf\xa4\x1d\xafX7$d?\x99\xb9\xd3\x98\xdfS\x8a?\xd1s\xbc\x1d\xdf\xc6\x88\xbf\xb8\x9eW\x0e\xee\xfao?\xee\xcc\xe8Em\x96h\xbfB\x86\xb1\x08G\x19\x82\xbf\xcf\xf0\xdd\x8b\xe2\xc4\x90\xbf\xd1\xb2\xff\xb0\xddm\x8d?\xc5\x11\xa4\x8b#\xee\x10?\xc7+{\xcf\x9fbk\xbf\x02F\xaf\xcc\xa0<\x82?\xf5T\xe7T_^\x87\xbf\x11k\x1e?j\xfe\x8e\xbf\xe5\x12\x15\x02\x96\xb9\x92\xbfE1\xbe\xe3t\xdbp\xbf\xfa\xc5\xd0\xef\xfaag?\xdf\x96\xce\xe5y\xa2v?\xe9S%\x1eJ\x08\x90?QOw\x19Nkc?]P\x02\xbb\xb5\n\x97?\x1eb\x9bS}\xe9l?\x82\xca\xd4w\x87\xe67?\x16\x94;\xc0-\xf2\x86\xbf\xb4\xdfy\x98\xeef\x8f?\x06\xcd\xad\xef3\xcc\x84\xbf\x9f\x82\xbd\xb9\x8b\xa7h\xbfk*\xc5\xc6\x9a\x8b|?\x99\xc4\x04k5~T\xbf\x03\x8a:(\x05Kt?\x88`\xdfy \xdb|\xbf\xb0%\xcf{\xa6\x16k\xbf\xa7\xd2\x8f\xe6N\xad\x88\xbf\x9c\x04\xcaI\x91\x08\x8a\xbf/\xa2T\xd6"\x8c\x91?\x02\xcc\xebW\x08\xc2v\xbf\xd5\x96\x1b\x98\x84\xd7w?P\x94W\x842ES?\x85r"T\x1bT\x8f\xbfy\xec\xa3\x8f(Xw?\xec\xce\xf0\xcamBM?/\x04pZ\xedFs?r\x0f\x1c\x85\xae4\x8d\xbf5\xb0y[\xf8:\x85\xbf\xc2\xc0\xc7\x8f\xe3\x87c?\xa4\xc1\xc5\xcdt\x8b`\xbf=\x93mT\xea_\x90\xbf\x8e\x14\xed\x8a\xc7\xcfl?\xd6y\xbd\xec\x82\x03\x97\xbfjt\xc2\xec\x9a\x1ag?\xe6\xab]\x01\x04\x99u\xbf4\x93\xb7\n\x9cFh?N\xe5\x0c\xd2\x96\xfb\x80\xbf\x9d\x070\xe2$\x95d\xbf\x9e\xe3\x8bOt\xd5o\xbfc\x1bB\xf6a<\x83?/\xe3\x1bAY s\xbf;\x83v\xf0@\xe3\x7f\xbfAg\x85@\x00_T\xbf\xe6b\x8d\x17\xd4\x82>?\xdbQ\xfb\x9d\x96]w?Y:\xe8\x93\xe0_\x86?4\x9bL\x07\x81Tz?\xdc\xee\x8c\xb1(\x9aq?8\xd1\xe0\xf1\x7f\xf4X\xbf\xcca\xf0\xb4?\x03\x90\xbf\xdf\x13\x95\xc55L\x84\xbf\x11\xc76\x92\xd6\xaci\xbf\x86\xba]\x86^\xaf\x8e?\xfa\xc1?\xb8\xe4\r}\xbf\xb9\x81\xb1\x9a"\xf1&?\x84\xba\xba\xac\xa9Z\x92?\xcau\x86\xa2\xb11v\xbf@\xca\xa8\xeam\x98t?\x80L\xd4o\x88\xeeS\xbf\x10\x1b\xc0\xeaP\x95\x98\xbf\x1b\x18\xca\x05\xdf\x82\x81\xbf~\x8d\x1e\xa4\xc6\x87s\xbfQ\xcb\xa6g\xe1\xb4\x8f\xbf\xf48\xb4\xe1\x11\x01\x83?\xaf\xd2JnMHA\xbf\xeb\x84\xc2O<\x1bk\xbfVj\xc0\x8a\xe5\'\x8f\xbfml\xdcx\xa2\xc3}\xbf\xa4\xddC\x1b\xc5D\x83\xbf\x194\xa2c\xe7J\x99\xbf~c\xf4\xd8\x1e\xac\x93?:/\xf7\xc7\x94l\x91?>=I\x1e2F]\xbf\xa6\x97\xc9\x9e\x82H\xb1?z\xc5\xa9M0\x9c\xc1\xbf\xd7\n%\xee\xc6\xbd\x8b\xbf\xd1\xa7\xeaK\x0b\xd6\xb4?\x8c\x82\x7f\xef\xe8&\xa0?z->\xe1\x11;\x96\xbf\x08u\xba\x02\xed\xc5\xd7?\x9c\xd08&\xd4\xdb\xb3?\xfeZk\xe4):\x99?\xadlW\xcbK5\xbc\xbf\x95\x9d\xccJ\xf7\xda\xa3\xbf\xfd!\xeca4;\xb4\xbf\\\xb4xJ\xce\x9bx?\nJ\x87\xebuY\x86\xbf\x0f\xdd\xb0\xc8\x83r\xa3\xbf.\x84\x81S\x9d\xe1\xca\xbfcD\xc17$S\xcd\xbf\x99\xfc-\xd6D\xe8\xc8\xbf\x1ev{\xde\xed\xcaU\xbf-\xce\x84C\x13\xf6\xac\xbf\x91\xe8\xbfU\x0bN\x87\xbf\x9e~\x9c\xe44s\xd2?\x8b\xb5\'Vz\xa0\x9e?!d\xe1\xfc\xe8\x8b\xbc?8\xbcK/\x18^\x80\xbf\xb2J\x8e\xc8s\xa6\xb3\xbfj)\xb4Z\x8eF\x83\xbf)\x04xu\xba\xb6\xa8\xbfm"\n\xa8\xd1}\xb2\xbf\x03*\x05\x16\xa73\xaa\xbf\xc0\xbe\xa6\x0f6\x0b\xaa?\xa7\xa7\xdb\xc4a]\xb9?\x9f\xdcu\xdf=d\xa4\xbf\x85\xc7\x89\xf13\x99~?=#\xa7\x7f\x94m\xc1\xbf\xda\xe7G\xd4\xae\x82\xb3\xbf\x07\xd5\nZ,y\xa3\xbfV\xe1\x0e\xe3f\xa2\xc0\xbf1\x90\xd71Z\xcc\xc1?\x9d\xe2\xd2pzf\xd2?\t\xa4\x1b\xda\xde\xac\xa5\xbfQ\xe6\xe3\x82{\xab\xa0\xbf %k\xc6\x11\xc9\xa4\xbf,S\xcb]\xba\xc1\xb8\xbf\x1d q\xc6\x82\x89\xad?h\x8d\xac!gM\xb4\xbf\xea\xad\x95\x86t>\xb4?\xf6\xfd8=\x00\xc0\xa1?S-\x9d\x06D1\x93\xbf\xe2\x18\x8fW\xf0j\x97?\xdb\x9bA\x06n5\xa3?G\x1e*M\xfd;\xa0\xbf+E+\xaf\xed\xca\x80?H\xb7Q\xb8\x05\xe7\xa3\xbf\x11\x95F\x86\xd0\xdc\xbe\xbf\xe8\xdc\xfd\x91\t\x02\x93\xbf\x8d\xdf6YZ\x07\xb7\xbf\x05i\xcb\xa8\x14\x87\xb7\xbfo7m\x00\x8d\x8d\x98\xbf\x80<k~\xe2\r\xb2?\x00\xa1n1\xe5\x85\xc4?\xe9\x1cL[\xc6\x1c\xa1\xbf\xcf\xc7\xf7\x84\xc0\xb0\xb6\xbf_y\xd3VW\x82\xa2\xbf\x84\xad\xc9\xda?F\xc8\xbf\xe8\xf0\xd8|87g?\xe1\xf6\xb6Mzk\xaa\xbf\x16\xc1iG\xd2\xc3\xa6\xbf\xdc\xafob\x0b\xce\x98\xbf\xfe\xce\xe6\xa8\xf4X\xb5\xbf\xa7\x9a\x17u\x0c\rP?\xbd\xbb\x8c\x05\xd2\xfe_?\xab\xc9\tf\x001z\xbf\xc4\x821\'\x11J\x83\xbf\xf2\x92\x91/\xf8Q\xb9\xbfp\x1b&]\xd9\x85\xbb\xbf\xf1\x9aH#\xea\xb1\xad?\x1a\x0b\xe8u\xab\xf8\x96\xbf\xa2\x8a~\r\xbd\xcd\xa7?;~(\x9e\xe8\xbc\xb8\xbfW\xfe+*\x86\xf4q?I\xd0\x83\xe4\xdb;\xc7?\x00\xcb\xc9\xaf\xa5\'\x83?-)E\x93\x89"\xc9?\xa1\x8d\xa8\xd3\x8e\xb6o?X)*\xa8\xef\xc9\x87\xbf#\xa6\x00\xafo\xde\xbd\xbf\x96\x1c-\xe7\xfd\xf7\x92?\xfa\'fY\xabb\xc9?<<oSn\xaa~\xbf\xe5\xcd\x07:y\xcb\xce?\x0b\xf5c\xb5+W\xb6?\x83\xf3.\x9eY\xb1\xbd?Tl\xdf\xbez\xcfQ?z\x1b_jK\xa2\xb2\xbf\x95\xd1\x8f\x05n]\xd1?i\x9djc\x98\xcb\xc9\xbf\x0e\xbf\x1b\xa0z\x95\xd3?b{\xab\xb8\xd6i\xb5\xbf\xb5\x96\xd8\xf4\x7f`r\xbf\x84\x03\x10Th\xa0\xb0?\x9fKC\x0fR\xbd\x92?n.\x07}$`\x8f\xbf\x0fJ\xcb\xaeBb\xb5?\xac\xacb{\xa30\xc7\xbf\xef\xa0eW-F\x9b\xbf\x83\xd8\xafb\xa9\x99\xb2\xbf2\xe5mC;{\xa5?\xf2^\\\xce\xc9w\xb2\xbf\x17\xf3\xf0\xfb\xcb\x14s?\xad\xdcuU\xa4\x12\xce?\x91\x99[\x06\xe7c\xbf\xbf\x97\xbc\xe6\tx\x14\xb4\xbf\xd21\xcb\\\xcd%\x8a?\xa9\x9et\x15\xea\x0b\xbe\xbf\x8f\x88\x06\xe8h\xfa\x9a\xbf\x11\xa4\xf3a ^\xc2?\x1f\x05P2\xa1\x0c\xbb\xbfh\x16\x0f\xec\xa5\x14\xcc?\x88\x92C\xd9S\x99\xc9\xbff\xca&\x93\xa5\x1d\xd0\xbfT\x0c\xe6\x15\xedB\xb3\xbf\xb5\xe5\xb5\xf98\x10\xe1\xbf\x92\t\x00{4u\x93\xbfRuew\xe1\xed\xac\xbf\xc6of\x01\x9b,\xad?\x05A\x07E\xe2R\xb4\xbf;<\x00\xa6y\xa6\x9a?\xbe!\xc5v\xf2\x80\xb6\xbf\xbac\xa9\']\x89\xcb\xbf\xba\x90VE\x8bq\xb5?\x88\xcaS)\x02ox?\x83W\x8c\x9e\xdb6\xe0\xbf\xc4\xd7jf\xb9\xdb\x93?x\xe4\xb2\xabF\xd5\xc3\xbf8<i\xd8\xe8\x98\xc8?\xea\xec?\xa4C\xa4\x94?\xf8B\xde`\xb7j\xb9?\r2.\xb9\x1fo\x94\xbfZE\xf3L\x10!\xce?\xe5\x91\xf3\x1d\x98\xe0\xc4?\x12";\xd0\xa8:\xd6\xbf<\xc6*I\x18\xec\xba?\xd7\xa3S\xa4b`\xb7\xbf3\xa2\xf7\x95\x7f;\xdf?: \xdc\xe6\x146\xc5\xbf6\xef\xfc+~&m?\xd0\xc4an\x91\x19\x9c?G\x94\xb9\xa8\xc4w\xcd?\x98\xa2\xc8\r\xd00|?\x0c&I\x0f\xb6\xa8\xcd\xbf\xc8\x02=\x86\x0b\xc5\xd0\xbfq"Q\xa0\x19\x0b\xb8\xbf\x83`e\xfc\xbfV\xc5?z\x81\xe0V\xec\xb4\xc6\xbf\xbei\xe3\x98\x90\xb2\xc3?G\x13:}\x82\xc6\xb4\xbfH\'\xde\x824\xe2\xa5\xbf\xf2\xbd\x99\xa5U\xb0\x9e\xbf\xb6\xe7U\xae\x8c\xf7\x85?\x19o\x04\xda\x95D\x90\xbf\xe1!{tz\x92\xbf?\xed\xa5,\'\xa94\xd1\xbf\xe3\xd0\x8d\xa4\xbfp\xc7?\xfc)\x13j;2\x96\xbf\x11v\x05ZCW~\xbf\x0c\xb0v\xe5B\x0f\xd4\xbf\xa21D\x02\xac\x8a\xa3?3a\xde\x99\x07\xf4\xbe?$\'\xbf\x15W\x95|\xbf"\x9c\xd2F\n\x0e\xb2?@,y\x81\xf2Q:\xbf\xbc4\xa7`\\\xf7q?\xa3T\x1b\xe7\x13<\xb5\xbf51\x1ar\x8d\xc9\xb1\xbfY\xb6\xe8\x81\xf5\xaa\xbc\xbf\xf5\x8aa;j\xa1\xe1?\xdf\xef4?\x9e\x1d\xcc\xbf\x9cjt\xccK\xef\x94?J\xc4\x1fE\x15#{\xbf\xea\x18?\xcd\x14\x80\xb3\xbfK\xc8(\xd3\xc3;\xaf?j\xd1\xc89\xed;\xea\xbf\xf0\n\xca\x1d"\xac\xbe?\'9\xe6\r\x9d9\x8b\xbf\xf0\x828N\xb8\x15\x83\xbf\x848_kB\xbf\x86?qh\x99\'\x0c\x89\xa2\xbf\xc0\xf9\x99\x1d\x14\x02\xb4\xbf\x9e\x86\xc8\xcb\x10b\xcb?\x8f\xbd\xe1g\xfav\x9d\xbf\xdd=\xbc\x93\xbe~x?D\xb5\xaa\x10\xac\xe7\xdb\xbf\xba\x10\xbbhm\x7f\xa2\xbfM7\xfb\xeba@\xb6\xbf\xd9\xc7\xae\xd7\xa7zj\xbf\x94\xd0\x0f\xdb\x08\xf2\x94?\x93l-\x0e\xaf\xde\x9e?\xd9\xa4\xa0;\xf5\x0f\xbb?\xa3\x80\x00D\\Y\xd8?\x08>2\xd6\xd95\x96\xbf\x9d\x0c\xf6\x16\xb5\xe1t\xbfd\xed\x00\x82\xd4\xfd\x88?\x10P\xed3N\x13k\xbf\xbc\xba\x03\xa0\x90\'{?~\x984\xbf\x80g\x93\xbf\x08%N\xc4\xec%\x8d\xbfe;Zz\xe1\xa1z\xbf\x11\xcc\xea\xe4~&\x94\xbfr\xca\xde\xf4)3`?\x8cOI\xc2W\x90|?FU\x99L\xccvx\xbf\xecj.\xbe\x10s\x87?E1\x07c\x83\xe4t?Q\x151\x8d\xd5\x936\xbf\xa2\xb8\xbex\xd1\xbas\xbfwi!\xf2#qv\xbf\x84\x85\xabo\xc5\xfd\x84?\xa3\x19\xab\xc0\xc1>\x82?>\xc1/\xfa\xa7\xaf\x88\xbf#~K\x03\xca\x16}\xbf\xecj\x12\xcdR\x87\x87?)[\x90\xfeI\xc6f\xbf\xe9\x84\xc7\xc8Q\xcf|?\xb0\x12\xc1Q%\x03\x90?5\xd0\xdf\xf5\xf1l\x82\xbf\xa7\xe7\x8ac"\xe6\x87\xbfgP\x89\xbdFWG?\xa2\xb2\xdaB\xb2!\x80\xbf\x06\\\x1e\x16\xbc\rx\xbfb\x18W`n\xc8t\xbf\xdfa\x80)O\xf3i?\xe7\xe3\x81\x95\xdc\x84\x82?\xabeS&\xe5\\}\xbfsb"\xb0\xcd%\x90?|2|\xf7\x0f0<\xbf\xde\x0c\xd9\xa4e.Z?\xfb\xa9:+J\xb7g\xbf\\\x8a\xa3\x82\xb4^4\xbf\x84\xb1(,\x90\xab2\xbf,3V\xd3\xebB\x8f\xbf\x9cn:m\xbfF\x95\xbf/0\xc5{\x8a\xb3~\xbf/p\xd2>\xa6\xcck\xbf\x7f!\'\xb3+Z\x88?\xbe\x1e\x11\xfb\xee\xb3V?\x8d\x00\x94\t|\xd1p?(\xf7ZU\xc6\x1as\xbfl\x03W\xc2D\xc1\x95\xbf\x1c\xee\x11;\xad\x97\x8c\xbf\x00\x00\x00\xc0\xc5\xea|\xbf\t\xd8\xdeU\xd34o\xbf\x97^\x8d\xady\xebF?\x1f\xbcer\x12hU?\xf8\xf2\xcdN:d\x8e?\xfe\xcf\xe3\xe7N\xfe\x8d\xbf;c,\xb8A0\x80?E\xa6DD\xd6\x1en\xbff\x15H\xec\x92\x15H\xbf\xe7\x07!/\t\xde\x86?^\xb86\xeez\xa7\x80\xbfY\x15\xdaxN\x03\x99\xbf\xb7y\x08u\x97\xb7s\xbf\x83j"\xe4 \xd9g?\x91~_\xc0},t\xbfX\xcb\x00\'b\x04e\xbf\xeeF\xb7\t\xbaP\x8a?\x8b\xf6C\x91\xd0D\x8d?Z\xff\xff\x9b\xf1nD\xbfs\xd7\x965\x1c\x99s?0\x83\xf5 \xfb\x82c\xbfN\x92\xe1j\xa5 \x96\xbf\xa5`4\n\x91\x03\x8a\xbff\x1c\x80s\xfe\x18c\xbf\xaa\x9c\xfb\xb02:\x84?_\xc4Q:\xafh^?F\xdf-\x05\xeb\xcbt\xbfBPz3\x89\x00`?=\xae\x1ff\x97\x9cw?\xce3\x04\x81\xd6\x1f\x9c\xbfn[$-7p\xf2>\xce3J\xccB\xd9\x81?"\xf1;<\xe1\xaeQ\xbf^\xbc\xd5\xb8j\xb3C?o\x85:=*\x94\x86\xbf\xcc\xb9\x14q\xae\xd4\x87?\xee\xbbY\xca\xd4SR\xbf\x9c\xf0\xca\xc1\xde\xb2\x86?\xedL\x10\xdcI+q\xbfZ\xd0\x1b\x13Wu\x89\xbf\xdeo]V\x8e\x8c~\xbf\x85\x92-\xbc\x14\x89Q\xbf\xa5G[*\x17\xd3\x84?\x88\xdc\xf4\x1c\x94\x04\x88?\x9b\x06\x80\xd3\x8d\x11m\xbf-\xe0G=&\xad\x8b?7\'\xf0 \xacl\x84\xbfP\x96cQ\x87)n\xbf\x1c\x0b\xfb\x95\x13$a\xbf\x9d|I&\x05;\x8d?\xfc\xe7\xac[#\xfe\x84\xbf\x02\xbd\xac\xcd\xa8l\x80?I\x0b\xa4\xefR\x1a\x8d\xbf\x95\xf7z0!\xbb\xaa?\xd3;[\xc1P\x91\xc5\xbf\xbf\xdd\xb7\x9fr\xc4\xc2\xbf\xfd\x8ee\xbd{\x93\xbe\xbfo8\t_\xa5\x0b\xa3\xbf\xfcn\xe7&9|\xc3?\x91\xc0@F\x94\xd5\xbf?h\x96\x1b\x1d\xa1\xaa\xac?R\xea\xe4;\x80\xdc\xa4\xbf\xd4\xcb\xf0\xf0#E\xa4?\xbb\xb0\xae\x1f\x84\x1ay?\x03\xb6\xc6\xb3+X\x91\xbf\xe9\x12\xb3\x03\xbf4\xbc\xbfC\x8c\x9b6g\xf33?\xdaeU\x05\xf1g\x9f?\x8a\x07\xe1\xda\xfd\xfb\xc5?\xdc\x8a\xe7^=\x86\xc1\xbf\x17 X]\xdb\x80\x94?\xd7\xc5\x92\xfd\xe8\xdcZ\xbf$\x17\x02Tg\x9c\xa0\xbf:\x1cO\x90R:]\xbf"\xfaz\x16Du\xc8\xbf+\xf0\xd6\xd1\xdc\xdf\x8d?\xe6\t\xe6\xec\x9c\xe2\xaf?\xa4\x98\x9a\xa4v\xcb\x96?|\x92\xbe\x8d2"\xbd\xbf\xd2\xa8?,\xb9\x8b\xb0\xbf\x88487Hl\xa6?\xf7S\xd7:e\xb7\xb5\xbflf\x19^;x\xb3?\x08\x94\x937\x9f\xcfu\xbf~\xd57\x93\xfc\xbc\xd0?\x97\x9au\xe8\x9cv\x97?4\x9c\xc3\xfaP\xf8\x87?\xa6\x19j\xbf\xa2\x17\xb0?\xb1M\x04\x87\x06\x94\xb1\xbf\x9bm\x14\x9a\xb2\xd1\x8d?\n!\xbd\xa8\xb9u\xad\xbf|\xd6\xe1\xf5i\xc0\xba?\xa7\xfe\x16(l\x11e?}m.\xa4\xc1M\xb0?\xa5c8\xb7\xe81\x88\xbfvn\xd0\xbf\xf6\xa3\xb5?\xb1\xb0"\xd2\xc9\x9d\xaa\xbf\x82\x12\x0e\xdb\x1d\xe5\xa1?A=\xb7\x0c\x832z\xbf\xb7>\xc7{\xfax\xa5?\x96\xecXd\xa6\xc3w\xbf@\x12\xb7{\xbe\x93\xc4\xbf\xe5iF\xd3\x17o\x8e\xbf4\x98\xc6\xae\xb0\xee\xb0?\x87\x98\xa6^w\x8e}\xbf\x96-\x1c5\xeb\x97\xb0?D\xa1\xc0X[\xe2\xb2?\xf7\xcf\xa7\x99\xd0\x17\xb2?\xedt:Ih\'\xbb\xbf\xd1\'\xcc\x99\xa6z\xa1\xbf\x85\xc6\x9c\xe8?\xea\xa9?\x90\xd3\x88{\xbd\xf2\xa6\xbf\xf8}\xe2\xd2tX\xbc?\xf7\xa7\xe4\x9c\x07r\xad\xbf\\\x1a\xd57\xe6\x94\x8e\xbf\x9e\x8fq\xa3\xbe\xda4?\xa4\x03\x90\x1b<c\xa7\xbfC\xf2\x03-\x06\xa6\xb0\xbfjk2\xe1\xa31\xc4\xbf\nN\x95\x05a\xc5\xa0\xbf\x1a\x94HiR\x00\x8a\xbf\x80\xc9C\x1b2\xbdr\xbf{gO\x9f\r\xc9\xa0?N\xf5T\xc09\xcd\xa2\xbf\x05)\xabqg\x9a\x89\xbf*1T\x94Z>m\xbfSy\x05\x80\x0b`\xb5\xbf$\xf9\x13\x01\xed\xf1\xa1\xbf\xa5Mc\x05\x03\x16\x93?O\x9e\x10Pi\n\xa6?}\xf4\xe1>vz\xc0\xbf%\xd8$\xaa\x8c\xab\x9f?\x1dpZ\xcc\x9f\xf8\xa8?O\xa4\x8d\xcd\x87\x8c\x9b\xbf\xac#\xaa 3\x07_?\x94_\x8c\xe1\xf3b\x86?\xa7\xb8j\xbd\xe9\xd1\xac\xbf\x94(\xa9D\x97@\xaf?C\xd1\x0c\xa6\xa2\x8e\xb1\xbf\x95>\x89\x11\x90W\xc2\xbfbS\xe8=\x86\xe7\xc0\xbf\x9d=&\x90\x93\xe0\x87?\x08\x8aX\xe4\xdd\xe3\xb4\xbf\xc8q\xa8\x02\x9b\x10\xb8?\x17\xe9z\x90\x9f\xd8\xb4\xbf\xb79\xb9m\x87p\x93?\xeb\x93\x04 \x90\xe0\xa2\xbf\x0eP\x9c\xa5\x8cD\xbc?\x06K\xa0\x08\x8fW\xc8\xbfE\xb9<q\xa4L\xa2\xbfd!\xa9m\x02\xb7\x9e?M\x8fy\x8e\xd6\xb3\x93\xbfu\x19\xa7\xa3{8r\xbf\xd8&\xe0/\xcb\xec\xc7\xbf\xeaM7\xd1\xa9?\x9d\xbf\xc2\x81B\x0f\xd0\x91\xc4\xbf1t|\xc4w\xf9\xba?\xc7.Ow\x9c\xbc\x9d\xbf\x1eyo\x14O1i?"\xdc\x0fKt\x02\xac?`\r{\x12\x8d\xa1\xb8\xbf\xb8\x1bK\xd4\xc3F\x9c\xbf\xa1\xe5\xfd\xb7(]\x9c\xbf_!\x03D\xa9\x13w\xbf\'_\xe71\xa2\x9a`\xbf\xd4l\x13\xd4R7\xbd?C\xa8@\xa1\xe8\x0b\xa0\xbf\xd8\x00\xc9b\xb67\x99?\xee\x85\x9a\xced\xb7\xbe?\xd6\\\xfa\x0cipg\xbf\x8cu\x13\x90\x17\xaa\xa1?\xfd\xf6\x9bk\xc9W\xb5\xbf/\xd7\xdec{}z\xbf6_\x1e\x10bB\x9e\xbfQ \xe0\xe9\x1b\xfa\xc5\xbf\x1d\x93\x06\x9dT\xdd\xac?\x84\xab\xaf\xc3\xe36\x97?bVP\xb7\xd6\xce\x9d\xbfR\x8a\x9b\xdf\xa4\xd2\xbf\xbf\xceb7\xe0\xa0\x18\xb1\xbf\xf9m\xf9Y4\xeb\xa6\xbf\xab\x81\x89\xcf\xa8\x97t\xbf\xf27\xfa\x8c]\x9e\x81\xbf\r$D\xc2\x18\x92\x81\xbf\xcf7\xddZ8c\xc2?n\x1d\xd5\xf6=\xa7\xa7\xbf\xb8\xfc^\xe7O\x8c\x9b\xbf&\xe5\r\xf6\x19\xf8\xc2\xbfl\x11j(b\x04\x96?\xe925;:\xc1\xa5?_\x8a\xfd\r\xbf"\xa7?\t\xae\xa0\x82\x8a\xd9\xc4?\xa5:*\xcf\x14\x80\xb3\xbf\xaa\xd8g^\xcbO\x98?\xb1\xbe\xd7\xe5\xfeL\xa8?s\xa6\x8f>.\xdd\xb8?Ky\x1d\xd3\x81\x80\xc3\xbf\x15p\xc6Ti\x83\xb1\xbf+\xbe\x17\xc7)\xfb\xb6\xbf\xa3\x91B\xc0\xe9\xe7\xb5?\xf0\xe6\x16\xe3\x1f?t\xbf\x1e\xd7\xa9\x8c\xc7B\x88?\xd2\x96Q\xe9\xa7\x9a\xc2\xbfn\xbbs\xea\x03\xc9\x98?\xf6\x05W6/@\xab?1\xc1\x98\x14\xa7\x05\xc5?\x99\xdf\xec\x05\xa58\x9d?\xdf,\xf2\x13YR\x9d\xbf\x9b\xba\xaa\x10\x1c\xde\xa3\xbf\xcb\xf7#\xa4\xff\xeb\xb8\xbf6F\xfc\xf2\x13\x03\x87\xbf\xf7\xe5Yw\n.\xa9?\x1ej\xb8\xc5\x92\xcd\xa7?\xd0\xae\x9d6\xbf\xf1\x9e\xbf\x1d\x81.\xb8\xde9\xcb\xbfM\x8d\x11[\n\x02p\xbf\x9f\n\xd62\x0eh\xb0?}h S\xc8\x7f\xc0\xbfNFf6\x18\xf7\xc5?<:0\xe5\x81}\xc3\xbfW&I\x00\x92g\xa3?(\xd0s\xaf\xa4\xf5\x81?\x82\x8f\x14o\x04\xe9A?\x95\xf7\xfe\xeb\xb73\xc8?\x7fC\xc4\x95\xa6\\\xc6\xbfh\xaf\rTb\xd1\xb9?\'\xdd\xd8\x19\xf8\xe7\xa2?\xbb\xfbK4])\xa0\xbf\xcd\xf08\xa3\xa5\x9e\xa3\xbf1>\xf0\x8b\xc3\xf4\xc1\xbf>\x9c\x81i6\xda\xc1\xbf\xc1%\xa2\xc87\xc8\xb6\xbf\xb2\xf3\x01]0\xc4\x87\xbfL\xce\xde\xf1W`\xc2\xbf\x97L\xa8\xf0\xc4\x93b\xbfh\\\xc6\xbcwB[?\xf8p\x9e1Q\xc1\xbe\xbfc\xa3<\xde\x9f\xce\xaf\xbf\xbc\xf9s\xaf\x9b\xf0\xab?`\x80\x84\xfe#h\xb1\xbf\x80\xb6y\xde\x93\xbe\xa0\xbf\xae\x8b\xd6%\x9fS\xb8\xbf/;\x196\x13_\xbb\xbf\xfd\xfa\xc5\xd3Rg\xce?\x10\xd1\xc3\xe9@\x9f\xa7?3}Q\x9f\n\x9c\xd3?\x8c\x0bmi\xe2\xbd\xb2\xbfT^L\xff\x84\xad\xa7\xbf\xd2\xdc\xfa\x94\xca\\\xbb\xbf\xf4R\\\xbc\r\xe6\xb0\xbf\x8a\xb0\x89\xf5\x1b\xbc\xc4\xbf\x16\\\x84vCD\xb7\xbf|1\xc0+s\xf3z\xbf\xf9\xc6{\xd0\x95\x8a\xb1?\x9c\xc9\x0f\xa6n\xb2\xc3?\xb9+\xcc#R\x9an\xbf\xf2\xe8\xc6)\xead\xb9?k\t\x87\x88n&\x96?\xfbN\x1d~\xc1p\xc3?\x91\x1c\xd4\x17c\x02\xa4\xbf\x98\x8bpR\xd2\xa3\xc7\xbf\xd9\x7f\xc1|\xec[\xb4?\x13\xb3k\xd5\xd8\x12\xc0\xbft\x9c\x7f\x9c\xda\xd5\x80\xbfi\x0eV\xb5\xd7\x0b\xb2\xbf\x04\x96(\xdb\xc0\xb9\xcb?\xe0S\x04\xc7\xf3\xd8\xb7\xbfu\x17]\x86\x01\xb3\xb7?\x1f(|C3-\xd0?\xc2\x0f\x82\xd1\x93\xa2\xc1\xbf\xc0\xe1\xd4\xbd\xb7\x8d\xdd?\xaf!f\xb7\xcc\xd8\xa0\xbf\xaf\x04\x05?\x8e\x94\xd3?\xe5\xc2\x85\xe3\xcf%\x8e?v\xed\x865\r\xd6\x9d?\xe6\xa0Wl\x14\x90\xbd\xbf\x01\xae\xfe:;\x98\xba\xbfR\xab\xc09\x85\xb3n\xbf\xbf\xb1\x9b\xd1\tk\xb1\xbf\'\xe2xu\xcd\xab\xb5\xbfB\xbe\xd8r\xd9 \x90\xbf\x99\x96\xa8\'\xe2\xb1\xb7\xbf\xad\xe2\xefIX\x90\xc2?\xfc\x01@\xf3{\xda\x81\xbf\xb5S\x91\xcd\xb27\xc5\xbfZ\x07\x1c\xec[\x8f\xb8\xbf\x9a\xf4\xfa\xcc,\xdb\x9e?<<\r(B\xdd\xa9\xbfk\xa4\x14\xf6%f\xac?\xa09\tD]\xde\x98\xbf\xddi\xc6\xf5\xa3\xd0\x90\xbf\xbaz\xbePf\x92\xa8\xbf+\xbbr\x0e\xba\xb0\xa5?\x06\xdcy\xbb\xb3\x01\x9f?\x00\x1eNxOu\xb4?\xa3\x8e+\xba/t\xc4\xbfZ\x0eG\x89\x88\xa4\xae?d\xf46\xb9\xda_\x8c\xbf\x92s\xd7\xff\xf8\xe1\xbe?\xde\x8cJ2\xec\xeb\xc8?-\xb7k/\xc4\x1b\xa3?\xa3\x95\xb7\x87e\x0c\x8a\xbf0\x94\x1e\xc0\xd9\xeb}\xbfz\xe3\xfc\xa3z\xd4\xa3?\x84\x8c\xdaC\x91\x11\xc5?Lr\x90\xa5\x13!y?p\xc7\xa9\x12\x01\xcf|\xbf\xf84\xbd\xed\xb0S\xb6??E\xf1\xd5\xc6\xc7\xc0?+4G|\x97X\xc5?"\xf2(!y\xfa\xa0\xbfa\xab\xddKr\xa0\x8f\xbf\xcc\xf4\x13\xda%5\xb1?\xb4\x8b\xadb2\x16\x84\xbfiq\xa3<\xebj\xa3?\xef\x86\xe0\xdcC\\n\xbf1\xa9o\x1a\xf8\xdc\xd5?\xfd\x81n\x87"\xd9q?M\xfb\xf7R\xba\xed\xbc\xbf\x8c\xb7\xc7p_\xff\x96?:\x1bF\x904\xbe\x87\xbf7\xefTG6\xe6}\xbf\x16lO\x05\n\xdd\xb3?g\xba\xd9\xcfP\xf6\xb0\xbf\xbbl\xe0ZFk\x88?t\xa6\xa0\\\x02U\x80?\'\xfd\x9d\t\x1c\xdc\xc0?\x0e\xf7\x12Ahx\xc6?\xd2\x84\x99\x9a\xb0\xac\xba?R$\xc7\x0b\x94l\x9c?P,*\xdf\x96F\x90?\x04%M<\x9b0\x9a\xbf\xd984s\xa0\xa8\xa5\xbfE\x9b\x121P\x06\xb0?o\x12\xbe\xa4e\xba\x9e\xbf\xd2\x1d\xe2\xba\xc8\xc6\x91\xbf\xc7=E\xec\xe6;\xc2?\xe1\xe3\xe3\xbe\x8f\x8f\xb3\xbfj\x91C\x04\x7f\x8cq?\xe7\xa5M\xc1\xb1\xfc\x88?\xd1O\xd4\xf3\x02!H\xbf\xa5\x85\x83[:\xca\xa5\xbf\xc7\xe2i\x95\xcf\x1a\xca\xbf\x0c\xe8TW\xd8\xb8\x88?Ma\xf2]\tK\xc2?Lg\r0u\xa9\xa5\xbf\x1f\x87\x14\xde\x1e\xe6\xaa?\x80\xbf:F!\x7f\xc2\xbf\xba\xeb\xf5\x9b\'\x10\xc0?\x15\x8fB\xc10\n\xb0?\x18N\x0c~C4x?\xa2jb\xb9\xc6:\x8e?hr{Fl\xe1k?\xd6c\xd7e\xafm\x80?R\xe8\xc8\x01\xcf\x0e\x9d\xbfN\xb2w\xb4\xf5\xa2Q\xbf\x94\xd5\x02\xca\x0b\xa8\x8a\xbf\xc9\x82*\xd8\xd4\x84{\xbf\xdb\x80[Kj\xe9\x90\xbf\xf2\xd2\x90\xcc\x17\xd4\x81?rEy\xaau\xfd{\xbf}$\x10\xe6\xdb\xd3\x82\xbf3\xec\xe3\x8e\xadV\x84?\xc0m\x03\x16\xff\'\x8c?\xe8\r?\xb6\x01\xc8\x91\xbf\x1f\x18\xde\x83OU\x85?\xc3\xd2\x8a\x19\xa5\x13\x9a?t\xee\xf8\xac`z|\xbf\xd7\xf1w\x93\x81 p\xbfp\xd5\xaf\xda\x95u\x85\xbf\x00\x84HD\x04\x9dt\xbf;g\x8a?\xb1\xfb\x8c?RI|\x07lUz\xbf\xb0u\xc9\xbe\x89\xbci?\xbc:\x0e\xd4$\x19e\xbf\xa7\xe2\x03N\x11\x9f\x80\xbfTg3\x11\x16lg?\xaf\xda\x95M<)R\xbf\x8fK\xa7\x01d\x83n\xbf\x96\xe5\x12PU\xa8w\xbf\xea\xbe\xadn\x02g\x80?\x12@m\x85\x9b\xd6\x87\xbf\xf8\xa4\n\xfd\x16\x80\\?m\x9a\x84\xc4q\x80L\xbf+\x10\x98\xb7\xf3\xd6l\xbf\xf6\xfc5\x96c\xba\x87?\x1aL\xc7G\xa8\xc5\x80?\x10\x8a\xa3\xa3#\xb3\x81?\xbf\x80\xfdB\xd0\xe0f?]J_Hp\xf8\x8f?@\xe2\x9fO"\xa1m\xbf\xc9\xaf1\x99\x08\x0b\x81\xbf\x04\x01{\xfet\xd5s?\x95\x8c\xaa\xcb\xae\xdcA?<4+j\x9a8V\xbf\x91\xa5x/\x9f\xbbe\xbf\x15\xf4\xa5F/\xcaz?p\xb7\xffq\xd7\xf4m?\xe1C\x0e\x07\xa9p\x8d\xbfT\xd7\x96g\xd0ju\xbf\xb5\xd6q\xf3\x0e\x16\x8d\xbfMS\x1ac3lp\xbfa\xbc]\xdb\x95\x1au?`61\xaf\xf0\x17\x1b?\x95\x02\x9d&\xab\xb0\x89?\xa91\xfe\xbda\xear\xbf7\xc0"\'\x8b\xa0e?\x9aX\xd2!\xeam\x7f?a[O?\xff{\x90?\x02\xd5\xd8\xf1\x8a\xfbP\xbf\xcbS\xc1\x17H|\x87\xbf\x12pBV\x901s?\x8b\xc0&\x0c\xa0\xd9\x93?vk\x07\r\x98H\x8d?5\xbdj\xcc\\n\x86\xbf|:\xcc>\x0c\xf5\x83\xbf2\xc6\x8aMj\x8d\x80?Li\xbf!\'U\x98\xbfD\xe0IW\xa7up?P\x13\xf4\x96\x85\x0e~?-v\x07\xd6#E\x90?qo\x17\xf2\xe7\xe8r?XX\xe8\x98\xea\x95u?\xff]3\xb0\x80\xc0z\xbf\xf8\xbeJC\xba\xc0u?1\xa2\xf3\x0b\xe7\xd3\x86\xbf\x0e\xef\xa3\xf3\xe0\xc6\x8d?\x18\xc9:a"\x9cv?\x08G\xe3\xe3M\x19o?\xeaa3\x9c\x1cft?\xb1\xf8SV\xf0`\x8e\xbf\x8968\x8b\xb7\x8e\x81\xbf\xfdJQ\xc0)c\x83?\xe2\xeb\xf6\x93\x03(l\xbf\x1f\x92eE\xa2\x12z?\xcb\xe6\x11\xee,o{?\xde\xe6E\xb5*\x105?\xc1\x97\x9d7\xbd\xbdk\xbf\xb5\xd4\xf4\xf87\xa4?\xbf\xc6\x9b,\xdf7Wu?\x89\x9e\xa2.\xc1\xf9Z?\xba\xeeb\xf4\xe62\x9c?7\xe85\xaeD\n\x82?\xf8p\x92\xaehge\xbf\x0c\x89\xd7\x08\xde!t?c\xe7\xad\xee\xaf\x8d\x82\xbf\xf4v\x857j\xd8\x89?\x13l@&\x03\xe9\x8e\xbf\x03\x80\xb9M\xec\xcf\x1e?\x9cv\x13\xb1\x92\xefl\xbfk\xf08\x9d\x16x\xa0\xbf\x88\x1c\xb3\x1a\xafI\x81?=\xb8IZ\xc9\x04`\xbfO\x80\xcd\x9e\xf9\xc7\xc0\xbfm\xf4\xec\x88\x88q\x84\xbfD+\x9b\x91~\xb3\xd1\xbf\xdd\x19\x1b\x10\xd3Q\xba\xbf)\x9c\xb9\x10\x17\x1b\x80\xbf\xc0\xfa\xb3pF\x16\xc5?\xbf|\x7f\x1d\x04\x18\xc4?y\xd2\xd8\xfc\x0f+\x9a?,\x80\xa7\x99\xd7\xcf\xb7\xbf\'\xa9\xf9\x0c\xd6\x1d\xa5\xbf\xe7\x18P\xa8~\xd5v\xbf\xbc\xa8\xd3\xad\xd7\xbd\xa4?\x0b\xfc\x84Ny\xb4\xa2\xbf+\x9b\r\x82\xde\xbc\xa8\xbf^\x84\x03w\x18\xc8\xa8?\x13d\x93\xe2\x1cQ}\xbf\x01\xa5\x82\xbd/}\xce?\xe5v\xfa\x8dS\x07\x8f\xbf\x02\x08\x04\xf9J\xfd\xba?7#S\x06\x03{\x9c?;\xe8\x18\x14\xb6[\xa9?Ux\xa4ibC\xc4\xbf\xc4\x1d\xa6 \xc6I\x93?y\xd1N\xa0l\x93\x9d?"\x13\x84\xf5\x9e\x9e\xa8\xbf>\x00\xef\x89\xdb0\xbd\xbfsyZ+i\xb8\x9e\xbffas)\x86(\xc9\xbf\x1dv2qz\x12\xb1\xbf~\xafyYZ\xe0\xa9\xbf\xc4QI%\x8a\xca\x88?\x08\x85\xeb\x12/O\x92\xbf\x1e\xa2\xbd\xa3Ur\xa2\xbf-z#\xbf\x9c\xdc\xa0?\xef\xe0\xa4\x03\xdbA\xa4?1i\xc2$)\xdd\x94?HT\x97\xa9L/\xc5?^ 6\x1c\xc9\xcb\x9b\xbf\x10HSTi3\xa1?Au\x83\x99\xb5\xc3\xc8\xbfX6\x05L\xa1E\xbd?\xf6pm(\x07\x0b\xad\xbf\xf6\x03\xccCD\xa2\xa8?\xb8&\x84\xa6\x12\xfe\xd8\xbf-\x8ej\xb8\x961\x9d\xbf\x0f\x96k~O\x13\xb0\xbfgU\xb1\xff[^\x8b\xbf\x86\x83\x1d\xcd\xfc\r\x91\xbf\xad\xda\x06\xb6\xa4\x18\x92?!\x1d\xf7%\x1cc\x9f?\x9a\x03f\xf3\xb0\xdc\xc0\xbfJ\xdf\xc6z~(\xaa?\xdf\xd9\x9cj+,\x91?\'\xae\xe3\xd91$\x92\xbf\x05\x1a\xbc?Lm\xae\xbfag\x85\x07_\xc7\x85\xbfc]Ro\x0f\x9a\xd9\xbf6\x11\xfc\xc8\x04+\xc0\xbfx\xef\r\xe3!\x14\xaf?\x8b\xfe\xb2I\xf97\xb2\xbf\xa1#D\x98\x97#\x89\xbf-D\xbf\xb0\'\x19\xdb\xbf\x19\x0c\xc0\xb4>\xec\x82\xbf\xc0\xf3Z$\xb4\x0c\xa2?\xaa\x92\xbc/\x0c\xc0\xbb\xbf\xd4:g\xbe\xafz\xb0\xbf\xda\xbd\x1d\xb9\xda6\xba\xbf?\x93\xd18\x86T\x97\xbf\\\x06\x0c\xe1\x0f-E\xbf\x05\xc4\x14-\x9fTd\xbfy1\x03\x0c\x9d\xa9\xcc?\x91\xb3y\x13e\x05\xc5\xbf*\xceZg]\x19\xb9?\xfc\xcb\x1e8u\xc8\x98\xbf\x84\x9f\x0co}]\x95\xbf\xe4@\xe15\x90~\x9e\xbf!J\x1a\x13(\xda\xa5\xbf\xc9\xd9\xd6\x01{)\xbc?\x8f\x86~\xc8U,\xbb\xbf63\xa8WN\xf5\x9f?V\xd6\xe8\xda\x19\x8f\xc5\xbf\xe5Se\xd9\xb5\x12\x91\xbf\xc55]\x87\xf13\x93\xbf\xd1\xd0J(h\x99\xc3\xbfL\x19\x96\xf5_q\xa4?z!U\x07\xf9F\xb9\xbf\xfe4\xf4\xd7\x01}\xad\xbf99\xf8o\x96\xf8\xb8\xbf\xf8^\xa4\x19>\xcf\xa1?\x1d\xfb}\x9f!\xcf\xa9\xbf\xc2z.\xc3\xd2\xfc\xc9?\x90\xaeD\xc9\xc6\xe1\xab\xbf]\xf8\x9a\x12\xe2C\xd7?\x1e\xed\x97U\xbad\xba\xbf\x05|\x9c\xe2(q\x85?\xefG\xb5\xe2\x07{\xbe\xbfTk\xe9O\xfa\x84\xc2\xbf\r\xc2\xc0[/j\xa6?F\xbf\xe8\xdev\x13\xb3\xbf\xef\x85\x19\xf6*Hm\xbf\xf4k\xb3\xd6\x19v\xa9\xbf\x12[+=l\x98\x8e?\x85\x8d\x8c\xf7\xabC\xaa?\xae-\x8aJ\\L\xca?\x1e\xebK\xfc\x87\x0c\xa2?"A]\xd5L\xa3\xb5?\x89\xe9\x00jtj\x9e?\xa46\xfb\xc1\xc4\x02\xc1\xbf$-\\\xc5\x85\x02\x8c?L1Y\xd0\x7f\xd7\x80\xbf\'\x13\x87l+\xa0\x8a?!e\xdbKJ\xffe\xbf3\x918\x13\xd7`\xb0?\x12\x1a\x80\xaf\xcd\x95\x9e\xbf\xb3\x83\x05\x0f\xdb \xc6?\xd3w\xd1N\xd8\x92\x9b??`u\xebO=\x8d\xbf\x07_\xdd*F\x9f\x8e?\xf8NF\xbc\x80\x10\xad\xbf+Y;\x80k\xe7\xa1?\xbc\xb7\x93ID,\xa8\xbf\xbd\n\x9d\x83\x9f\xf6\xa0\xbf\x16\xd18\x0b\xfa\x07\\\xbfZ\x93+\xddEd\x90\xbf2\xa6\xf4\xdc\x89\x9a{\xbf\xc1"\xec\xdd\xf3\xc1\x96\xbf\xad@\xcfO\xff\x02\xab\xbf\xc3I\x19\x0f\x1a\xc3\xc1\xbfQ\x82\xf1\xf53v\xab\xbf\x05cz\x91Y\xa0\xa2\xbf\xfb|\xf0;M\xbck?\x00A\xa6\xe17\xe3\xb3?\x13\xbbEIg,\xb7\xbf\xfev\xfb<\nd\x93\xbf\x8d\x97zo\xcan\xcb\xbf`=\xe5f6X\x92?_\xecjS\xe8J\xb5\xbfZ,\xdaQ(\xaf\x97\xbf^5\x1d\n\x8e\x82\xc2?\xb6\x9f*`\xca8\x9c\xbf\xd0\xc5\xbd\x0c\x9a\x0f\x9d?\x8bz\xebaF\x89\xa9?e^2\x17\xf7\xf0\xae?\x1cS\x10\x11\x1c\xfb\xae\xbf\x90\x11\x0f \xf9\xf7\xb9\xbf:-\xd17v\xf5\x94\xbf2\xde\x89\xf3\x1awr\xbf x\x04\xee\x8f\x82h?\x16K)\xfcI/\x8e\xbf\x1a\xc8v\x81TR\xb0\xbf\x97\x87p\xa8\xbc\x16\xa7\xbf-\xf9`\xd7jw\xa7?\x07L\xadO\xc9\xc6\x80?\xda:\x0c\r\x7f%\x9d\xbfnZw\x1cf\xdc^\xbf@D\x16\xef\x10kx?\xb3\xfd\xb9\x8eO\x91\xc3\xbf\xa6\xddaW\x05G\xb6?\x0ce\x1d\x05"\xdc\xa7?\r\xddI\xfc\xbb\xfa\x86?U\x019\xcd\x11\xc1\xa4\xbf5\xe1\x89\x05\xc8\x9e\xb8\xbf^\xb5\xcf(\xd8\x8b\x84\xbf5o\x13\xb1\x1d\x0b"\xbf\xec\x88aX\x1a\xb1\xc2\xbf\xf3_(5\xcd\xc7\x83\xbf\x93\xb9\xa8\xf1\xb9\x91\xb5\xbf\xd2m4\xf8\xb6\x9f\xad?}\x9f\x9c\xc4\xbf\\\x8d\xbf\n\x89\xa6w\xc9+\x82?\xce\xdd\x99\xac\xc4\x05\xc9\xbf\xc3>\xc3\xc3\xd5\xa7\xd0\xbfs\t\xa3V\x94r\xa8\xbf\xca\x0b\x91\xa9\x80d\xa1\xbf\xfa_\xbe\xca@%\x94?\xe7f\'\'\xd05\x92\xbf\xe0\xe8\rX\xf0\xe2\xb7?\xce\xe3#\xe4\xd9\x92\xab\xbf\\\x07\x1b\xef\x98\xda\x84?\x87!\'\x9c\x9f.\xae?\x02\xefb\xe5*\xfe\xa0?1\xa0m\xa10\xd1T\xbf\x83\xfd\x00\xab\x9a.\x8f\xbf\x02\x96wX\xe7\x8d\xc2?\x98\xe7Gm\xde\xf5\x92?\xbd\t\xcd\xc1\xe8\xce\xb4\xbf2R\xcc\xe7\x8e\x15\x93\xbfgM\xae-l\x00\xb6\xbf\x18\x95\xf8o\xda\xc8\xa1?~\xb6.Z\x92\xb4\xaa\xbf\x13Z\x08T\xf7[l?\xd6\x11\xeaN\x88\xe4\x85\xbfM\\X\xc6\xb0A\xc5?\x13z;fh\xcb\xc0?\x01\xba\x93\x88\xf4<\xb4?\xcd\x05\x05I\x1b\xd3y\xbf\x86\x11\xac\xeebv5?y\xdfB\xb1K"S?2a\xbf\xa3bX\x91?f\x1b\xe9C\xc75q\xbf\xee\x90#Y\xae\xe0\x81\xbf\xcf\xb0<|cr{\xbf.\x03=1x\x88\x96?\x84=c\xbd8\xcfZ?\x19\xdb@\xe7\xb6\xed\x86?\x1eR\x0fy/_\x8c\xbf\x1ad\xd8j$9A\xbf\'\x93\x86\x15q\xc2\x84\xbf\xf9e`\xdc\xcf+\x84?\xdf\xaf\xbe!\x11i\x94?A\xe0\x8d\x7f\xe5!r?\xf3\n\xde\xc5\xb6$y?\xd4\xce\xb8\xd0\x01\xee\x8c?X\x9fA\x18L\xd6\x80\xbf\x1bC\x901{s\x90\xbf{r\x1d\x0f\xc7X\x85?j:\xb3Il\xcc\x80\xbf\x97\x8c\xc3\xc8\x99_\x90?R&9\xd9\xb5\x03\x80?\xc1/c\xdc\xbe\xecj?\xbb\xe2\x82L&\xa3\x90\xbf\x87\x1bQS&5x?\xdfJ\x00\xfd_4Y\xbf\xd6\xb5\xd9\xa5k\xda\x8a\xbf\xacj\x1f\xfe]L\x90?rK\x1e\x97YA\x86\xbf\xa7\x1e\xf2e\xcc\xd1\x91??\x1b\xe7W\'\xaf\x8a?+\xed\x86\x8f)ye?\xa8>v\n\xb2\xd5s?D4\x1f/\x0bUq\xbf\x86Dz\x08\x97\xd9~?\xa2\x9a\xd8P9\xaa\x8f\xbf\xce\xd5\x17\x82t\x0e\x8b\xbf\xc3\\{T\xd5\x1c\x90\xbfs\x02G\xb1G\xabp\xbf\x1e\xbc?\xb6\x82\x0eT?\xb83\x05\x06:\x9d\x96?\x02?\xf8\x00\'\x1d}\xbf\xc4\x82\x1d\xb1\x93\x99\x8f?^\xeb\xe9\xc3^3\\\xbf\x81E\x1f4\xe7\x91\x8d\xbfr\x98\x1c4\x9f\x96\x89\xbf\x8b;-5\xad)\x86?\xb4\xb6\'\xe5\x90qW?5J\x144\xeb\xd1\x95?\x10\xae\xba\n\xea\xf3a\xbf,\x14\xb0\x93\x85ct?W\xfb\x0f\x99\xacun?v\x0f\'d\x80\x16\x8f?\xb5\xe0\x91\x07\xced{\xbf\xee\xeagQ\x83K\x81?\x9c:y\xdc94C\xbfgn\xa8\x02R\x1er?\xff\xb9b\xc8x\x00\x92\xbf\x9dq\x89\xc1!\xb0\x90\xbf\x04\xf3~\x86\xe1\\p?\t\xad\x01_9\xccq?Q\xe6;}\x90\x17w?\x18XA\xdd\xe1z\x81\xbf\xa7 \xdf\xd7{\xear\xbf\xce\x89\xfc\x17\r\x19Q?\x81\x92y\xa1\x15w\x89\xbf\xb0:H+\x1d\x1e\x87?\x9b2\xcd\x89\x81\x80\x8e\xbfe\xf4~2-Wl?\x8c}>BC\x10\x81\xbf\xe0\x03^\x85\xbf\x0cw\xbf$\x92An\xc3\xf1\x97\xbf\xa0\x03\x9aO\xfa;\x90?\xd1\x98\x95Y\x86\x8c|? \xb5\x07|6\x1f\x93?\xf0\xfe\x1a6\xb3\xc8a?\xca\x92\x10\xc6\xaa\xacx?J\xcc\xb2<\x9b\t\x92\xbfE:=8\x9chz\xbf\xacl\x8d%\x1e`\x98?\xc9@\xb9Z\xe9\xbe\x7f\xbf\\Z@\xd3\x9f\x89y?\x0f\xed\xa0O2\x92\x92\xbfi-B\xe9Vos\xbf\xe4\xe7\x13z\xa3\xbdj?Tn\x19D\xd97o\xbf)\x0c\x0e\xa7<\xefx\xbfi\xb2U\x81\x17H\x8d?Zj%K8\xde\x90\xbf\xd1\x1d\xa2[\xaa\x84v\xbf\xe97\x16\xd7\r{\x9d?\xb3\x88\x05\xe6PTn?\xe9W\xd5H\xa8o\x8c\xbf|\xea\xa8\xd6\xb4\x11\x87?D\xfb%\xfa\x97~\x84?\xdav\x86\xaa\x92B\x8f?1a\xc3\xf8\x03\xf4l?\x12\xb5}\xe7\xa1Et?\xaeqz\\\x87\x82\x84?\x99\xac\x06\xc0\xcc1\x96\xbfm\xfdM\xfdI\xcc\xa6\xbf\xa1\x82\x0f\xe3M\x13\xc6?\xde\xb6\xf9i\x10C\x9b\xbf\x90}\x06\xe8\rl\xbf\xbf\x8d\xd1\xf5\x14\xfcBl\xbfA\xc2\xc2\x83\x9b`\xc6\xbf\xfc\x08\x1df]X\x90?%\xd7\x7fR\x11U\xb9\xbfSv\x03\x17\x8f\xb2\xc9?C\xcb\xb9\x95\xc8\xa2\x9a\xbf7\xce\x83\xe3S\xc4\xb8\xbf\x82\xfe\xbd44.j?\x86c\x17\xc8M\x1c\x9c\xbf\xc3[\x0e\x8c\xb0\xb6\x89\xbf=\xe8\x14\xc0cf\xc0\xbf|%\xc5]z\xc8\x7f\xbf\xf6\x17\xc1\xb1\xc7\x80\xb2\xbf5\xd5\xc6^\xaf\xac\xbd\xbfv\xce\x93\xfaK\xc0\xc3\xbf\xf8\xe4-?\xf5\xd0\xa8\xbfS\xeeL\x9b\x9a\x0c\xc4?\x11\xb6`\x0f\xe0j\xa8?\xe3\xb8\xd5!\xb3N\xa5\xbf\xd1`\xea%\xee\xf2\xc2\xbf\xe2\xceV\xc3`\xe7\xb8\xbf@\xf9\x93\x85\x08\x8ct?-\xdc\xd3\x99\x92\xe3\xc6\xbf(\x0c\x9e\xd9\xb8\xd8f?\xf2\x80ps:Y\xbf?\x92\x12V\xa9\xa0\x08\x99\xbf\xec\x8d,\xc1\xfd\xe6\x97\xbf\x98\xb1\xcd\x18\xa9\xcb\xb0\xbf\x8e\xfcnrw\x82\x9a?\xec\x8cU\xe3\xcb\xa9\x91\xbfR\x89U\xc7jn\xc7?\x95\xa3!\xdd[\x8b\xa1?\xdf\x9d\x19e\x8f!\xcb\xbf\x07\x9a\xd8]\x90\xa9\xab?\x83\x85st\xb2\xee\xbe?Y(\x86\x03$\x92\x8f?\x8dm\x88\xce?on\xbf}]m\x91\xd0e\xb5?\xd9\xb8\xa3 V\x06\xbd?\xfb2g\x96\xe1\x93\xcd\xbf}\xae\xdf\x0e\x9f\x9b\xc0?8\xdd\x90\'\x14u\xa9\xbf\xd8vBp\x83A\x91\xbf\x08\xdeg l"\xab\xbf\xf1f\x92\x88\x00E\xb8?3/\x82\xf8]\xd7\xa8\xbf\xbe\xdeE\x89)\x1b\x96\xbf\xc9\x8f\x8b$\x01{\x94\xbf\x0e\xc8\xf8\x81\x13\t\xbb?\xa8Opi\xa8\xe7\xcf?\xd0\x8d\x1bz\xcb\x97\xb0?\x06\xb2\xab\xd9\xacJ\xb7\xbf+\xf5T\xcaD\x05\xa6?9\x8a\x02\xd5\x17\xa0\xda?\x878b\xfc\xd5\x98\xa6?\x1f\x7f\xfb\xed\xec%q\xbf\x08w\xe9\xb8I\xfe\xbc?\x8c\x9d\xc2~[\xf1\xa6\xbf\xd9\x06\xe3M\xdd\xeb\x91\xbf\x80\xb2\xf1q\xba\x15\xbb?\xcfT\xd9\x0eTV\xc3\xbf\x1ex\x90q\x01\xed\x14?\x8a:E&\x11W\xab?A\x02\xa7\x93\xfc\xe6\x95?C\xe6\xe0#\x1a\x10\xb5\xbf\xc0\xa6\xdf\xf0<\xb3\x9c\xbfx_\x00[\x94\x84\xa0\xbfI\xfd\xcbr\x03\x8c\x90\xbf\xa3\xedm\x17\xb7\x03\xc9?/\xa8\xb7\x8505\xb0\xbfCT\xef\x19+\xd8\xa6?`{\xa4\xf0;x\x8e\xbfR\x03\x9f\xb7\xef\x89\x9d?\xe81\xf9_\xe17\xa2?\xbb\xa2\x95\xbd\xd3\t\xbd\xbf\xb9\x86R\xf9\xbe\xd4\xd1?\xe2j\xab\x01\xb14\xb0?\xdf5\xdd|\xec\xcf\xcc?g\xd3j\xf4\xa4\x9d\xa0?\xec\x9dOa\xf3p\xbc\xbf\xde\x9e\xdb\xe5\x93j\x9a\xbf\xb7D\x8f\x13$e\x86\xbf\xda^K\xf7\xf4\xa4\x92\xbfL\xaf+\x8b\x7fC\xaa\xbf\xf2@G\xa1c\xe4\xa5\xbf\x06\x05\x92;\xe8[\xc6?)i\x08\xc9anx?\xfe\xd6\x8d\xd9]T\xc5\xbf\xef\r\x97\x16\xfd\x91\xb7\xbfSQ\x1b\t\xcd\xcc\xcd\xbf\x9cF\xfc:\x1f\xdb\xb9?LHW:X\xd9\xb5?F\xf4d\x165y\xa7\xbfo\xb2\xd2X\xda|\x89\xbf\xf1\xe1\xf6^\xc7\xa8\xb9\xbf\xe5\xc1\xb7\xcd9\xfb\xb4?\xf8\x14k\xe7IU\x80\xbfR\xa50\xca\xcd\xa4\xc2\xbf\xad\xfc\xca\x1c\xe4\x85q?J\x97eXB\xee\xc8\xbf\n\xf2f\'qlA\xbf\xac\xcegx\xef*\xa6?\xb3\xad\x86\xa7\x90\xe3\xbc?\xefg\xe6\xb6=\xc7\x84\xbf\x16\x1a\xcc/\xa5k\x9f\xbf0E/]\x84e\xab?qC\xb1_R\x94\x90?\xd2 L\xac4\x83|?\\ \x1e\xd6[\x07p\xbf\xd0=\n\x88\xf3\x99z\xbf\x80\x13\xdfP\xa55u\xbf*C^\xdfQ\x0e\xa9\xbf\x9e^\xf5\xc0E\x9b\xc6\xbfM~\xa5\xd5\x84)\xa9?Q#$_S&\x81\xbf\xfcP\\\xe2\x17%\x9e\xbf\x91\tTk{\xe4\x9c\xbf\x83\x1bC2\x15\xa5\xbd\xbf\xa4Ya\xb5\xa0\xe0\x9a?\xc1-\xa5\x17\xbc\x7f\xa0\xbf\n:\xecE\x17\t\xa0?\x07\xf4\x1fb\x13;\x94\xbf\xe3\x06.\x9fG\xde\x99?w\xf2\xa1Y2{\xb1\xbf\xf5\xcc\xbd\x02#\x11\xa6?\xf1l\xfaU{\x90\xb0\xbf_W\xb7\x03=\x16\xc8\xbf>\xa7(LRD\x8a?\xa9\x1f\xb7K\xa1K\xb3\xbfr\xed\xf03\xed\xbc\x87\xbf\xdd|\x1a-\x8d}\xbd\xbf\rY\xd7U\xb6"\xb3\xbf\x1d\xe9\xcfW\xd9\x8fO?\xf5P\xd5\x11\xaa?\xb3\xbfP\xa6\xfd\r\xc6W\x98\xbf\x86K5\x03\x1d\xdb\xc0\xbf\x01Me\xbb\xe0G\x8a?UD\xb0\x1dA\x1a\x91\xbfK Bt)1\xb3\xbf\x8f`+H\xfa\xf3\x87\xbf!?\xb2\x89\xa0\xed\x9a?\xf0\x1d\x93\xc7\x81\xe0\xa8\xbf$e\xb2\x13\xf0\x11\xae\xbf\xc1S\x07\x0e^4\xbe?\x02\xce#\xd1\xaf\xf4\x9e\xbf\xa9\xd7}\xa6\xce\x80\xa2\xbfq<*=\xfb\x12\x9c?\xd5\xb7\xee\x87\r\x01\xae\xbf\xcb~\xfa6\xb4\xd3\xbd?\xeb3Br\x1e\x01\x91?|\xc6`\xbeq,\xaf\xbf\xadP\xa1\x02\xaa\xef\xab\xbf"\x82o\\>R\xb2\xbf\xfb6_\xc1\xda%\xb1\xbf."X\xa3\xf2\xe4\xab\xbf\xf1\xe6\xe5\xb5\xcb\x81\xc0\xbf;\xf0\xbc>)r\xce?\x1d\x10\xcd\x00\xa8\\\xc3?M\xa7}\xfb\xc8y\x7f?\x8fpC\x07CIa\xbfIW\xde\x00J]\xa9\xbf\x93\x86\xab\xf0nd\x1c?\xe9\x96\x07.Q{x?\xa0\xb1u\x84\x8b\xea\xc3\xbf-SU%Y\x06\xc4?\x9b\x7f\xf2\x99v\xdb\xb1?A\xb9\xc27J3d?\xc1\xe0\xd8{\x81\xa6\x80\xbf\xae@B\xaed{h?\x8b;Go=\xd5\xce\xbf\xfd\xac\xbb\x9bM7\x98?H\xe339\x1d\xbfD\xbf\xfa\xed\x14\x84R\xf7\x9d\xbfHa$\xf0\xff#3?d\x1d\xaa\xf2\xcb\x08\xaa?\x9c~\n\xa0\xe7\xf6\xa2?\xf4\x1dLl\xc3\'\xa0\xbfN\r\x8a\x1b\xb8l\xb2?1\xf7\xd7U\xeb\x15}?\xc5l\xd6$\xc7\xa8\xa6?\xa3\xd5RP\xc4\x0c\x90\xbf!\xaa\x1bkh\\\x91??\xaa\xec\x1f\xf0&\xb1?\xdf\xd7\xc8\xfd\x84\x19\x90\xbf\xd8\x1c\xb0\x8c.\xcd\xa0?\x08?\x91J7tn?_\x8e\xb4\xa9\x96+\x91\xbf\xac\x0bn\xf2\x0c\xee\xa6?~\x9e\x02\xa0\x0cO\xb2?X\x9f\xa4\xba\xab\xf6\xac?\x0c\xb6\x1f\xde\xf6\xd8\xa5\xbfd]\xe0\xa5\xeb\x80\xb4?\xb0\xec\rH\x06\xd4\xa0?\xe4\x07\n\x03$+\xa7?\x17ZzM\x15\xf5\xb1?\xde\x07b\x1bO\\\xa8?\xe3\xee\x8f\'\x05\x88\x9d?"\xcb\x91\x9f\xfb?\x9c\xbf$\\\xb1n*\xcfs?\xcd\xd5\xadz\xdb>\xbe?$M\xce\x85u=\xc8?\x1cj/\xec>\x06\x8a?\xbc\xfcf7za\x9c?\x82`\x93y\x948\xb5?\xda\xad\xd1a\x04\xb1\x99\xbf\xbe\x97\x97\x1aq\xb4\xa2\xbfK\xf1q`\xf5\xaf\xb9?u\xa0\xa5<\x94\xca\xce\xbfa\x90\xa3Yp}\xad?\xb4\x0cD\xee|hW\xbf\xc88\xb1W2\xcd\xa4?\x06\t%\xfcvb\xc5?\xe8P\x8b\x03\x88\x98\x9c\xbf\x933\xe1\x9a\\>\x80\xbf\rl\x8fS\x17\xc9\xba\xbf q\x19\xa3\x88\xac\xc3?v\x82[Cx\xe4\xd1?\xafu;J\xa6\xb6\xa1?\x93\x00u\xbd#\xa1\xb2\xbf\xfa\xfa\x02\xc7\x9c\xa3n\xbfg\x92O\xb5\xf2\x99\xac?_\x15\xaf\xc90\x9b\xcf\xbfc@\x86\xe2\xda\x9b\xbb\xbf\x18\x99*\xe2\xed[\xb4?\xc1\x9f\x16md\r\xcd?C\xcf\x94u\x16s\xa1?!\xfb\xa0\x01\x9eS\xa7\xbf\xb0!z\xb7N*\xb1\xbf\xe3\xea\x94z&b\xd0?V\xed\x16gnn\x88\xbf\xe7\xe3\xc4\x9bH\xc0\xc1\xbf\x18\x84\xc0\x17\xbe\xe9\xb4\xbf{{\x1a\x0bZ\x87\x8a?/\xf8\xd5Z"^n\xbfr\xdf\x93\x01bH\xb1?\x9aqv,4\xee\xc5?"\xf1\xc2U\xabP\xa7\xbf\x956\x9c\x92\x84\xfd\xcb\xbf/b\xff(o(\xc0?\x926|\xba\x99d\xa0?\xc5\x05\xbf\x18\xc7(\xc7?\xdd\xa0s]\x92?\x9b?[\xcb+\xfb8\xc7\x91\xbfGC\xc8\xb2\xdc\xfc\xa2?\xa5\x1b\xc8\xdb\xfd\x9a\x95\xbf\xf3\x8d\xc3\xd9nG\xd2\xbf\x82\xd2B\xad\xec\xa3\xa6\xbf\xa6ob\xf7i!\xa9?{\xe7-\xa6V\xa9\x9c?\xe5\xe1o\xbd\xb9h\x8c??\xfeU\xedT\x95\xc4?\x19\x93\xf0\xd9\xf15\xc2\xbf\xe5\xf2k\xb1@\x83\x86\xbf\x9d\xf4\r\xd2\xaf\xe1\xac?o\x1eY\xb6\xea[\x96?\x9bM\x8c\xdc>\xe2\x9e\xbf\xfc\xaf\xc6\x0f\xc5\xddq\xbf\r\xff\xec\xc6\x04N\xb2?\xd6\x11\x80o@$\xc9\xbf?\xe4NH1\xdb\xa7?`\xcfh\xbdk\x81g?/{4~s\x1f\x87?f\xe5c\xbe\xb4\xd4\xac\xbf\xeb\x1b\r\xe12\x9eV?\xe5\xc5\xbb\xe7\xa1B\xa9?Gm\xec\x90nKr\xbf\x81p\xf7\x03\x01\x8b\xa3\xbf\xbffC\x9d\xeb\xdc\x84?\x822\x84{\xb6\x9d\xb4\xbfg\x92\x8fs\x9f\xff\x9f?s\xe2\x1f\xa7.\xb0\xa6\xbf\xb7\xeb\xdes\x8a\x8d\x90?\xfd\xf9E\xbc\x85D\xb3?\xdf\xb5:9"\xb8\xc5?\xc8G\xbe+\xc7\x9d\xcf?u\x87t\xe2\x81B\x83\xbfe\t\xd8\xa1\xbc!\xb5?Y\x82\xeb\x93\t\x8a\xe4\xbf1\xeb\x9a\x9a\x03>\xc0?>)O\x7f\xb5\xf1\x7f\xbf\xb5\x85S|{-A?\xd5v\xf2^\xca+{?\\T}\xe5\xa8\xeb\x82?\x03\xdde\xad\x14\xcf\xbc\xbf\x03\x1f\xf5\xbd\xc5\xc5\xb6\xbf\xc4\xaa\xfa\xe2\xe7\x00\xf5\xbf+\xcf_\tw\x1b\xaa\xbf\xcf\x95\xcdJ\x85\x95\x99?\x1d\xfb\xb8K\x99\x1e\xce\xbf\xd1\xf6=@e\xcbk\xbf\x93\xf2\xcb\xa3_,a?N\xc0E\x87\xb7\xcbk?\x9cA{\x12u\xef\xb1\xbfq2\x98\x9b\xf7+y?\x81\x87\x87k\xbb\xf6\xc0?\x15\xd0G\xbaHwb\xbf\x93\xdb\x15|\x90vw?\x8e\x00q\xf4<\xf6\x85?u@\xbe\xf8B\x01\x83?>\xcf\x8c\xfb\xe2}\x90\xbf\x1bA\xbc)\xc5r\x81\xbf\xf5F\xaf,\xc7\xb9:?\x18\x7fl\x8b"\xed\x95?\xad\xd3N\\\xc3ER\xbf\x03\x15\x86\xe9\xe1\x9e\x91\xbf\xc4H\x1e\n\xd6n\x88\xbf\x17\x1f\xcc\xde\xfd\xfbZ?\xeec\x17\x91\xb4\xd0\x80\xbfI\x92\x8cK \x19^\xbf%\xab\x13|\xe6\x86Q?i\xb6\x8f\xb4\x84\xb3e?Or\xfd\xd0\xf2nr\xbf\x90\xb5\xc2\xa0}9\x8f?c\xc6\ns\xd1\xa1v?\xaf\x82E\x13r\xeeg?\x16R0\xa721\x80?=WFz\xac\xa4p\xbf\x83\x0b\xc9\xe57(l\xbf\x8b|\xa5Tm\xd9\x9c?a\xd9Y/\x1f\x0c\x8d\xbf\xce\x07\xc7\x99\x8b\xfbu\xbf*\x9a\x99\xea\x91\xb7\x86\xbf9#\xff\xde\x1f+5\xbf\x02\xdc\x0b\x02>i\x88\xbfm"\x9cbV\xe2s?\xad>+\x8f\xc0+r?a+\xd2\x9e\xdd?\x80\xbf\xabV\xd3\xde\xdcES?\xe4\x04\xe6w\\\xa9\x7f\xbf\xae\x91h\xa7\xecBJ\xbf\x0c\xb0\xe3C>\x85\x90?\x15_\x8cu\x17\x8c\x8c?\x8d\xd7_t0\x9c\x8e?\xa4\x87\xf8r\x0e\xbe~?\x91\xba\x08?\xe5\x87\x82?\xd9\x03,1\x91+\x8b?\x03\xbfa\xf1\x84\x19\x8a?u\xa0\xe8\x87\x95d\x89\xbfd\x87\xbbq\\Ub?\xfbQ\x02\x1b=\xd2\x8c\xbf\xa1\xf1l\x85c\xb9q?\xbc\x9a\xdb\xb1\xce}|\xbf\xd6#\xd3\x19\xd2\xe0\x90?=9^~"+h?U\xdf\xb5\xe0-\x00\x84\xbf\'\x05\xa3\xdb\xf5\xa4w\xbf\x0e\xcc\x8e\x98CJ\x94\xbfv\x8bP\xb3\xd2\xc4\x80?\x83\xe0\xa1uy\xdbb?\x07\xb7P\x109\x15\x83?\xbf<\xc4\xb3\x14\x1d\x84?\xafA\x16[\xfa\xb2\x84?\x9c\xcb\n1A\x10\x85\xbf[K\x8c\xf94\xbeo\xbf\xf2H\xa5-|\x85j?\'\xa2\r\x8f"\xa0\x8c?d\xa9\xa8\x95UW\x95?\x1a\xee\x0b\xcf.\xae\x85?\xda\x08\x032\xcc\xd7\x84\xbf\xef\xa7qR\xa83x?\xaaz{\xeb\xf7\xd4v?\xff!\x99BC\x9c\x92\xbff\xe7\x8dU\xf0\x9d\x9b?&\xab\x0f Yt0\xbf\x8eq\xe6\x01g\xb4x\xbf\xba\xc1\xc1\xa5\x88\x15u\xbf\xff\x0b1]U\x98\x86?\xc5\x9e+\xfb\xcc6\x81\xbfK\xc7\x87x\xfbG\x8b\xbf\xd9\x01\x9a<\xf6\x07~\xbf\xcb\x08i\xbba\xafz\xbf\x95\xcd\xb7\xf2r\xa8|?\xa5\xe5\x90\x96\xf3x\x90\xbf\x17b\x99\x0b\x11\xfc}?\xe5\xf4O9 \x97d\xbf\xf9\x04\x85\xbal\x05\x9d?\x92a\x1f]\xe1?\x8f?\xab[\xdeR\x83 \x92\xbfg\xc3\x99\xb6\x03\x9c]\xbf/V\x1c\xa26{7\xbfo\xeb>5\x8a$\x97\xbf\x9e\x9a\x90\xa4\xc0\rc?Z\xe0\n\xe5\xc7\x1e\x89?f\xa8\x7f\xd6\xb9W\x81?\xa8\xe2%=\xac9e\xbfX+^\xcd\xf4\xd5q?[\xc9\x82\xaf,V\x90?\xcf\x9fGn\xa9\x84G\xbfI^\xb2\xb7Y\xbdW?\xabJ\xeeq\xed\xaeU\xbf@a\x9fQh!g?\xb40R\x16?R\x84\xbf\xfd\xce\xa9\x11\x0e%p\xbf \x9b\xe6\xeb\xbc\xf7c\xbf9\xf9w[IG\x88?\x19h\x9d\xb8.\xc0t\xbf0\xca<\t\xe9\r\xc6?\x83xp\xb7v\xd6\xc0?X\xdc5\xc1\x9c\xa3\x89\xbfJ3hU\x1d\x98\xa1\xbf\xf6iK\xb8\xf2\x8b\xb6\xbf\x07\x12\xbc\xf7\x90\xa1\x84\xbf/#\xb0\x8d\xde\xeb\xc7\xbf\x92z\xc7\xfa\x0c\xe8\x84\xbf\x154\x02Q_\x8d\xb5?\x04W\x9b\xa5\xbb\xa3\xb4?\xd2\x1f\'{\xc5\xa2\xc3?\xcc\x86\xa6\x1e\x1f^\xa7?\n\xa6\xc6\xaa\xf0\x8a\xbe?\x8d\x12r2\xdeW\x94\xbf\xce5H\xbd\xe9Wn?\xbc\xd0\x8e\xff\xcf\x8e\xcd\xbf\xb1\xd1\xda\xbeJZ\xd5?<1\xcb"\xc8\xde\xa3\xbf\x9f7\xd3\'\x86\x95\xc3\xbf\x80\xa8\x10\xaf\x00m\xc7\xbf\xbbeY\xc4\xcf\x85\xba\xbf\xb6\xa7\xa0\xe510\xb0\xbf\x9b\xdcW\x08\'\t\xa8?\xc3\x06\x03\x04e{\xba\xbf\xf8\xc29C\xa2\x18\xbe?\xca\x82r\x82\xbe\x84\xab\xbfp\x0b\xc6\xdeH\xdc\xa8?\xb3\xed"\x83\xff\x8a\xaa?\x05Z6\x89\xb9\x0e\x86\xbf\x1a\xee\xef\x0bi\x1a\xa2?\x8ez\x16\xc8]\xe6\xab\xbfc\tu\xc3\xb2\xc8\xb9?\xd6j\x9b\n5tQ\xbf\xd85<g\xfe\xc3\x9c\xbf5d\xa5p\xab\xa8\xc0?\xfai6\xdd\xcd\xf4\xb3?k\xdf#8*m\xc4?\xdb{_\x10H*\xb6?;`t\r\xeb\xca\x98?6.\xaa\xd3\xe2J\xbd\xbf\xa8B\xc2\xa5\xcfL\x88\xbf\xe3q\xc4e\xc1\x1d\xa4\xbf\xbch\xcd\x12\x9f\x7f\xb6?s\xe1\x7fo/\x01\xb1\xbf\x02W\xf8\x83\xb6M\xb4\xbf\xdcy\xc7\xa8D\xb1\xc1\xbf5 \xf2^\xa3D\xa8?M\x1e2\x06\xdc\xe9\xaa?\x10\xe8\xd6\x13\x84\x96\xbb\xbf\x1f\x90r3!\xed\xae\xbfr\xefy\xdbA+\xc0?~\xbc\xd5\xe7}\xd6\xad?i\xb3\xf0{\x12;\xc2\xbf\xea\xf1g\x13\xd7k\xa1?\xcf\xc8c}\xa4c\xc4\xbf\'\xa8l[\xe6\xbc\x9c\xbf\xec\x04\xdb\xed\x8d\xc1\xba\xbf#\xab\xaa\xb3ww\x8f?\x0e\xcf\xb4h,\xfe\xaf\xbf\x8f\x1b!\xff\xe6\xd4\x96?\x0c\xc6\xd0Y2`\xb0\xbf\xb6`\xbaU\x82\x8b\x92?\xe9\xb0\xd2$1+\xc3?\xe9I+\x923\xccX?,f*6\x1dK\xc2?v#T\xa7<\xd3\x9f\xbfxS\xdb\xdc\xc5h\xbc?GeQ>\x11\x0fl?\xf3\x93;9v\xa1j?\x9ex\x85\xf7I\x8d\xa4\xbf\xd2\xcb,\x94\x0b}\x98\xbf.\x9fQ\xbe\x05\n\x8b\xbf\xd2\xa6^\xe8^\x91\x9d\xbf^\xf9JO\xe9c\xbe?\x81\x93\xaaj@\x12\xad?\xa28[\xa4)\xaen?\x9a\xf4\xd4\x12\x9d\xb1\xab\xbfQ\xbd\x94\x8cR\x0e\x84\xbf\x89\xe7u\x19\x05P\xb7\xbf\x828\xe7\x1b\xd4\x1c\xbf\xbf\xf83i,\xa1a\xb1\xbf\xa8\xdeR\xc4\x1c\x06\xc4?`W\x88H\x91.\xb8?Q\xcd{7y\x1f\x85\xbfb\x11\x1c8,\xdf\x92\xbfr\xd6\xdf\xbc[\xb1t\xbfiH\x8d\t!.\xbc\xbf\x04\xf48S7u\xa0\xbf\x119;\xcf\xff\xc7\xc1\xbfQ&\x10C\x9a)\xc5?0\xb0=@\x1d@\xb5\xbf}c?\xa9\xdd\x16\xae?\xb8\x1d\xd8\x91\xf8\xf0\xc5?\x18\xe0"" \xd3\xab?s\x1e"\xd0\xd2P\xb8?\x9c\x84+\xc3\xb3\xd4\xbd\xbf]\xc2\'T\xe0O\x98?8\x8a`\x98M\x90\xbf\xbf\xec\xc5\xd9b\xfb\x8a\xba?\x06/b\xe25_\xab?D\x9b\xf9\xba\xb0<\x92\xbf\xdd\xfc\xde.\xeb\xbd\xae\xbf\xe9;\x9d?d\xaa\x93\xbf0>\xfc\xac\xc9\xbe\xb8?\xefw:\xcb\xf4\xf5\x9f?M1\x90\xaa\xb3Z\xb0?nXc`\xe8\xc6\x83\xbf\xcc\xa7\xab\x15cH\x87\xbfO~F\xb8C\xb1\xaa?H9\x19|\xad\xd8\xb6\xbf\n/\xb9\xb2|W\x84\xbf+n\x83V\xed`\x82\xbf\xf6\xc6\x90\xb9\xd7s{\xbf\xa0\xba\xc8\n\xd4\x0b\x85\xbf\xf5I\r\xf8\xba\x91\x92?\xff\xa9 \x97\xf1\x0c\xbb\xbf\xfa\xa1\x8f\xfc\x9c`\xbf\xbf\xb5\xeb\xaa\xc1UZ\xba?\x0e\xd2\xe2\xdd2\xc7p\xbf\xf3\x8b}f\xe4s\xa9?\xb5\x1f\x1aYX\xcas\xbfI\x98\x0e\x93\xb1\xad\xb5\xbf(\x15\xe7;=n\xa2?\xccq]g\x0fk\xa3\xbf\xa7\xa8NG\x18\x9a\x99\xbf\x8b\xc2\x8c1\x87y\x81\xbff\xf7M\xca>\xfa\x82\xbf\xe7\x87*\x1cn\x96\x99\xbf\xed\r\xe1\xcd\xf78\xb3?\x95EQ\x98\xb2\xb0\x9d\xbf\x19\xdc\nd\x8aZ\xc8\xbf\xe7\xff%\xd3p{\x9b\xbf2\xfd\x19\x7f@+\xa9?\x10\xf4_\xdb\xc96x\xbf\x84\xcc\xf2tA\x98\xa3\xbf\xa9\xc3\x8e;oD}?\xb0<\x88Ylq\x89?0\xe9\xfd\xd9\x04\xfc\x8a\xbf\xb0v\xbf\xfb\x92Z\xcc?\xfa\xdctR\x9f\xdc\xb3\xbf5\x99\x83\x1c\xba\x8d\x9c\xbf}J\xf6vlP\x9a?\x1d\xd4\xa4\xcbA\x8f\x8a?\x92|\t|\x1e\xc6\xa5\xbfv\x9b\xdb)9\x81\xa3?F!\x9b\xd0\xffO\xb0\xbf\xfb\x0f\xe2\xc4\x16\x9c\xbe\xbf\x11\xef \x9flQ\xd5?\xf4\xf1\x92\xff\t%\xa9?\xee\x88\x19\x9fI\xdav\xbf\xf0 ~Z\xbf;\x9c\xbf\x84\xf5\x9a9=\xff\xa1\xbfU\x0bQv\xdc\xad\xcf?McUr\x0b\x08\x8a\xbf\x94o\xab\x98\xba\xec\xa2\xbf\xc7\xd8L\xd4\xf4\xf8q\xbf\xa6Op::\x12\x93\xbf\x89V\x96\x03\xda\x15\xc2\xbf\xfe\xe2EG\xab\x95\x94?\x92\x01\xe8LX\xb9\xc2\xbfF.\x9aWe\xd2\xa2\xbf\x96\xe4\xcf\xe3\xe8\x97\xc6?)\x91\x0bZ\t\xb2F\xbf\xff\xd2\x82\xfe6\x9et?\x0e\xea\xfe\x9f\xdd\xc1u\xbf\xd1\xd1\x15/\xf9\xed^?ht/\xd8m"\x98?\xdeQS$\xd9\xa4\x92?\xd9\xb1u\x87q\xae\xc1\xbf\xd9\x14N\x84\x00\xb8\xad?\xb2g\x17?!\x957?E\x9f\x0cF\x9d\x0b\x81?\xabsE)\xf4\xd4~\xbf+\xc7\x1a\xb9H\xf8\xaa\xbf\xe7\x99\x83\x84Y\xa5\xa2\xbf\x9e$\x8b;K8\xc0?\xd2P/H\x19\x1b\x82\xbf\xea\r_\x8b\x95\xf6\x9d\xbf\xd7\xf2y\xfb\x17hh\xbf\xfd\x0c\xcewD\x92\xbc?X30\x93x\xf3\xb5?\xad\xe6\xee\xe3\x03\xd2\xa3?[bL\xaf\xa6sl\xbf\xb3\x93\x93\x00\xe5\xd7\x81?\x85\x94\x80\xd7\xc4\xe7\xa0\xbf\xbb\x8a\x96\xf3,\xa7\x8a\xbfd\xaeS\xa7\xe9;\xbe?\x93\x13\x03w\x99\r\x97\xbf&\x1f\xe8\xb3^\x9a\xd0?\x90\'6\x92\xc7>\x98\xbff\x9eS\x8c\xca\xb4\xc2\xbf\x05}\x05\x7f\xde\xb9\xa1?\x8e\xfa\x89\xa5\xc9\xf3\x9a?\x8by7J\xe5\xcd\x98\xbf\x9e\xb1\xeb\xdf\x8d\xc1\x8b\xbf\n\xed\xb7d\x03\xfc\xb7?\x90\xe2\xe3*\x13d\xb1\xbf\xb3\xbc\x1d9\r\x89\x99?\x7f\xd3MY\xbf_\x8b\xbfB\xfd\x9a\xfc\xd2\xaa\xb1?\xfb\x8c\x88\xb48C\xac\xbf\xa7Z}\xfa\xb7\x0c\xa0\xbf\xf8\xb4\xcf\xfc\xb5\xd2u?\xf4\r\xedp\xbf\xc7\x90\xbfMtB\xb8\x93\x14\xdc\xbf\xe4T!\x07\x16\x11\xc0\xbf\x80\xc8m\xeb\x82{\x9a\xbfm\x9ex\xa1\xfc\xf9\x9d?3g\x1c\xc9\xf0\xff\xac?\xbb\x8b\x0cA\xfe\x9e\xb0?\xbf+w5\x9a\xac\xbd\xbf\x80\xa5UbWE\xe1\xbf\xaa]Wz\x11g\xcd?\xedX{\xb79\x8fd?#\x9c\xc0\xcf@\x02\xda\xbfY\x89KZ5\xde\x87\xbf\x89x\xf4}&\xf5\x8e?+\xa8;i\xae\x83\x83?\xc4\xb6\x8d\x82\xe6\xdc\xba\xbf_\xabg\x10\x98I\x98?2\xd5qzU\xcd\xd2?\x13\r\xf6+b\t\xb3\xbf\n\x1f\x83\x0f\xb9\xbf\xb1?-\x07\x8f[%m\xb5\xbf<6w5\x01\x8a\xbe?\x84+\x10\xecn\x07\xcf\xbf\x83\x82\xb1\x8e[\x93\xa1\xbfi\x8e\xc7\xe3\xf7|\xc2?\x06\xa9\x03\xdf\x9b\xc3\xb4\xbf\xda\x02\xc8\xb6\xce]\xa8\xbf\x03\xdbx^p\x10\xc2?\x83\xbc\x1c\xdb1\x1a\xb7\xbf\xcd?\xb29\x91\xd1\xdb?k!~\x9e\x93\xe1\x84\xbf\xfc\x9eM\xa9?\xcf\xbd\xbf@\xce\x8b\xc7\xbe\xdb\x98?5\xbd)\xf1$\xc6\xb2\xbf;h\xba\x97\ne\xa1\xbf\xf0D\xf2oy4\xa3?\x81\x07;g)\x18\xa7\xbfB\x89\xa5\xa8\x9b\x8e\xb9\xbf\xf5\xbb\xad\xf8\xc6\xc2\xce\xbfQ\xcc\xa7w\xbdV\xbf?\xb0\x9c\x84\x86(\xde\x86\xbf\xbeS\xa8\xaf\x85J\xc1\xbf\xc08}\xa2\x01\xb3\xa0?\x00o\xc1r\xb8E\x8e?8b\xf3\xab\xeeo\xa7\xbf\xed\xddi\xc6\xf9f\xa5?V!\xb8m\xcc\xc5\xc2\xbf\x03qPio}\xd1\xbf\xb2\xdd\xbf\xc7\xd9o\xc7?^\x08SxZ\xff\xad\xbf\x180\xeeG\xc6\xe3\xa7?w\xba\x8b\x1f\xaf\x86\x8e?r\xa7b\xb7\x83\xa0\xa3\xbf\x7fW\xce\x05\xf7(\x88\xbf\x08\xbd\r\xdf\xa6D\xa6?\x84\xfb\x9e\x9a\xf3\x8d\x9a?\xbe\x0f\nh\xfa\x08\xaf?\xbb(\n\xe8L_\x92?\x94\x91\xa9{\xbe\x19\xb2\xbf@\x12l\xad\x98\xc2\xad?V\xaf=\x8b\xf7\xa6\xaa?\x91\x92"Z\xa7\x00\x93\xbfs\\\x0bW?\xb5q?\xd4\xf4\x82\xaa\xef\xf2\xc4\xbf\xb7\xc1H\xe5C\x8a\x89?\xbdQ\x9a\xe0\x9e\xa7\xb0?\t\x9d\t\xa2\x846o\xbf\xd5g\x17J\x98\xc7\xa8\xbf3\xa5\xd38a\x95\x81?\xc0\xe6\x87\xffwD\xc6\xbf\x89\xad\x8a\xa0\xcc\x14\xab?\xe9J\xd0s(\xd6\xbb?C\x0e!7\xbcu\xa7?\xa6I\x9a\xdcQ\xa4\xb8\xbf\xc0r\xac\x01\x91\xbf\xd0?\xf0\x99\x1f\x07\xbc\x83\xc2?\x1c\xe9Om4\xde\xa6?\xb1A\xa1R\x15>\x7f\xbfj\xbf\x8d\x84r\x0e\xd4\xbf\x91N\xe5\xe5\xee_\xcc?p\xc1\xd1>R\x00\xc3?\xeb}\xce\x9e%\xb6\x80\xbf\x1b\xa8g\x16\xb0\x9e\x87?FJ\xaa\x06\x91\x19\x97\xbf\xe8\xf1\x90?\xda\xdd\xb5\xbf\x9d\x03\xabi\xdf\x19\xa3?r\xbf\xfa\xbd6\x14\xe0\xbf\x1f\x88\xa5\xe4<\xc4A?^\x9d7\x06\xf6!\x96\xbf\x91\xdd1\xcag&\xad\xbf\xfb;=\xbb\xaa\xbd^?\x99s|\xa2\x96i\xba\xbfBU\xd7\x079\x17\xb0\xbf]#\x13\xab\x0c\xae\xb8?H6j\x8f\xba\xfd\xaa\xbf\xcf,\xdc/!_\xc5\xbf@\xe9\xfe\xa0\xf0D\xaa\xbf\xb6\xbdT}\x9a\x8c\x81\xbf\xe8h\x8c\x7f\xb2wR?\xf5\x94\x1cO\xa2\x1d\x80\xbf\x99\xb2\\GM\x11}?\xcdR\x95{\n!\x90\xbf"\xf2+\x13\xdb\xebc\xbf\x8b\xf0\x0eh\x13\x1e\x90?\xe1\xeb\x131\xeb\x89r?mB\x14\x1fR\tm\xbf\x1a\x16\xc7W\xd2\xa1f?\xd2\xa0\xe0r\xb6\xd7B?\xdfB\xd3\xaeM\xa7\x8e\xbf\x85\x815\xbb\xda\x8a\xa0\xbf\xad\xa9\x90\no\x84\x86?\x908\xa1\x02\xb8\x04c?\x8d\x8c\x1a\xac\x81\x0b\x82\xbf{\xecpi\x1b<$?}\xed\x9f8-\xecc?\x0bz\x7f\x1f\x9e%w\xbfm\xeb;\x9e\xef8f\xbf\x1c9\xd2\xda\xfb\x0bp?\x8a6\xb5dreX\xbf3\xcc\xf0\xd1y\xb2t?40\x8e\x8f\xd0\\C?\xa5\xae\x97\xb7\x0f\x88u?\xd3\x97\xccM\x84@?\xbfo\x99\xc3\x7f\xcd\x89V\xbf\xd5rg\xd12\xe36?\xbd.\xe7P\xc6\xb8\x94?^\xc7o\rN&\x80\xbfl\x07#\xa2B,v?Te\x90IC5X\xbf,W\xa3\xf6\xfd\xab\x88?\x8d\x91RCdk\x87?\x80M\xac\x856\xd8u\xbfz\xc9\x94,,=\x88\xbf\x88\xdc\xc3\x8aZ\x89o?i\xa4\xb9X\xd6BT?\xf2\x16d\xdbe\x16n?jh\x00\xd5IN\x8c\xbf\xfb/*#R\xca\x83\xbf\xd4}\xcd_\xd8\xadw?\xd5\x01Ra\x97w\x9b?\xa8\x07\xc2t\xf0*\x86?@<\xe7\xcb\rD\x92\xbf\xb8]\x02\xb3X\x92z\xbf{\xa1\xe6\x86\xe4au?2n\x17B\x17\xee\x95?/\xe4!n\x88\x8dt?\x9e[\xe8\xdd\xf1\xb3v?\xf9\x0bO\xb0$\xd6{?\x02\xc7BA\x89,s\xbfp>J,[\xdd\x85\xbfM\x13\x12S\xd1\xad{\xbf\x82\xcf\xb8%#\xec\x82?\xe8\xbc]\xff\x07e\x85\xbf\xe1\x91=\xfb\x8bpy?LLf\xf9\xad\xf8d\xbf"\xe2J\xad\\x]\xbf\xe6\xf7s\x00\x05\xb1\x97\xbfo8\xf6\xd4\x8e\x89\x7f\xbf\xa9g+\x0e\xa2\x97\\?\xd3-\x07\x17\\hj?\x1f\x8f\xe0\x82\r\xc0\x8c?\x16\x17\x06=\x8c\x8cj\xbf\xa6)+e`\x82q?EF<\xdf#-\x90\xbf\xa9Df\x9c\xb2>\x88?\'\x89\xf6k\xdd\x1cD\xbfd\xc0P\xcf\x1dqp\xbfaC}J r\x99\xbf\x0e\xf2rgQ\xb5~?1?\x9c_i\x12l?n\x10Z\xe5\xc3\xc2\x84\xbfGK\x11\xe4\xd3c\x96\xbf+\xc7-\x86\x05\xc9\x83\xbf\x90/\xbf\x80\xf1yn?\x03S\x805\xd1\xaeu\xbf\xd2\xaf=J\x1c\xc6k\xbf\x92cV\xcfT\xec\x85\xbf\x15\xe907\xa9n|?\x9d\x8fG\x0f_pt\xbfy\xfd\x02\xbf\xb9\xafl\xbfO\xd4\xf4\xa85\xfe|?d\x90g\x9e\xb4\xe6_?k\xb6g\x0f\xbcJs\xbf\x1d\tt\xf8\x124r\xbfw\xa7\xebc\x88\xcb|\xbf4\x06P\x10\x1f\xf9\x8d?\xbcu\x07\x1e\xa7\x968\xbfb)\xa4\xd14a\x83\xbfz\xdf-\xe4V\xc9|\xbf\x06\xb5\xd2\x85\xf6\xf3h\xbf\xd3\x8c\x85\x9c\x90m6?\xdd\xd0>\xe3\xeaCP\xbfK}\xe7\xe2M\xf6f?,85\xb6\x9b\xb3a\xbf\x03\x14\xc6\x9e\x13[{?\xd74%B;\x7fC?B\xc6\xb6\x95\x11\x14\x80?\xa8\xa6qfrs\x7f?ME\xf1\x93\xab\x8f\x89?f\xc2yO\x8d\x9f\x89\xbf\xc2\x0b=\xe7 \xeey?\x06\xcea\x87\xf2\x86v\xbf`\xad\x1f\xed\xa6F\x8c?hI\x19s\x12\xcd\x80?\xc2\xf8\x1c$L#h\xbf\xde\xc2;U\x8a`~?\xc3\x16KOZ\x0e\x95?\xf9X\xf7xy\xb9t?\x19\xbaB\xaf\x08p\x81?C.\xd1\xf6\x03\xf4\x90?\xd22H$l\x14c\xbf\x8e\xa8\x1a\xaeS\xebu?\xb5\xed\xc1\x93\xaa\xc8]?\xaa\x05\x0b \x1b<\x89\xbf?\x06"v~&v\xbf\x90I8\x1b\xae=\x91\xbf\x83\xc2\x03\xf3\xbc\xfbf?\xf6\xc5p+U\xb4\x81\xbf\xd0\xa0\x0c\xf7\x87\x0c@?J\xa8!Q\x17.v\xbf\xc3\xd6\xc1\xff\xf1\xa2\x86\xbf\xa8\xe7\x99btd\x8c?\x84\xa5\xaf\x9d\x196\x8e\xbf0o&\x9c\x844v\xbfU\xcbU@\xb0I\x93\xbf\xd3\xec\xd3\xd3\x0bzt\xbf\xfa\xca\xcd+\xb5\xa4x?A\xad9\xf9Yv\x8e?.-\xc6\xf3\xe2\x0fk?\x88y\x98\x90\x80\x8a\x80?7Q3\x18\xcd\xf3\x83\xbf\x1a\xc9\xf0\xc0\xea\xa8-?\xbb\x13\xc1\xa3\xd6\xe1\x86?\xfed{\x991\x88\x93?\x85\x14\xfa\x96\xb4\xaf\x93\xbf\xa6\xe7\r\x15\xfd\xbd\x85?v\xba2\xe5\x80\x17l\xbfp=\xc5A\x9fAm\xbf\xcd>\xadtc\rR\xbf\xb6\x0e\xdf\xb5&\xae\x84?\\\xce\x006\xf5\x7fa\xbf\x9e<\\\xba\x10\x1a}?+\nm\xfaxmw\xbfn\x9f\x98\xaa\xe7\xee\x84\xbf\xdd\xbd\xfb\xff\xde\xe8\x88\xbfV\xcd\xe7\x89\xe1dr\xbf;\xf5 D\xaa\xe3u\xbfb\xb9\xed\xc7\xc9\xbd\x8c\xbf\xf3\xf9\x89R\x11\x0fS?\xd3\xb7\xcc,\x8e\x15c\xbf9\x16\xf8\x94\x85\xd4v\xbf\x10\xb5KZ\xc9\xdaf\xbf\xd4\xe9hp\xc9\x87^\xbf\x03\x92\xff\x1d\\\xf4b? \xc8\x11\x0c\xeec\x89\xbf\xa4&5\x03,\xe1\x8e?3\xeeOm\x12\x1c{\xbfz\xaa\x01\xed\xbc\xaa4?\xcc\x81\xf8\xa5\xa5!m?\x00\xabx\xe0\xc0Kd\xbf\r<\x9a\xf9\xfc\xd7V\xbf2\xc6\x19\xad\xf2\xc3v?\xc6\xbeQ\x0e5\x95U\xbf"R;\xac\xbbep?\xc8\x04h\xb6\xaf\x7f\x88?pN\x14\'\xdb\tz\xbfz\x0e2\xfe"\x8cq\xbf:fbi\xb6\xf7z\xbfyt\xd6\x0c\xb7Mw?=KM7\xe7(\x90?\xee\x1f\xf6^c\xf0\x92\xbf\x17N>\x03\x1d\xda\x93?w\xa9\x0f\n7\xbc\x88?\xfe\xb4w\xdb\x07}`\xbfv7\x86\xbb\xa8\n\x85?\xf0\xa9\x88\xefg\xf2\x90\xbf\x9c\x0e\xce!\xaef\x82\xbf\x05\xb1w\x90j\xfar\xbfxu\xe4R\xa5/\x87?J\xcc\x95\x0c\xa1\x95T\xbf\xe4f\x04\x8dKzs?2\xe0~3a\xe8a\xbf\xd9\xe3i\xd8\x16\\\x82\xbf--m\xfcle\x99?H\xf2@\xa5\xfc\xe2)\xbf\x8az14\x82\xeev?\xe7\x96.\xebn\x90~\xbf\xc0\xead\x86\x02\x8e\x81\xbf\xe6\xd7u\xf8v\xad\x8b?\x12%on\\[\x94\xbf\xc8\x02H\xfd9\xc8y?\x19w\x1bo\xfc\xc6y?\x9e\xd3O\xf5p\xad\x91?o\xaf\nzU\xdc\x94?\x88fa\xe7\xfca\x84\xbfF\xea\x9a\x15\xd9\xb7B?6Q\x8d\xb7\x1dU\x88\xbf\xc4\xbci\xf0;\xa5\xac?\'\xfe\xe4\xed\xab\x9d\xbc\xbfM{\xa0&\xd7\xe1\xa3\xbf\xe3\xcaJ\xb6\xd7h\xcc?\x9eH\xb3\xa6qn\xb4?!\xb4\x08\xb9\xbf\xca\xa4\xbf\x95HW9\xf7\x1d\xd7?\xf5\n%\xa5\x14~\\\xbfJ)\xa3\xb3j\x16\xae\xbf\xd1\x0e\xa3V)\x8bZ\xbfb\x8c\x913}2\xa3\xbf#5+\xb9r\xcd\xc3\xbfq)\xaa7\xcfA\x90?o\x8c\xc3\x98\x95\xd4j\xbf\xbf\xe88\xe73l\xa7\xbf\xcf\xeb*S**\xc2\xbf^\xed3@\xe9\x18\xa9\xbf\xb9dy\x86\xf1\xd1\xc2\xbf\x1a|\xd9\x19\x05\x91\xc3\xbf\xcf\x816i\xa3\xff\x94?\x06M\xfc|f\x80\xac\xbfOV\x98=J\xe8\xb2?\xbf\xe7\x9a\x0c\xe1\xbb\x9d?UMG5\xc5\x13\xb1?\xfd\xc5\x9d\x97i\x16\xa0?v\xd1\xdb*\x19d\x86\xbf\xa7\xeb\x9dX\xa0\xd7\xa0\xbf\x165\xcaDBS\xb3\xbfI\xff\xdb\x97(\x8c\xab\xbf5\xe6\x90L\x80\xe1\xaf\xbfR\x1c\xf6e\x88,\xb1\xbfBq\xac7r\x9f\x84\xbf\xea\x8b\xffG\x9b,\x98\xbf\xa2\x1a\x94\xe8\xa6\x17\x9d?\xc64q\xf9j\x89\xb2\xbf\x8a\x9d\xb0\x8e\xd8\xc0\xab\xbf\x1a\xa7\xe7\x1e\r\\\xa6\xbf\xd9\x1c\x06\x0b\xc2\x91\x91\xbf\x10\x12z\xe5\xfd\xa6\xc2?Mw\xe0&\x04\x9c\xd6?\xbe\x12\x9f\x03\x03\x1b\xc0?iZQk\x99I\xb8\xbf\xc0\x17\x1fx\xfe\x0f\x81\xbf\xeaU\xfc\x16\xd5U\xba\xbf\x14\xd2\x83\xd2\x8fW\x93?\xd7JI\r\xfe\x87\xa6?yB\x03\xcb\x08\xde\xb3?\x01\xa8@D{\xb1\xa0\xbf\xe2\x133\x06\xce"\xa0?L\xd51k\xa7\x07\xa3\xbf\x843\x12\xa2\xca\xa4\xa3\xbf~?\xd4\xfaU\xa9\x9c\xbfw\x07x\xee\xd0;\xcf?Lo0\x8a\x01\x98\xbd\xbf\xb0\x01\xf4\x11\x19\xc1\xc3\xbf\xdbU0I>\xc6\xa6\xbf\xf6\x95{Z+\xe7\xb4\xbf\xe3J\x16\xa9k4\x99?$\xdc\x18\xa1?\x1b\x9e\xbf\xb4LU=u\x8e\x91?\x9c@\xdfdK\x19\xc1?\xe9\xf29\xd8>\xff\x96\xbf\xc8\xee\x04h\x8b\xbe\xb6\xbf\xd5\xa8Ca\x04\xeb\xb0\xbfl\xb1\x19a:\xc8\xc9\xbf\xf4\r\x9cg\xd6\x94\x9d\xbfDt\xe5j&\xfd\xb3\xbf\x08\xa0v\xe3`\x0c\x86\xbf\xeaF\xac\xd9\xa8\x03\x9a\xbfDF}\x91\xc5\xb2\x9f\xbf#7\xff\xe31\xc7~\xbf9\xd5V\xca\xcc\xe4u\xbf7\x86Py\xd1\x80\xbb\xbf\xdd?\x0cN\xda\x84\xc0\xbf4ut.\xb7\x1cr\xbfW\x88\x9bk\xdd\x00\xae\xbfv\xf6\x93\xf4\x14\xa1\xb8?<_\xa3\xeb\x12k\xa1\xbf\xec\xcb\xbf\xf2\xb4f\xb3?>h%\x08\xc9a\xb7?\'G\x1f\xdf\x9aq\xb8?\x9d\xb3\xc3\x88|E\xb7?\xdb\xd2\x98\xbbOg\xab\xbf+\x87\x1d\xce\xa0;\xd4?\xd6\x9ez\xb9/\xb0\xa0\xbf\xbd\xa50\x16\xcfGb?qP\xe3\xcc\x0e\t\xaf\xbfs\xc2br\xfc6\xc0?\xafQ\x05\xca\xcc-\xc2?\xa7%#k\xd8O\x88?Dx\xf1q\xf0\x10\xba?\x03\xea\xe5\xf66\x1c\x93?yM.\xb4\x15M\xb7?\xbf\x9eo\xb8\xd0\xc2\x99?\x8ehM\x1c\t\xdf\xc0\xbf!\xfe@\x95E/\xbc?~\xd6\xcf\xfd\xfb\x0b\x92\xbf\x1f\x80\xa2YI\xec\xdf?\xb7\x8b\xbd\x99\xb2U\xb9?\x1f\x85\xdb\x06-*\xb8\xbf\xf7\x1a\x91\t\xd7\xbcf?\x97\x8d\xb01\xb8\x88\xa2\xbf4\xdaR\xe6\x83+\x82?\xe0\xa4\xfc\x853\xaf\xe0?\x84\x91\x04\xf53\xecj?o\xe7\x07\x870n\xa3\xbf_\xe0 \x9e\xa8D\xbc\xbf\x0b\xcd\x8d7\x97\xd5W?\x94\x01RQ\x81\xbc\xc0?(\x98\xaf\xf7\xb4\x8f\x88\xbf\xdc\xed\xb7t\x7f%|?J\xaf\xa6\x07)\x7f\xa4\xbf\xear\xa4e\x82c\x95?W\xc0\t\x01>\xb5y\xbf\xb6b=NY\xcc\x99\xbf\x11c\x88\xdf\x91\xc0\xa1\xbf\xad]qw,\x02\xa6\xbf\x85@\x8a\x0e\x1f:\xb1\xbf\xf9\xee"!N\xec\x96?T>B8\xc9\xa6\\\xbf\x01<1l\xfa\xfd\xac?\x1d\x0e\xf3\xa6\xae\xa8\xb7\xbf\xe5\xfa\x9b\x12\x85<\x9a?\x1d\xf5\xfe\x00\x8d\xe5g?\x02:sv`\xa2\xb4?\xa7[$\xd8\x9e\xd0d?\x06\xf7\xac\xe1Bu\x85?"\x89\xd1\x7f\x0bB\x9b\xbff*<\x92\xfd,\xc5?\xe4\x1b `\x85D\x87?\xce\xc4\x0f\xb0\x82\tu?\x97\x12\xc8\x1bI1\xb3?\xea\xfb\xa8\xcd\xf9\n\x8f?\x1c\x1e\x12\xb2\x11Mr?^Q\x9f?\x84\xa9\x8f?\x1f\x94\x80\x08I\x15\xb4?\xbbe\xc8\xed| \xa1\xbf\x9f1^\xfbQa\xa6?\xe2\x9c"2\x9b\x8a\xd7?e\r\xa4HI!\xb1\xbf\x98fr\xad\t\x01\x93\xbf\x12\x95@D\xeaT\x9b\xbf\n\xa4KUM\xcc\xa6\xbfy\xfa\xc2\xdc\xaf\xa9\xb1?\xc6\xac\x1c\xfft%\xaa?1-\xf9\xca`\x90\x9f\xbf\xb4\x1c[\xba?\x9d\xb3?c\x14\xd5}\x18\xe6\xea?\xb7\xbb\x10\xb2\x80G\xac?/\xf9\x1e\xee\xa5\x13\x8b\xbf\x8bkP\xce\xe7\xca\xa5\xbf\x07\xdc\x94=\xd4q~?\x94>KJP\x90\xe4?\xac3l\x18T\x7f\xc3?9H\xba\xc3\x84\xb3a\xbf\x0bz\x97\xe2\nf\x88\xbf\xfa\xc9\x065?\xf6\xb7\xbf\xc0\x8a\xf9\xf1G\x82\x7f?\xfd\x00p(nS\x91?x\xa92psB\xb7?N\xa8\xf6\xe6\x89\x94\xb2\xbfy\xc78Iqy\xa4\xbf\xbbA;2&\x9b\x9d\xbf\xe5y\x7fz\x10%\x8a?\xaf\xea\xe6\xefW\x1c\x84\xbf\xe3#\r\x85\xeek\x82\xbf\x82\x18\xf1\xc5\xab\xa2\xa8?\xfa%\x94\\u,\xb6\xbf\xa6\xadR`\xe5\xdb\xc4\xbf\xfb\x08\xb6\xa5\xfc\x88\xbf\xbf\xed\x9b^\xac\xc7B\x95?6\xc0\xa0\x8a\xfe\x88x?\x87\xa5\xc9D\xb1\xce\x8c?\xc4\xe6\t\x85\x8a\xe3\x96\xbf"\x0eB\xb0g\xc7\x9e\xbf\xaf\xdf\xb0\xc37%>?g\xc8\x87\x1b\xb5\x8d\xb4?\x11\xdd<\x02\x9c\xe6\x81\xbf"\xb0\xfb\xab\xde)\x9a\xbf\xa2\xcd\x13\xf3\x0b,\xb5\xbf\xaeW\xb9\xa8:\xd5\x92?\x11\xdf\xbd\xc6\xbd\xd6\xa1\xbf\xf9\xcdg\xc5\x02M\x8a?\x14\x9d\xcc\xb8jT\xa8?\xb5h\xe0\x15\xa1Tu?\x1e\x7fT\x18\xaf\xb5h\xbf\xf9\x04\x1b\x876\xc0{\xbf>Y\xf5\xd7xn\x96\xbf*\xd9\x11\'l\xd9\xe0?\x7f|9\xb6\xe9r\x9d?\x84\xc3\xa4A\xc10\xaa\xbf\xf5\xf4:\xd3U\xe2\xcf?\x1b\x98\x15%#\xc1{\xbfv"k$\xc4y\xa0?yO\xb20\x91\xcc\x98?\x06\xfbHnY\xc1\xd5?\xfd\x01\xb0\x1bD\xde\xb0\xbf,\xc9JJ\x8a\xeb\xb5\xbf\x11\xebi\xbc\n\x99\x82\xbf\xe6+\x9d|\x11\xaf\xa7?\x0b\xe3\xd3\xe9\xfb\xb7q\xbf\xbe\xfc\x89y\xd7*\xc0\xbfs\xc4I\x01\x03\x9cR?@\x1b\xc7\xe2;\x89\xb5\xbf\xb7j\xeb\x12\xb0\x99g\xbf\x0b\xd8\xaa\xc0\x03\x0f>\xbf\xdd\xde\xd0(\x02c\xc2?o\xfc{3\xc81\x81\xbf\x88\xeb\xe4\xd2\xce\x03\xc9?\xd6.\x9d\xea#\xfd\xc1\xbf\n\xf3\xcf,\x10\xa7-?\xb6\xd6\x0c\x88$\xa8\xd3?\xdb\x97U\xbb\xd0\x1c\xb3\xbf\xd4\xd8K\r\x93\x00x\xbf\x85\xad\x01\x0bhq\xc2\xbf\xb6Y7<:Z\xb4\xbfT\xf0\x11\xa2m\x08\xcf?\x11\x83\xcco<\xb7\x9f?!\x84=\xb0\r\xba\x9d\xbf\xcd\r~\xe8\x11\xd5\xb9\xbf\x02\x1ey\xf3A\xd4t?`$\xea\xea\x80c\xb0?&p\xf2\x0c\xcd\xb5\x94? \xdamr\x16\x84\xa7?\x8b\x01\xed\x1d\x8f\x88\xe8?\xc7a\xa0\xb9\x166\xc2?\'\x03\xd2\xe5\xa5.\x98\xbf\xe1\xf1\xdeS\xf3S\x95?\x9d?oV{B\xcc?^\xf4a\x19Wb\xc2\xbf\x01\xf2\xca@\xc4\xcaP\xbf\xd2\x19f\xe6\xa0R\xb6?9\xdf\x81\xaa\xebr\xa6?\xe1\x96h\xff\x19\x8dn\xbf\xe3\xd6\xb4\x00\xdf\xb7}?\x07\xe8\xf7\x9a\xf0\xac\x93\xbf\xfd\x97\xfd\x9e\x8f)\xac\xbf\x0e\x94\xa3\xfc~\x10\xac\xbfK\xb0?\x06(\xe3\xd1?\xd3\x98S5\xe54\xbc?,\xf9\x15\x11\xd7\xcf\xb8?t\x84\x19\xb9\x14[\xa1?\x01\xba\x89\xff\x03.\xad?\xe9O\xa9:\x8a\x14\xd0\xbfQ\xa4\xb5\x87Y\x06\xc2?6M\x81\xb9#h\xb0\xbf\xd3\x8dX\xf2\x9bL\x92?\xf7\xd0`x:\x13\xbd?0,#\x84\xee]\xb4?\x87vs\xc9\xc0\xea\xb6\xbfmv\xf1\x044\xa0\xa7\xbf2w\xb1u\x02\x06\x99\xbf}\xf1\x97\x96Tk\xb1?\x05\xd0\xee\xe1\xb5(\xd9?.\xa1\xf6\xcd\x11\\\x99\xbf\xd1\xbc\xb6\xa0\xdc\xd8\xa5?,\xb1\xd1+\n\xa6\xa8?\x95\xc8N4\x940\xda?\xec5\xf3\xd9\xfd\xe7\xab\xbf*\x00l\xc5\xac\x00\xb1?\xafE\xee?[\xd0\x92\xbfL\xd4\x05\xf8:\xe3\xa4?D\xaf\xf3\x1c\xa5\rw\xbf\x878\x14\xc3\xe8{\xb7?4\xcd\xd7;\t\x16\xa6?v\xb8+\xec\xb8\nv\xbfdp\xe8\xfei\xba\xa7\xbf\xfc\x83\xdb\x12g\x91\xb8\xbf\xea\x93j\xf2(\xbe\x8e?\xf0\xf1N\xe45\x7f\xb7\xbf[}!\x14-\x93\x93\xbf\xfbcf\xa1F\xa0d?\x0eor\xf9\x18f\xa9?\xb7\x92\xef\x18\xffU\xb2?\x82/\x17\x1c\x98Z\xb9?\xcdr\xbfC\x98Q\xa1\xbf>\xde\x00\xb1j4\x9c\xbf\xf6\xb7\x01-P\x08\xac\xbfA\x0c\xbe0\x98\\\xb8\xbf\xba\x00\xc9\x12\xb3k\xc8?3\xa8\x9f:\xb5\xc0\xc6?\xb6*~\x8a\xfa_\xd2?\xa6\x18Z\xd9\xf2O\xb5\xbff\xdd*\xb8\x86cx?\x9d\xb5\xd9\xd1*\x1c\x9a\xbf\xe9\xd8\xa2C\xe0\x95\x82\xbf\x00\xb6\xea\xff{\\\xbf?\xcd\xc3\xfe\x1c\xc5\xce\xa6?\xb0\xb6\xc1\xdc[\xc9\xc4\xbf\x90\xb9\xd0\xbd\xe4~\xd9?R\x14\xfaP$\x1f\xa3\xbf\xaa\xd9Y) \x03\xbc?=\x8c\xe44\r\xda\xa1\xbf\x04\xd2\x03\x04P\xda\xa2\xbf\x149\rp\xab-\xa2\xbf\xf1\xaa`\xd7\xd0\xaf\xb6?&\x00\x02(\x91\x8f\x97\xbfn\xf1\xab*-!\xbf?\x02\x18\xa8\xfc\xd3\xa5\xc6\xbf+m\x91\xbf\xf0\xb3\x9b?u\xa5C\x92\xceA\xa5\xbf\'\x88\x11\xb0\xe0Z\xb3?M\xa0\\z\xc79\x84?o\xca{R\\@\xbc\xbfLJ\xc3\xeb\xb7\xe3\xb7?t\x87F\xa6u\x95\xb1?\xf2\x14g5\xd2\xd6r?Q\xf5\x0f\n^9\xa1\xbf\xab\x0f\xa4k\xbd3\x90?\xc7\xe4iY\x8c\xfa\xcf\xbf\xadl<2\xa2\xb1\xa6\xbf\xee\xaeIY\xa8\xeb\xa7?\xfd\x02\xfe\x06\xda\x97\xaa\xbf\xe8\xc8\x84\xf0P\xd8\x88\xbf\xad\xca\xf2\x02\xfc\xa9\xb8?3\xc4@\xb8\xe5\xbb\xc1\xbf\xb4No\xb6F\xc5\xb1?v\xe5\'\xc9\xe4\x1c\x84?(8\x02\xc1U\x04\xac\xbf\x93Gt\xac\x1a\x04\x92?\xa5mM\xa0M\x8f\xb2\xbf\x8d\x98g\xec\xa7\x8c\xa2\xbf} \x99}\xb5\x91\xa2\xbf\x96\x85\xe1\xe2\xa3\xe4\x8c\xbf\xbe\xd9}0\xe4f\xab\xbf\xe8\x0e\x80\xaa\x92:\xc4?`ql5\xe6\x87\x80\xbf\xa8[4d\x96\xf7\xa9\xbf\xdd\xb1\x7fn\xefh\xc2\xbf\xe3w \xcb\x98\xe9B\xbf\x98\xf4R1\xc4s\xa5\xbf\x0fD\x84\x07\xab/\xbe\xbf^\x83\xf1[V\x80\x94?\x9bkHJ\xce\xa1\x91?\x96D\x1a\x18-Z\xa0?T\x05B\xa72\xe9\xae\xbf\x06[\xac\x06R4\xb6?x\x98\x84\xb1}\xcf\xa0?-\xbe*\x92\xf5\xda\xb2?c\x03\xc5c>\x9b\x90?\x9575\xad\x8dN\xa9?\xfb\xd7\xc21)\x96\xab?\x1f\xe1a\xa4\x97\xe7^\xbf}\xa1\x04.\xd6\x84\xbf\xbf\xa1Q\xb8y\xce\x9c\xb2\xbfY3\xc2\x8d\xcc\xce\xb5?l\x0e\xe9Zb\x8c\xb6?G\x92\xc2\xc5]\xc4\x97?\x07\xc2O\x0e\xfd;\x97?\xbe$.7\xbb\xc6\xae?/\x82\xb4Y\x1f\xdf\xba\xbf\xb7\xdf\\\x85\xeeI\xd9?\xb8R\xa5\x018"\xab\xbff\x82\xe5\x04{\xd8\xb2?\x7f\x05\x81\x90S\xad\xc4?\xc2\xfe\x07\x7f\xfe\xa7\xb7?\r>\'\xe6\xa1\r\xa8\xbf_\xd8>\xf4\xfcY\xbb\xbf\x1c"n\x0b\x94\xd3\xce?.\xa7h\xb5\xe0*\xb4?\xd6\x9d\xa1\xe2$v\xb7?\xfb\xc8\xa9\x1df\x13\xbb\xbf\xaf\xbe!\xf3V\xe0\xba\xbf\xcd\x7f\xf9\xe8\xcfI\xb7?\xf2\rsg|\xf7\x80\xbf0*N\xf4\r\xfcG\xbf\xc1\x00\xc1r\xaf\x82\xae\xbf\xc1\x1e\x92"\x12Q\xa9?\x97j$t\xb8y\xc6\xbf\xe4B\x8f\x11\xab\xc3\x88?\xc3\xc7iU\x90\xca\x99?\x81<Ln\x9e\xa1o\xbf\x1a\xa9\xb7f\xe4h\xbe\xbf\x0c\xfe\xcbJ\x92\x86d\xbf\x88\xd1\x93\x9071w\xbf\xf0\xd9\xc9re9\x8a?T\x95\xef\x96\t\xd3\xb0?T\xa3gK>\xb2\xaa\xbf\xcb:*pL\xae\xa5\xbf,Y\x93\xbd\xf2@\x82\xbf\x87\xfbiE\x1c\x91\x8e?\xfeV,\r\xab\xb5\xcb?)\x12\xf8w\x07o\xb5\xbf\x16\xb2 0\xbe\x96\xc6\xbf\x18k\x16\xb2k\xc0b\xbf?2\x1d\'x\xf6\x86\xbf\x0e\xe3\x87!\xb7\xca\xae\xbf\x08\xf6\xf6U(0b\xbf\xd7W\xd1\x8e\tm\xa3?\xec\xdd\xc0\\\xc29\xc2?\x17\x06\x8c\xaf\xff\x97\xad?\xea\xd8Z\xaeL\xb0\xa5\xbf"\xff\x1b\x8c\x0e]\xb1\xbf\x7f\xf1\x10j\xd5\x17\xa3\xbf\xf9\xed\xa6\x88a~\xa4?\x7fA\xf4\x94\xc9`\x8c?k\xdcy\x80\x97\x8e\xbe?f\xb5\xfa6m\xd1\xa7?\xe9@g\xbf\xa2\x01\x85\xbf.\x94\x8a\xbc\x1e\xfd\xbc\xbf\xa8\x10\x9eV\x8e\x16\xaf?\xe7v2k\x89\xfb\xd7\xbf\x84\x85-\x9a\x99\xce\x83?\x7f\nC\xa6[\x8a\xb5\xbfi\xc3\x8c\x94,v\x8b\xbf\x17\xa6\xef\x08;0\x9a\xbf\xe9\x17r\xa1{\x14\xd0?\'\xe8\xa4\x11\x88\xc4\xac?N\'\xb2\xa4k\xc4\xb3?\xd6\xcc+\x985>\x99\xbf\x82\xfa\x8d\x95\x7f\x80\xa5\xbf\xdf\x1c\x8c"V<\xba\xbfs`\xaewX\x10\x97?\xcf{<\xb5\xa8\xa1q\xbf\xd32\x95\x97#\x1e\xab\xbf%\xe2\xb3w%7\xb4?\x05\n\x82\xb1\x06\xa8\xba?\t\xa2\x15\xa2Z:\xae\xbfz\x0e\xe4\x02\xda\x02\xa8\xbfk\xc6.g\xa2#\xc4\xbf0\xdd>(\xb0\'\xc4?\xd3\x83\x02\xd6\xab\xd6\xa3?}\xd3\x9c\x010\xee\x8d\xbf<\x82kz\x85;\xb3\xbf8\xc6\xa9\xc3\xb5u\x9c?Mp\xb4\x18\xa9\xde\xc2\xbf\xc8i\xa6\x12\xca\xbd\xa8\xbf*\xa5 \xd5i&\x94?/\xbc\x985\xe7r\xb2?z\x84\x16\xe9\xc1\x9c\xa9\xbf}\xa3"\xfdZz\xb2\xbf}p \x89\xbd5\xc0?\xde\x8fL\xdb\xb1\x01\xa5\xbf\x9dy\xfb[\xd2\xa1q?\xad\xadh\x07\x9b\x8f\xc4\xbf\xd8B\xder\x1c\x86\xa1?\tLX\x90\x8d=\xba\xbf\xc8$\xe0*\xdb\x97\xc3\xbf\xc9\x06\x0eZ\xda\xae\xc1?\xe6<\x1f\xc4\xdc\x17\xb1\xbf\xac\x97M\xd9\xc6\x15\xba?\x07/G\xf3\xe9\xc6\xb8\xbfC\xddFO/}\x9e\xbf\x88\xf81\'`\xb7\xc3\xbf\xe4\x1d\x10D\x1a\x0e\xbd?\xf6\x08>?<\xbe\xc5\xbf\x16\xc2O\xcf(\x97x\xbf\x9e\xa0\xf9\xaa\xb1\xb4\xa4?\xf9\xb9|\xff\xb2\x98\x87?\xd8\x13\x8b\r9\t\x9d??\xe7\x19B\xa9\xe0\xad?f\x06l\x8fU\xd6\xa6\xbf\xf2c"\x8b~\xe5\xa5\xbff\x9a{\x18\xf4(\xba?,\x16a\x10\xc2\xee\xb4\xbf\xc0(\xaa\xa7\x86\xdc\xcd\xbf\x95\x8b\xc2\x00\xdb\xf2\xa8?\x19(\xbb{\x83\x91\xc7\xbf\xf4\xf1\x81\x0f\\\xfd\xac\xbf\xbb\xc3V\x93\x1c\xf2\x9d?\xc6\x9f.{\xc3\xd4\xa6\xbf\x06\xd5\xd6\x15U9\x89?=^w8\xed>\xa7\xbf8@\xcd\x16\x96\xd4\x90\xbf-y\x04\xe3\xf5"\xd0?\xf3\x03\xaa\xf9\x8b\xd6|\xbf\x80Z#\t\xc2S\xaf?\x1c\xf6cc\xbef\xae\xbfR\x8f\xe1\x0f\x9d}\xcd\xbf,]\x90\xabJz\xc1\xbf\x0f"^\t\x7frp?\xfbU*\xa6R\x10d?\x05\x02q\xc09\x9e\xa1?H\x89nk\xa7\xb9\xcb?\x18\xb3\xbd\xac\xe7$\xca\xbfT\x96\x8c\xaf\xf9L\xc1\xbf\xafO/\xb5\xd4r\x94?\xed\xa0"\xfa\xd5(o\xbfA\xfd\x00wkh\x80\xbf\r\x08\xc1\x7f\x7f.\xd1\xbfS?\x0e\xad@\xb9\xcf\xbf\xe3f\xc8\x0b\x93\xf7\xb3\xbf\x1387\x03@\xf4\xa6?\xa8\x8d\xee2\x00\x8c\xc9?\xbc\rs\x9av\xac\x85?yQ\xd0\x1b\xa3Hp\xbf\x94:\x19^5\xf1\xc6\xbf_j\xc2Y$\x8e\xd5\xbf\x07\xc8\x08X\x0e\x90\xa7\xbfH\xfd\x8aDi\x90\xb2?=\xe4\x13\xaaq\xcd\xc7?\xdd\xe6GN \xf0\xb0?\xac\xf1\x8c\xa8_\xc8t?\xba\xa2D\xb1\xe9\x83\xb9?<)\xf6\xb6\xcb\x00\xc1?\x8f\xff\xa6\n\x94\xe7\xc0?-T\\\xf0\xee\xc4\xd6\xbfw\xb0\x02\xd0\xb5\xf8\xbc\xbf\xf0\xcf&\xc7\xdfhy?NC\xbd\xf4s\x89\xc1?~\xbd;GOt\x80?z\x1aC\x08\xe23\x8f?\xe3&~b\x13@{?\xc3)\x84\x06\xbe\xcb\xa9?3L\x07z9l\xb4?\x9c\xed\x83\x18\xbe\xcf\xc1?\x05T\xdaM\xe4:\xa8\xbf\xc3F/\x18\xab;\xa4\xbf\ts\xbe\x13/\xfb\xb7?q\xaf\xd79\xf3\xa1\xc3?\xfb\xfe\x8d+\xa3\xee\xb2\xbf\xa5\x88~\xe4|:\x87?\xa2\x9c\xe0 \xf4\x15\xa0?\xac\xbb.\xef;\x9c\x81?\xbe@5\xd2G\xcb\xc0\xbf\x97\x0f\xa80\x8a\n\xb9?\x16\x92>U\x97\x82\xb7?\xe1\xa6[\xb1\xd8\xa3\x91\xbf\xd9\xe7\xbc\x02\xf0\xda\xa5?\x8c2Q\xe9\xad\r\xc3?\xe6\x93\x98\xa6\xbf\xe5\xbb?\xdcd\x07\xa2\xde\x7f\xc1?$\xe7>P\xc4b\xaf?\xbb5UZ*\xea\xaa\xbf\x1d\xc00\xa5I\x0f\xb7?hz\x9c*\x1c\x06\x95\xbf\xc7N\x7fb\x1f-\xaa?\xf4\xa24#\xdf\xff\x8b?D\xda@\xc6W\xd5\x95?y\'\xa3\xc2k\xbe\x96?\x96\x0c]\xd2\xa65\xb9\xbf\xb4\xb4\x89\x07\xaa\x0e\x92?U!\xc4\x13\xd8$\xbd?\xc9\x07$;q\xf9g?\xad\x126\xe41*\xae\xbfq(Y\xe7\xf0\nZ\xbf\x9d\x95\xc8\x1d\x1e\xb5B?\xf0\xbew\xf0\x08\x1f\xc9\xbf\x9a\x9b\x1c\xbe\xf4\xc6\xb1?*Mb;\xda\xee\x90\xbf\xe0\xd4qoB\xf9\xb0\xbf\x8c\xf6\xe4ciP\xbc\xbf\x81/\x94-\x1b=\xba?\xc6\xba\xd9\\\x17\x85\xb2?BHM)\x85\xa1w?\tg\nk\x1c|\xa1\xbf\x83G!!\x9a\xdea?\xc7\x9a\x7f\xc0\x82W\xa8?V\x90\xcej]?\x9e\xbfA\x03\xd6\xa0\r*\xb9\xbf\x92\x93\xe0u\x84\x0f\x90?\x86\xf5H\xd5\x0eE\xa1?\xef\xf8\x82\xdc\xd6+\x96?\x96()\xa7{U\xc3\xbf\x9a)==\x13@\xbb?\xe2\xad=\x07\xd3\r\xc2?pZ^\'D/\xb6\xbf\xcdi\x9ej9\xd8\xb7\xbf\xe2C\xb3\xe0>\xc7\xb7?B\xf5_\xba\x156\x82?\xbfse\x8d\x12\xda\xb0?\xe4\x87\x96\xa8)\n\x92\xbfir#\x15\xd9b\xa9?\x95T\xaa\x0e\xc2}\x81?\x9b\x1b\xc8(\xb4\xc8\xc2\xbf\xc2\xc0p;\xafM\x8c?M\x1d\xa0%\xc6\xee\x97?\xec\x82\xab\xb7@\x0c\xb9?\'\xa7b\xf4z\xba\x8d?!*{\x9c^\'\xbd?\xc5\x0e\xf9\x8f\xf0\x93\x93?|\xfe\x13c\xd9\xc7}?@\xa2J\x01\x07D\x97\xbf\xf2<:1\xeb\xc0\xa7?\xf5\x89+\x9a\xa3<\xb6\xbf\x1e\x9e\xa5\xe1\xab\x86\xc4\xbf\x99\x9d\xc6\xd2\x01\xd7\x88\xbf\x9aSf\n\x8d\xcd\xae?\x10\xd4\xb1\xcf\xbd\xa2\x9d?\xc8\xee<\x8d\xa0\x89\x96?\x1e_\xa1\xed^C\xb1?\xe3\xa5nPO/\xd2?\xf5\xcb\xbc*\xb5\x02\x97\xbf]\xb9\xb4i\x8fK\x9d?\xf2\xea&\xcc7\xf8r?\x01\xde\xb2\xb7\x12\x9d\x83\xbf]\xb2\xf6\xea\x8f\x00\xc2\xbf\xd3\xd3\xd4m\xeb\x14\xa8\xbf\x0fC\xb2N`.\xc7?\xfa$\xde\x0fb\xe1\xc5?q\xc6E\xfa\x9d\xe8\xbc?\x0c"\xf8;\xf7\x8e\xb2\xbfq\x18\xf2\x10\x8d$\xcf\xbf>\x18\x02$\xb32\xb0?\x97\xecn\xc3\xf8\xc1\xb4?\x81K\x84]\xc7\xa5\xb1\xbf\xa2\xb9\xba\xbc\xe38\x97\xbfi\xd9\xe2\xd4SX\xa1\xbfJ\x10nqh\x14\xcc?\xf28=\xf9\xf7\xca\xb2?\xf1\x16L\x96\x01\xc4y?}\xf7\xca\xd1\xee\xa1\x8e?\xbc\xc5Q.E\x95e\xbf^\xe9\xb3-\xd6|\xb6\xbfW\x99u\x89\xd5F\xa5?|x\x1fd\xcfc\xb0\xbf\x9c\xc6\x07"\xb4\n\xab?\x0f}c\xca\x05\x96\xaf\xbf\xc4\xc3\x03"{\x89\x8b?\xaa\xf1\xdd\xbd\x80\x8a\xcc?\xf1\xf0Gr\xcf\'\xc6\xbf\x8aA\xe6Z\x8a\xa3\xa2?f\xe0A\xce>\xfag?=\xfc\x8a\x13\xdb7~?x\xba\x99\xe93\xbd\x98?\xad\r\x8bV\xa8y\xb0\xbf\x95\xa7\rJ#\xcb\x98?I"\x04\xe4K\x98\x92?\x9d\xee\xd4\xb0\xe5\x05\xbe?\xd1q0\xe4\x0b\xccT?\x01\xa9\x03\x19~\xcb(?}~\xd6\xa6{\x7f\xad\xbf\xbc\xc6(\xea\xda\xd0\x94?\xb9\xa6\x8d\x9b8\xbdu?b\x0c|M1p\xca\xbf\xffsdp\xa4\xdf\xba?I\x8d\xfc\x12\xfca\xa3?c\x1a\xcc\xf3Y\xcc\x8a\xbf\x91\xfb\xafg\x12\x9a\x9b\xbf\xfa\x02\xa6noU\x8e?8\xf7\xe2\x93Q)\xbc?e\x98m\x03Z\x13\x9a?\xce\x9d\x81?\xb0\x0f\xb4?\xb2\x9b\xc9\xca\xd1\x0f}\xbfn\xcf\xc0\x8f\xcf\x8a\xce?\xdbYO\xd1[\xba\xb7\xbfc\xaeY}\t\x17\xa4?\xfa\x0e\x12\xa9:\xda\xb7\xbftR\xcf<\x1aw\xb2?\xfc\xff0j9\xe6\xc3\xbf\xd4&\x00\x18\')\xbc\xbf\x90j^V\xd3\xce\xc4?\xf1Q\x04\x8c\x89_\xbb\xbf\xaf\xd9\xb75\xc4p\xc5?\xb9\xb8\xc3\t?\xce\x98\xbf\xb8h\xe6\x15~U\xbf?\xa5m\xd31c\xaa\x9d\xbff\xec\x12\xe6H2\xb1?\xc4F\xee\x99\xdb\xa9\x8d\xbf\x9c(\xc2\x08L\xb1\xad?B\xb9\x8eb\x87N\xb4\xbf}5\xf5\t\xfd\xa4\xb0?\xe0\xf7\xf6\x0c\xa8\x87\xa5\xbf}1\xd1\x00\xc1\xb4\x8f\xbfXz0\xa2\x1f\xe0\xc0?h*%2>\xdb\xc8?\xb7\xda\xf1\xdd\xc3\xf1}?\xf8\xb0<\x95\xdd\x98\x81?>\x08.\xa6;\x9fZ\xbf\xb2\xeb\xc4\x05\xbd\xfb\xb1\xbf\x95U\xe6\x068\x8d\xa2\xbf\x95L\x94\xd5\x95\x1a\x85\xbf:\xbbw\xc5\x11\xc0\xb2?\xa3`\xc3\xf8j\xab\xb5?\xfd\xfa~\xe0\xf9\xed\xbc\xbf>A\x90\xbd\xe8\xa5\x85\xbf\xefEF\xc5|\xf4l\xbfb\xca\xe1\xb3@\xad\x84?=\x87\x15R2\xa3\xaa?\xdb\x0e\x13(\x98<\xab?\xd5\x86C\xfc;\x82\x98?iq\x14\x8a\xb6g~\xbf\xbc\x1a)\xafF\x11s\xbfwE\x15\xc0\xeb\x9a\xa9?\x1a1\xf2\xac\x02\xf2\x97\xbf\x15\x9f\xd4\xfc\x84p\x8a?\n\xe4\x0ewJ\xf5\xa8\xbf\xd7\x10\x06.c\xf8t?\xe4\xaai\xcf\xb1\xd5\x97?\x87\xe2\x8a\'\xf4\x0e\x8a?\x84}\xed4{\xde\xbc\xbf\xc1\x17\r?\xfe\x07\x99?\xf0\x9d\x1a\x10\xa2\xc6\xaa\xbf\x96A\xf2\xf2\x1b{\xa3\xbfLp\x8c\xe2W\xaae?\xa6\x03\xe81\x83qK?Hq\x93D`\xb0\x7f?\xbe\xb3q-\x93\x01x?\xec\xdd\xbbU\xc0\x8d\xc8?K\xe3\xb6\xaaR\\\xb1\xbfG\x95bD!\xd6\xb0?\x81\xf8\x16[\x96\xfe\xd0\xbf\x11\x19\xb3\xb84\x92\xb0\xbf\xe8\xf7\xbd``\x0e\xb2\xbf\xae\xde\xbfW"\xd4\x0e?\xff.\xca\xbe\xce!\x8e\xbf3\xb1:\x0f{\x03\xc2\xbf\x86.|:T\xf2\xae?\xebf\x0c\xe9\xb7\xc7\xbd\xbf$dCN\x08{\xbf\xbf\xff\xba\xd0,\xbf\x96\x8d\xbfB\x82\xd7\xba\x1b\xab\xca\xbf\xf0J\xf3D\x02\x93p?%\xa6\x18k\x0c4\x9b\xbf\x9b\x0c\x9c\xee\xd0\rx\xbf#\x03\x12\xc8\xb4\xcc\x8b\xbf\x14\x12\x90\x844i\xa6?\xda\xfdk@\x0ct\xa1?\x8cn\x9c5U\xaa\xb7\xbf\x06\x86@;\x9e\x07\x9f?\xe4\x84x".\x96\xba?\xb1\xca\xb5\xb0\xff\xbc\xa8\xbf\x87\x0b#\xc1\xd8\xbf\x98\xbf1\xcf\xbc\xd6?\xe2\x88\xbf\xa4\xfdp\x92bs\x93?-\xefYA\xa3\xbc\xb2\xbf\xe8\xa9Lz\x0e\xc4\xb7?\xe4#G\xf2\x12\xaa\xa6\xbf\x92\xddX\x06\x93\x99\xb5\xbf\xc2*T\xe7MQv?I\xa1\xab\x13\xaaX\xae?\x8c\xb0\xa2@\x84\xf7\xbb\xbf\x93\x9d\xe8@\xd7h\x93\xbfH\x8b\x8d\xc1c!\xaf?\x08\xc7\x9ea7g\xb1\xbf\xba\xad\xaa\xe9\xeb\xdfo?\x07M\x93\xd4PAw?\x1b\xa5\xf2\x9c\xad\x01\x95?\x801*J\xf19\x95?Q\xbf\\\xf3C"\xc0\xbf\xc7\x15-FXX\xc1\xbf\xc4L\xf4l\x0652\xbf\xea\x01\x8a"X\x89\x84?4\x9e\x96\xf7\x9fH\x98\xbf>\xff\x14U\xd6g\xc5\xbf\xf6G0\x7f;\x91\xc4\xbf\xd6G\x846W\xff\x92?\x10\xe6\x88\x97E!\xb5?\x8e\x04^;\xc5\xc1\xba?/\x10Y|r\xd2\xca\xbfF\xfd\x9dd$(\xbd?]\xc4\x86\x02\xa3\x85\xa6\xbfJ\xa1f\xe0g\x87\xa3\xbf\xe7\x007\x11\x8c{\x93\xbf]\xa8\xe4*\xba\x83\x8f\xbf\xf0j\x7f\xb5\x91uY?\xad\x9c;^\x9c\xf7\xd1\xbf\xe8\x85\xa5\x9e5\x8bQ\xbf\xc2\xcc\xf3\xd2\x8d\x07\x88?#\xfc\x1d\x0b\x9f\x90\xa0?\x01\x1f&\xbf\x99\xe6\x8f?\xb9l\x82U\xb5\xb1\xa1\xbf&%\xc5\xe0Mr\x93?^\x9d\xf2q\xbd\xf3\xb7\xbfV\xfbew6\x9a\xbe\xbf\xc9\xdf\xb8\xe8(\xd1\xbb\xbf\xab&N\x05\x9cO\xa9?L.0\xec&\xfb{?k\xa7\xef\x01\x8b>\x9e\xbfi\x03\x1b\xd4j\x1b\xd0\xbf\xf1"\xf2\xdaR\xab\xa4\xbf\xce\xa9\x1eb\x16\\\xa9\xbf~h%xc\xdf\xa4\xbf\x17F}\x8b\xefO\x94\xbf\xf5\x0f\xc7d\x12\xdb\xb8\xbf\xac\x8a\x01@U[m\xbf\xae\x0f\xc1nMk\xaf\xbfnsKrh\xa5\x92?\x83&\xe7r\x86\x08\xc0?q,bL\xca\xf9\xc9?}\x01\x9e\xdb\x1e\xc6\x90\xbf\xe7\xe0\x11}\xb86o?\x06-\xfb\xe3\xd9\xfa\x9d\xbf\x07U7\x12\xdbfv\xbf \x0e\xb2BDi\xc2\xbfa0\x1c\xb65\x1b\x9b\xbf2\xd6\x84\x86\x05\x14\xac?;Nz\xdd1\xbd\xa7\xbf\x91V8\xbc\x9c4\x92?\xc2$\xa2;\r\xc9\xcf?9N\xe0Y\x82\xbd\xb6?\x13\xcf\x8c{i*\xb3?\x82\xda\x15\xfb\xa4\xd7\x9c\xbfq\xef\xe4\xf5A\t\xab\xbf\xd1\x8a\xe7\x89\x12uq?\x14\xd5\x90\x1f\x90\xc5\x8c\xbf\xf9X\xf6\x1aw\xf6\xc8?\xed\xfe\xd9\xb5\xe3\xa3\x93\xbf\xcc"\xa0\xae\xe94\xc3?\xa0\xef"\x92\xaa\xbe\xa8\xbf\x17[\xa5M\xfc\xac\xd3\xbf}PuL\x9c\xcf|\xbf\x0e(^\xfe^\x1e\xb3?\xea\\D\xa9=\x01\xb0\xbfu\xfaL&\x9c`\xb3\xbf\x9f_\x16\x0f\'\xf5\xb2?\xfd7\nxC\x08\xc5?\xb7WR\xc6\x03\xc2\xa4?\xd7\x00\xe0N\xc9\xb7i\xbf54\x9e\xe0\x9f<\xa5?\xa6=\x9a\x1d\x9aC\x88\xbf\xeb(T\xe6\x0fe\xc7?\x17\x17_\xd8\x89\x95?\xbf\xa1W\xeb\xdcj\xe1\x97\xbf/\xf5|\xbf1\x9d\x9d\xbf\xf8\xa7\xd3\xda/\xc1\xa2?\x88?\xe4z\x80\x19\x99\xbf\x80}N\x12\xa50\xa0\xbf\xad\x12\x85\x05W\t\xb8\xbf\xa9\x1a\xd6m{2\x91?\xc9\x1b?\n\x8f\xe2\x95?&\x0fkT\xe5t\x9a?%\x98\xe8[\xe4\x10\x93?n\x13%\xab-2\x90?\xb1\x85F\xac\x87\xcba\xbf\xf4\x10\x90\xb8\xea\xa9\xa0\xbf\xeak\'\x88\xc4}\x88\xbf}\xd6\xb3C\x1b\x8ap\xbf\xee\xc9\xec\xc6\x16\x7f\x92\xbf\xf3\\e\x1a5\xb5\xaa\xbf\x89\x93\xd1\t\xbc\xc6\x9b\xbfl\xf4\xef\xc1_/\xb5?\x98\x03\xc5a(\x18z?m]@\n2t\xa2?\xd4N\x13&\xa7\x85\x99\xbf\'/\xa6b\x85\x8c\xa1\xbf\x03@d\x08Ld\x9e?/gE\x10"8x?>\xba\x81n)/\xb6?K\x05[\xbf,\xe8\xab?\xcbpC\xa1\x08\xbd\xbf?\x1d\x92_\xea\xaa$\x88\xbf(j\xdd\xd6\x02\xfb\x9f\xbfW\xa7\xd5\x07?e\x84\xbf-\xca|!}O\x8f?\xcf\xcf6\xf0 \xa2\xaf?@7\xbbC\xb1{\x8e\xbfk\xc8_Pm\xa0\xb9\xbf\x80+\xb39\xdcI\xb5\xbf\xb3y\xa7\x95\xb2\xc5\xd2?\xfe9\xf5|\xd1mp\xbf2\x12\x9f\xf9ym\x93?\xae#\xfa\xadS\x8a\xa3\xbf\xb6/\x89\xca\xe2\xa8\xc0?\x9b\xb2\xd3p\x92h\xb8\xbfs\xd9NHn\xda\x92?\xbd\ta#\xc9I\xa5?T\xc0\xce\xd2\x1f\x1f\xa7?\x83)&\xd0\xe4@\xae\xbfw\xc7\x87\xcbw2\xb3\xbf\x02\xdb3MO\x97\x81?\xc8\xdb~\xe3\xc9\xa2\x87?y\xae\xd3"WX\xc9?\xe6 K\xb82\x8f\x85?@\x05\x0f\xaf\xc4\xb2\x9a?\xb4\xa9\x8d\x80\xff\xa6\xa1?\xb7\x14\xe8T}`\x9e\xbf\xcdA%C\xefU\xbb\xbf\xc7K\xf0\xd3/\x05\x9b?{}<yO\x86\xb6?\x87\x9b\x81\xff"\x89\x8e?\x96ue+@\x92\xbe?-bK\x94\xe7\x07\xad\xbf*K\xfd\xa5\xed\x10\x91?!q\x03\xbd\xe6r\xa6?\x9eZv\xa0\xcb[\x81?\xd2\xd5t)1\xb3\x85?eq\xcaYW\x01\x94?"u!Q\x81&\xb3\xbf\r\x16\xa9\x14\xe3\x11\x88?;J\xf1X\xc67\x9a?\xd0\x10r\xc6\x12\xe2\x87\xbfJtC\xdc\xb8\xd8\xa2?U.v\xf3\xc7\xcb\xc1?\'P\xea\xd0Ra\xb8?\x14"CN(\xd2\xc7?\x1c\xb1.\xa3\x86\xb7\x94\xbfQ\xc2\x95e\xd5\x95\x91\xbf1\x19:\x05\xf8\xcc\xb2\xbf\xf6\xcf\xbfh\xde\xf6\xb5?\x98[\x93\xb2e\r\x99\xbf\x88X!\x84\x83~\xb2?*D\x08X\xa9\xf2\x84\xbf k\xd6\x1f[>\xaf?{\x89\xad\x04\xcc\xb5|\xbfy{#\x93\xbf\xaa\x91\xbf\xc9\x1dy\xa9%\xfe\xc6?\xc0|\xc5\xa2C\\\x84?\xe7\xe6m\x1d\x11\x14\xbd?\x10\xdd\xae\xef\x07\xfc\x88\xbf\xbclj\xe2\x1d\x11\xbc?-\xd4vp\x80\xb0\x94?\x1eF\xae\xa0\x8f\xcb\xa0\xbfS]oS2\xd7\x9f\xbf\xd7\xb8m\x03}H\x80?,v\x8d\xd9\x98\xado\xbf\xea\xa6\xa4 \x88\xa6\xa6?MJc\xd54\xd0\xb7\xbf,_*\xd7.!\xbf?\xd7b\x15+\x8e\x81\x8e?\x85;\x9e%|\xfa\x89?@g\x02\x10\x8e\x04\xd0?\xa8\xc3\xe1)Hh\x8c\xbf\xf9N\xa6\x87\xa0\xa0\xb7?\xabNH\x85\xa9\xb6\x95?\xec\xb5$\x07c\x81\x92\xbfb%\xe2\\\x86L\xa1\xbfMq=K\x1b\xbb\xa2\xbf\xb8Nj\x98\xc1\x8b\xa4\xbfa\xfb\x9f\x1c\x19^\xb1?\xc74+\x93\xcc\xd7\xa8?\x90\xc2\x13\xc0\x1e\xc0\x83\xbf\x16\xd0dP\xd4\xf0\x99?\x17f\xceP\x07v{?\xe0\xcc\xf6\xc8\xee\x9e\x91?\x19\xc2\xfa\xb0\x17\xf4\xaf?\x86w\x07c\xe1q\xc7\xbfqr\x7f\x01\xaa\xc1\xcb\xbfk\xb9l\xee9\xceT?2\xd8\xc8\xb5N\x0b\xba?~\x943\xd4HH\xa7\xbf\xab\xd1\x88\xf0\x8d\x13j?,\x0c!y\x9a\xea\x1c\xbf\xacS\xf0O\xb0:s\xbf\xde\xd7\xdd\x0b$\xfd\xb7?s\x01VV\x154\x89\xbf\xb80\xf3v8g\x96\xbf\xec\x95\xc0]\xc9-\x8c?\r\xc1L\x93UI\xcd\xbf\x8d\x12\xeb\xae}$\x90\xbf\xfc1V\x0f\xda\xed\xbe\xbf\xcbkk)sw\xa1\xbf\x07\xcf\x9b>\x04#\xb7\xbfV+-bN\x95X?c:\x9e[{a\xb4\xbf\xecZ\xe4F\xb1\xfa\xc3\xbfkU\x9a\xe3\x8f\x96\x82\xbf\x85\x0c\x82\x86\xd2\xc1\xc1?>mJ\xf7O\x02\xa6\xbfh:\x19\x06FT\xbf?\xf0\x9e\xaes\xf5\xd9\x90?\xd9\x88%3\x82\x8a\xab?\xfc\xdb\x10-M\xb2\xb7\xbf[\xf1l\x1d\x9d6\xb6\xbf\x992s\x01#\x12\xa3?\xb3\xec\xda\xber\xd7\x93?SgW\x0e\xfb\xaa\xab?\xb77\xe2gLI\x7f?\xbbb\xd2\xea\x88/\xb3?4\no\xb1\xae$\xa6?\x08J\xb9\xcf[i\x94?\x8au\x112\x8bB\x99\xbf.\xbcU\xb4c\x15\xb7?+\xd1\x04r\xc3W\xb8\xbf\x96\x90\xdd:^\xcck?\x86\xf5\x07\x96k\xdc\x93\xbfV\x84\xe58d\xc0\xb0?J!mv\xdeD\xd3?\xc0\xb51\xbad7\x97\xbf \x9a7\xa0X\xd4\x9c\xbf\x04\x171j\x18\xf0\xc3?\xf1K\x15\x1c\xe01\xb0\xbf\x9d\xa5nU\x18\xf2\x8c?\xeec\x17,cx\xa8\xbf\xbfy\xe6\x0f\xcd{\x94\xbf\xc5\x15\xaf\x12OX\x83\xbfB\x01\x87,\'g\x9f?\xe4e\xe4K\x9e\x87\xad\xbf;\xae\x84\x03\xd6+\x8a?\xd1OE\x1d*\x94\xa1\xbf\x08\x91T\xd7\xdf\xa6\x8a\xbf\x85]\xea\xc2 \x8e\x85\xbf\x8b\xab)\xa2\x7f\t\x95?\xa7<\x80^u\xad\xc9\xbf\x0f\x8b \xaa@\\\xa4\xbfo\tD\xd3g\xe9\x9b\xbf\xc3|\xc3A&D\x90\xbf\xed\xff\xabb#\xf3\xad\xbfZ\x9f\x06\x05*\x8a\x85\xbf\x946\xdf\x9d\xda\xf1\xb4?\xa1\xf6\xf69\x91o\x85?\xdd\\j\xb7\xbd\xfa\xb3\xbf\x18vY\xd2U\x18V\xbf\nV\x10\xe3\xcfN\xba?\xb3b<\xb1c\xd6\x95\xbf\xbdc\x1a\xf8\x18\xf4d?\x1c\x1e9\xea\xea\xe2\x96\xbf^\xd4\x9ct\xfd\xcc\x9c?\x8a/\xfa\xf1\xa1~\xb4?\x1fF\x94\xab\x9dN\xa3\xbf*\xb8\xdc\xff\x87\x01\xa5\xbf\x7f~\xacD?\x92\x9a?L\x9a\xed`h\xa4[\xbf\xe3p&\xf7\x94\xf7\xba?\x1e\x80l\xa7x!j\xbf0Go\x84\xdf\xd4\x8d?\xb2\rM\xc1\x021\xba?\x87\x16\x96\xefT\xf2\xbf?D\x16~B"\xf5\xc1\xbf](2\\&\x94\xb9\xbf/\xa1Kx\x84\xc5\x8c\xbf\x08\xcc\xe25J\xc4\xb3\xbf\x9a\x85\x11\xf9\xac\xd4\x8c?\xbd\xdb\\\x86\xee\xf6\xa6?\x94\xd5I\xd1\xe1\x8f\xa8?\xce\x12Wa\xa6\x8a\xc7?\xbf\xe3\xf6\xafi#\xa5\xbf\xefL\xf3\xdf\x0fc\xa5?\xb9\x13\xa7o\x1b\xa3S\xbf$\xe0\x9dzR\x13\xa0?\x88\xe5\xe6T,)\xce\xbf\xf3u\xf6/.&\xa6\xbf\xc9\xf4\xb8f5h\xa6?\x96\\t\x9f\xb8Ll\xbf\xc524\x94\xba\x80\xd4\xbf\xea\xda\xd1\x14\xe1l\xda?\x8c\x99\xaa\xe1cp\xd5\xbf\xd4\x9d\x9bE,\x13\x92?\xd9r\x8fn\x1c4\xb1?\xf82\x00cc\xd4\xc5?\x89\xc7\x83\xb2\xe1\xfe\xbf\xbfL\xc20\xdd%\xbe\xd1?\xf4\xfcYSB0\xba\xbf\x0eT\xd3l\xf2#\x97?\xaf\xb4y\xfc5F\xba?1Eek\x0b5\xad\xbf,\xf3eO2\x15\xab?`3F\xec\x0fy\x82?\r\xa6He\xbc\xb6\xb7?(\xd6\x06\xa9\x0c#\xb0\xbfz\xa8\xed\xaa\xb8\xc1\xb2\xbf\xb4&\x08\xd4\x8al\xa4?(@\x14\xe5]\xc3\xcd?\'\xe3\xc5 \xf6`x\xbf\\\xf71\xc4\x1b*\xd7\xbf\xf4u+6\x1a\x03\xa1\xbf\x92\xbd\x91Z\xd9\x16\xd7\xbf\xa4\xc5\xe2\\\x9b>e\xbfN4\xdd\t\xae\x14\x99?[\xeb\x10\x08\xfd\x95\xb8\xbfy\xf7\xea\x81\xd8<\xc7\xbf\xb1=\x01fF\xec\xcf\xbfs,\x7ff\xc9\xb4\xcb?\xe5\xf0V\x93i\x86\xbf?\xf3\xbe\x1b\x9d\x9e=\xae?\xa0r\xa3\x10\xf4\xe0\xc1?\xf8\xfc\x91u\x10\x9e\x85?_\xae\x13\xac\x111\x96?z3pe6\x91\x80\xbf\x98\xde\x1b\xe1I\xa4\xd1\xbf\xd4\xaf/\xa7u\xf1\xb2?\x9c\x13\xef\xdb\x7f\x91w\xbf ]\xe5lD\x94\xb4?\xac\x05F*\x99d\x81\xbf\xa5A!\xd7\x8e\x9c\x9d\xbf\x18D\x88\xff\x97~\xc6\xbf\xaa\xc4o\x00\xfb\xd8\x9b?\xfd/\xd5\xfa\xb0m\xb9?`B\xfe\x83_Z\xc2\xbf\x12\x8f\xbd\xb2\xe4\xd2\x9f?\xad\x13\x87\xa3`W\xba\xbfZ\x03\x10X\x8fG\xab\xbf\xad\xb7\x99 \xd8\xe7\xbf?\xed\x95\xe6\xab3z\xb8?\xd6[\xedl\xf9\xb8\x9a?.|i9\xf8\xf2\x9c\xbfA\xf5f\xa9M\xce\xb6?&Y\xd2\xc85(\x92\xbf\x16!\\c\x11d`?X\x0f\xb5\x1dK\xa2\xab?}\x8c\x96\x81\xe1\x1e\xa4?fQ\x97\x05\xa0\x93\x7f?\x8b\xcd9\xb0\xce\x99\xa4?hT\xd6S\xf5U\xae?\xa6\xda0\xcbA\xa7\xb0?P5\xce\xb4mC\xae?Vn0\xc0\xabp\xbc\xbf54\xe0\xefvP\xb7?\xc6G>\xff\xbf\xce\xc3\xbfe\xc5v\r\xd9T\xa9?\xa9\xb3\x91Q\xcd\xb4\xcc?\r\x90"-SU\xc0?\xc3\x06r\x05Wn\x83?\xbbu\x86\xb5\xdc\x0b\x8f\xbf\xad\xe4\xd2DU\xeb\x91\xbf\x99\xd6]\x99n\x1d\x80\xbfy\xe5\x8f\xa4?\xae\xa2?\xf6\xf2\xe5\xd3{\x89\xc4\xbf\xfa~\r\xc4a\xd1\xad?\x06\xff\xbd\xd3\x94~\xd0?\xf2\x9bB\xa4\xc1\xc1\xac\xbf4\xc5\xc9l\xf8\x07\xb9\xbf\xe9\xf3\xaa_V\xe9\xd1?y\x1b\x85\xc9\x06\xb8\xac?\xe6\x1c\xc5\xd7\xb2\x1c\xb1?\xde\xf3\x850<\xc0{?\xcfa\x9b\x85\xb6\x88{\xbf<\x08.]\xaa\xae\xbc\xbf\x9cE~\x9bB\xa3\xc0?w.\x0b\xae\xa2\xbe\xac\xbf\x1c\xfe\xab\xe7\x13\x07q?pjf`/\xff\x8e?\x15\x84I\xca\xd6`w\xbfxu\xcd9\xf1\xca\x7f?\xb7\x9bh\xe6\xdf\x9cl?.\x19\x9dt\xf4\xabz\xbf\x97\x03\xc4|\xf1\x1e\x97?\xe5\xce\x9fb\xcf\xfa\x90?\xcf\xcf\xf2\xe6\\\x01\x88?\xd6\n\x137\xa3\xcbQ?\xea;%\xfa\xe8\xee\x90\xbfH\xb5\xf2\xa6B|\x85?X\xee\x96\x89\x1c\x93m?\x84e\xb5L<V\x85\xbfB\xef\x17\\\x813@\xbf\xa0\xe4\xe7s5st\xbf\x13\xc65\xd1\x04\xddZ\xbf\xc2\x94e@<\xc9g\xbf\x08\xc8\x00I\xfe\x80|?KO\'\xd9\xe4\xacv?8\x88\xc7\xa8N\xfb\x8b\xbf#\x8d\x06h\xe6\xec\x82?\xe7\xca>\x890\xafz\xbff\xcf\xb0\xe8\x8da\x86?\xda=5\xca$\x983?\x05i_\xef\xc8N\x82?[\x98)\x93\xeci\x88?\xb9\xe6!\xd3\x89D\x83\xbf\xa5\x0f\xc4q\x08\x98\x8d?V\x1a\xb0\x98\x82@\x8b\xbf\x14\xdaF\x18\x1a\x81\x83\xbf\xa1?Q\x08\xa1\xe0y?\xb3\xafpJ:\xc1\x84\xbff\x08c \xb1\xe8@\xbf\xcc\xfd\x1b\xde\x99:x\xbf\xf9\xde\xbe\x1b\x1a\xef`?o\xf4\xd8\x16q\x084\xbf.\x94\xb4l\x8f\x8a\x84\xbfP\xd5\xe6\xbb\x01\xa0r?<\xe9\xe9\xbe\x93\xb5Z?@9;\x13\x9f\xd2\x12\xbf:\xb8gq\xce\x8dd?\xe2\x1cl\xaaI\x018?Q\xf2\x0e\x13\x81\xf9\x80?\x03\xd7\xc7<F\xf2\x90\xbf\xed\x89\rmq\xd9\x8a\xbfc\xf7\x98\x14\x80:\x89?i\x0ea=u\xd7p\xbf\x01V-\xb3\xf4\x15r?\xa0\x7f\xc5\xa8\xf22~\xbf\xd6\xd5\xe9Z\xdc\xa8O?\xbf\xec=\xaf}\xd9x?ClH\xea\x87\xec{?\x8aE\x03\xa06\x84\x17\xbfP\x08\'\xa2\xa7\xcbz?\xd8\xff\x0b&\xe9\xcc\x82?\x1b\x8c\x99\\\xb5cb\xbf\xda\xdf\x1bs*\x84\x94\xbf\x8f\xa0\xbaP\x97\x03x?\x98\xef\x95\xca\x9d\xce}?\x18\xd6K#\x088\x97\xbf\x17\x9b~\x1d\xff\xe7\x99?&/7k5jw\xbfcx2\xbbE/\x82\xbf-\xf7\x14\x90\xa5\xa1\x91?e\xdf.K\xbd\x9f\x8f\xbfF\xbb&\x9aG\x14\x8b\xbf\x0c\x08\xd6\x07\xb5\xb7v?\xfa\xf5\xed\x88\xbe\xdf\x81?\xd9\xcd\x14=(\x08M\xbfn\x91q\x08\x7f\xd2v\xbf\xb1\xd8\xb7;\xc7\xdd\x8c\xbf\xc2\x97\xc2\xd1\xa3\x00\x13?\xa3\xd1X\xae\xbc_"\xbf#\x96\x06\x81\xb7\x85K?K\xf0\x8d6\\\t\x89?\x97\xa3\x9d\xa9";\x86\xbf\xba\xaf\x89S\xef\xb0s?\xdb\xb1ea\x8f\x0ew\xbf.\xf9\xc9\x8f\xc6z\x85?\xb7\xa4\\\xe1\x80\xeb\x80\xbf\xae\xa7\xfc`\x98`n?g0p\x02\xe8\xe1k\xbf\xd0yS\xd0u]t?\xfa\xdbs\xc6\x18\xe9A\xbf<Fl\xd1\xd3Kw?\xa4\x88\xd1\'\x11ts?\xd8T\x86\x80?\xd8\x94\xbf\xbcU\xf2\xebQ\xd4\x90?\xbe\xe6B\xe5~>}?=\xdd\x1c>\xa3#\x83\xbf#\xc2\x8e*\x944v?\xcdF_\xcdG\xe14?[\x7f\xd8\xcas\xfbe?\xabxM\x10\xd4\x93\x92?\xa6\xd0\xde\xe0\xd8\x03W?\xf6\xf7\x97x\xd8<\x80\xbf\xbf\xf0\xcc\xda0\xae\x86\xbf^\x8f\xfeC#\xbcq\xbfB\x7fW\r]\xf0\x81\xbf\xcc/\xab\x85\xc99\x88?\xab\xea\xc8[\xc1c\x9c?p\x15~\xe4e\x00\x81\xbfRA\xe7\x04Hs\xbf\xbf\xcb\xe5\xe8&\x00\xad\xa1\xbf\xf3\x9dE\x1ao\x13g?\xd32\x84Z(Y\x8a?8\xe7\x97\x8a\xfb\xbb\x97?>r\xa4\t\xd1j\xb2\xbf\xff}\xcaae\xcc\x84?\xab\t;"\xe6\x80\xa9\xbf$\x00g\xee\xf6=\xb5\xbf?D\x96\xa4z"\x99\xbf\x95Qv\xb3\xf30z?\xc9\x84\xaad\xeeR\x84?\xc2\xc8\xe0\xdc\\-\xaa\xbf.\x0fC\xc5\x9a\xe8\xc1?\x17*\xb3\xd5\x81\xcb\xc3?\xb1;\xd8mx\x96\xb7?\x0e\xe8\x88\xb1\xc0\x8e\xad\xbf)\xf9\xce\x9al\xc4\xa6?~\x18\xb6\xc6dB\xb0\xbf\xe8y\x02O\xb5#\xbd\xbf7\x12_\xcd\x12hq\xbf\x99m\xec\x02\x9d\n\xa6?\xd74\xf1\x9d\xa5\x9b\x9b?\xc3\xd6d\x95?\xed\x88?\xfb\x90\x81\xd8\x1ax\x9c?\xde\xf1\x1a\x02\xed\xd0\xa6\xbf\xbe\x7f\x90\xc1\x8f\xeb\xaa?4k3b7$\xb4?\x9f"h\x8f\xb63\xa7?\xf1\xd5\xbf\xe6$+\x94?F\x9b\xf7\xb8x\xaa\x90\xbf\xfd\xa5\x9c2\xc1\xa2\xa0\xbf"\x16u\x17\xb4\r\x90?\x96@\xbc\x9d\x99&\xa6?\xf6j>\x92\x88!\xbe?"\xe8\x8f\xf2\xaa\x1d\x98?\xb9\xdb\x8ai\xfe2\xbc\xbf\xe4\x1f\x9e^\xce\x9ek?N&\x17?p\xe9\xb1?X\xf8\xe2\x17\xb7\xd3\xa0?\x19\xa2\x00g\xf4\xa5r\xbf\x9d\x9cZ\x1a\x83\xc5\x92\xbf)\x9aZ\x00\xb4\xb4\xa2\xbf\xd4\x0bK\x98v\xd1\x92?\x88\x80\xb1\x92,\x8b\xa9?\xe9@Sf\xd8\xb3\xa1\xbf\x06(\xb4\xfb\xb5\x1f\xc2?\x8aC\xcb\xbaYb\x8b\xbf\xf0J\xbdvb*\x8d?\x8e\xd6b,\x14\xc8W\xbf\x0bR\x01\xda&\xae\xa1\xbf\x13#\x9e}\xd2>\x95?$\xab\xfa\x14\x01[\xae?zy\x16\xce\x86\xe1\xa0?\xa7\x87\xc2\x9f\xe1\xfe\x97?r]\xf0D\x8c\x83\x95\xbf\x97QL\xf2\xde^\xad?\xdf\x98$\x88\xbf\xec\x9f\xbf\xf4\xfa\xedjD^\xa2\xbf\xba\xc6\xea#3\x94\x91?\xb0\\\x97DOY\x9e\xbf\x07\xc8+\x8b.\x17\x95?\x8er\x16T\xfc\xec{?\xf9\x12\x1fTvj\xa0\xbf)lB(;0\x90?\xfe1yA\xf7\x8f\xb4?\xb5\xb3\xed\xd0\x05\xf3\x9a?b\x8a\xbc\xff\x94T\x93?3\xa4\xb2\xb6\x8c.e?b\xbeX\x0c\xc5\x8a\x98?\x0b\x84>\xc7\x92\xc4\xd1?\xe6\x8f$L\x10\x97\xbf?\xe2pW\xe4\xee\xd9\xca?<\nM\xee\xe0\xedn\xbf\xb8\xf3\x0e\xfb\xdbd\xa0\xbf:r\x92\xcd\xd7k\xa7?\xb5\x8au\x0b\x0e0\xb4\xbf\x12\xe8Qf\x9a\x80\x96\xbf\xf417v\xbe\xc1\xaa\xbf<roH\xdd}\xb1\xbf G\x19\xf8;D\xa9\xbf\xe6\x87\xb5\xff\xc7T\x8c?\xc4\x86NM\xf6\x8e\x92?L\\m)\x1b4\xc1?\\\x11\x04@\'\xd5\xa6\xbfJU\xbc\x96DL\xb8?\xba\xec\xdd\x12\xcdr\x8b\xbf\xea\xb9\xff\xf4w\xb5s?`\xc8\x07\x9b\xf8K\xae?\xb7\x8d5\xc1Ob\xb1\xbf`\x9e\xce\x1e\x83\xd8\xa2\xbf:\xeeM\x9c\xf6\xa0\xa1?VP\x05\xca\xa0]\xa9\xbfEfRx\x88\x8e\x93?\x14\xf4\xf1\xe8\x88\xf6\xb3\xbfR\xfd\xf3\x84N\x14\xc4?\x91\xd0\x04\xd1P\x0e\xb6?\x87\xd7\xde![mx\xbf\x9f\x84P\xf9\x1d\xb6\xb4?A~\xe5\xb3\x0f\xad\x84\xbf\xda /\x07\xbd<\xaa\xbft\x84\x1d\x8a\xe7\xec\x83\xbf\xd42\xc0\xa6C\xb5\xcc\xbf\xad\xf4\xa1b\xf9\xf5\xd0\xbf\xb4\x85\xf6\xa0nI\xaa\xbf\x03\xd2\x98\xedD\x06\x99?\xa2\r\xd5xSg\xad?|_\x05\xec\xfc\xed\xa3\xbf\x88\xb7\x8fDL\xa9\xb3?P@Ce_v\xa4\xbf\xdf\xb9Y\xd7\r\x80u\xbf\x8au\xb6\xa4\x9a<\xa0?\xe6\x87\xcaN\xdfc\xae\xbf\xe3\x8f-\xe91\xec\xb7?\r\xb3Em\x11)\xcf\xbfLz\xaa\xdb\x1dG\xa6\xbf\x11\x7f\x80\xb8v1\xc3?\xb5\xe1Yo\xcbG\xa6\xbf/\x0e\x8c\xa1\xae\'\xb7?\xd6\x9a\x9fw\x8e\xa6\xa8\xbf\xdf\x07\xaa4\x87\x86\xb1\xbf\x8c\xab\xa3\xaa8\x16\x99?\x96\x9bX\xae#A\xb4?\x82\xc5\thw}\xab\xbfR\x01\xe7\x94\x01\xe1\xb5?\\k\xe7\xf9\xea|\xab\xbf\x8f\xa6\x90\x87\x87\x8f\x91?Z\x84\xd7\x8bi\xcd\xbf\xbf\xf0\xb0\xc6\x07j\x8c\xa8\xbf\x0c1\x9cIt\x92p?\xf5\xb9\xe2{y\x06\x82\xbf\x18\x9a\x0b\x84=\x1b\xa6?32\xf7 y\xc7\xb1?\xd5\xa7\xd8`{j\xb2?\x88)zWvv\xa0?M=\xd6r\xbeM\x85?\xabN|5w\xd2\xd5\xbf\x9c~LP\xbb$\x8c\xbf\xe1\xad\x94\xcf\x18u\xab?3\xa7\xf4\xb1+(\xad?\xf8\xfbYQ\xe8J\x8f\xbf\xb1\r\x7f\x8aL\xc7\x90?\x93\x8b\x9e\xe4\x10\xfc\xb5?)\x80\n\xaaC\'\xbf\xbf\x084a\x80"\xad\xbe\xbf%\xc5\xe4\xcc\xc1\xe0\xad?\xbd_\x95\x15\xb3\xf6\xb2?\x14p#\t\x86F\x1b\xbf\xa2\xd9\xd6$\xdf\xca\xa1?\xb0\xfbzpA\x8a\xb8?sEL\r\xf1Z\xc1\xbfZn\xaf\x99o\x8f\x93?\xbby\xec9\x89\x82\xc8??\xd9\xd9\x9d\x90@\xc1\xbf\x87n\x1b`9\xa8\xc2\xbf\xe9\xb1\xa2\xf6\xb7h\xa1\xbf\xe5\n\xe2k\xc6N\xbe\xbf\xa1\x0bj~rs\xad\xbf\xf3\x14\x10\\\xf7\xaf\xd1?\xae\xfa\xc7\x88]\t\x9b?\x91w\x00\x7f\xee\x04\xa1\xbf\xf8\x883\x8876\x91\xbf\xa0\xd8\xdc \x86\xaft\xbf\x9a\x891\x1e\x8b\x16\x91\xbf\x91\xae\xceSWf\xa2?\x87\x0c\x89\xc9\x8d,\xb3\xbf\xba\xd9\xf4\xc3;\xd8\xaf?\x9c\x9e\xe6\x0f\xa2h\x95\xbf\x00\xd4\x1f\x7f\x17\xea{\xbf[\x8fB>\xff\x18}\xbf\x03,\xc6\xf2S~\xb5\xbf\x89\xcdm\xab\xd7\xe1\xbb?\xed\x96 +\xf4\x98\xc8?\xf2\x83\xdc-\xa8G\x83?a<\xcb.Pu\xb3\xbf\xba\xd8%W?ry?9\xa8\xae\x84\x80\x98\xa4?5%2\xcbh\xbf\xc6?P\xfciC\x81K\xb6\xbf4\t\xae\xad$\xa9\x94\xbf\x16\x8e#sJ\x19\xc1\xbf\xc1\xd6\n\x81\xfc\xc2\x91\xbf\x95S\x0f\x9a\xd9P\x97\xbf\xa0k\x99>(O\xd0?\x94\x88\xdf\xaf\xa2\xa1\xb3\xbfd\x99\xdb\xeec\xac\xb6\xbf\x11<L\xd7\x06\x88\xa7\xbf\xee\xf1v\xe0\x9e\x85\x9e\xbfM-0\xa9^\xf2\x92?u\xdd\x93\x0b|\x10\xa2\xbf\x9dz\xc6\xd1\x9c:\x8e?$z\xe3\xe8\xcf\x9f\xb9\xbfk\xfe\x8e\x7fY!\xd5\xbf|\x88\x92Q0\x84\xbe?\xee\x0c\xb0\x1b\xda\x8e\xdb\xbf0\xbb\x8b0\x00d\xb6\xbf\x82*\xd3\xe7p_\xa0\xbf\xf7\xe5\xfc|\x9d d\xbf\xaeW}\xb5\xac"t\xbf=\x17\x8d\x95\xc4\xddj\xbfm\xa4\xba\x0e[yp?\x8cT\xe8)oJR?\xed\xde\x14#|\xa3\x96?\xd2s\xdc\xbb\x9e\xb2\x82?\xc3`\x13\xa5Y\x12$?\x9c\x1e8<\xf2\xce\x83\xbfc\xef\x12\xb6\x89\x0ca\xbfXf\x95\x03\xef`\x98\xbfv\x16$\xf9\xc4\xbf\\\xbf\x08\xa8.\xf35\x8c\x82\xbf\xec\xae\x97N\x88\xae\x7f\xbf,\xb93\xb2e\x85\x96?\xc0\x83\xc2\xa1}\x94\x81\xbfR=N\xdbF>t?\x83\xf3\x1d,\xf2\xb4\x96\xbf\xd0\x9d\n\x15\x8d\xf9b?\x8b\xcc\'\x07\x1ek{?\x85`^\x95\xf7\xf9u\xbfc\xbdOrM2|\xbf?\x8b0\xeaa2J?\xe7cu.\x14\xc4b\xbf7\x9f\xf7y\xad\xd9v?\xeeY\x1f7Aa\x85\xbfzC\x13^\xf6j~\xbf\xd2\xf5\x9ec\x07\xb7_?EK3J\x08\xe9{\xbf]`\xae\x8e=\x82\x8e?f1\xa3\xdb\xfcN\x84\xbft\x07\x8c\x89\xc2=v?[\xafzO\x04X\x8a?\x00\x00\x00\x00\xf1\xefp\xbf\xa3\xb1\xcb\xbf\x1a\x19l\xbf\xa5\xef\xe2%h\xbeH?\xb6\xbcL\xb77W\x91?\xf0q\xa9\xf7\x18\xdcu\xbf8\x89N\x17O\xc7\x92?\xabH4\x1d\xdc\xc4R??\xfd\xaa2\xf2\xd2B\xbf\xcc\x9a\xa9\x9c\xebPx\xbf;!f*X8\x82?+\xcdEMi\x83\x83?@\x1f\x81\xf3\x0e&\x93\xbf[z_P\x1a\x83S?\xc3~\xdbc\xe8\x8fi\xbf\x95{\xbai\x03S\x7f?\xda\xc6\x07\xfd\\\x17z?\x94\xab.JJ_\x88?\xbe[\x99\x9c\xec\xe8s?\xf9X\xc1\x82\x0f\x84y?P=\xde\xbaTN\x91?\x83\xf0\x11\x90`\xa8}\xbf\xcb \x04\xed\xcep\x88?`E[\xf7t[\\?b\x06\x97U\xaa\x92\x88?Yhn^\xad\x08-\xbf\xe1\xfa\xadc\x8b\x1bq?\xf5?d\x90\x10\xf2l\xbf\xd5\xc3\x90?\xfbz\x7f?\x8f\xde\xd1\xd6\xe4^\x8f\xbfh>\x82\xfcC8\x93?\x1e\x15\x991\x9c\xa6r?\xc5;\xae\xff\x8dH}?e\x1d\x8d\x07\xe7\xe5f\xbf\x9eH\xa1I\xa0ZQ\xbf\xddj\x16A\x8e\rx\xbf\xf2q\xc4\xef\xd4,\x8a?\xc2\x96ca\xc0\x16x?\x89w\xe7\xc6\xc2\xb2\x81\xbf"\xba\x12\x91_\x87s?\xb9x@\xcc\xcc\xec\x80\xbf\x0f\\\x82\x98\xcb\x95T?\x97\xc5\xa8\xee9/\x92\xbf\xd7\xbd\x10\xc5eQc?\x16}O\xd3\xe9\x93M\xbfjoV=\xad6x\xbfq\xd9~;\xe0\xdc\x91\xbfQ\x9e iW\x87e?\x19\xed\x01\xd7\x97G|?^m\xfb\xd5?\x95J?\x0b\\,^\xa6\x01\x8d?\'\xb5\xba\x9a,\xa4\x8b\xbf\xe3\xdbZ1\x8d \x92?\xd2\x1b\xc0\xde\x88M\x87\xbfR\xeb\x08\xad\x1f\xa2`?\xde=e\xe9\xd4\x07\x90?\x1a\x8f\xde9;\x99\x94\xbff\x83p\r\xa2\x1cc?G(\xd2\x1a@\x14\x85\xbf?\xc8n\x13\xcd%o?\x02\xa6,\xb7\xc2\xb6\x8f\xbff%W\xc0\xb0\xca~?9\x047\xd8\xbc\xae\x91\xbf\x91\xf9\xf1x\xfaj\x86\xbfoc1je\x86\x89\xbf\xab\nM\'~\xe0h?5\x02W\xa8\x06\'}\xbf<,\x8c\x82\xdc\xf4v?\x0e1\x05\x8c\x0c1\x91?\x95\xb6K\x1bdF\xa7\xbff\x8f\x93\x04\xbc\xab\x86?\xed\x84\x86R\xb9\x82\xc2?\x8d\xe4H\xbe\xff\xa9\x97\xbf\xb4\xd10 \xc6f\x99\xbf\x8f9\x08\xe2a\x02\xbd?\xb1\x14\x84\xc7\xb3\x7fp\xbf\x03\xd0\xa0\xf7\x00\xc1\xbf?+\x9a\xe9\x83R\x03\x9c\xbf\xa8\xe9\xdd"\x82\xfaj?6\xbe\xc5\x84\xeeZ\xaf?\xcdx\x0b\xfb\x91\x99\x99?\xbc&!q"\xa0\x90\xbfgm\xb4\xc2\x8b\x1c\x9b?\xe8\x0f-\xe3\x82\x00\x97?\xeb\xc3\xcfd\x93\x9c\x99\xbfe&\x12\x9a0N\xb9?\xa6\xb5k\x11\x96\xb6\x80?\'8\x05;\r\xfb\xb5\xbf|C\xa3\xd6rs\xad\xbf\xa0\xd7\xd0\x99=\x7f\xaf\xbf\xfb\xd6<@\xdd!\xb7?\x03\x04\xbbB\xec\xf4\xb0\xbf\xd7[n\x9f\xbc\xa9\xcc?\xb3\xe2g\xa7\xac/\x95\xbf\xa6\nkF\xd7\xc4\xa5?\x1a\x7fl}\xe7\xb9\x9d\xbfB\x94\xc9\x96\x10\xec\xb9?\xe1\xeb\x83(\xcd\xfep\xbf\x0f\xa8\rC]\xbf\xb2\xbfy\xda\xa1\xad\xa6\xe9\xc0?\x10\x87q\x08iq\xb0\xbff8\xc6\xe16\x14\x8f\xbf\xcd{\xf9\x8d\xb6,\xb2\xbf\xc0p\\\xf1\x83\x9a\xc3\xbfa\x8b\xb8O\x98\x03\x93?\xbfY\xac\x99\x05\xde\xc1\xbf9\xb7\xcc\\\xbb{\xae?6\x94)X\xea\xfe\x86\xbf\xa7\x03\xcd+RW\x91\xbf2\xae\xb6\xb8UK\xa4\xbf\xb6\x81\xcb\x82\x8aB\x90?\xe2{\xa8\x93~\xfe\xc3\xbf+\x97"\x0ex\xe0\xb7?\xf6b\xe2l:\xe9\xa7\xbfH\xfb\xee\xe3\x1d\xaf\x98\xbf\xa9\x16w\xfe\x91F\xb1?\x93\x11\x9aK\xad>\xb5?\xbc\xa9\xf5T\x90\xbd\xa0\xbf\xb0\xceK\x10P\x80\xb3?\xfc\xb6\xdc\xe1\xf7\xc7\xb0\xbf\xe3Mx\xb3LU\xbd?\xc3%DP\xdd\x86\xc6?}k\x86\x99\xe6\xa5\xa9\xbf\xb5\x16\x90}\x8c:\xa1\xbfH+&\xb2\x120\x87?Y\xc9\\\x15\xb4\x03\xa3?q\xf0f\xf6\x10W\xaf\xbf\xc0\xfd\xc8\x1cn\x9f\x98?[]\x95l\x1fF\x92\xbfc\x1d{\xef\xb5\xc0\xb2?c\xc43\xbbR1\x90?\xe0\xf9\x88\x7fcX\x90\xbf4\xd2\xca\xd3\x8e\xd8\xb2?\xed>[t\xa5\xc4\x8b?\t\x98d\xdc8;\xb1?.p\x86\x9d\xb45\xb7\xbf\xd5\x19\xbd\xde\x89\x14\x8c?\x12\xba,\x91Z\x8a\xb6\xbfd\xb2\x13v^a\x91\xbf\xf2\x9b9\xee&\x18\x8c\xbfh\xf5\xc5>\xde\xa8~\xbf\xd3\xa4]\x19<\x9a\xa5\xbf:\x83\xa9\x07w,\xc9\xbf\x11\x94y9n\xff\xaa\xbf\xbb\x8a\xd6?:\xad\xb5\xbf\xb7\xbe\xb0\xd5\r3\x94?>>&\x9d\xe4\x94\x85\xbf\xb1\xc8\xeb&}@w?\x1f:zy\x14\x00\xbb\xbf1\xe5\xf2\r\x15\xfaV\xbfgR\xea\xa3\xe7\xbc\x9f?N\x04\x11hw\x1d\xbe?\x8b\xde\xd9\x89\x87\x05\x88\xbfx-\xeb\xe59\x13n\xbf\xc8\xd7\xde\xaf:\xfa\x8e?,)t\x03\x83\xb4\xa7\xbf\x9a\xf6\xfd\xf4\xa9X\xd0?\xcfIO\xeb#\xb2\xb3?\xc3}\xd2\x1c\xe8o\xc3\xbf\x7f{{.\x8c\xc1\xc0?\xc8!\x03\xb0\xb3/\xbc?h\x8a\xc12Z\x92\xa7?\xa2\x0b\xe3\x19\x8b\\\xa6\xbf}\xea\xc9\xe0\x90-\xc3?\xc1Y\x12\xa5a\x93\x86\xbff\xee\xd5|\x86\x88\xc1\xbf\x0c\x0f\x14\xc8_l\x9d\xbf\xb0\x10\xa0F\\\xb6\xbe?\x9f\x16q\x95\xda\x98\xb5\xbf\x1f\xaaX5\xc9d\x9c?\x1b\xcf\xe9\xcb\x9b\x1d\x8c\xbf\x10N\xd5\xb0\x9b\xd0\x90?\xb6\x10l\xb7\x1a\xe9\xa1\xbf+\xe1\xffC\'\xea\x91\xbfw\x9aH\xd5\xb5\x12\xda??!\x98l\xfe\xf7\x99\xbfv&\xde\xf4\xf5n\xbe?\x03\xc2\x86\xdeH\xf3\xb3\xbf\xcc\x9f\xb9B8i\xc4\xbf;p\x89\x03?\x14\x98?\xe4M\xe5\xcb\x8d/\xa8?\xabU\xe6\xf7\x95\xdc|\xbfr\x1c~\x18ih\xa1\xbf\x19\xcc\x81GW\xe3\x9a?\x7f\x84\xf8\xae\xb8v\x99?\x93\xb0\xa3j\x97\x15\x9e\xbf\xde!\xf7W\xee>\xd2?t$7\xb9V\xb7\xa0\xbf\x80\xa0G&\xe2\x07\x93?D+\xbdb\xdb\xdc\xaa\xbf\x02\xf1\xdf1\x84\xd5\xb0?\xb6\xc8&\xb1,\xbf\xb8\xbf)\xf7l\'\xce\x02\x84\xbf\xb0Z\xe3Dq\x8f\xa4?O\x08\x16\x95K\xb8y?u#\x93,]\xe5\xc9?\x9b\x8e\xb16e\xf5\x9b\xbf\x02\xe1J\x14R\xf4\xba?W\xc6\xe5\x0e\x12\xc3G?\x89\x8ei\x85\x8a}\xb4\xbf\xadv\xfd\x06\xcd\x18\xb7?\xd6mL\xf7\x01\xd6\x8a\xbf\x83\xe3\xc6\xc7o\xcc\xd0?Jz\xff\xab\xc8a\xcc\xbf\x9d\xa8\x89\x82\xc4S\xb4?\xb5\xc9+i\x14\x1b\xc8?\x16\x98\xce*].\xb4\xbf\xa9D\xdd\x85\x07F\xaa?\x92;\xf4\x06n>\xc3\xbfz\x8c}[b\xf3\xd1?T\xc8c(\x91\xa6\xca\xbf\xbf] \x0e\xfd \xc6?\xb8\xc4B\xc8\xa3i\xb4\xbf\x1bb\xc9\xe6\x03\x87\xd3?\xaf\xd1D\xf9\xb6\xe6\xd5?\x81\x98\x0e\x81\xd4\xa8\x83\xbf\xf1\x92>\x8cE\x08s\xbf\x9e\xdc\x86\xd3\xdd,\x96?\x81\xa3\xde\xff\x1f\x98\xc0\xbf\xa6\x92-\t\xbf\x19\xa0\xbf\xdd\xc4\x1e\xab7\n\xbb?[\xfa\x87\xb5\x84J\x87?\x00t\x1c\xa8+\x16\xc2?\xe4\xa1\xb0\x80\xa8\xbf\xd5?\xd2\xae\x11\x18\xdc\xd0\xbd\xbf\x9aL\x1du6@\xb7?T\x9b[\x1eP\xf7\xa7?\xde\x88H"\x86S\xd6?;H\xf2K\xaa\x02\xc1\xbf!\xee\x1c\xa6?6\xa5\xbfs\x9b^\xff{\xc5\x0b\xbf\xfa\x17\x85\xe38H\xa9\xbf\xd5\x88\xcd\xea\xe4\xab\xb3\xbf\xbe[\xd0}\x9c\xd7[\xbfJ\x8b\xb2\xa79X\xb0?\xa3\xeaH\x9b\xc08\xa6\xbf\x16\x82\x17F\x1eC\xd2\xbfg\xff\xe6\xb2\xe4\xe3\xb5\xbf\tt\xf7\xa5\xdb\'\x9a\xbf\x95+\xc5\x86\x88?\x85\xbf\x02\xf6g\xef\xe3\x83\xa0?\x944\x08e7\xe3\x87?&|W\x95\x14q\x9b?4P\xa5\x9a\x97\x17\xb1?%`\x8f\xb4\xf0w\xce\xbf\xdc"1[\x8b\xcd\x9f?\xc4+\xadN\x8d.\xc1\xbf\xeb\xc0\x0cX0 \xc3?\x87\x92\x12\n4\xf1\x9d\xbf\xe2\xfc\x9cJo\x06\xc9\xbfS\x99\x14\x82\x91i\xc1?L\x9bJB\x9b[\xb9\xbf\xdbK\xa5\x98Si\x82\xbfe\x85}=\xc3\x7f\x8b\xbf\x08\xf7\xad$\xa7,\xca\xbfdN\xa1\xae:s\xc4?\x94\xf9\xa2\x85\xbe\xa5\xb8\xbfu\xde\x88\x86\x0c\xfa\xa9\xbf\xd1\xa2\xe2PZ\x94\xa1?\xd0\xad=\x10\x80H\xb3?\\\xb8\xe2[8\xcc\xb8\xbf\x158\x10\x08\x90P\xa2\xbf\x8e\xd9~\x1d\xbd2\xb3\xbf^\xcf`\x058\x12\xd5?\x8bv\x92\x8c0\x9f\xd0\xbf\xda\x1c.T\xf5\x0c\xbe\xbf\xacA\xe1\x95\xa0\xf2o\xbf|\x83\x01\xaa\xd6\x82\xc5\xbf\xdf<\x17\xa0 \x84\xb9\xbfo\xcc\t\xe2e[\xac\xbf\x90IL*\xc7qq?\xfbm\xb2>X\xde\xb7?\xd2\xa0Wb"\xa6\xd3\xbf\x11\xd33\xff\x8b\xa9\xb3?l\x07\x94\xc1\xaa\xe2\x8d?\x92?\xf3\xc0Q\x9c\xa6?\x0bE_\xb2\x17$\x9f\xbf\x84\x914Rz\xb2\xab?d\xc1\xf6\x17\xff\xf0\xaf\xbfo0\xc54\x03\xa6\xd0\xbf\xc6\xc1k\xc8\x9e\xd7\xcb?\xa5\x94,!\xa9\xb1\x88\xbf\x89\xbe\x12\xb3\xcdL\xd7\xbf\x12\x01<t\x92\xcd\xb1\xbf\xefYn;V\x9e\xc4?V\xd0,\n\xc3f\xae?MoX\xc6w\x1b\xe0\xbfM\xd6\x14\xe5Ce\xaa?\x92A\xe2,\x99\xc4\xba?%\x9b\xd3:x\xf2\x9f?\xbf\x0c@Y\x96\xe9\xb5\xbfUv \xbdy\x1b\xae\xbf\xcf\xbf\xf4\x1clN\x9d\xbf\x94\x11\xd1\x16`!\xce\xbf8\xba\x13<K/\xab\xbf\xa1\xe5b\xf9\x85\xdb\xa3?y\x93\xb6\xed\xdf\xb9\xa6?\x1dk\xb5\xf8\xef\xa7\xa4?\x94y\xf8h\x183\xa2\xbfU5\x81D\x94X\xc9?\xbb\xaco\xdeU\x81\xca?\xe5\xb5\xe2!\x8c\xfd\x93\xbf5\xcc2\xc0B\xb9\xc7\xbf\x14/\x98{\xa9Br?\xae\x99\xa1"ez\xca\xbfs\x9744\xed\x8a\x97\xbf\xc5\xcd\x90;#\xdd\xa8?3\xdc\xbe\xa5\x0e\\\x95?\xdd\xfa\x0egw$\xc9\xbf.<;u_~\xb1?\r\r\xefb\xbd\x7f\xb2?\xd4j\x15x\xf1\xc9\xc2\xbf\xa3P\xa7\x84\x93\xeb\x92\xbf\xb7)\xd9\xcb6\xf5\xc6?\x14\xdd\x8c:\x8d\x0b\x96?\x82D5]g\xd3\x96\xbfzMR\x83\x8e\x0f\xad?\xf6\xcdys\xb0T\xe0\xbf\xf9\xa1 \xa8K_\xc7\xbf=\xa3\xff\xa4*\x1e\x87?\xcf\x10*\x1b\xb7L\xb0\xbfn{z\xca\xe8\xb1\xaf?4\xd1VW5\x08\xa7\xbf\xa3\xfc2\x9e/\x9b\xa7\xbfRw\nQ\x81C\xa5\xbf\x1c\xcc8\xc9\xf9\x93\xba?\x84\x1b\x93\xad\xc5\xc6\xba\xbfA\xc3\xbf\xc1+\x15\x89\xbf2k\xd0\xf6\xbf\xe9\xb2?K\x0c\x83\xf5=\xbe\xb3\xbf\x9d\xf2\xd5\xb7\xf7\xfd\xc9?\xa5\x0e\xb1\xf7\x14\xa5\x90\xbf#\xc6u\x13\x98s\xaa?\xdcq\x9c\xe4\xe5Q\x8d?\xc88\xd2\xebs\xf9\xd4\xbf\xf8\xe9?\xac\x88.\xa6\xbf\x81\xaa\'\x92h\x1a\x9b?\x8c\x08.:TE\xb1?Ee\x93\x15\xae\xa8\x88?\x9f\xef\xe5\x12\x16_i\xbf\x99mK\xd6\xcaQ\xc0\xbf\xe3y\x93\x19\xaa+~?\xfd\x07\xeb_>\xca\x8c?\x1b\xd7\x83\xfc\x84M\xab?\xdd\x1a\x9e\r\xb2Y\xb5\xbfSMb/\x84\xfd\xd0?\x8b\x89\x8f\x1eE\x8b\xc8?"}>\xaa6\x0f\x9c?\x0f\x04\xd0\r\xc2\x1e\xbd?\xd2u7\r\x0cE\xb6?\x9e\xc6\xd3O\x7f\xc3\xd5\xbf\xc4U\x95SIE\x87\xbfQN\x8d\xa9\xb1\xcb}\xbfZS\xba\x969@t\xbf\xee\x82Nv\xd8:\xb6??\xc8|i\xa1"\xc4\xbf+>\xb2\x18\x13\xbd\x9e?s\x0fX\xd9#\xae\xc3\xbf\xbb\x11\xbb\xbe`.\xb1?\xd11L\xa8]0\xb4\xbfQ8\xc5\x0fQ\x8a\xc1\xbf\xa1\x95\xb3\x13\xaa\xd0\xa9?\x8d)\xa3.l\xe8\xa6?\xa7\xaa\xc5\x95\xd3\x8a\x9b?\x1b?\x83\xf8\xe9\x8e\x91?\xd5\x9cE\x95\xecQ\x84\xbf\x88\xf8{\x02\xe8#\xb8\xbf0\xc2\xac}\xc8\t\xa4?\xf1\rn\xbf\xd3/\x86?\xf0\x04;o\xa0\xa2\x8c\xbfe\xf2\xf9\xfeGYF\xbf\xb9T|\xa7\xe5\x82L?C{m\xc0\x83`l?\x0e\xf7\xb2\x1e\xf3\xf5\x92\xbf\xdd@1lr\xe2\x1d\xbf\xa3\x9aA\x97>}m\xbf%\xda<b\xa79=\xbf7)\xc3\x19)4\x81\xbf<\xedZXd\x01\x8d?\x03\xc9\xcb\xaf-g\x93\xbfV2\xe2O:\x96w\xbfA\x08<\x01)dp\xbf\xef\xa0\xfe\x91Q\x17U?\xf4\xc3\xa6\xf6\xe1\xb4\x82\xbf\xb6n\x1d\xe8W5\x8d\xbf\xd9p\xae:\x9d\xc9\x80?\xa8qt\x01\xe9\x18\x82\xbf\x15\xc0\xe0\xc4\x9d\xf4U?\xfak\'\xdde|s?\xea6\xe7W=\x9eY?\xfd\xc7\xdb\xa4\r\xc7\x81?z\xa6\x06-\r\x01p?\x988\x149\x9a&\x86\xbf\xa9\xaf\xd4\xa8\xd3\xb8\x90\xbfqx\xda\xa9\xfa\xe6\x87\xbf)q\xc1\n\x07-\x84?P\x9c\x19F\x10\xb9\x8b\xbf\xef\x07\xbf4\xa9\x94+\xbf\xe5p\x9a\x96\xcd:\x95?Ux\xa1\xc7!\x15t\xbf\x00\xf0/\xd4\n\x1b\x82?\xb4|\xb3\x96|\xa56\xbf\x1ca\x9c?p\xb0\x7f?)1\x9d4k\xdb\x90\xbf(.C\xa9W\xfb\x7f?`5 g\xb5\x83v?\xba6\x06;\x96\xa4\x81\xbf\x85.!\xb9\x04\x13\x82?c\xcaz\\\'\x9fy\xbf&g\xf2V0\x8du?\xec\xd5U\xdb)\x8b\x94?\xd2_\\\x9c[8\x83\xbf{\xa3\xc0\x92\x18\'\x84?\x936=!+\xc7\x8a\xbfP\'\x08\x0e\xa1\xd6\x87?\xa8\xfe\xd6k\xd6\x98|\xbf\xb9\x02@e\xdb\x8c\x82?\xdc\x86\xceP\x82\x0c\x82?Y\x88\x91\x02\xa8%T?\x06\x15\xd8\xa1#\xd9\x98?\xc7k\xdf\xee^\xe9\x92?W!V\x18i\xb4`?\x1d\x19G\x87\xce\x18~?\xa7\xce\x86\xa7\xab\xe0v?\xd8\xc7s\xb9n\x81\x8b\xbf\xb8\x8c\x00\xba\xa6\xb5h\xbf:Q\xf6g\x16\xe7}?\x97\x8eK\x01\x14\xc4t\xbf\xd7\x08~hr\xdfb\xbfJ2\xf1\xf9\xf1\xe8{\xbf\xc54\xc0G\x83\xdam\xbfL\x9c\xcd\xfb\x14\xb4\x83\xbf\xabz$t\x92\x0fm\xbf+R\xe6\xf4/\xd5\x88?E(\xda[\x14N\x9a\xbf\xcc\x04g\x7f\xa0:w?0\xc2`\xacv\x93\x8e?\xba[\x88{<\xc0\x95?\x04\x05I^\x98\x03\x8a\xbf\x17\xd6S$\xdeIl\xbf<\xfaw~$\xf0\x95\xbf\x95\xdel\x97$5`?\x0b\xc4.\xf7|\x19\x88\xbf]\x93\xba\xa6@+f\xbf\x92\x99\x96\xd8-m\x8e\xbfK;\xbf\x8c\xcal\x83?\xd0o8\xba\xe9k\x8a?\xb5\xc6\x90\x03\x0b\x89]\xbfI\xcbl\xbc\x1d\xbc\\\xbf\xf3\x8b,&D5\x7f?h2\xdb\x8ed~]\xbf\x81\x17\xaa*\xc9\x7f{\xbf \xfe\xbcNm\xcb\x8a?\x9eIzU\xe8)\x87\xbfo\xe2\x1dF\xcf\x00\x81?\x9f_\x9f\x93\x91\xbaz?9\xec(r\xd0\x91\x85?N\x05\xdfM\xdd\xc7\x84?\x0b\xbb\x15\xac\x9d\x87\x9c?\x0f:\xeb)\x0f\x8dd?\xad-\xbf\x81\xadEa?<\xebE\x95\x07Q_\xbf\xf2H\xd2+\xa5\xfcy?\xf3\x8f\xa1\xca\x8f\xe1p?\xf2\xde\xdcf\xc9\x11\x83\xbf\xd7R#m\xd9\xb2\x88\xbf\xd7X\xbf\xd2\xcd\x19I\xbf.Z\xc2\xbcP)\x8c?\xb3wz\xf5\x85#b?\xfd{\x1c\xd2\x9cVh?\x03\xb8c\xfe-\xb1e\xbfp\xa5\xf1\xa5\x1e\xb8\x9b?\xc3\xf5\x08M+m\x87\xbf\x9c\xf3\xbe\xbf\x89\xa8\x95\xbfT\xf5W\x80O\xefX\xbfQ\x1c\x08V\xf6)w?\xee\x96\x87/7\x80\x83?\x83\xa5.\xdbz\x95T\xbfY\xa6*Mc\xd7\x88\xbf\xee+\x04\xe8\xa2\x15=?\x18\xf9H(e\x7fg\xbf\xf1\xf2\x9f\n\xa3\x0c\x85\xbfh\xe4\x8a\x7fBLy?\xf2@\xdd\r=\x11y?/\xe5\xe9\x0b\x13\xe5\x94?\xde\x9f\xa4"#|\x8c\xbfl.\rg\xb9FM?E\xf4\xf8t\xe56\x84\xbf\x8c\xe8)\xb3\xc8;\x88\xbf\xe2\xd5\xf8\x8f\xb44\x88?\xbe<\xd5\x1bCm{\xbfH\xae\'\xaa\xdb\x19\x84\xbf\x03\x05\xc5\xeb\\\xe9k?\x00\xcdPS\xcd\xbbj\xbf\xc8j\x10\x19\xd7![?\xad\x0b/(\xa1\xe6x?\xb6P\xefo<\x8dP?ld\x95\xdbH\xeeS?A\x96\xd6\x98\x99#w?4\x13\xe1\xa7\xd1\xe5\x87?\xc2\xc3Ul\xf7>\x95\xbf\xd3(\xe4F\xed\x0e\x8a\xbf\xe6\xd17M\x841\x92\xbf)%\x12\xfe_\xd6x?\xd8btW@\xd3{?p9\x8b\xce\xc1\xac\x87\xbf\xeay\xe0\x894es?\xf6\xc8\xf1\xcb\xb9\x0c\x90?\xc0)E\xa5)\xaf\x89?`\x1e\xfee\xb0w@\xbf\x9e\x92\xf6\x81\xcc/t\xbfx\x7f\xc0\xd2|\xb5z?+\xfe\xd0\x8fO\xaa~\xbf\x94\xecV\xack\xe2\x1b?\x86\xbf\x01\xadJ.G?\n\x93]\x96a\xc4q?\xb5\x119\xc8\xc1:b\xbf:\xadl\xca\xae\xef\x90?\x85f\xa2\xd6\xbaG\x95\xbf/\xd5K\xc6:5\x81?\xff\x06\xad$\xfd)7\xbf/\x1d\x827X\x80W\xbfG\x03w\' \xab\x8e\xbf`\x01{`\x9b<w?\xc3 \xcd"\xaatF\xbf\x04\x1a\xb0\xc8\xf1\xa9a?\xef\xaf\xfa\x8e\xea\xd7\x88?\xda\xc7\x96\tK<q?\xaf\x7fV\x80t\xe5i?\x9f\x82/$\x01\xfck?\x9eD\xecP\xeb]m\xbf\xde\xc8\xa4\x10H"\x8e?\xf5\xcb\xe6\xb0\x8d\xf3I?l\r\x885\x82;\x87?\x92\xe4\r\x83(\xf8a?d\x04\x80\xc9\xe4?a\xbf\xc1\xc1\x82N\x87Vv\xbf\xe8\xf4a`\x05Rq?\x1c\xc8\xc1\xe3!\xf6\x8c?Q\x9c\xbd\xc1#6\x90?\xd3E\xa6\xb4\xb7i]?\xfd\xbe@\xddq\x8dA\xbf\x9a\xed\xa0Q\x01k\x90\xbf\x05\x05\xe7\x1dE\x1aY?\xf4PX\x80\xdd\x13\x81\xbf\rZ(H0\xecw?8!\x99`H\x81\x80\xbf\xc46\xf5\x9f\x04\xa6v\xbfg.\xb0\n\xd7\x96i\xbf\x13\xcc\xaa\x9a\xf6\xd5\x96?Y\xa0\xb1E\xd1\x0f\x83?\xc8\x91\xd1"\x95\xf3m?\xb2\xa3\xa3\xa0\xc1\xe6;\xbfx:\x9aq\x01\x8c\x80\xbf\xac\xc0K\xdb\x87\x04]\xbf?\xc3\xca\x16!\xa4z? [xb@\xb6|?=6\xca\xf9UEY?\x91X\xb2\xd9\xb0?z\xbfe\xf7\x9e\x8f \xfa\x87?\xe3\xb7-\xd9Cl\x81\xbf}\x0f\x14\x9ev\xfby\xbf\xe5@a\xa6\x9aa\x7f?\xfc\x01\xf4\x84[fv?\x99\x10C\\\x0fpP\xbf\xf1\xb3\xb3\x02\xb7\xcfp\xbfW\x9dr\x12\x94\xc9i?\xdc\xc2\xd4\xd5\xb2\xc8\x80\xbf\xa7\xd96\xa2_\xd6\xaa\xbf\xed\xfa\x1d\xab\x13\x98\xb8?\xb3\xa3\xde6\xed |\xbf\xcb\x98\x19sqt\xc5\xbf\x95\xcf\xa2\x03X[\xba\xbf\x0fu\xeegV\xbb\xb8?\x19\xc0Z:\xfd\xa6\xc9\xbf\xd6c\xe0\xf1\xe9\x89\xb6\xbf\xf5h7\xea*\x05\xaf?\x00\xaf\xcbX\x82\x8f\xc0\xbf}\xb7\xf7\x87\x15@\xa7?\x13^N\xd1\r\x8f\xb4\xbfM]i\xbe\xb6\xb1\xb1?\x18\xbb\'\xda:8\x7f?7+\xc7f\xd0R\xbc?\xd2\x06M\xffbf\xaa?{>\x87\xf9\xe1\x00\xb1\xbf\xc8\x0c\x1d\x91~\xfd\xc4?\xefF:\x9e\xb5+\xd5? \x05\xc5\xf8\xcb\xf1\xc4\xbf\xfd\xc5\xe1\xa1d\xa4\xa3\xbf\xe5\x0f\x89\xa0\xa8\xfe\xb0\xbf\xeb4\x03vg\x1a\xb5\xbfs0l\xb2\xd1_\xba\xbf\xeb\xe1Ym\xcb\xc2\xa4?{{\xabS\x87\x13\xc5\xbf-]\x08\x08\x18\xbe\x87?\xa2\xb1@\xad\xa8S\xb9?\xc2\xc4oF\xee\x10\xb5\xbf\xc4\x1b.\xe6rk\xb6?q2>\x85\xde?\xb2?\xff\x00\xf50\xe6:\xb9\xbf\xddl\x9c\xe9A\x9a\xb7\xbf\x0e\ndEs\x08B\xbf \x0c\x81FD\x14\xcf\xbf\xf0\x00gX\xe3T\xc9?m\x1f\xce\xc90\xb4\xb5\xbf]\xd0\x1b\xe1!\xd5v?\xeae\x01\x9ag\xc7\xbb\xbf\xa9\x88\xdf\'\xb8df?\xb0\xa57=\xa4\x14\xc7\xbf\x8f\x8f\xe0\xd7<X\xd1?\xd3e]y8\xcc\xa7?\x12\x8fP\x19"H\x98\xbfQ\xd52\xbf;W\xb7\xbf8\xee\x07\x8bE \xba\xbf\xa7H\xa8\xccR\xd6\xa6?\xf6_Z\x83N#\xba?\xb4\x07\xe3\x18Ant?\xd5\xcf\xa0\xbe\xdf\x02\xa7\xbf[\xb0\x1a\x14\x7f:\xac?@\x80\xf6\x8c\'F\xac\xbfN\x06x\xbe\xf9~\xb2?7\x1a\xb3+\x8f\xb4\xa9\xbfCl\xab\xa7\xce\xd3\xbf?\xcf\x7f\x8cwjY\xb3?T\xc7i\x89\x17\xd2\xa0?v4\t\x9a\xe2\x1e\xc4?\x9818.\x81,\xa0\xbfB\x89~\xa9\xbcO\xa0?\xbf\xbdJ.\xe5\xde\xac\xbf\x07u\xd5\x06\x8a\x88\xb5\xbfn\x932\xbbv\nt?D\xc4B5\xad\x1e\x81\xbf>k\x7fRA>\xa5?\xbb7Rp/p_?\xedW\xac\xb8{\xc8\xab?\xb0!\xff\x04\xbeL\x99?\xeb\xf1P[\xceg\xc1\xbf*H)\x9d\xfc\x88\xc2?\xcb]i\x9c\xbf\x04q\xbf\xacE!G=X\x83\xbf"\x0f\xc5\x0f\x8e\xda\xa8?\x14\xea \xbf\xf6\x05\xb3?>5\xf3\xe3\x0f\x87\xc0?m\x99\x9a\xacE\x0f\xc9?F6\x0b\x83W\x19\xbe\xbf}\xc6nHG\x1f\xc4?\xa6G\xbfj\xf5^\x9c?\x9f,z\x03\xbf\x93\x82?\xd8\x14\xb4X"\xc3\xb4?\xd9\x8e+fjF\xa8?\x8f\xc1\x84"\tIz?\xac\xdf\x84\xc9\x18\xafp?\xc1\xf7\x83\x12\x88U\x91\xbf\x9e\x0e\r\xf3\xf7\x18}\xbf6\xcf\x9fT\xe3\xef\xcd?\xbb\x8f\xb6l\xc0\x16\x83\xbf\x8f\xee\xc3\xbe\xeb\xe2M?\xed)9\x84?\xc4\xa5?\x80\x1d\x1f\xf9-\x1d\x91?M\x03\xbb\xc6RJ\xb3?~\xaa\xb7\xb4\xc1r\xb5\xbf\xa7\xdenyM\xb2i?\xfa\x87\xd0\x1aU\x19\xc6?\x0e!\xedv,\x0e\xc4\xbf\x8d\x9bI*D\x04\x80?\xdbl\xea\xbb-\xf5\xa8\xbf\xd4\xf6\xa2\xbeAX\xc5?V\x14j\x82\xb7\xab\xc0\xbf\xc8\x99\xe5\xe9\x8fS\x86\xbfl\xe2\xd8\x8f\xa7h\xb2?\x0e\x92\xa0l\x18\xa8\x82\xbf\x80\xf1\x15W\xc8x\xc8?\x0cp>\xcdW\xdcz\xbf\x1fa\xf3?\xdc\xd1\xde?\xab\xdb\xee6\xf10\xbe?;\t\xd7&\xb5S\xa0\xbf\x8dPW?\xcb\x93\xb3?\xdc\xda\xb9\xf7\xe5\x8e\xaa?0\x05_]\xe3\x9a\xa1\xbf\xb6\x83\xbb\xd4{@w\xbfh\xab\x1d\xd4!y\x85\xbf\xcb\xfa\x02\xcdM\xa8\x93\xbf\x7f\xae(E^\x8f\xaf?\xfd\x00\xba\xeb\xc4>\xa0?\xaf\xa2\xc2\xbd\xc6\x1e\xc5\xbfx\x17\x8b\x90\x8a{\xc5\xbf\x19\x94yB\xc0e&?wI\xf9\x0cdB\xc2?\xea0\xdd\xce\xaf\xc0\x96\xbf\xf4\x16Qly\xea\xd5\xbf\x86v]0\xc7\xed\x9a\xbf\xb7><\xeb\xf3\x00\xb4?\xb4\x12.T!\x9b\x9c?\xe7\x02\x1cg>[q?[\'{\xb5\xc0\xaa\xb7\xbf\xd7\xac\x8b\xe7\x92\x8bu?\xb4\xa56r\x8e\xd8\xc7\xbfPT\xc3\xe3\xba\xe3a\xbf\x0b\x0e\xcb\xb1\x0e\xa9\xa5?\x9c]\x11r\x91s\x9e?\xacc\xea\xf4~\r\xb0\xbfL\x87\x1c=&jh\xbf\x0f\xa2\xbbA\x9e9\xab?`\xd3\x9dm\xec\xa0\xb7\xbf\xe3w$a\xfb\t\xa8?.\xee\xb3\xb3\xdd\x03\x9b\xbf\xb4\x10|\x92\xa1\xe7\xab?\x87u\x91\x13\xfe\x94\xbc?\xf3\xf3\xa6\x98^;\xa2\xbf\x94\x92\xb0~\x81\x9d\xa4?l}L\x18\xc4\xd4\xb9\xbf\x91\x88[\x91\x9f"\xbb\xbfQ\xfa\x8d\x8d\xa8D\xa6?\xb1\x97\x18\xaf\xeb\xba\xb5\xbf\x03\xab-\xa9jw\xb7?\xe4w\x9f8\xe0=\x92?\x03\xe8G\xde\xc3\x19\x91?\x0f\x11\xee:j\x81\xbb?:8\xaahnE\xa5?\xe9E\xbb\x0c\xbf\xaal?\x16\xb0\xc0\xc6d\xed\xc9\xbf\xff\xdaS*\x9a2\xc0\xbf\t\xa9\xdf\xeeU\xe2{?\xa6\x90\xecJEcy\xbf\xce\x81\xb7\xfe\xe7\x05\xc1\xbfV\xd4\x9f\x8bl\xae\xd1?VT`\xf5\xdajz\xbf\x92o)\x92iU\xb2?\xbe\xc0(\x04\x8c\xde\x82\xbfr\xf0.\x10\xcbk\xa9?\x82\xb3\xab\xd0\x9c\xda\x9b?x\xc6\xa2\xdf\xba\xaf\xa5\xbf\xb6\xe8$%\xe6\x99\xcc\xbf\xde\xe4I\xcf\xa6\t=\xbf\xccex@\xd6\xbby\xbf\xeaP\xeb\xd36%u?\x1c\xdc\x05\x0b\x8a\x83\x85\xbf\x9e\xe2?\xd94E\x92?\xe0\x80\x8d\xb9\x1bFP\xbf5\xf8_x\x81\x87s?\xee\x81\xb4\xa1\x84.W\xbf\x067\xdb\x82\xf4o\xcd?\xc0\x87\xd6\x81\xa5\xe8\x9f?`\x05\n\x13q\xf9\xb6?/\xa8\x8d4\xf1\xde\x9b\xbfT\xda\xa3`w\x9cr\xbf/\xab\x1a\xb5\xd0\xaf\x88\xbf\xad\x94]\x80\xeeJ\xc0\xbfRO;\xb2\x97w\x87\xbf\xae\x99>\xf9\xb8~\xc7?K\x9a\x8a\x12[\x11\x89?\xe1\xebp\x8e\x13a\xc6?Kx\xdct\x9fW\x81\xbfF\xb9S\xdf\xe6"\xa5\xbfW\xa1:\xa6\xb2\x1e\xb4?o\x96\x1a\xe7\x17\xc2\xc4?*\xf3\xf8\xb84\xed\xb9?\xfa\x0c|\x96\xa0S\xb2\xbfe\xbb\xa5\xabwo\xb3?g\x93Q8\xae\x81\xbf?\x9a*\xca\xd5\xa8 \x7f\xbfe\x00j\xb4\xcf>\xaf?\xe4\xe1`\x17\xf1\xfe\xac\xbf7\xaa\x9d\xb8<x\xbf?\x7f\xe8\xc517\xc5\x98?\xec\x0eZ\xc7\x9fq\xcb?_\xd9\xc6\xdd"6\x90\xbf\xaa1\xb0s]\xf8\xb9\xbf\x1d\xe6O\x07M[\xc6?=\xff\\\xa3/\xff\x8e\xbf\xe2\xea;\x9a{\xc9\x8d?\x1b\x1a\x89\xe1\xf0b\xc5?\xe8Tf:0\t\xa0?1\x9f\xe1\xb8\xea\x80\xa6\xbf\xc1\x81^\x90(\xdf\xb3?_\x95P\xd5]\xdd\xb0?\x7fJ\xd9>w]\xb1?\xd8p\xc7>\xa5\\}?\xa9N\x92\xdb\x877\xb2\xbf\x8e:`\x86M\xc8\xae\xbf\xe9\xc7[@(Z\xb8\xbf\xaen\xb4Ic\xa3\x8d?\xf2\xdf}\x83\xec\xbf\xbc\xbf\xa0\xab\x1e\xe1n>\xd3?\xe2\x17L\xf5o\xcc\xda\xbf\xf5\x10\xa5\x1e\x93\x05\xa0\xbf\xf9{(D\x8di\xc5\xbf\x9b\x9e\xf3\x1e?\xd5\xc1?\xe0\xe1\xe1\x8d\x08\xeb\xb6\xbfYs\xf1\xb6e:\xb2?\xf2\xeaO\xf6\xf0\n\xd4\xbf\x1d\xbe\x11\x1d%\x1f\xd1\xbfK<\xe7\xf0y$\xb7??\xdf\xcdx\x95\x8a\xcb?\x90<&t\x88(\xb6?\xdd\xc1\x9aL\t\xba\xaf?\x94\xfa\x18\x14\x8b\x1c\xb9?\xcd\x8a\x1c\xaa\xed{\xda\xbf\x1ac9\xe9Ns\x89\xbfA\x03#0@c\xd2?\xd7\xaao\x98?I\xd2\xbfi\xdam7\xbe\xf4r?\xd4d\xa4D\xeeu\xba\xbf\x14O\xe4T\xea\xc5\xa8?ud\x9f\x1a$ \xc2?\xb5\xda\xaf\xddv^\xb3\xbf\xfdJ\x11[\x1f\x11\x91?\xb6\xb1\xe4\x8d\x91\x17\xa8?n\x1a\xc0:9]\xb0\xbf\x7f\x0c\xbb\xa6\x91\xc6\xcc\xbf\xdf\xd9\n6\xd1\xf9\xae?\x03\xa6\xd6\xf5\xd7\xfd\x81\xbf\xb7<\x8dF\xb2D\xd6?\x80\xc2\xca\xf55@\xad\xbf\x93\xa0\x87\x06\x827\xad\xbf\x94Y\x97\xda-\xbb\xad\xbfd\x07,@\x86\xac\x98\xbf\xd9\x92\x84\x8e\x7f\xfc\x91?7\xaeZCh2\xc3\xbfyQ4\xc2\xd5D\xb6?y\x87"\x8b\xd15\xb0?VL\xca9\xe3hw?\xca\xbe\xd5\x00\xaep\xcd\xbfl\x10^*1\x13\x94?\xa1\xa1\xe6\xcc\nZ\xc4\xbf\x10\x9d\x8f\xb3\x05\xae\xc3\xbf\xcdBn\x8axY\x99\xbfj\x12\x9eH\x83t\x81?\xf0ML\xf8=\xd8\xb2?\x01r\xf2\xb2g\x86\xca\xbf\xb4\x94\xcfP\xb80\xb5\xbf\x11F\x16\x0e\x94\x8cr?\xce`\xbf\xc5\x8a^\xc5\xbf\xd6\x985\x1a\xd0\xa8\x7f\xbfo\xde \xcc\x83A\xa6\xbf\x0ep/t\xfe\x97\x98\xbf\xfc\xf3K.\xaa$\x98?\x1c\xcc\xc0\xba\xfa\xd7\xa0?\xc8l\xa3\xe2\xec\xc2\x84\xbf\xeb\xf95p\xfb\xc8t\xbfuu\xbaG\xbf\x94\xa9\xbf\x0fv\xba\xe7b\x8f\xc2?\x85\xa7bR.$\xa5?\x94::\xd6\xfa\x8e\xb9?*\xe7e*\x17R\x9f\xbf\xa3\x94\x848\xd8 \xd6\xbf\xabCh/\xa9x\xb7\xbfj\xd5\x1bh\x9f\xcf\xc3?}\xa9\xbfS\xb6\xc3\xc0?\xb8\x08\xf8Qg\xf4\xbe\xbf+:\x80\xc2\xd21\xca\xbfk{\x0e\x80\x90\xcf\x94?\x92\xc5n\x97\xabe7?x\x9a\xc6\xe0\n\x01\x93\xbfS;\xa3i\xd5\xaa\xac?N\xe3\x90\xe9\xee?\xa0?\xe5t\xa2\r(\xfd\x93?^\x1b\xcd\x809\xc4\xd9?\xb6\xe9\xb7\xa0\x00=\xb3\xbf\xef\xc7\x94V\x93\x80\x91\xbf:\x17\xe7@E\x84\xcf?\x0b\xa0z\x83\x0f\x9e\xa4\xbf\xd1\xcd1AM\xb5\xc1\xbf\xbe\xf4\x90\x15\\3\x91?\xcf\x18\xdf%A\x13\xbf?\x97\xe3Q\x1f\xa6-\x9d\xbf\xce\x19\x14\xcb&P\xcd?\x8e:"\xb2w\x88\xac\xbf\xb7\x12\x01\'\x7f\xfc\xb4\xbfc\xc3\xd2M\xef3\xb0\xbf6\xff\x07\xf9:\t\x7f\xbf\xfd\xaayy4$\xc2?\xc2a\xea\xc6\xdd\x90\xc5\xbf\xfdl\xc2\xb8"\x9d\xba\xbfW\x17\x9c-X\x8e\x89\xbfr\x91\xfa\xe5\x12H\xaf?U\x1b\xd4(\xa2\xe2\x8f?*\x97c\xa1Y\xf4\xb3?\xfb;\xaa\x1cw\x07\xb2\xbf\xf8Y\xca=\xfat\xd7\xbfmh\x16\xf2\xe0\x96\xbf?\x95\xed!o\xc3\x0cy\xbfHz"\xec\xde\x1f\x8c\xbf\x96\xfe\xfbX\x08\xdb\x97\xbf7\xe4\x06\x18k\xd8\xb2?A\x8bKCt"\xa1\xbfZ\x9a\xa2y\xd1\xcd\xcf\xbf(J\xba\xf2=\xec\xad?a/\xc4\t\x00\xdd\xbf?\xc2\xfa\xfcN\xf3\xc6\xa0\xbf\x0e`,tc\x8e\xbe\xbf[B\xd6>\x1e\x98\xc2\xbf_^0\x85\x15\x9a\xd0\xbf\xac)\xbe\xf8\xe0d\xab?>-\xa3\xca\xc7X\xc3\xbf\x1bp\xd9\xc4\x9e"\xa2?\xd0R\x0b\xb7\x82\xae\xa0?\x9bEZ\x15\xabJ\xba?1\xaa\xf0\xfd\xaf\xba\xb4?\xe8\xe4/\xd2\x9d1\xa9\xbfCO\x0e\x02\x1a\xdf\xc2?\xd0\x0cW\x89\x89~\x87\xbf\xd2\x1a\xa9\xf8\x193\xca\xbf\x96\x8c\xe7SJS\x9a\xbfBo\xab\x0ff\x9a\xc6?\xd91\x1d\xf8\n\xcf\xba\xbf)\x1aJs\x9dum?\x90\xf7\x85\xec\xf8\x94\x98?#\x1f\x10\x18\x17[\xbe\xbf\xf7fMt7]\xc8\xbf#\xed:\xc6\xad\x86\x9b\xbfJ\xc0\x8du\x18X\xa7\xbfV\x07v\x80\xd3]\xa8\xbf\xa1h\xdd\x95\x08<\xbc?\xc6\xf2\xc3\xac\t\xcb\xa5?\x0bcU\xcb\xebB\xb0\xbf6vr\x91\xa0\xab\xc2\xbf\x06\xcf\xd5\xe8\x8c\x13\xc7\xbf\xa5\x82`&\xd6u\xad\xbfP\xdc\xef\x9c\x1e~\xc2\xbf\xc8,\xf4;\xde\x02\x95\xbf\x16\xefhMM\xb9\xbf?S\xb6x\x9a\xad\x80\xda?\xae\x9bIg\xf0\x8d\x96\xbf\xf6{O\xd5r\xec\x9c?\x8f\x8a9:\x8e\x1a\xbd?\xc4\xb3\xb0"\x00\xac\xce\xbf\xdc\xfd\xbbE\xaf\x03g?\xc8\xc7\xc3\x0f\x927\xb6?\x02V\xe8\x95\x06\x04\xbe\xbfy\xd1\x8e=\xd5\x8d\xd1\xbf+>\xbf\xab\xe3\xc7\xa9\xbf\x0e\xf0X\xee\x03\x86\x9a\xbf\xbc\xd8\x9a\x02D\xa3\x94\xbf\xd4\x00)Ua\x1c\xbf\xbfW*\x8b\xe5\xbf\x94\x8e?%\xd7t\x00\x87X\x83\xbf\x91\xbe\xadB\xa0\x18y?\xf8R\x96\xd9\xca\x89\x8e?\xc9BE\xb5@\x06\x86?T\xc8Z\xfc\x07\xb9\xb7\xbf\x0c\xec\xb0\xb0&\xc6\xb3?\xd3\x1b`q%\x8f\xbf?R\xb9\'\x94\rR\x8e\xbf\xea\xe0\x94\xe2y\xc5\xa4\xbf,\xcd\x07\xfd25\xbc?\xb9D\x81\x8f\xa8\x9d\xb0?\xd1\xd0\xb5\x16T\x8e\xac?\x004\xf4Ec9\xbb?\xb6\x83\x96\xe3\x81\xc7\xd4\xbf\xd1.\x86\xc1|\xd6\xbe?\x1c\xda\x11\x1e|B\xa2\xbf\xdb\xb6&#S\x13p?\x16\xf9hbR\xc1\x8a\xbfd\x1a`bd;\xa4?\t\x01\xb9\x04e\'\xc0\xbf\xaa\x9c_\xef\xc9\x9f\x88?\x18u\xf9\x18\x90\xf1\xd4\xbf\xc8*\x8a\xb6l{\x8c?\xffs\xc9w\xc8_\xc1\xbff\xd8%\xc5#m\xb3\xbfg`}\x14Y\xd3\xa0\xbf(\x92\x81\xb3\x93\xbf\xa7?;EW\xcd\xea\xc6\x90?3Pf}:\xe5\xcd\xbf\x88\xb5\xeag`\xae\x96?\x03\xc8I\n:\x13\xc8\xbfn\x1c\x8a*\xadD\xba\xbf\x85\x12\xc3\x03L\x93\xb8\xbf\xac\xd29\xc3\xf1@\xb4\xbf;L\xa3\xa2l\x13~\xbf\x93Fe\xd6\xc2^\xd6?\xfd\x8e)\xd0\x08\xf9\xa8?\x84\xc4>#\x84\xcf\x93?\x7f\x85\x03\x9cg\xc4\xd2?\xc3p\x0cA\x86\xe4\xa7?\xeb\x0f\x8b\x85\x89\x0e\xc5\xbf\t\n]G\x8d\x99\xc2?.!\xf7vT#\x99\xbf\xf19\xbe\x99\x15\xc7\xa0\xbf\xb8\xac7\x16\xce\xab~\xbf\xd4\x1f\x91>\xe9\xb5t\xbf\x0bV\xde>\xbe\xd3\x90?\xa7\xf9j`\xdf\x87\xb1?\x9b\xadh\x88V\x84\x9c\xbf\x97U\xcf\x87D\x17\xc1?\xda\x8b\x92\xd7\xa6\xd4\xb6\xbf\x93\xe7\xfcMr[\xb4\xbf\x19\xa2`Y\x05\x88\xa7?6ai\xd5k\xa1\xa6?\x87!\x94\xb4\xcf\x08{\xbf"\xaf\xc1\x86\xb1\x90\xb0\xbf\xeb\x84\xd6\xfd\xfct\xa5\xbfT@\x8c\xe5=\'\x99\xbf1\xcf\xf5(\xcf\x11\x9c\xbf\x82e\xc1!Ps\xae\xbf\xde\xe3^P\x9b\x8a\x87?\tR\xbd\x92\x009\xb1\xbfB=\xb3x^V\xb7?\xee\x03G3\xd2(\xaa\xbf\x1c\xcb\xc9\x13\xae\xd9\x9c\xbf|\xca\xfc\x08\x91\xe9v?]\xba\xf4"\tE\xa9\xbf[\xacq\x04\xa4\xfe\xc0\xbf/\xbed\x8f\xc8%\x9a\xbf\xbb\xa5\xe7\xad\x0f\xe9\x94?\xe9\x1c\x7f\x9e\x7f\xe5\xa6\xbf\x1e=\xcfY4\xea\xc4\xbf\xcd\xbeN\x88T\xe3\xb8?\xd3A\xc7E;\n\x99\xbf|\xea\xb0\xaf\xc4c\x96?:\x92a\xaab~\x95?\xa0\x08\x8a\xb6[\xd4\xa3\xbf\xe4X\xd1\xdb\xd8\x8d\x82?\x0e\xe0j\x99\xae\x0c\xc9\xbfP\x13\xeeVg0\xc0\xbf\xb2mu\x002\xd5\xb9?\xceA\xf7<:z\xaa?\x81\xa9\x04\x1aR\xaa\xa6\xbfQ\xe2\rq`\x14\xad?:z\xa5R7\xe2\\\xbf\xe5R\xa5\x8eJ\xa6\xa2?\x9b\x80\x04<@J\xb1\xbf^\xae\xe7\xa8\xdd\x97\xb9\xbf\xfe\xa1\x0c\xd7K\xdb\xc9?+\x15\xd1\x19A\xe8\xad?_\xb1\xf6\xa8\xfb\x12\xb5?z\xbc(;\xce\xe6\xd8?\xdbj\x85\xb3\x9f\x1c\xb0?YfoI\x81\x83\xb1\xbf\x17\xec\xa6\xfe\xa8a\x94\xbfa\xb8\xaa&z\xbf\x92?\x98\x8e\xc47(J\x91?=\xffc\x94\x9e\'k?Y\xc2\xa8lM\x1bq\xbf\xc6\xd4\xca\x18\xac\x12\xc1?T\xc0\xb2\x8d\xc1\xff\xba\xbf\xcd\xab\x96o\xe4I\xa9\xbf\xe3\xc6\xe9\x8d>\xc8\x97?\x19\x98w\t\xbd\x19;\xbfSs\x00v=F\x95?8\xc2d\xc7n\xc6\xc1\xbfH\xec\x88)J\x1a\xc5\xbf\x9c\n\x98\xd9\x87\xb9\xa0?\x16w\x1c\xfakC\xb1?\x8d=KD\x83\xe2\xa2\xbf\x90\xfd&\xba\xc6\x06\x90\xbfD\xcbF\xecE\xd1\xa2\xbf\xde\xa6\xe1\xb8\xd0\xa6\xcc\xbf\xd4}K\xe0\xe6\xeb\xb3\xbfu\xef\x9cp\x880\xa6\xbf>\x81\xe9\xba\x16\xee\x92?93\xae\xe5:\xf3\x88\xbf\x1a\x01\xbb\xebA\xdcd\xbf\xcaEWY\xb1\x7f\xd7?\x8f><\xa2FW\xb6\xbf\xd8D\x04\xed\x85\x01\xac\xbfzF\xa7f\xe9D\x96?\xe6\xa1\xc8l\xfa\x89\x83\xbf\x8f\x11\\4\xe3C\xb1\xbf}nE\xe8q\xddg?\xb5\xbfxp\xa6\x84\xc2\xbf\xf2\xf8\xae-3\x81\x96\xbfS\x18\xba\x9d\x9aJ\xc4?\xf5d\xc3\xd7\x0c\xfe\xb7?\x8cNQ\xddr\xfbc?\xe9\xde\x13\xd0\xbd\xd9\x83\xbfP\xcb\xa2\x04}\xcbR?H\xc7f\x9f\x0eG\xa0?\xd4\xaeu\x05\xa7\xfd\xbc\xbf\xaf1Y\x15\xe7sx\xbf\xa2\xeb\xf19\xa2\xbe\xc4\xbf\xaa\x97\x80\xefL`S?a\x91\xd7*\xd6\xb2\x96?wV\x80H\xad\x97\xca?0\xc6\x97\xd1\x00\x19\x87?t9\xc0\xadL\xc8\xc3\xbfP]\x8bO \x03\xc0?\xb9\x11\x0eK\xc2B\x8b?>\xb8\x17\x97\\\xff\x8e?\xfbh\xce\x17\rx\x93\xbfd\xe7XG}\t\x8a?A\xe8\xb4\xaa\xd3k\x88\xbfb\x02\x8c\xc0N?\xb7?{Z.O\x13\xd1\xab\xbf\x87\x0f(c\xddb\xaa?\x88\xaa}\xe1=g\x98\xbf:\xb6r\xd7\xa8/\xa1\xbf)i\xd0OD\xbc\x91?u\xd1\x03f\xb4\xcb\xae\xbf\xe9\x1e"B_\xa5\xa4?\xc9Q\xf1\xb7\xe7^v\xbf.\xc7\x906"%\x98?\xc6Vz\xab<\xa5\xb0\xbf\x91u\xe2\xbbl@\x83\xbf\xc5\xcd\xf8sX\x8f\x9c\xbf\xfc\x05\x17b\xfd\xc2\x93\xbf\xe9A\x07\xb6\x81W\xb9\xbf\x91E\xe8m\xef\xc6\xad\xbf\xc2\x9e\x9aq\xdar\xa2?\xbbx\x13\x03\x8cG\xb2\xbf\xffE\xf0\xf1\xcf\x9em\xbf\xf6VB\xc5w\xab\xbf\xbfd \xce\xa3\xccy\xc4\xbf\xf0\xc2\\\x94A2\xa4\xbf\xd3@q\xf5(\xeb\xa9\xbf\xc7\xbc\xd3\x8a3\x07h?X\xf6\xe0w+\x88\xb4\xbfU\x95$\x00\r\xba\xb1?\x8ar\x92^H,\xb4\xbf\xe5|f\xcer\xfc\xa1?"\'\xfc\x1c\xaf\xd1\x91\xbf\xfd\xed\xa5\x97\xec\x86\xad?\xf6\xf6\x81\xa9\xee\x83\xaa\xbf\xa6~Z\x8c\nl\xb0\xbf\x99o(U\x8f \xb1\xbf`\xe4Oz\xf9/}?\xcf\xc5\xcd \x8f\xfa\x87?cE9\x13\x8f\x04\xb0?\x9fU\'P\xe2\xc0\x99\xbf|\x0f\xcf?Y\xf9v\xbf\x81\x8a\x9d\x8c\xbe-\xa8?)`a\xed\x0fb\xbc\xbf\x92\xc9\xa0\xf4\x1e\xa5\xba\xbf\xe8\xc8\x8d\xe6-O\xb4?\x108\xbapz$\xa0?\x05RdO\t\xe0\xa5\xbfp\xdb}\xf1v*\xb3\xbfS\xb1d\x03\xb6p\xc0?\xeb\x91\xdf\xd3t?\xa0?\xa1f\xbc\xf0\x06.|\xbfI\xf7\xecX\xd8L\x9e\xbf\xbd\xe5l\x0f`\xbb\xb9\xbfe_\xbc\x84\x99\xf6\x91?K^\x0bo\xa9\x08\x8b?e\xbe\xa6Z\xb5\xe2w\xbf\x7fn\xcaT\x9bj\xbf?^\xe4\xdek\xd1\xfa\xa8\xbf\x90\xdb\xa2\xec\x85\x0cu?\x81\xbb|\xd9\x8a\'b?\xd6~Q(\xc8\xc4u?\x88\x94\x9f\xf6\x9a\x13\xc4\xbf\xe3hm\xd7V\x02\x9a?r\x15\xa5B\xe9\x14\xb1\xbf\xa6\xa8o\xcf\x83?;?\xd1\x17\xac\xbe\xfc\xde\xa6?\xfd\xe59\x94x\xcd\x9b?\x8c\x1c\x9dL\xbd\xaa\x83\xbf\x14\xc0\x10\x96\xd5R\xb0\xbf(\xba\x12k\xa41\x95\xbf\x87ZwK9\x0b\x94?\xed\xbcoXP\xc0\x8c?D\x8a\xb8Wl\xb8|?\xfdXtZ\xc2y\x83\xbf\x86,\xd2({\xe1\xcd?\x05C\xa6\xdf\xbeW\xb1\xbfd3s\xbe]\xf6\xab\xbfD)\xfa\xb8\xf8\xb2\xae?\xf39+\xef\xadn\xa9\xbfDa<\x94l\xfc\x9f\xbf%\xad\xb2\xeaw\x86\xb6?\xd1\xd7\xb2j\x8a\x9c\x94?\x0eCux\xf9\x9d\x82\xbf\xc2Qr\xdc_\xc2\xc3?\x17\xffE\xc3\xc0G\xc5?\x1c\x0c\xea\x97\xdf\x95\x8e?\xc0_\x8bj\xad\xb9\x8c\xbf\xbfX\xa4/]&\xa4?\xf5\xc6\xb5\x13\x8eA\xa8?\x88\xff\xd5\x9a\x11\xd6\xa4?\x17(=r\xcbB\x80\xbf\xb6\x86/c\xb6W\xae?%\xe1\xa6/\xf6\x8f\xb6?f8\xe5k\xaf\xaa\xb7\xbf\x18\x96\xe9K\xe0\x0e\x87\xbf1a\xd6\x14\xc6\xd0\x81?J\xbc\xe4 _\x02\xb5?a\xb7L\xa3\xf4\xc9\x97?\xaep\xedz\x18\\\x8f?\xcb\xdd@\xa4$t\x96\xbfJ\xa5\x9d^\x06\xa6\xa6\xbf\xa3\xbc\x92\tn\xbez\xbf\xf0\xb8~\x91\xd0*\xb6\xbf\xb6\xe9O\xbd\x18\xfde\xbfu\x97\xf6\t\xb5\'\xb5?\x1c\xf2\xaf\xfbj[\xa6\xbf\x8c(\xae+\x8d\xc4\xc0? \xcb\xb6\xab\xc3\'\xa9\xbf\xaa$8#Ib\xc3?WZ\xf8\xcc}\x92\xbc?\xb9\xb0\x96\xb3e\xd4\xd5?_\x1d\x96\x15O\xbc\xc2?C\xec$8\x86\x07\xb5\xbf\xcc\xe1!s\xec*\xbe\xbfD\xae\xd3t\xd9\x0c\x87?\xf7\x8b/l\xa1p\x98\xbf\\J7\xfc\xceS\xa4\xbf\x03-+\r\x080s\xbf/\xaf\xd5U\xf6e\xbe?\x8f\xdb\xe0\xd2y\x80\xd2?\x00iD\xb6h\xb1\xb1?\xe9\xd4;G$\xea5?\xd6}Kh\xa67\x9e\xbf\x0b\xa0\xce\xd0\xd0\xe6\x9e?\x01\x08\x97\x10\xa7\x82\xa4\xbf\x0f\xa7\xbd\xda\xb3\x99\xa0\xbf\x02\xbc\xcei\xa0\xfe\xc4?\xec\x12p2\x88\xc6\xcd?=l\xa5F\xfc\x93\x94\xbf\xee\x0b\xdf0\x1fc\xa8\xbfr|:\x18\x11\x15\xc2?\x17\xd9\xde\x18\xcf\x90\xc4\xbf\x12*\xb2\x9aa:\xc1?m\xfa\xab\x18\x98\xc6\xba\xbfA\x9c\xba\'~\xd3\xa8\xbf\xea\tr\xda\x13\xee\xc4?\xeem\xea\xa4\xfc\xe8\x9b?\x12\xe0\xa6<}s\xb4?_\xc7\xbc?kr\x96\xbf\x15\xa2\x9dK\xbf\x80\xba\xbf0\x93}\xab\x1b\x9b\xbe?3\x130\xe6+\x03\xb3?\xaflw\x02\xd5a{\xbf\xb6\x968\xaeD\xa3\xa5?\xb8\xda\x89\xcff\x8cS\xbfa\x83\x94\x98\xe2\x01\xa0?\x10\x1e6\xf09\xb5\xb5\xbf\xecS\x8a\x9aP5\xab\xbf\x8c\x06"\xb1\xec\xab\xc5\xbf-\xdd\xe7\x16O^\x81\xbf\r{\x02+\'n\xa3?\xe7\xca\x04\x1f\xc5\xec\x97\xbf\xc6\xf6\xbd,\xdb\xed\xb9\xbf\xdci\r\x95\x05\xa1u?\x17\x94!\x8a\xf6\xa3\xbe?Db\xccW\xf9\xbc\x82?\x8e\x13m\x0b\x8d\xe2\xa8?\x04\x02\xa8\xc3^H\xa6\xbf\xe12\x8f\xe4\xca\x13\x8d?\x0cm@\x00x\x17\x91\xbf\xebK\xf3r\xf6\x96\xb2?\xcf\xb9\xe3\x11n\xab\xc2?&\xe3\x8d\xc2pZ\xb3?\xef\xfc[\xda;2\xb3\xbf\x9d\x95\x0e$t\t\xc7\xbf\xcf\x03\xa5AA\xd0\xc6?\x18\xcagI\xbf\xe7\xc3?\x17x\xdb\x9c\xc4g\xb7?\xbb\x98\x83\x93\x07\xaa\x92?\x1a\xe9\xec\x88\xa3:\xa8\xbf\xe3\xee\x95\xc2m\x1d\x80\xbf\xb5\x19\xff\xd2\x02y\x94?\x82/\xf4\x0f\x8f\xf8\x8f\xbfEaAK\xce\xc87\xbf\xb0\t4\xc2\xa5\t\xbc\xbf\xae\x0eH\x1fhW\x9d\xbf\xf4\x00\xe38\xe3\xd6\x87?\n\xaciT\xdd\xaa\xae\xbf\xb3\xa1\xa3q\x1bL\x93\xbf}\xb11\xfbdH\xac\xbf"\xcf\xc9\xa7\xc3?\x9b\xbf\x81\xab\xd4\'\xc0\xc0\x9b\xbf*K\x1b*\xd3\xe5\x9a?-\x14k\x1f.\xf9\xbd\xbf\xd6&\x14|\xae\x05\xb0\xbf\xbb\x96\x93\x9c\xf5.\x9b?\x88\xc5\x1elE\x06\xca\xbf\xce\xdcA\x96\x87\x95\x94\xbfh8\x9bz\xff\xf3\xa7?>\xd2\xa1\xc0\xcc\xb8\x81?o\xab]\x893\xd4\x92\xbf\xe2"|\xf9\x83-\xc0?\xfe\x82\xe5\xe3\x82\x06\xcd\xbf\x89\x0c\xfa\xa2#!\xb1?V\xa5\xe0\x8b\x87r\x98\xbf\t\xac\xaa\x14K\x17o\xbfR\x84\xff\xb18\xff\xb6\xbfk\x13\xd1\xd5_\xfe\x9b\xbf\xee\x07Q.\xbd:\xa4?\x11(@\xc7e\x9d\xa1?=\x8e\xdcp\xed\xab\xc8?\x12\x7f\xac\x811\xd8\x8f\xbf\n~C\x9c\xddO\x99?\xa0m\x9f\x0e\'\x1e\xb1\xbf\xed\xb3\xc3\xe1\x9e*\xa8?\x9cn\xdfc\xd6\xa2\xa8?\xec\xfeG\xa4\xe1\xfa\xcc?BG\x00[\x03\x14z\xbf\x8d\x9a\x0f4\xde^\xd2\xbfM\x07x\\\xd8\xbc\n?\xb1\xd7C\xe1\xcd\x10\xa3?\xf7\xb6\xc5\xd3I\xc2\xb5\xbfL\xce\x08\x85\xc1J\x9a\xbfW\xe8\x00;\xaa\x13\xa1\xbf:q\xe4\xc5\x97\t\xb5?\x19\xda-3P\xb5q\xbf\x9d\xa8UX\x18 \xc2\xbf\x02i\x84\\\xc5\xdb\xa2\xbf\xba\xa9(\xea\x16.\x91\xbfs\x15\xd5C\xf5\x89\xca?\xf1\x9c\xf2:\xc9\xda_\xbf\xbb{\xa3\x8c\\\xf3w\xbf\r"\xc5\xe2\xe8G\xb2?X\xdd\x9a\xc7_\xf8\xba?B\xd2\x80s\xab^\xc1\xbf\x84\nK\xf0rm\xaa?6\x03M\xfa\xbcr\xba\xbf\xc9\xd4\xbcp\x10\x1f\xcd?L\x9a\xa4\xc7\xd5t\xc6\xbfo\xc6\x03\xb3\x01\xe2\xbc?\xd1\x81X\xba\x840\xb1?O\xff\x99\xe5\x96\x8d\xc4?\xf4N\xfa\x19>\xb4\xd0\xbfg\xdf\x9a\x11T\xbf\xb2?X\x1dE\xaf\x86q\xa2?\x8ct\xb2\xde\xd8:\x92\xbf\xc6;:\xdf\x88\xa3\xb0\xbfR\xd4\x1de\xa0\xdc\xc3\xbf\xb7G\xfe\xdd\x01\x0c\xb0?eK\xb74|\x94\xa0\xbf-(\xa0\x1d\xe6\x7f\xb5?\x80\r\xf6\x1c\xad\xe9\xd0\xbe~G*\xda/\x1f\xb8\xbf\x05)I\x8e\xbe.\xbf\xbf#$\x1b\xa1t\x11\xaf?\xff\x13\xae\xa83\xe8\xb7?\xcb^\xc8\x1b\'3\x87?\xa1\xa7z\xd2\xe2o\xb6?-.Z\xc7\x98\xd0\xaf?O\x1eM\x06\xc2\xf0\xa5?\xfc\xa0_\\\xa1\x97\xb0\xbf \xe9,57\x08\x89?\xcc\x05\xeek\x16P\xae?`P\xb9\xc6e\x06\x80?|E\xf9\xef\xb2\xd8\xb7\xbf\xd0)\x84\xce\x87\xc9\x82?$!\xe0\xa1y\xf6j?6\x8e\xd3\xb2(\xff\x98?\xee\xa9\x9dk\xc7\x0b\x11?\xa68\x1b\xbd\x1d\xe4\x94\xbf\xeft\x87\xaah\xf6\xaf?\x8b\xfaD\x81\x90\xc6\xa1?\x0b\xcc_Q\x96[\xa2?j\x03R_\x9dh\x96?\xe6\x9c$ZWK\xac\xbf\xfcDz\xe1\xe8\xde\x93?\xb0\xb7@\x8e\xc5\x9b\xb8\xbf\xbe^ixB\x87{?\xef\xd4~\xfa\xed\xd4\xac?WF\xa5|\xc9_\x96\xbf\xf1\x03jK\xd1u\xc4?\xf7\x9a*\x0cA\x1b\xb3\xbf4\x82\x0c\xdb\xa39\x91\xbfH\xe5\x03}\xb2\xbe\xa0\xbfe\xe3\xba\xfe{\xc6|\xbf\xd0\x84\xd2\x87\xe4\x8f\x96\xbf\x0c\xa9sqr\xcf\xb3?\xa0:\\\xbf\x8cT\xa0?`\xba\xb7\x8b$\x96\xa9?E7\xc9\x02\xd6\x93\xa0\xbf\xf9\x98\x10r!\xed\xc4?u\x1eT1\xf1\xd6\xa8?d\x042\xaayQ\xb3\xbff\x83EN\xdc\xeb\xb3?+\xebM\xe1z\xd1\x98?\xcb\x9c\x9bcDm\x80\xbf\x81\x80\xaa\'\x18\xbb\xa0?\xa9\xdc\xb3\xb4\xe1\x88\xbd\xbf\xb3\xff\xf6\xf4V\x88\xa0\xbf(-\xcb\xac\xc4g\xa5?\x01\xb2\xe7:)\xb9\x82?q\x0c\xac\xd3e\x80\xbc?y\xc64 \xe3\xf5\xa9\xbf\xa6`[\xf4\x92\x01\xad?\x15d{\xf13\xa0\x81\xbf\x18\xf2f\n\x13\xef\x88\xbf\x08x\xee\xb6\x00\x89\xd5?$\x18\xecB\xbc\x19\xae\xbfv\xcd4vU5\x96?\xd1n\x97\xec\xc0A\x99\xbf\xd3Y\x1a\x00&\xedh\xbfz\x12\xde(\x13\x0b|?l\x9b\xe7\x85P\xf1\xa0?w\xc4\x18{u\xd7\x96?_"\x10\x14,\xe5\xa0?\xd08\xaei\x9b\\\xa0\xbfA\xa3Q\xe7\x18\x10i?\x1e\xd1\xb6+\x84\x96\xab\xbf\xc1\xf1\x15M\x18\xb6\xa5\xbf\x99\x87\xe8>\x12\x89\xc7\xbf*7\x06\xc3JP\xab\xbf\xfe\xb6\x19\xd8r\xce\xa0\xbf\xc9Q\x06U\x8e\'\x92\xbfnQz\xa8\x89\xc1r\xbf]q\xda\x81\x1b\xfa\xa4\xbf\x99\xb1\x11Q\x18\x95\x95\xbf\xbb\xf3zp\xc7\xcc\xa5\xbf\xd5\xeb\xb9r\xcc\xb2\x83\xbf\xf6}gPG\xb7\xc2\xbf\xd3\xaa\xd5]\xbb\x14\xb4\xbf\xea\x15 \x841`\xa9\xbf\x99\xe2\xdeMk\x03}?=\xd9*\x10\x8d\x10X?4\'\xfd\xd2\xca\xbb\x91?\x95@\xe3j\x8e\xa6\x99?4\xf6f&8\xd4\xcc\xbf\x86q\x81RC\x9b\x8b?\xe4\xb5\xeb\xb7X=\xca?K\xfb\xb4\xa1,\x81\x8a\xbf\x88\x16\xfeR\xc4\xddX?\xddF\x89\xb4&\xf5\xa0\xbf\x1d\x80"\x85\t\xda\x9f\xbf\xb9\xb9\xdc\xed\x87\x1d\xb5\xbfSq<\xf8\xa1\xc9\xa1\xbf\xa6\xda\xd4\x83\xab\x7f\xa2?\x1a\xf1HY\xaaMY?\'y\xf61L\x08\x8b?\r\x9d\xafb\x11\x9c\xb3?*\n\xe4:w!\xa2?\xd6\xb9\x90\xd8\x17\\\x9d\xbf\xf7\x94K\xb3\x9e-\xbc?|e\x81\xc9hz\xca?\xcc1\xdd\x03\xed\x19\x9a\xbf\x17\xf5`YIs\x9c\xbf\xc9\x04\xa0F\xe0?\x9f?RM\x89\x8cFG\xb7\xbf\xf4^\xac6\x13\x9f\x94\xbfN\x82=\x91$"\xbe?\xd1\x08\xe3\xdcb"\xc8\xbf\xeb\xaf\x90\xbf\xfd\xd0\xa9\xbf\xe5\n\x0b/\x07V\x89\xbf-\x154L\xb1\x7f\xaa\xbf\\I\xc1\x10f\x86\x9e?x\xbb\xf6\x1c\xc1\xe0\x84\xbf\xd69\xd1\xbd,\xbd\x89\xbf\xc87\xfc\x9e\xe2\xa9\xb7?\xad\xc2vI\xd9\xfe\xaf?\'\x11\x90q=~\xb9?\xf9*PC5\x95\xa1?E\xb1\xa2\xe4\xaf8y\xbf\xf6\xd9\xbb\x89:D\x83?M,pW\xcf_\xd3\xbf\xf5^\xdcQ\x89\n\xb1?"x]l\xb97\xb1?x\x12\x9d\x9e\xcf\x04\xb3?^\x9e\xdc\x9d\xf0\xa9\x8d\xbf,\xc4\xdd\xd6J\xb2\x8e\xbfN\xdaK@5\xe5\xb7\xbf\xc11\xba\xb6\xbe\xd1\xb1\xbfc\x8c\x95\xc5\xd3\x91\xba\xbf\xd3`\x85bG"\xa8\xbf\')\x8f\x98zN\xb6\xbf\xc3\xa5r\xa0\xdc\xcc\x85\xbf\x17\xdbP\xae\xc9\xd6\x81?.\x19\xe2M\xb1?\xa7\xbf\xcc\xd2\x8e\xae\x9c\xfe\x9c\xbf@\x12\x99\n\xbb\xb2\xdd?\xecQ;\x84V\x02\x9a?\x95\xe1\xbd\x1cJ\xe6\xa3?TsRH;B`?\x93\xcb\x0c\xccn\xa5\x8f?U\x7f\xc5\xbe\xcf\xaa\xd6?\xa1h\xce\x8a\xa6\x0f\x96?\xdf/p2\xa6\x10\xab\xbf\xb5\x19\xf7\xb8>\xfb\x98\xbfU>^\xdf\x92\tV?\xa6\x9b\xea\xcf\xa3\x10\xb2\xbfP\x0c\xaf\x9f\x98\xe1\xa9\xbf\x9a\xee\x03$\x93\xcd\xb0?\xb9\xab\xd4\xe7\xa1\xbd\xc2\xbf\xcdh\xae6?\x05\x8d\xbfe\xeb\x06\xf5\x13\x18\xc3?\xf1\x01l\xfdW\xe2\xbe\xbf\xf6\xf4\xe9\xe7#\x07\xa8\xbf\xe2\xd9\r\x1co\x87\xbc?\x8d\x0c\xb25\x1a\x99\x98?\x0bI:rE\x93\x94\xbfr\x84/\xfcN\x81\x9d\xbf\xfe\x89\xc6\xa6\x81Y\xc3\xbfV\xef.\xc1\x8c\x90\xc5\xbf\xcd\x8ei\xd15\xce\x96\xbf2d\xe2\x97Ays\xbf\xf1\t(\xecs\x0f\x97??\x04\xbf\xc4\xadS\xca?L\xc2\xc2\x008\x81\x95\xbf\xc2\xc8&\x9b8m\xa2\xbfMkz^\x87\x08\xc0\xbfJ\x1d\x04B\x85\x17\xb1?\xd8\xa8\xd9A\xabc\xce?\xde6|N\xd6U\x91?7\xf5\xfa\x88\xdc\xb7\xa4\xbf\xc9\x8a\x0b*\xc4\xa5u?\xd5\x11@bZ\xd2\xb8\xbf\xb7\xce\xfe\x12\x9d\xec\xb8\xbfqX\x14\xe4\xc1\xaf\xc0\xbf\x84J\xb8\xab<\xf5\xb1\xbf\xfcj\x1c\xa0\x9d2\x89\xbf=\x0c\x93\xd2_\x82\xb4\xbf\xa8\xba-#\xb9\xfe\xad??\xb4\xf9\xb6n\x99d\xbf\xec\xd3#y\x87\x02\xcf\xbf\x1a\xc6HA\x012n?\xfee\xcd4\xd7[\xd3\xbf.\xfdl\x81\xe9\xc6\xa7?uF\xed@\xf4\xc0\xd4\xbf\x8b\xc2\rPW\x99\xa4\xbf\xe0\x9e\xb0DZ\x80\xc0?\x01\xb5PdPF\x99\xbf\xd4wc\xba?\x95\xcb?E\x87O\x87\xf6\x08\xc4\xbf\xb9*o\xfe_P\x9e\xbf\xbe\x10\x97\xe7\xe9_\xb3?\xc8\xea\xc0\xa4\xfa\x85\xad?\xf8\xa9#\x9d\xed\xa0\xc1\xbf\xf4^\xa3By\xae\xb4\xbfD\x17\xfc\\\x1e\xcf\x99\xbf\xb2\x9f\x9f\x825`\xa0?g\xf4U\xda\xa5\x0b\xbe\xbf\xaf\xa6 \xa7|\x8e\xaa\xbf\xe0~x\xfd~L\xc0\xbf\xa7\xc6\xd6i0\x02\xa6?\x01\x13L\xe7jq\xbe?\x86#2\x8a}\xe9\xc5\xbf1\x92\xc9A\x03H\x87\xbf6i\x0cyF\xcaZ\xbf\x95\x07\xd5\xa0E\x16\x9e\xbf\x9axt\xed\xcbT\x9f?\xb1E\xa3\xd4/\xe0\xaf\xbf\x04\xad\x0c\xf3\xc5\x83\xa3\xbf\x13TE\x10\x1d\xe4[\xbf,\xb4\xde\x07X\xeb\x9c?@\xdd>\xb12\xa9t\xbf\xcc\x0eC\x87\xfa\xb9{\xbf\xc4\xf2\xd8D\xb1\xe8\x86\xbf\xb5\x94\x17\xcc\x0b}\x8e?\x87\xe5\x00\x19\xbe\xe6\xa1?\x16\xdd\xeb\xd6/\t\xc2?\xbd\xb0\x93\x07\x8b\xb8\x91?\x81s\xf4\x17M\x0e\xa4\xbf\xb97\x1a\xc3E\xda\x94\xbf\x0e.\x04\xcb\x8a\x1f\xb5\xbf\xc1\xf7\xf3\xcc\xc1D\x8a\xbf\xcc\x9a\x00l\xdb\xa8\xc1?1Z\xe6p\xb0\x92\xb8\xbf\xac\xc9%!}\xbb\xc0?*\xeeC\x8d\x15\x8d\xc1?=\xf1(#*\xd7\x83\xbf\x19\xbd^\xb7\xee\x92\xb3?[d\xba\xcf\x1b\xb6\xc9?1\x14\x00\x17Y!v\xbf\x19@\xbc\xf4B2\xb3?\x9f\x8e\xd1\\\x0b\xa3\x9b?\xe44\x007\x95\xdc\x93\xbf\xff\x17 \xbb\xfa\x7ff?,\x8b\x1e\xb3\xff\xed\x9c?\xb3c\x0c\xd5@\xc8\xa8?\x1d\xf0\xba\xda_\xdb\x8d\xbf(\xd0&z\xf2\xe7\xb4?\x05\xf9/\'{:\xb3\xbfB\xb7\xb6}\x05b\xca\xbf\\\xddJ\xf2\x887y?%[\xde\x98\x95Wn\xbf\xdd\x9a\x87i?\x8a\xbc?\x17z\xac=\xfa2\xa6\xbf\x11\xe1\x84\x7f\xb3\x95\xb1??\xbc\xe8\xda,\xab\x8e?\x0f\xb9\xe1\x87\x19+\xa8?\'mc\xe2\xc0g\xa9\xbf?\x19%\xf47\x82\xa6?@\xc8\x98_\xef\xf5\xc4?\xed\x05\xca\x8f\x9eO\x89\xbf\xe3\xcbC\xa2Fx\xb8?\xf2\x12\xffAE\t\x84?5,\x81\xdfz\x8f\xa3?\xcc\x9f\x1a\xda\'\xb3\xc9?~\x8fyVj\xad\xaf\xbfa-\x07\xe51\xf8\xd1\xbf\xe5d\xda\xec\xef\xb1\xc6\xbf|\x8d\xfe\xfd\xec\xc8\xa0\xbf\x88b!\x1b@\xc3\xbe?<\xb7\xb9\xa9d\xfd\xb9\xbft83@d\x9d{\xbf\xd4\xa3H\xdf\x05\xcd\xb2?\x1c]\xe2\xe0Y\xf2\xca?:o*\x0f\x853\xb7\xbf\x08\xef\xc2\x1d\xb1\xa9\x94\xbf\xdb\xcb\xe4I\xebM\xcd\xbf\x81\xe9\x8b\xd8\xe4\xf3\xc4?\x8a\x14\x7f\xa3\x86\x0e\xc5\xbf\xbb\xe5\xba\xacN\xa9\x9c\xbf\xca,(\xc0\xfbC\xc9\xbfY\xa7\xccF\xbc5\xb9?\xd86\xaeDt\x00\xc5?\n\x16\x19\x99\xc0$\xc7?T\xee\xa1Ee\x90\x98?\xfe\xb6G%3\x9d\x80\xbf\x1fQF\x9e\xfc\xbf\xbc\xbf\x8e|5y$\xac\xb6\xbf\xe39\xa9\x89D_\xbe?\xf6\xa3\x02\xbd7\x0c\xd5\xbf_|N\xd4\xfb\xfa\xa6\xbf\xa8\xf3\x03+F\xbcz?\x8c\xd1\x08x\xba\x18\xc1?\x12\xf9W\xcc\x81\xf3\xd0\xbf\x17z\x9e\xb5\x19K\xc4?H%\x1a\x14\x86\xcf\xc0\xbf\x06\x1cBAp+\xa5\xbf\xea\xbc\xf6\xcaT\xd4\xa2?L\x99\x1d\x97w\x01\xbe?2Qs\xc0\n/\xbe\xbfA`a%\xb2\x91\xd8\xbf\xff\xd8SU+^\xc3\xbf\xe2h\xb9\x88\x8e\xeb\xc8\xbf\x8b\xcd\x8b\xae\xb1\xac\x94\xbf\x87$D\xce=\xd1\xc7?\xeayIk\xee#\xc4\xbf#*x\xa1\x86\x07\xbe?\xd0@\x15\x19)T\xc1? \xb8@\x08W\xa4\xc6\xbf\x9f^3\xbbj\x83\xce?\xc3>\xe6Z\x1a"\xc9?\xc4\xd6\x14\xae\xa4L\xac?\xbd\x88\xa9\xd5\x15*\x1e?H\xa4\xa6\xd7\xe1\x8f\xa2?\'\xfcS\xc2\x08\x81\x90\xbf\xb2\xbc\xe8\\\x130\xcc\xbf72\xe0A)=\xb8?\x86\x06\xfdf\xa6^\xd0?\xfej\x18JS\xf1\x9a?O\xa8m\xd7\xc1\x02\x95\xbf\xf9\xa2\xdf\xcc\t\x8c\x91?N\x8b\xee\x1e\xaf\xfd\xb6?\xd3\xb1\r*\xc7\xc5\xcb\xbf\xc3\x84\xa4\x1b^\xb1m\xbf\x86"\x9aE\xeaW\xbb\xbf\xb8\xfd&\xca\xcf[\xc4?I\xb7\x0e\x96\x1a\x8a\xd0\xbf\xedN\xe6\xa0\x9b\x04\xb2?>P\xb6\x96\n]u\xbf\xfbJ\x13\x07\x18\tg?\x8c\xf7U&<\x86\xca\xbffvq\xd8\xc6\x13\x9a?\x01wUy}!\x96\xbf\xb57p\xd1v\x91\x8c?I,\x19X^\xa1\xa9?O\xc3\x9d\xb8sP\xd8\xbf\x17\xbfy7\x02X\x9b\xbf\xe7S-\xef&\\\xcd\xbf\xd3bI\xec\x105\xbc\xbfv\xfbw\x16\xea-R\xbf\xf5\x9c\x9amFI\xcc\xbf\xb1r\xe7\x04T/\xd0\xbf\xa4\xcb[%\xf6y\xaa\xbf\xacs\xcb\x93\x82\x82\x84\xbf\x8d\xcd8\x038\xc0\xa7\xbf{kY\xbd\x19\x0c\xbf\xbf\x12\xe0~\x11\x1dm\xb2?\xca\x82yC@\xff\xc3\xbfE\x9d\x9d\xee\xfc\xeb\xc5?\x9fb\xd69\xaa\x1c\xb8?\xf4\x95\xd6%\x9c\x89\xb6\xbf=q\x9b4\xe8\xcf\xa6?\xb6@\xef\x1f\x1d\x95\xb5\xbf\xe3\xdb\x83Lu+\xc0?)\x0cz\xc5\xf9\xfe\xa5?p\x99\x01\xe8r\xf1}?H\xeb\xd9\xe6\xce\x0f\xa9?\xef\xdf\xd9\xd9(\xf8\xc3\xbf\xb31\x9e\xd0.\xa6\x81?\x1c[z\x01\xcc\xf8e\xbf\x90G\x1em.\xa5`?JA\xcd+l\xf7\xb3\xbf\x15\x1bI\xf5CD\xab\xbf\x10Hl\xb2\x92;\xbb\xbf\xdfm\xc6\x08}\xc3\xd6?d\xc5\xd3\t\xa3y\xa4?\x9b1\x17\xc2\x9d\xb5\xc0?,\xc5\xb7\x13\\\x15\xbf\xbf\x7f4\xf05\xcd\x9a\xb3\xbf"(\xd9\xcb@1\xbc\xbf\x98\x90c\xa9\xff\xdc\xb9?\xa3\xe6\xb4\x02`\xd5\x00?\xe8\n.)\xd5\x06s?\x12\xe5\x03(\xb4\x98h?\x92vUc\xea\'\xb9\xbf\x80\xf9\xc4\xb3\xb9r\xc1?#\xa9>\x03\xb20\xc1?\rTn\xa3\xa1p\xc7\xbfl-\xa8\x01\xa5\x1a\xa5?N]\x8d-%\x9b\x90\xbf\x14*X\xfb\xcf\xb2\xaa?,\x19}\x87\x8c<\xa8\xbf2\xbcr\xbd\x85\xff\xa7\xbf\x95K\x926=3\xb5\xbf\rj\x93=-\x06\x8a?D\xb2\x9a\x85\xc2\xd8\x9d\xbf\x0f\xad\xf9\xf6NL\xbb?\xdd2r\xde\xf1\xf2\x95\xbf\x8f\xbe\'\xff6\xfa\x9e\xbfl\xa5\xb2s\xd0\xd7\xb8?\xd0\x1eK\xfb\x85\xa5\xb5\xbf\x90\x16\xb0T\x14\xec\x85?5\xc3\xaf\x18\xdb\x91\xc0\xbf\xcc\xaa\x8e#\xddi\xc4\xbfi\xae\x9d\x8b\xe1i\xca\xbf\xfeZ\x9b\xefg\x1c\x9c\xbf\xdb\x11\x08g\xb7S\xb2\xbf8D\x95\xa1\x0c\x0e\xb5?\x89v\xf8/a7\xb8\xbf\'x\xda\x95\x0c<\xb9?\xfe\x96\x99\x18\xb0\x8e\xba\xbf\xd2\nI\xf7m2\xd2\xbf\xc1\x85m\xaa\x85k\xa4?\xc4\xf3q\xe4\xb4J\xad?\xacC\xe2_f\x10\x9b\xbf\xed\x18nj\x95\x00\x9b?A\xdb\xc2\xa5_@\xb0?\xe6&qy\xde\x00\xb1\xbf\xba\xf1\x93\xd4\x13z\xa8\xbf\x83v\xe9\xed\xfb\xb3\x90\xbf\xb1\xd8\xa6\x99\xd3\xd8\xa5?(kd\x18\xb4\x11\xc7?\xcf\x8c\x15?\\\x8e\x84?\xce\x8a_[JC\xbe\xbf\xb7\xe4\xff\x19ds\xbb?g\xd0i6\xae\x90\xb8?\xa9\xb56\x921\xf5\x80\xbf\x81AM\x0f.N\xb5?\xb6\x9f\xe7\n\x04b\xb1?\xbf\x15\xba\xbc\xd5\xb4\xc1?0~\xd1R^C\xb9\xbf\xc6\x8bs\xa6\x9c\x91\x82\xbfx\x81\xd3vZp\xcd?mov\xfa,\x1d}?\xf4\xcfd\xb6\xab\xd2\xb0?\x051_\x18\xd9t\xa1\xbf\xd8\xd3\x1a\x13\xe5\xe0\xd5\xbf\xd9\xb5\xfb\xd9\x9c\x1f\xbf\xbf\x1d\xfbf\xcc\xd8\x13\x92\xbf\xb7\xbe8\x86\xfe\xfcs\xbf\xe8\x963\xe8-_S?I\xbf\x90\x11k\x93\xb7?\xd0\x9ag\x8d^\x89\xc0\xbf\x90\x99\x90s\xa3\xd4\xb4?\xce/v\x9c3\x03\xa6\xbf\x8d\x18w\xae\x9d\xf1\xaf?\xa9\xa9q)=\xd9\xa3\xbf\xe8\xa8Z\xbd\x1b\xaf\x92?\xcd\xf1\x9d\xbd]d\xd1\xbfb\x86\xd8\x13Cz\xc4\xbf\xf8*\xd79\x1dI\xb5?\x94\xd2\xb6\xb5\x90(\xc9?"r\xe22\x07Um?F\xa8\x04iy:\x91?\x82\xdbs\xe8hb\xb5\xbf\x1a\x06\t-\x88\x81\xc5\xbf6,\x8d(J\xb0\xa4\xbf\x8a\xae\nq/k\xb0?\xfeq\xff\xc2\x0e \xc6?\xad\x97qd<t\xa7?\x8d\xd1SQr\x8b\xab? \xb2\x1cH\x1f\xe6\x9c\xbf\xba\x86\xc6\x9c\x96U\xb6? \x03\xc3\xb4\xee\x9c\xc6?\xfc\x0b\xbb\xec\n\x17\x91?K\x96D\xab\x83\x9a\xc7\xbf\x18\xe1J\xf1\x90P\xb5?\xdeI\x9d\xa0R\x9f\xac?N\xae.\xed\x9d\xee\xab?{\xabi\xf78\xf0\xd0\xbf\x160G\x01\xff\n\x9f\xbf\x15\t\x82\xf7\xcd\xf7\xbe?N\xf4(\x18o\x99\xa6?\xb2\xe4\x7f\x9aX\xdc\xb1\xbfE\xb4\xf6\xbcO?\xc5?\xff\x07\xb7\xf1c\xa3r?\n\xd1E!J5\xa7\xbf\x1c\x11\xdel\xd7E\xbc?\xe6L\xc1\xa3\r\x10\xa9\xbf\xa9\xc619\xe4R\xb6\xbf\r\xba\x12\xce\xe7\xc6\x9a?&\xd3m}\x9f\xef\x88\xbf\x7fS\x04\xa9\x98\xe6\xae\xbf\xb2\x92\xbf\x06\x85\xc5\xb6\xbf\xee\x1f]\xbb\x85\'\xca?\x80\x0b\xd5\x1ek\xba\xb6\xbf\x84\xae\xe7\xdf\xfe\xe8\xb9\xbf\xba\xc9T\xa0$\xf8\x9f?\xac\xcc\xa3\xffv\xedz\xbf\x9e\xed\xa0\xe4\xc5,\xa0\xbf\x981\x00\t\r\xa6\xb3?\xc2R\xb0\r\xd8\x95\xb3?H\xd2\xbf\xed\xa1\x1c\xc1\xbf\xe3#\xaaa\xb3\xae\xba\xbf\x15\x89.F\x9a2\xb6?m\xbcl\xa9\xf4\xce\xc5\xbfh\xf5\xd1\t\xc0\xc3\x9f\xbf\x04Ww\x8a\x15 \x82?\x04\x86\xb6\\a\x8d\xb5\xbf\xd6\xa1Hod\x84\x85?\x8d\xb9\xcf\x9d\x08\'\xc1?\x1dO\x8c{\xa8N\x98\xbf<\x1d\xbe\x89\xe6}\xcb\xbf\xf3\xc3(%Yn\xc2\xbf\x99\x86W\xd8\x03\x16\x91\xbf\x07\x01\xb7(\xe5D\xc7\xbf\x1b\r\xe5J(\xc9\xd0?\xe5\x8d\xc2\xf4%\xfc\x0f?\x04\x96\x1c9|\xef\xd0?\xc0\x92\x12\xf4\x9b\xf7\xc7\xbf{;\x92\x1a\xfb2\xc3?\xc5\x80\x12\xb4\x108\xc3?}\x05\xc9\xab DZ\xbf5I]\xeb\xdc\x03\xa8\xbfZ\x9a,V\x8f\xcd\xd4\xbf\x9f\xaa\x9c\x98\xeb\xa8\xad\xbf\xc2?\xa8=mV\xa7\xbf\x9d\x8bq\xcee\xf9\xb4\xbf\xe5\x89q\x07&\xce\xa0?Y\xael\xdf\xd2\x17\xc0\xbf\xd6\xa2\xd9%c:\xc2?\x0f\xa4F\xf5\xca\xcd\xa3\xbfFq\x8f)+\xd1\xd0\xbf\xe1\xee\x04\xba\x16\x13\xc3\xbf3\xf2\x8d\x1d\x8f\xe1\xba?^V\xf14\xb6!\xb2\xbf\x9b^\x0e\xe2\x0f\x8f\xa4\xbf\xd9\xeb4\x0f?\xdd\xd2\xbf\xeeuW\x88l\x89\xa2?s\xf9\xc9\xc4E\xe9\xaa?Z\x10z]m\xa0\xbc\xbf\xc2[\x16\xdct\x01\x7f\xbf6zct\x9e\t\xab\xbf\xfc<nC\x94\x83\x82?\x81\xdd5LIh\x7f\xbf\xb8\x17 \x1cx6\x9f\xbfpw\xe2J\xf2\x1e\xd1?\xcf\xe6\n\xf5\xae\xeb\x9c\xbf\x9b\x03\\#\xa3\xb0\xa7\xbf\x06e\xea\'2\x0f\x99\xbf\x04\x85+\xe1\x83x\x89\xbf\xf9\xb3\xc3\xfc\xc4$\xbe\xbfS\xb6~8\xdd\xa6\xb4?_-\xc2\xad\xe0\xc5\xab\xbf\xe6\xcc\xb1n\r\x98\x91?\xa8\xd3\x14\xc3\xe1?\x94?\xc5\xc3\xebr\x08e\xb4?Ts<3\x18\xe2\xb6?O\x05\xf8c\xe0\xc4\xc1?:F9U\xc8u\xb2?\xd0\xa2a4\x14\xe9\xb1\xbf\x02o\x90\x82\xf6\r\xb5?I\x85g\x90\xf7\xc1\xa5\xbf:\xb8\xb9/\x7fs\xa6\xbf\x05uIK\x04J\xd4?\x1f!\xcd\xadRn\xa2\xbf\x9c\x1e\xda$\xb9L\xcb\xbfZ\xdb<\xf5d\xca\xb9?$\xdc\xd6~@x\xa7\xbfX\x08e\x91u\x16\xb8\xbf\x98\xbd\x10Tbg\xc0?R\x05\x1cz\xf1Q\x94?7\xa4\xd9W\xf4\'\xb4\xbf\x9e\xc1z\xd7P4\xb7\xbf<\xb1\xd6\xc3\xee\x0b\xc4?\x18\x06\xb0\xff.`\xb2?\xa6\xdf.A\xf9\x16\x9a\xbf\xc4\xc1\xdbp\xfb8\xc0?\xbc\xc9\xd4\x81:\x06\xad\xbf\xe2*\xdd\x85\xe2\xdb\x96?\xf3/\xff\x93\xce\x99\x94\xbfc\x87i\xb7\x96\xb5\xc0\xbf\x9dA\xf5\x05<\xeb\xb4\xbf\xa2\xf5z\x82Au\xa8\xbf\xf7\x14\x1a\x8a\xc76\x8a?\xa1\x8a\xf2\x96#\x16\xaa\xbf\xb4\xbb\xb3$p\x85\xc2?\xbe^\xbd_\xf4\xd8p?\xfc\xfev\x95W\x81\x94\xbf\xf1j\x8c\xcc?h\xa3?S,\x98\xac\xd1\xc4\xca?\xcb;@\xbf?`x\xbf\x1e]\xd9\xaf@\xe0\xc8?\xf9\x9d\xe5\x87\x12\xc9\xcc?\x7f|\xef\x10\xbac\xcc\xbf\x1c a-\xfat\x99\xbf\xd4Kzdh\xc6\xae?/q\x81Q\xc0\xca\xc3?\xb7\xd2P\xf8\x03\x87\xa0?S\xc2\xc4\x13\xbf\x86\xa2\xbf\xda\x19\x9e\x8c\xec\xf3\xc7\xbf\xd5\xbd\xfe\xe08\\\xc3\xbf\x89\x02\\<R\xac\xba?\xb8\xe4\xb4HC+\xb7?\xd0\xa5\xfc\xda\x92l\xd4\xbfv\\0\x9b*X\xc8\xbf\xcdiNnk\x17\xb0?s\xe7\xcaUZ:\x84\xbf\xfb];L\xf8)\xc2?[\x93\xd9\xca\x85O\xc7\xbf\x86\x8d 5\xdb\xed\xb7\xbf\xee\x9b\xd5\xca\xd7\x89\x8a\xbf\x96\x0e\x1a\x03\x9fv\xc1?W\xdb\xbf\xd9$Qg\xbf\xee\x1e\xfd~g\xc9\xc1\xbf@\xff\x81\xf3r{\x9b\xbf9\xf3Y\xecrX\xb9\xbf\xbb\xdbqZ)\xb8\x8b?\x80\xa7?\xca@\xe2\xcd\xbf\xce\x02y\xf7\xd7\n\xdf?\xf0\xca\xad\xed6K\xd3\xbf\x02s#N\x89\x80\xd2\xbf\x94]9\xdau\x03\xd5\xbf\x89\x04\x0eSF\xd6\xd2?\xae\t\xff\x8c\x15D\x9e?\x00Q\x9c\xdfT\xf2\xb0?8\xe4`\xa4\xe0\xeb\xb1?\x1f|\t\x02\x00\xe7\xc3\xbf=\xd3i\xd5p\n\xc7?\x10\xd1U~\x9bi\xb2?\x16\xab\xd1\xe2\xee\xac\xb2\xbf\x9b\x1dW\xfa\t:\xad\xbf|#\x01\xa2\xa2\xdc\x8c\xbf\xa7\xe5\x1f\xcc.\xb2\xca\xbf\xb64\xeem\xfb\x92\xc0\xbf\x9d\x18;\x07X\xf5\xa9\xbf \xc2\xbe\\\x9f]\x13\xbfKg*V\x98O\xa1?\xa7@\xa0eP\xfc\xb3\xbf\x11i;\x95\xe4\xeb\xbe\xbf\xd4a\x13\x1b\x1a\x87\xc8\xbff;Y\xa7\n4\xb8\xbfq\x87E=%j\xc3\xbf\xbb\x90\x9f\x1f-\xa5l\xbfC\x8ey\x98T\xb0\xb4\xbfL\xca\t!\xe5\x15\x8b?\x9d\xe9 \x94\xb5\xa3\xba\xbfA\x10+\xc8\x9d\xb2\x96?a\xf7\xee\x13-k\xac?\xdcb\x1b\x8b\xfbJy?T$\xab\xad\x00\xbe\xd7?\xec\xd6\x0c"$\x8d\xa7?\x03wj;\xd3\x86\x96\xbf\xf8\xad\xcb\x0c\x0c\xff\xb0\xbf\x9d\x0fL\xbb\xda6\xc8?U>R\x8at\x00\xd1?\x88,\\\xd7\x84\x1e\xd4\xbf\x0e\x94j\xc7\x8a\xc7\xc3?m\xbf\xbau\x16\xb1\xb7?\x80P\x9c\x9f\x96\xf6}?+O\x8fo\xdaC\xdb?\xbe\xe6R\x8f\xcb\xae\xc9\xbf\xf05`\xa6\xf7\x13\x83\xbf\xe6]-!-u\x81\xbfu)]*2\x16\xc3?\x85\xac\xa8_\x13\x97\xbb?\xec:@2t\x16\x93\xbf*\x80D/,\xcf\xb3\xbf\xc2\xb0\xfb\x17bl\xad?dBqd8j\xbb\xbf"\x1d\xdb\xae\xf1}\xd5?:)\x19p\xc9\xaf\xd1\xbf\x99\xd8en\xa2\x19\xb9?$\xdf:\x9e\x94{\xb2?r\xbel\xac\xf3`\xa2?:\x03\xe7\xa4A\xd1\xc3?Q\xdc\x7f\xea\x96\xcf\xa4?\xd9U\xba\x17\x1c7\xbf?\xfc\xbb\x97!\xc1]\xa3?\xacd\xb9k2\xdf\x8e\xbf\x8d{\x05\xab\xa1\x88\x89\xbfNb\xa2\xb3\x86+\xb1?\xef\x9c,5\x81d\xc4\xbf\xb4q\x87 o\xc2\x92\xbf\x1c\xc1\x96\xd4\x07\xb8\x9d\xbf%\xb8\xa2\x9c\xb0\xe2q\xbf\xe1\xa8\xe1M>\xb1\x83\xbf\xdd\t\xeb\xc6\x95\x1c\xa4?\xc5\xe1G\xca\x06\xa1\x85?\xf94\x99\x04;d\x95?k\x91s\xc6:\xb3\xc3?WQh\x1d.\xfa\x94\xbf\xca{\x93\x7f+u\xc1?\xc1\xa1\r\xc9\x1dn\xb6?\xa2\xbbb\xc3\x0fF\x97\xbf\x89C\x0e\xed\\\xee\x85\xbf\xa3\xbe\xcc\xae\x85\x89\x99?\x19\xb5\x9b^\x84\xc3\xc1?\xfb\x99O\xc8\xd9\xc6\xc8\xbf\xa5@e#\x18\xe3\xb1\xbf$\x88\xf4%\xb1A\xcf\xbf\x0f/\xbau\x0b\xd1\xcd\xbf\x15O\x18\'W]\xb4?}\xcbZ\xe2\xbc\xc2\x90?\'i\x9b\xa6R\t\xb4?\x191\xd3\xd3#\x84\xad\xbf\xa2\x86\xbf\xe5\xc8q\x9a?\xa9 P\xc6Jc\xb3\xbf\xd7\xa6\xb8\xe7\xa3G\x83?/x\x1a\x00\x84"\xae\xbfV`\xc2\xa7"8\xcc\xbf\x93\xd7\xbc>\xba5D?\xdf\\\x11\x00 \xa6\xaa?\xff\x13\x82\x87\xc8O\xb9?i@]Ps\xe3\xab\xbf\x0e5D\xe5\xcf\xd8\x80?0\x8fs\xd1H\x11\xc3\xbf\x87{\xa3\xfe1c\xc0?\xee\xa0\xeby\xb7\x15\xbd\xbf\xc1\xa8\x17\xa2\xaf\x1b\xc9?\x80\xcf\xc4\x81u\x9d\x88\xbf\xe1C\x05\x03\x91\x03\xa9?+\x9e\xa1j\xd2\xfa\xcd\xbf\xc4A\n\x94<$\xbd?i\x9f\x8e\xfc\x8b\x8e\xa3?\xe4u\xc2\xab#&\xa4\xbf0\xcc \x8eK\xe6\x9a\xbf"@"\x86\x17 \xb7\xbf|\x0c\rc\x18\x95\xc0?o\xac\xf4\x98G\xbc\x99?g,\x9a%\xfa\xe8r?,w\x7f\xb4\x8d\xb8\xa0\xbf\'V\xf5\x9e\xefP\xa2\xbf@\x98\x18\x99\xe4-\xbc\xbf\x0f\x04.\xef\xe0\xa9\x88?=r\x1c\x88\xec\xc0\x9f\xbfb%j\xabF\xc7\x95?J\x80\x9cWv3\x84?\xc176\x96{\xe0\xae?Xy\x18\xc4\xd3~\xb1\xbf->\xd05\xd8r\xc2\xbf\xac;\x896\x0b\xe9\x9f\xbf\xbb\xdf#QN\x9f\x91\xbf\'\xa1\xae6\xbf\x8b\x84\xbf\xd7\xfe\xc5\x9e\x13fu\xbf\x82\xf4\xc6\xb8t\x91\x81?\x99\xd7\xa7.\x91\x02\xac\xbf~+Q\x12\x00\xe8\x94?\xff\xaeS\xa3\xce\xff_\xbf\x9a"5\xa61\x17j\xbf,\xf5\x8b\x92\x98\x7f\xa6\xbf\xf1\xdb~\xf0Nj\x9a?7\xc6\xae\xca\xacfe\xbf\x86\xeb\x97f>\xeb\x91?\x17\x11\xef\xe34-\xbb?\x06\xb8\xdb\r1\xc0\xbd\xbf\xc8\xc5h2>\xaf\xcf\xbf\x12W\x1bp\x9c\xd3\xa6?r\x9b\xd8o?\xcb\xa2?)\xc5\xf4\xa1\xf5\xfc\x84\xbf\xf7\x87\x04\xd9\xeb\t\xce?\x91\x91\xcb\xf5\x97\xfb\xa3\xbfd\xdd\xf6\xd8zg\x80\xbf\x94fR\x8b\x83\x84Z?\x1f1\x89\xc6`\'\x97\xbf\xf6\xe4\xbdN%\xda\xa3\xbf\xd7\x14\xf3\xd1e\x00\xa1\xbf\xd9I\x16\x95\x0c\x06\xc6?\xeb\x8dn\x8b\xefv\x99\xbf]DAN_n\xb6\xbfM\xcf\xb2F\x82\xc7\xd3?\x15\xf4\xca\x91<+\xb0\xbfw}\xb1l\n\xb4\xa3?\xf8\x93\xd88Va\xa7?\x9cl\x8bD_\xc0\xb4?\x92\xcb|\x8a\xd7z\x97?\xf6\x9a\x87\xde\x08\x83\xad?,\xad\xc1\xe0zQ\xb3\xbf\xaet\x06\xeb\x90,\x93?%awD\xc9\xd2\xb1\xbf\xcco\x8f!\x94\xe9s\xbf*apJ\xb0B\xc3\xbf5W\xd3\xdc\x1b>\x95?\x9f\xc9\xc4\x01"Q\xba\xbf\x16\x03>\xac\xb8\xab\x88?T\xdcg\x88i\xf7\xb5\xbf\xb75\xee%\xe6\x05\xb7?\xe0(KP\x18\xb3\xa2?\xe2\xf3\xf7"*\xb7\xa5\xbf\xac/\x07\xa9\x8dB\xb5?\xc0\xcb\x80\x13\x01j\xb8?\x92\x1e\xa6\xa0(\x07q?[\xe6Z\xfa\xf7l\xa3?\xa6;G\x92@\x10\x8b?\xff\xdc\xab\\pL\xa0\xbf8\xc9\x01\x80d>\xbb\xbf\xfeF)BLy\xb3?\xf8\xb5\xa9\x8f\xd5\xbe\xaa\xbf\xa8^\x06\x82\xab\x0b\xbd\xbf\xfa\xbdh3Q\x8d\x95?\xfb\xb9L#b\x1c\xa8?}d\x7f6\xa5\xa0\x81\xbf\xaa\xbfz \xfb\xc3Q\xbf\x98^\x9as4h\xb1?\xd4\x87\xdc\xd8\x93D\xb2?-u4\x91-\xf2\xa0?\xf0\x12\xfec]\xd3\xa8?\xe8:\xc6Roz\x97\xbf\x8a\xd1\xda\x95\xcbs\x94\xbf\xfb\xbb\xb3\xc2b\x01\xaa?Sb\x1be\x0cQ>?\xb7`\xfbt:\xe4\x84\xbfJ\xc7\xd4\x0b\xb3\xfa\xc7\xbfzB\x10\xb8\x8a\xfc\xc3?\xc2\xd3\x83\x1an\xa6\x91?B\x1c\x96\x86\x00\x02\xa3?_\xd2v\xe8\xa14\x95?h\xe9\x93.\xc3\x1f\xc1\xbf\xe0]\xea\x85*r\xb5\xbf\x06\x9a\x12~\xf8D\xc0\xbf\x81\x06\x1dI\xa6\x0c\xb7\xbf\xd3\xf7\xb9\xdf!\xe7\xd3\xbf\x92M>p\xb6\x00\xa1?\x90\x1f2\n\x1a\r\xb6?\xbf\xc4M[e\xdfO?\x00\xacd}\xa1\xeb\xa8?\xf5\xbc_\xe3\xc5\x1e\xc3?J\xb2\xc5\xa1\x8d\xed\xb9\xbf\x1f\xed\xa5\x8e\xae\xa1\xa6?g\xb5Ue\xd2\xd0\xa9\xbfQ\xa7\x06\x1c\xc5\x9f\xb5\xbf}\xa5\x8b\x9a\xff^\xb0\xbf\xed\x04+\x15\xede\x81\xbf\x1a>\x9c\xa0\xfc\r\xcf\xbf\xda\xcb\xbf\xb8\x80\xb8\xbc?\xdfU\xf0\tO\xbb\xc9?\x1f5\x14\xb9\xa1\x06\x92\xbfMI"\xe7\x04\xa8\x8d\xbfk\xe22K3\xa7s\xbf_wW@\xe1\xba\xb7?\x93\xc11\xc34~\xb2\xbf>Q\xd7\xdb\xaef\xb1?|\x1c\x7f\x99I\xdd\xaf?b\xa0\tA\xfe\xab{?\x14\xc6tG\xd3\xa2\xbf\xbf/NDv\xf1\xfc\x81?\xc6E\n\x85\x05\xcf\x82\xbf\x88:\x86\x9c\xd0\xba\xa8\xbfj\xe7\xde\xbd\x94\xf2\xaa\xbf\xc0K\xc6xk\x85\x8a?\xc5W\xb8\x1f\x9a\x0f\xbd?<\xfc\xe6\x9f\xb1\x81`?b\x138\x16\xfb\x18\xaa\xbf\x9b\xdc\x89\x1f\xa2g\xca?Zl4I\xe2}\xca\xbf\xd7wX\xd0n#\xc0?BW\x92\xa9z\xccp?\xf3s\xd9\x1boG\xa2\xbf\xa5\xb8\x8a\xb1\x88w\xa3\xbf\x04+\xc46\xf0\xbc\xb9\xbf\x83>\xb3\xe9\xb8\xff\xad?u22+\xef\xe2\xb5\xbf\x12\xf1\xa8\xb0\n\xa6n\xbf5\xc8\x18\x81\x14\xe8\x91\xbf$\x05ae~@y?\x93\xcd\x15\xe1]1\x98?\x87\xba\xad\x8cB\x9a\xb1\xbf.\xd4\t\xbb\n\x1bv?M\x1e\xe4Ws\xbd\xb4?\x06\xa5\xcc\x07\t\xc0\xb3\xbf\xa0\xca\xbb\x81>p\x82?0\x8c\xa2\x9cNx\xa9\xbf\x0cAE\xcf\xb5W\xc4\xbf\xa1@5\x9b\x0e\x82\xc4?\x9d\x8e\xb7\\\xc0<\x98?\x85g\xcbl\xa7\xcb[?\xc9\x10>\xa6\xd3I\x8e\xbf\xdbY\xa0\xdaU\xe8\xac\xbfo\xda\xd9\x1e\xdfP\xb7?\x16n\x80\xc2=\xe4z\xbf\xa5\x87\x0f4\xf0\xbea?\xea\x80\xd17_t\xba?r\x90\x8a\xc7!\x03\xc0\xbf\xfb3\xa5[K*\xab\xbf\x87\xfd3\x1fvJ\x91?\x05\x91\xda\x84H\xfb\x85\xbf\x13\x13\r?b\x86\xbb\xbf\xf3\x06U\xd4Y\xa9\x8f\xbf\xe1V:\xe4L#\xd7?~\xf3\xc5\xb8\xd5\xc0\xb5\xbf\xd8\x84>\x894v\xa5?\xf9+\xc1\xe4\x0b\x80|?\xf3\x9eC;Z<\x99\xbf\\f\xd2\xf0\x84v\xb2?J\x05\xa9\x943\x9f\xce?\x89\xac\xdf\x8c9\xcc\xb1\xbf\x99-\xd5\xf3\x8f\xe4\xc3?9)\x9cH\x8b^\xb3?u\x82\x82`e}\xbe?\x9b\x0fk\xe0fA\xa3\xbfo\xd69\xea\x0e*\xb0?M\xcczxd\x1f\x98\xbf\x1e\xbe\xbc\xc5\xaf\xf3\xc5?F\x99\xb1\xf1m5\xd4\xbf\xf5y\x08<\x1b\xbd\xbf\xbfx\xeb\xed\xbdA8\x9a?\xbf\x1fFV\xff\x85\xd3?\xda\x11\xd1\xae\xda\xde\xb0?.\x85\xeb=*J\x95?\x00\x7f\xe8F\x00t\xc0\xbf\x80>\xf834\x80\xba?q\x97\xff\x97\xfb;\x91\xbf\xafJ\xd1\xd3\xe6\x19\x9f??\xdc-Mn\xa0\xa5?\x18\x94!\xdff=\xd6?n U\xdb\x1az\xbb?\xb5\xcf\'h\xe6F\xbd?\xb1&\xb3=\xb62\x98?x\xe2<\x16\x06\xd5\xb5?\x9f\xcf\'\xc3_\x8c\xc7\xbf\xf2C\'8u\xc0\xb5?Z^J.\x92\x0bl\xbfAm\x89c\xae(\xc2?\xda\x9f\x96)\xb6*\xc6\xbf\x1e\x86\xd6\xe2\xbewx\xbf\x01\xe6:\x0f\xe6 \xb3\xbfJ7H\x9a\xf0\xcf\xa3?\xdbC\x84r\xe8\xcf\xc1\xbf\x89\x81\'z\xa4\xd5\x8f\xbfv\xc39c\x92\x04\xc3\xbf\xbb\xdey\x8e\x0cX\x8f\xbf9a\xa8\x19 2\x9f?\x1eZ1\xa6|\x85\x92?\x03\xaee\xb8\x89i\x90\xbf\xf1^\xef\xb5*u\xb9\xbf\xc2>\xe3\xab\x1e\x1b\x8d?\xe2wT8j4\xb1?-\xe4h\x05X\xee\xa5\xbf\xaa0\x01\x0f\xf0\xc2\xaa?5\xe2\xbe\xf6\xe50\xc1?\x87\xad\x8e\x95%\xff\xe0\xbf\x81\xf2\xe2J<\xb9\xa3?\x08\xdeK\x83k\xa9\xb0?l\xa2U\x1a\xc9mq?Tx\xeb\x02\x0b\x06\x87?\xd1\x07]\xc4/-\xa1?\x80\xael\xe3K\x84\xb7?\x0b?E\xe4\xd0[\x90\xbf\\>\x87\x9c@Hl?\xa4\xb7\xde1\xd8\x14\x92\xbf\xde\xdf\xa3\x98\xae!V?x\x87P\x1cv\x16\xb9\xbf?\x153f\x0b\x18\xc2\xbf\xc5q\xa5:4`\x92\xbf\x07\x95f?\xc2~\xb2?o:\xbb\xa9\x8d\xf2\xa8\xbf\x03\xbf\xcd\xd1\x13\xe0\x8b\xbfr\x1a\x96f\x9e\xf9\xb1\xbf\xecn\xe0\x95R\x97\xc8\xbff\xc9\xc4L\xfe\xa5\xac?>0u\x90\xfb\x8a\xbf?\x10B\xb0\x90\x0b\x1c\xc0?X\x0b\x99\xc8\xb0\x8ew\xbfQ\xc7\x07\x1d\x16bk?\x80\x0b\xf7\xe7\x8a\x00\xa2?\xac\xde\xb9\xe9\x19Y\x86?\x1f\xec\x7f\x05HT\xaa\xbfv\x8a\xb5\xda\x9f\xda\x88\xbf\xfc\xae\x11\x8b\xb8\r\xa4\xbf\xa0\x92\xf8\xbd\xd4+\xbe\xbf.\xf2\xc1yG\xbf\xc7\xbf\x97\x82\xbfJ\xdb\x16\xa5\xbf\x12\x0c\xa8\xa6\xe0g\x9e?n,\xfe\xb2\x98]q\xbf\xac\xd6\x91\xd9Q\xfe\xa0\xbf!\x90\xa2\xe7}\x85\xaf?\xcd\xedo\xa2AE\x8b\xbf\xe0Mq\xaf\xa5\xd9@\xbf\xfa7)\x98\xca%\x94?\x1e\x81\x07\xc5|\x1b\xa4\xbf\xe1V\xfb\xfe\xac$u\xbfN\x0c\x8e\x0f}h\xa1\xbf\xe7\xb1}Q\x96\xde\xbd\xbf@f&_\x86\x8b\xa8\xbfU\xd7\xc4\xef\x83\xc6\xb1\xbfj\xd8mMxD\x98\xbf\xe48,S\xed\xc4\xba?\xf9\xf8&\xa6\xae\xaa\xd1\xbfai\xadP\xf5\xcd\xb3\xbf\x10\x87\xe0\xe0\xddd\xba\xbf2\'2g\x05\xe8\x93\xbf\xe3\x04\x02\x8f\xec\xf3\x81\xbf\x83\x95\x8d\x16 b\x97\xbf\xe0\xda\x7fu\x06\xcb\xbd\xbf\x08/\xe8>\x97[\xb5?\xed9rL\xce\xbc\xb6?&+\xddpQ\xba\x80?\xcc3:\x1db\x81\xb4\xbfJ\x9fs1\x1a\xa8\xd0\xbf\xda\x1f!\xc6KFu?P?5\xbb\x12T\xba\xbf(\xcb\xdc\xd1\xc1\x1c\xa6\xbf\xfc\x18j"~C\xab\xbf\xd2)&\xe3\xffC\xa7\xbf\xefz5>\x92G\x97\xbf\xc9`\xfc\xa2\x19\x87\xaf\xbfk\x99\xb6\xb8v]\xbf\xbf4\xdf\x16"\xa9\x06\xba\xbf\xac\',\xd7\x1d\x95\xac?I_h\x87\xbeA\xb2\xbf\xe2\x92\xc4\x9ap\xfc\x8d\xbf\x96\xcc\xd0\xfbG\xbc}\xbfC\xb0\xff\xcd\x1c\x93\xa8\xbf\x02s!\x81\xc6f\x9e\xbf\xe5\x967\x894\xb0\xd1?s\xd8\x80$\x91\xe5z?\xc2\x02\x1e\\;^\xa3?K\xf7\xcd-\xd6\x01\x8c\xbf1@\xcfly\x05\xbb\xbf\xf3+\xa0\xc0\x8a\xf7\xa4\xbf:/s\xa3\x150\xa1?\xfb\x81\xb3\x06\xc8\xde\xa5\xbf\nD\x1d\xbc\xc7b\xb5\xbf^\x0f\x10b\x15?\xb4\xbf\x9c\xfd\x0e\x9e<>d\xbf\xdd\x0bk\xcdR;\xa1\xbf\xb2\x8e\xc9fM\xee\xb0\xbf\xb1Oec\x7f\x12\xb8?\xc8w\x18\xd4\x8a\xfa\xaa?\x05\xe9\xf7\xa1\xaeU\x95?Vi@%<7t\xbfTj\xb1\x80\xf5 \x94\xbf\x8a}\x99\x18\xd8\xeb\x8e?-h\x9d\x88\xef\x9f\xac?_\x0c\x90U\xad\xee\xad\xbf\x039g=zn\xa8\xbf\x18,\x18\xdc\xf4\xd3\x8c\xbf \x12\xd1&\xe7Kh?\xedF\x11/\xca\x17\xc1?\xa8O!6\xfag\xb9\xbfm\xdd\xb3\xee\xbb\xdb\xb2\xbf\x1d1.G\x91\xaaN?\xe0\xfeo\x8a\xd1\xd6\x88?\xc1\x8d\xec3\x06\'z\xbf\x8as\x98pd\xee\xb0?,;\xc3@\x81\xa1\xb1\xbfG=\x14\xd3SW\xb0?Aw\xee-3\x0c\x8a?<,\xbfM\x1d\x92b\xbfT\xb4{\xb7\xd7\xfd^\xbf/\xdaR\xb4e\xf7\xac\xbf|\xb58\x07\xc4i\xc2?\r/y\x95\xe2\x18\x97?\xb5o\xfb\xaa\xc5\xd2\xbd\xbf\xc6IQ^F\xce\x81\xbf$&\x1e\xdb`\x90\xcc\xbf\xdd&\x81#\x11\xc5\xc4\xbf\x9c&\xab\xa6\xe9"\xad?\x1e\x07u\xd5\x10\xf5\xb7\xbf\xday\x02\xb0<4\xb1?\xa4v\x1c\xee\xc3\xff\x8f\xbf\xec\xde=\xa2\xe0\xc8\x91?\xa0\xb7\x96\xe9\xe8\xf5\x86\xbf\x12\xa2\x9e\xf1\xf8\xc2\x8a\xbf\x0cJN\x97P6\x8f\xbf\x9c\xefq\xda\x84\r\xc4\xbfU\xac\x02Y\xfc\x95\xad?J\x1d}X@\xd3\xb5\xbf\x8fF9\x92\x9ds\xbc\xbf\x05\x83\\\xe6\x0f#\xb5?\xe1UW\xfe\xf5G\xb7?W\xa0_\xc27\xc3\xb0?$FK\x8c\x90H\xb6\xbf\xd4by\x13N\x8f\xa9\xbfT\xc5\x80n\xd5"\xae\xbf\x0f\x14\xac\x91"\x07\xc5\xbf\xbd*\xfc\xa3\x0c\x84\xb9\xbf\xb1~\x1e\xa5\x88X\x99?\xd7%\x01\x9c\x98ur?<\x8d\xee\x1e\xe7\x84\xa1\xbfD\xef\xa4j\x8c\x1a\x84?\xfb\x1dW\x7f\xd3\xd5\x99?m\x00Q\xbb\x03\xadv?\xc2XpI\xe0\xddx\xbfy^+\x10U\xbfJ?c\x97\x0f\xe7\xe1\r\x88\xbf\xae\x01\x9c\x94\xbc\xc0\xa2\xbf\xb9\xdaP\xe1\xb5\x87n\xbf\xb2\xc6\xed\x1c\xc2f\x91?U\xffE\x8daPL?\xbf\x91*q\xa96p?z\x80\t\xe4G3\x85?;\xce\xe4\xd5\xe6\x17\xb0?\xa3yn\xd5~\xd1\xa6?S\xb9\xbe\xcc/\x0f\x81?\x1b!\t\xe9\x0c\x80\xa7\xbf\xcc\xc2\xbc*wj\xa8?+\xfc\x02g\xaa@\x85?\xc9{\xf6\x1846\x93?\xd6\xd2TU\xe1m\x9c?\x93\xc8|\x87\xa5%\x84\xbf\xf7Du\xe3\xf9\x1d\x93\xbf\x81\xf0\xb5\xf3\x9f\xd7\xa3?Q\xc1z\xeb;\xc2g\xbf\xca\xd1\x95\x93P\x06\x83\xbf\xe3c*As\xc9\x8e\xbf\x1f\x80\xefi\x0c\x13\x80?O>\x8e\x03\xbb\xab\x91\xbf\xa2FA$\xdc\xb5\x96?\\\xcdKO\xd3p}?\xaer\x11\xa4l\xf0\x7f\xbf\xbb\xb4\xbe\xa0B@b?\xe6\xc8\xb2\xe2\xa9\xb8\x8a\xbf D\xf9\xa5\x10\x80\x99\xbf\xb7X\x19\xa8\xea\xa9\x99?R}\xe2\xcbz\x06t?,\t+#\x9f\xa5u\xbf!\xe6@\x0e\xa9&\x93?`\xbb\xe1\x98\x16\x84\x86?\\\xc7\xf0\xcf1\x18\x83\xbf\xcc\xa6\xa5qTvR?7\x811\x82M\\\x8d?\x7f9Kl0Gz\xbf\xe7\\\xf1\xff\x9dx\x9e\xbfJ\xfa\x83\xb03K\x92\xbfT\n$B\xb5j\x91\xbf%\xb8p\xc6]D\x94?\xf5\x81\x94\xad99\x95?\xfe\xce\xb4S"\xba)\xbf\xe8{W\xa0l\xf1j\xbf\x7fsf\xc6\xec\x9c!\xbf\xe9\xaf\x81m\x89\x13\xa1\xbf\xf3\x84\x01\xc3F\x82\x1e\xbf*v\xfa\xac\x00\xcbd?\xf8\x02\xafE5\x1d\x9e\xbf\x07\x93&\x94k\x0b\x9c\xbf#c\xa4\xfc:\xb7\x91?\x18\x97\x19l\xe4\xe8\x85\xbf\xd8\xd9\x15\xb32\xb1\xa1?T\x01\xe3\xafE\xbc\x90?\x17\x16\x12\x88\xd1\xc0P\xbf\xb6\xfe\xf8\x92g\xfep\xbf\x884\x95\xc3\xde\xc8\x8a?\x0f\x83\xe0\x0f\x9d\xb8P?\xf1%\xd4\xd5\xd3\xee\x83\xbf\x07$\x17\xb6\xc4\xf4\x88\xbf\xfbY\xa6\xa8\xb8\x86\x92?\xea*\x8c\x95\x8di\xa4?\x00 \xd1^\x00]\x92?B\x97\xca\xf5k6\x82\xbfa\xfa\xc9k\xc0\xefo\xbf\xce\xb2\xfaW\xabp\'\xbf\x9ep\xa4sB\xcb\x9b\xbf#\xb5@u&h\x97\xbf\xb5\xb1\xd0\x84\x98\x8ew\xbf\xd1\x9dh\x8b\x15\x1b\x9e\xbf\xab\xf6:\x89\xe8\x93e\xbf\xd7\x0b\x9e\xcajU\xa7?\xb5\xcc\xd7\xd3\xbb\x97\x96\xbfI;\x9fZ\xdbz\x90\xbfJ4\x80w\xf9"E?\xc9\xac\x8b\xb9\xb6*\xb3?cl$\xcb\x03A\x81\xbf\xa5.\x9f\xcd\x19\xc6\x85\xbf\n:Nu7u\x92?\x03\x89L\'j\x0e\x91\xbf\x80\x0e\xeca\xf2z\x81?\xcfi\xab\x9d\x03Aa?-\xd7\x83v\t\x81\x9b?\xc4\xd1\xce\xda\x0fP3?\xdf\xb0\xc3\xb4\x10\x91Y\xbf\x89^z\xefv\x00\x85?\xc4\xab\x99\x8d\xf3*\x90?M\x8f\x93\xa4\xbbo\x93?\x19X~\xc7\xa7)\x91?\x96a&\xc1D\x96K?hi\x0c\xacb\xcc\xa0?\xc7\xe4\xfd\xa3\xae(x?\x95\xae^8\x84\xde\x97?5\xd9\xf5\xd1\xba(\x96?\xae\x9bv6Z\xb7\x8d\xbf\xbd\x92)<\xd0\'\xb9\xbf\xfb\xa7\xf3\x92`\xf7u?^\xd3d\xc3Kt\xb4\xbf\xc76\xfb\x0e\x10\x81\xa8\xbf\xd1}\xcd\'WI\x9b?\xbd\x0c;?\xac\xd1\x99?*sT\xa9Z\xc8\xaa\xbf\x0c\xf8\xf0\xbbbt\x91?E\xab\x9b\xf2\x07kr\xbf\xb7\x17V+\x98\x9cb\xbf\xfcN\x85\x9f\xbdW\x90\xbf\xdb\xcf\x91\xa1& k\xbf\xfa\x15\xbdV!\x93\x9f?\xdaRR\xed\xe2\xf2\xa4\xbf\xa2\x88\x82U\x9f1i?\x04\xdf\x99\'C\x14y?{\x06x\x81\xcf-\x91\xbf\x15k\xe0\xb5\xcd\xb1x\xbf\xba\x1c\x9b\xcdb\xdf\x95\xbf4\x7f\x1d\xfd\xe29\x91\xbf\xcc3\xe0\x07\xe5F\x9e?\x8fX_K\xb1.L\xbf-e\xdc\xcf\x8e\xcfK\xbf\x96&\xfd(,\x8fw?\x13UdU*\x16\x83\xbf\xab\xaf\xbd\x97\x91r\xa7\xbf\x82\x84\rD\x07\x1f\x83?T\x82\xc9\x9ad\x9d\xbd\xbf\x1e*\x102\xe6\xf9\x93?\x006D\xfe\xe5\x19h?\x1c2\x8e\xc8\xa9\n\x97\xbf\x87\x94L;\x9c\x14(\xbf\xbc5> \xc3:{?@h\x18\x9d\xa6K\x7f?b\x9f\x8f\x19\xb7}\x87?\n\x84\x9b\xc4\xc4\xa1\x97\xbfp["\\\xfc:\xb4?\xbfe\x0c\x08u\x01\x90\xbf\xa4\x8bp\xac\x07\xdc\x90\xbfu\xddkZ?!u\xbf\xed\xdf6\x82z\xb6\xa4\xbf\x1a\x8e\x95\r4;\x83\xbf\xd1(eY\x8a\xaa\x93\xbf\x9d\xe5\xd4}\xbb\xa7\xe3?j\xc7\x86\xb4Q\x85\xac?\xe9\x97\xc9\x16$zz\xbf\xab\x9fd,\xf5\xcee\xbfQ5u\x18\x85s\x17\xbf\xfa\x93*\x8b\xaf-\x88?\x12<\x8d\xdf N\xa3?\xf7\xdcKo\x11\x8f\x9e\xbf\x08\x89\\"\xe7\xd1p\xbfZ%\t~A\xcbx?+O\xc1\x8d\xf9\xf9\x9d\xbfurP\xcf\r<T?~f#\xefpa\x81?\xd4\xfe\x8d\x9c\x8e\x98\xe6\xbff\xad\xf0]\x8f\t\xb2?\x96y\xf8\xd1\xb0\x1eV?\xb3\xa1`\x85\x1e\xcf\x82\xbf\x03\xb4F1\xc9\xab\x93\xbfa\xf7\x89[\xb38\x87?\xf4\xe1\x1f%\x07\x85\x84\xbf9\x16-Y!\xb9\x85?B+\x11c?\x04\xc1\xbf;}\xfaI\xa6\x12\x8b?\xa8\xae\xa7\x02l\xd4\xd5?\xe7\xcd?&\xb5\xeas\xbf\x1c\x08\xa9\xdf\xd0\xff~\xbf\x9d\xb6\xee\xd1\x1f\xba\x82?\xd4\x8d\xc4\xb4AE\xa2?\x1f\x83[\x19\xb5k\xd1?i\xca\xdd\xb2H\x95j?]w\n\x04{\xa6\x9e\xbf\xf5\xa5\xa47\xc3[F\xbf\xd7\xa8ugE\xa4q\xbf\xdcH\xcb\x8b\xf00\xb9\xbfi\xa9^tN\xd7\xc2\xbf=\r\xcd\x9d\x10\xffT?\xcc\xda^\x0ca\x83q?\x15\xa0O3%\xd5\x91?N\xe7\xce\xc5\xde\x8c\x8d\xbf\x05U\x9c\xb1\xd5k\x94\xbf\xdb1\xadr}^\xb6\xbf\x1b\xbe\x07\xbe\x10z\x94\xbf\x8da\x8d\xe7&\x8a\xb2?\xe1\xa1.\xc3\xd7D\x7f\xbfW\xf8\x1a\xd7Ve\xa5?\xb9\xcc\xb4\xffEd\xa0?\x1bA\xe6\x12\xbb\xa3\x99?\xbf\xe4"o\x80\xce\xad\xbf\x98\xb2\x15\xceW\xf8i?F{\x08\xee\r4\x96\xbf\xb9\xf8Q\xa6\xafi\xa6\xbf \xa8w\xd0\x88\x8a\x87?\x13\xaa\r\x17\xe7Es\xbf\xde\x99\xff\xffr\xfar\xbf\x186\xf37\x92Sx?\x98\xfb\x86\x89K#\x8a\xbf\x14\'\xe5M\xd8\xf9r\xbf\xe9\xa5j\x0f\x11\xa5\xa2?\x0e\xde\xd2\xdc\xe9\xb2\xcb\xbf\xea\xa3\x15;9o\x8f\xbf\xb05p\xaf\xae-\xab\xbf|Gh\xfe\x03%\xb2?\xfe\xb6\x1e\xe7%"\xa1?\x02\x00\xee\xeb\xc8\xd9\xb2?sG\x8c\x03K\xf1\xa5?@\xce%\x04\xb3\xc1u\xbf\x94t\xf8\xdd\xa3\xc0\xcf?\xc6hu\xdc\x9f\xb2y\xbf\x13r\x89\x7f\xfa\x1f\xc0?\x96\xae\x0f\x8a\xb6\x81\xb8?5&\xab\xafm\xfd\xa3\xbf\xf0\xec\xd4\x9cz/}\xbf\x06\x8aH{\x96o\x91?\xe90\x0bKZ\x05\xc3?#\xf9\x0e\xffK-\xcb\xbfg\xb5\xbc\xc6\x83\xe2\x9c\xbfI\x8dU+i\xd4\xd0\xbf3\xb6\x9e\xd8g\xe6\xd5\xbf\xef\xe2\xf0:\xc4\xf1\xb4?\xe2\x17\x9eZQ\xe4\xa7?\xe2\xf3\xf6@\x80c\xb3?eA\x17\xbe\xbf\x8a\xc2\xbfx\xa7\x18\xbb\x0e6\xb6?!\x068\x13\x1cC\xca\xbf\xe5\x9b\xba\xdd?\xfc\xa1\xbf\xbb\xf4\xc4\'3L\x97?b0\x87\x91\xac\xaa\xd0\xbf!\xca\xc3\xd6B\xd9q\xbf\x04D#D\xd5\xac\xad?=\x07\xf3/\xa6\x86\xc8?\xcdn\x97\xf6\xac\xf1\xb0\xbfc\xbc\xc9\x02\xe6\xbe\xaa?\xb7 kSb\xf2\xbb\xbf\x81Z$r\x11\x17\xc3?\x88f\x07\x9eK\x81\xc8\xbf\x0f:=\xdef\x02\xd0?\\o\x84\x9c 0\xa7?\x1c\x94\x8b\x95\x07\x89\xb4?\xd5\xdf\xbcA8t\xe0\xbf\xef\xa2\xc3\x1flL\xc1?\xee\xb9%Mt\xab\xac?|\x98\xef\xfd=5\x83\xbf\xaa\x8a\xa5\xef\xfaY\xa3?\xf7\x9e?\xe4\xb7:\xc1\xbf\xd0\xdb\xa1\x1fe\x88\xc1?\x7f\xe2\xd4\xc9hm\xa2?\x08\xb7T\xc9\xb0\x1a\xae\xbf0d\x05O9q\xa1?h\x0c\xc6\x10\xc8\xff\xa0\xbfj2\xaa\xa23\x98\xc4\xbf\xe4-\xcc\x01F\x92\x9f\xbf\xb6\xf3\xd2\xac\xcfQ\x81?\xb2\ts\x96\xae\xafn?\x1b{B\xc3\x9dw\xa7?\xb9\xa1\x11\xb9\x98\\\xa1?J\xfd7\x06\x8c\x83\xb6\xbff\xe1\x86\xa5A\xe9\xc6\xbf\xb9\xa5\xfc\xbbLw\xa4?\xe9\x9dGtG5\x8b?\tz\xe6HU\xd7\x85\xbf\x00\x85\x83\xa1\xc4\x8e\x99\xbf\x8b\x05K,\xc4O\x95?\x8e\xd3\xd0\xc9\x1e\x0f\xa6\xbfu\tp\x84xO\x9a?cn\xcf\xafp\x9b\xb3\xbf\xfc\x9fO\x88G\x91|?\x87\xb16\xadp\x07\xab?4\xfc\xe2\xb2\xeb\xf1\xb0?\x91T~\xa8\'\xcef\xbf\x15\xfev>\x05\x12\xb1?\r+\x7fm\x81u\xbe?\xb3\xf8z\xc3\x12\xf3\xb7\xbf\xf6"\xd2\xcf\x1c\xeb\xd2\xbf\x12F<\xde_\x18\xad?\xe02\x83\x04\xa5P\xa6?"M\x1a\x1f\x1a=\xa7\xbf)\x91\xf5\xc6\xc7\xe7\xd5?\x0f\x0fA#\x81\xab\xa4\xbf\xcf\x90F\xe3\xd3\x80\x89\xbf\xbdI\xe5XW^\x96?\x16\x1b\xa0E\xd9\xdd\xb0\xbfqR\x84T\xd0\xa7\xad\xbf\xb5\x81\x10m\x1f\t\xb1\xbf\xb1\xb3U\x08W?\xc3?bS\xd2\x8a>\x8b\x93\xbfE1\x93\x04\x11\xb3\xbd\xbf\xfc\xebA\x0c_\xde\xd8?|)\xfa\x85}\x89\xbf\xbf\xd8\xcd\x18\xf23U\xa2?\xe3\n\xad\x9f\xa5O\xae?0\xd3\x16)\x0e\xb0\xaf?|\xc3R\xa6TA\xa1?>\x1f\xcbN\xc5\xd0\xa2?\x87c\xb9\xb8\xcf\xe0\xa1?E_\x0f6%Y\x80?\x84}X1\x17\xdc\xb4?\xf9y@\x97\xbaCb?&\xc8\xd7\x9b\xe5\xa6\xb1?\x1a\xb9Z\x81\xa7\xa1\x7f?K1\xd3_\xeb$\xaa?\xd5\x8ax\x0eZe\xcb?\x15\xc2\xe3\x83\xf4g\xbb\xbfv2\xac\x10y.\xc9\xbf\x89\xfa\xe9]V\x88\xa5?0\xbf\xda\x80?R\xb8\xbf\x89\x8e\x89@v\xe8\xa3?\x84\x13z\xa7G\xdd\xa3\xbf\xfb\x10\xff\x9dEYq?#,\xc7Va_\x9a?5\xec\xc1\x88\x18\x18\xc1?02\x12\xcfc\xc4\xc2\xbf\xf7wxYE#\xa8?`)\x19\xe9<-\xc5\xbf\xb6\xcf\x96j\xe2\x95\xc8?\xca+]k+\x95\xbd\xbf{\xd7\xf9\xb1\xa2\xda\xa6?r\xc4\x0f\xc5\xd1\x95\xc3\xbf\xf5+\xf0-\xcdB\xb9?\xda)\xa025\xb2\xd3\xbfe\xe9X\xbf<]\xaf?\xe8\xe5$\xcb\xef>v\xbf\x1amE\xeb\xd2\xe5\x91?\x021!\xc5X\xe3\xa6?D\xcf\xea\x8c\xc8#\xba\xbf\x08\xc9(\xb9yR\xbd?C\xc9\xc5\x7f\x0fW\xd3\xbf\x84\x1cp\\\xfa-\xb7?$\x0b{\x87\xdf\x8c\x96\xbfw\x14\xcd@)#\xc5?\x07\xf3\xe9w\x1c"\xb8\xbf\x03\xf3n&-Z\xc0?\x91x\xcb\x00\xa9\xc7\xab\xbf"W\x8cgrJ\xbe\xbf.\xc1\xb8\xe6<u\xa3\xbfVo\xa3/\x1e\xa2\xad?\xf7\x02J\xbe\x8dD\xa9\xbf\xc7X\xc3\t5\xaf\xd1\xbf\xa2\xedL\xbe\x8c4\x94\xbf\xb9=\xf7S\x0b\n\xc9\xbf\x90O\x7fQ@\xc7\xb0?\x88\xc6\xe9\x9b\xeaP\xcc?\xef|\xceN\x13[\xb1\xbf\xe7\x06_ ;\x9a\x9a\xbf\xea\x03l\x0c\xb4q\xc5?Y\xab\xf4!\x0c\xb7\xce\xbf3|i!\x1c9\xd1\xbf\x87\x85\xc4\x1c\xa42\xa4?\xe2\x1e\xef\x84\xb6K\x91?\xfa\xa0QX,\xc9y\xbf\xe6\xe2\xefy\x98\x87\xcc?\xedMrL\xbf\xe3\x94\xbfp\x95\x1e\n\xf6\xeb\xce\xbf\xb5M.\x05\xafz\xc5\xbf\x85\xce\xe8m\xea\xf8\xce?W\x92\xb1\x88f/\xc1?\xbf\xa3\xdc\xca\'%\xae\xbf\xe0\x17^\x04\xa9\x88\xa5?\x19\xfa\x1c\t\x19\xfd\xaf\xbf\x98\x17\xc1\xcb\xf8\xab\xc9\xbf\x1c\xf13uaYu?\xb3\x0c#\xaf)\x1f\xa8\xbf\xc5\xa0\x04\xaf\xb52\xb9?:\xc4\x81S2F\xc7\xbf\xe1\x0e\xd5\xc7\x89\xc1\x8e?\x19\x9aIZ\x12?\xa2\xbf(-U\xbb\xa0c\x84\xbf\xd9\xc2\xf4\x11G#\xc9\xbfBd\xfc\x87\x80:\x9a\xbf\xa98\x94\xb1\xb7\xa4\xb7\xbf\r\xcf\xe4\xe1M\x8e\xa2?\xe2\x03\x11\x07\x84\xd0\x8e?lh\xd1\xc6\t\xc8\xd4\xbff\x12\xd0\x1e\xb3Y\xa4\xbfO\xf3\x0f3%\xc2\xc2\xbf\xb3\xf6\x1a\xff\xbc\xa4\xc4\xbf<\x99\x17\xbac\x8b\xbe\xbf\xed\xe1\x11\xa2\xf7\xcc\xc7\xbfGPHTm\xfc\xc8\xbf\xf3\xf5Y\x02\xa8\x1c\x8a\xbfE\xab}\x87t\x0c\x81?\xd4\xdc\x0b\x97M\x0b\xaa\xbf\xbbC\x87\xb6\x1e\xf3\xa8\xbf\xb5\x16\xdc%\x1c\xf2~?\x81\x95fa+i\xd1\xbf!\x03\xdf\x0e\x93\xd9\xb2?\xf1\xe0l\xc2\xd7d\xd1\xbf\x89Fj\x04\x04=\xc6\xbf\xf4~\xcca\xf5\x94o\xbf\x87\xe9\xc05\xfc\x9f\xb5\xbf\x9fg\x9c\xecX\x99\xcd?X\x8b.\x1d\x91\x82\xba\xbf\x9b\xc2\xb4|\xfa\xe0\x90\xbf1\xa1\xf0\x07\xff1\xba\xbf\x84;g_g\xbc\xc6\xbf\x1bR\x0e\xbc\xe3\x0e\xbf?\x1eR{4\x82|\xab\xbf\x19\xf1\x13\xddz\x03K\xbfm\x17\x03\xe9\x9bM\xb0?\xd5\xdb\xb9Y>\x99\xc8\xbf\xffF\xba\x84\xb5z\x9d\xbf\xf3Q\x83\xc3"\xa4\x8e\xbf\xe9\x9f}\xab\xcb\xe5\xc9\xbf\x17r=\xd0O\xa6\x95?\x11x,\xbcI\xb4\x8e?\x1c\x7f*\x0f\xef\xe7\xa9\xbf\x1c\xf4\x89\xf3B=\xc0?\x8ev\x94\x07o\xa5\xce?\xc2\xf9\x053\xfd\x18\x9b\xbf\xbb\xd3>8\xf2{\xaf?\x17s\x00\xca\xcb\xaa\x88\xbf\x1f\x03\x9f\xbah\x08\xaa\xbf&+\xfd\x0fu\xaf\xb3?\x88\xe8\xefX\x10\xbb\xbb?$\xd8\xc6\xd2\xac&\x81?eX\xcb\x1a\'\xf5\xe7\xbfk\xf1\x80\x05Y\x84\x8f?\xd2\x12\x17\xa4N\x07\xd1\xbf\xf6\xd7P:\xef\xb7\xbd\xbf\xed\xc7HD\xab\x8a\xb3?h\xbd<)s(\xb4?\x04\xc0\xfbBI\xd7\xb3\xbf\xe3\'\xda1+\xd3\xc3\xbf\xd8\xb9\xfe*\xc1\xa7\xa3?\x805\xd3\xdf\x90L\xd1?&\xf1\x8d 0\x8dv?E\x92b\x92OY\xc3\xbf\xb4\x06\x13\x00[\xf8\xc2\xbfq\xaa\xb7\xea\xf4\xb6\x87\xbf\xa7\x99\xb1\x7f\xec\x05\xaa\xbf\x80Q\xc6K\x0e\x9b\xcb\xbfP\xd0/\x96\xf1U\x97\xbf\x04\x94s\xff2\x82\x9b\xbf#h\x88\xaeq\x14\xbc\xbf\x94o\x18^i\xe5\x88\xbf\x16nC;\xaa\xff\xcd\xbfy\xfc\x17\xc6\x98\xc0\xb2?^\xcc\x14Cq\xef\xb7\xbf\xb3\x8b\xe5\x11\x83\xede?;\x85\\b\xca\x8f\xc6\xbf@,\xd1\x1f&\xac\xbb?\xc6\xfcW`\x943\xa9?\xe5\xf5\xd6\x032\x18\xa6\xbf\x93\xe9\x1e\xcd-\xb3\xbd?\xc4i\xac\xbc\x1f~\x9e\xbf\x8a\xbd\x82\xb5\x10\\\xdb?3\xfa\x0c\xde\xeb\xf5\xb1\xbfl7\xac\xbf\xadh\xa6\xbfE\x96\xc8y\x9e\x05\xc9\xbf\x07\x8f\xbcv\xfc3\xb0?T$\x07z\xef`\xb4\xbf\x8eq\xc5y1x\x9b?\xc4\x03\x14\x97k\x99\xc4\xbf\xd1\x08\x01\xd8\x99\xfb\xbb\xbf\xfb)\xb8\x9ahL\xa4?`u\x18\xf4o\xd4\x84?y\xe3\xb9\xbd\x82\xf9\x7f?\xce\xa8\x98\xc9\'\xb1\xbf\xbf\xc4\x9f\xba\x94&%\xa9\xbfP\x0c@xm\xae\xba?\xff6\xf7\xb1#3\x87\xbf=C\xa8\xd2$\xa4\xdc\xbf\xda\xcf?\x9b\x0b\x19\xa7\xbf\xe1K\x96\x00\xa1\x9c\x9c\xbf\xbaK\x93\xbb\xd4\xce\x95\xbf\x15\xaaez"\xd3\xab\xbf\xfc\xa2\x85m\x96Iu?2>\xa1-\xd8\x02\xca\xbf\x16\x08d\x10\x98v\xa0?\x00\x86\xe8\x9b\xcd2\xa9??n\xeb\xf3Ma\x8b\xbf\xbe\xd0by\xf5\xcd\xd3\xbfn\xf3\xf8v\x8a\x80\xc4\xbf\x9ai7e\xb2r\xb3\xbf\xc5\x07\xd7d\xf0{\xb3?\x07x\x16,\xf89\xb8?Q\xf6\xbb\x8b\x03\xa9\xaf\xbfW\x14NQ\xe1{\xa5?C1\xdb\xd8\r\x0b\xc2\xbfJr\xef\x9f\xdf\xd5\x7f?\xc3\xc48\xe8\xce(\x83\xbf\x8c\xd9A\x03\'+\x8f\xbf\x1e\xfe\xb8\xdet\x9d\xb6?-\xb5\x0f>\x16\x93n\xbf\r\xd0\xb2"9J\xbd?\'p\xe9\xce\xb8U\x8a\xbf\x18\xfc\xce\xc1\xa2Z\xc1\xbf\xe40E\x06\xfd\xff\xc5?\xcf\xef\xaa$b\x8e\x9e?\xe4\x9c7\xe3Wf\xde\xbf\xb3\xbfM\xd1f\xca\xa3?Z%\xbd\xfd\xc1\xab\x85?\xe6\xbf\xba\xdf\x98M\xa5?=S[\xda\xa1\\\x91\xbf\x8f\xa0\xddfbY\xcc\xbf\x89\xcd\x86\xc4v\xe2\xc5?S\x8b\xa1\xb6\xd5\x87\xa3\xbf\'*\x80C\xba\x86}?\x0fa\x05\x1a\xb3\xe6\xc9?\x19\xa5\xa0\x0f;\xe2\xae\xbf\xa2>d\r\xb3\x86\xa4?\xe0 \x8e\xf1\xf4\xe6\xaf\xbf\xe6\xcc\r4\xe4}\xa2\xbf\x81\xc4\x96\xc7\x07U\xbe\xbf\x88\x8e\xe1\x16\xb2C\x88?\xf5\x89v\xe4~a\xb9?\x15qd\x89\xe3\x19\x8a?)9\xff\t`C\xb8?zn\xeb ]\xbat?\xb7\x9e\x84R\x94\xcc\xa8\xbf\xe7\xa5\xb5\xfc\x8dFw\xbf\xc6\x06M\x95\xfa\t\xae?\x8aUz=\xed\xd0\x80?\xcfv\xb5F\xd3r\xe0\xbf\x8b\x82\xa77\x9d8\xb8?\xb1\xcc7/K_\xe2\xbf\xd4\tS\xc2\x01\x9c\x95?f\x9eA\x11\x90r\xda\xbfj\xceY\xeb\x1el\xab\xbf\xd1Nq\xf86\x1c\x91\xbf\x02x\xc1\x82\xd5\xbe\xc9?\xd1\xbca\xf8\xdf\x9d\xc0\xbf\x0eR\xea?A\x1d\xb7\xbf_\x90V[\x92"\xcd?\'\xb5p@\x8a\x8c\xcf?p\xefS\xd3\xe5\xb0\xbe\xbf\xdf\x12\x1b\xba\xc1\xfe\xd9?\xb0\xd2\x11\x16X\xe5\xd9\xbf\xb8\'\x1bL#Pe?\x1a\xd8n`7g\xcb?\x86\xd3\xe9\xb1:V\xa8\xbf4\xafJ!\xc6\x95\xa5?Q\x80/m\xb91\x8c?\x16Y&\x8d \xea\x9d\xbf\x1f\xfc,\'\xfey{\xbf\xd7\xa6\xcf\xc7"]\xb9?\x9cQ\xe7U,\x99\xd5\xbf\xc6?\x18\x1a\xfb\xa3\xcb?\xa7\x19\xb5\x85\xc9s\xd0?\x9e\xd3^\x03\xc2\xde0?\xf3\'F\xa0\xe7s\xbf\xbfaM\x8c|-\x00\xad?\xbb"\xeawe\xe7\xb4\xbf\xdb\xa4\xec\xa4\xd6\x81\xb8\xbf\xc7\xf7,\x17\x0e\x7f\xc2?\x9dq\xe5*Db\x87?\xe0\x17\xb0\xe1SE\xcb?!5"wg\x87\xb6?\xa4\xab\x8c\xed\x05\xaa\xb1\xbfP\xaeP\xb5\xaaP\xcd\xbf\xf9\x97\xd3u\xff+\xa5\xbfh\x91n\xbe\xc9\xee\xa4\xbf\xf6L\x05T\xb9`\xc4\xbfB\xcf\xb4\xc5\x9b4\xa7?\x927i\xa8N\xc2\x94\xbfA\xfb\x0b\xf2\xedT\xb0?\xd8\xf6\xec.k\xc7\xb0?ha\xf2\xcdh\xaf\x9a\xbf\x16\x96\xc9}@\x8fu?\xbf\x9erA\x1f\x8a\xd1?&\x86Jr\xe7\xd9~\xbf\x8e\x81\xaf\xe1\x1d\xeb\xd6\xbf\xf0\xa1\x93w\x1c\x14\x8e\xbf3yM`V\x15\xb8?~\x82\xb7\xaa_t\x9a\xbf&#\x0b\x1e\x0b\x19\x92?`VK\xb2\xd9\xaa\x8b?\xe5\x8ds3\xe3x\xd3?D\xb4\xba\xd0\xd2\x94\x92?\xf8\x05\x9b\xc9\x08T\x91\xbfTf\x01;o\x81\xc4?\xb46(\xf3\x95.\xa6?\xaf\xad\xf6\xafb\x1d\xe5\xbfB\xac\x14\x98 \xce\xbb?\x05\xe7*,7^\xa3?\x84\xb2\xf3\xdfZ\xd2\xa5\xbf\x12S\x0eSN[\xad\xbf\\wj\x15\x9a\xd3\xbc\xbfA\x14\xf1w!\xeb\xa1?Km4\x0ct\x82z?c\xe5\x15\xb32\x88\x84\xbfr\x0f\xf8\xf4\xdem\xc3\xbf:\xa6\x9d!\x90\xd5\xa5?q\x8c\xd1\xe6\x95\x14\xaf\xbfD=\t4\x9dT\xd2?\xe7\x05\xcd\x17LH\xa5\xbf\x06\x14u\x13\xc1\xd5\xa1?\xbaJ\x8f \xee\xaf\xc4?\x8b\x86\x95\xbe\xda\xb5\xb8?R\xee\xc9\x98r\xf1\xce\xbf\'}\x18GB\xd2\x95\xbfW\xa0i\xf2.p\x8d\xbf\xba;\xfa\xec\xec\xf7\xba\xbf\xc1\xb3\xa4\x15h<\xaf\xbf\x0b\xfc4\xbbE\xe3\xcb\xbf\xb0a\xd3L\xaca\xb5?\xfa\xc3\xc3\xbc\x13\xcb|\xbf\xb0\x1a\'\x7fnNf?P\xa2\x8a\x9e;X\xc0?B|\xec{\xb4\x97\xd6\xbf/\xe2\xac\xb4\xef\xa3\xac?"\xc8\xfe\x08\x1b~\xb2\xbf5Q\xf6\x8e\xc3"\x8f\xbf\xee\xf6\xa5\x9cgE\xae\xbfV\xea\rj\x98\x0b\xab?\xef\xcd\x85$\xb1!\xb1?\xbe~6\xe2y\x19\xbf\xbf\x1c\x80\xa4\xdd\xc0A\xb3?\xc9\x0c\xcc\xc6\x13\xe4\x98\xbf\xf8\x18\xcfh+\xca\x9e\xbf\x84\x00\xb2\x8c\xddg\xb2\xbfl\x8c[\xfc,\x16\xc3?\xc6k\xa4\xafK\x84\xa3?\x16VI\xd8A\x0e\xc2\xbf:\xfc\xec\xd8\xedM\xa1?\x88@\xd0\x8d-0\xc2\xbf{\xa9\t\x9c \xaf\x9c?\xc8\xd0\x98\x01\xae\xf6\xd6\xbfik\xa29\x99\xd6\xbe?\x1d\xd3\xcc\xc2\x8f]\x97\xbf\\\x13\xc9\xd3\x1f\xfe\xaf?PV\x89yL\xe9\xb7?n\xb4\x8f\xd9*\x82\x80?=\xd3\x90\xc1\x17\xc6\xb1?X\xca=\xb9Xu\x96?\x99+\xfb\x07\x01\x99\xad\xbf?\x86\x01-\x18Z|\xbf\x83>3\x19\xe4T\x9c?\xe3w\x03\x00\xaa1z\xbfu\xd5>T8)\xd1\xbf\x8f0c\xea\xdf0m\xbf\x91-\xfe\xb3\xc4\x0b\xc1\xbf\xda\x14.\\\xe8}\xc7?\xdc1\x0f6\x88\xe7\xc2\xbf>\xf6\x83\xea\x15.\x9e?\xe5\xd4\xa5\x16\xe3\x96\xbb\xbf\xca4\x94\xac\xa8nK\xbfz\xb7Lr\xea\xe6\x9b?\xe7\xa7\x052b\xb6\xaa?\xad7\xda\x9ej\xa3\x81?\xaaX=\xa7E\xa2\xa8\xbf\xf7.\xc7\xc1\x9a\xe3\xa0?\xe8\xc5\xb7\xe6_\x08\xa7\xbf\xd2\xc32\x02<\x08\xc5\xbf\xdf\xdc\xbco\x13`\xcb\xbf\x81\x90\xf8\xc3\xed\x12\xaa\xbf\x9b\xd3u\x01\x81\xa4\xb0?q\xda3~(3\xaa?\xd0Y\\8\xe0\xad\x9d?q\xe5\x11W]0\xca?\x84\x1a\xac]\xf7p\xc7\xbfU\x18*Y\x95\x8ex\xbf^\xce\x12C. U?\x08>\xeb\x821\xd3\xb8\xbf\x06\xef\xc3ZMc\x8c\xbf\xca\xd8\x8e\xd9\xc7\x8f\xb4\xbfT<\xf9.\xc3\xc2\xa8\xbf\xac7%{w>\xd7\xbf[\xef|\x1f\xa7\xaf\xa6\xbf\x19\x05\xf6\xfb\x1b\x01\xba?\x0c\xa4z!\x8e\xf5\x7f?\x12\x0et\x08\xb3S\xb3\xbf\x03Z\x83\x08\x8bR\x9f?\xf3e\x96n\x83Y\x90?\x14\xdd&D\x9a)\x9f?\x96\xafz\xe49\x9c\xa0?j\x90\xbb\xef0ya\xbf\xb6\x98.C ;\xc2?c\x95f\xcf\xa3\xf3\xc2\xbf\xf4@b\xa5pt\xa7\xbf\xa8\xd4<\xfb/\x16\xad?Q~\xd2\xd3\xedh\x90\xbf\x1f\x85\xf4M\xd9\x88\x85\xbf\'\xd3\x14\x9d\x080\xb8?\xf7u\x80K-\xb5\xb7\xbfwb\xac\xbc\xd8i\x90\xbfSFV}\xca\xd0\xb4?\xf1\xcf\x83\x038_\xc5?\x92\xabc\xa4-3\xab?\xc6\x1d\xc2\xc9\x9fQ\x84?.\x18\xfdWKt\x92\xbf\x8e\x08#\x0e\xb8f\xa0\xbf\xdc\x06\x90I\xf5\x9d\xbd\xbfZ\xd7\xc7\x89\xb1\xef\xa6\xbf\x03\xdf\x98\xc7\x9b\x84\xa1\xbf\x93\x10r\x01\xc0Y\x92?\xe4$\xa0\x08\xa9R\xc8\xbfr\xccE\x03\x84\x9b\xaa?\x08Bj\x1dr\xae\xb3?\xbb\x1f]\xea\xe8\xe2\xcc?\xeaL\xf9hRj\x8a\xbf\xc3\xafV!fme\xbf4\xf6\xc4\x06>\xb4\xa9\xbf\xdf\xc7\x0b\xaa\xd2w\xa4?\x1f\x1c\xdf\xd2\x00\x19\xbd?\x98+\xa1\xde\xa2\xdd\xa2\xbf\xfbd\x97\xb2a\xa8\x89\xbf\xdb\x1d\x9e\xa0\t|`?\xfb\xa2\xb7\x02\xcb\xdd\x9a\xbf\x99\xfc\x93\x0e\xb0\x8b\x92\xbf#\xff\xe5\x0c6\xa5}?\'\x8aZ\x98%`\xb5?\xa8\x97\'\x91a\xc4v\xbf1\xd5\x9f\x15t\xf4\xbc\xbfp5\x88\xf2\xddL\x9c?\x13%B\x11\x89\xad\xae?l\x03<(\xfb\xfb\xb2?\x8a\x18\xc3x\x17\xc6\xa0\xbf\x183Y\x0eU\xa0\x03?\x107\xf2O2\x9d\xa5\xbf\xe1\xd9:\xdcP\xaf\xc4?\x1d\xb5\xc8\x82U\xed\x93\xbf)\xe9\x12\xd9\xb8\xae\xb9? \xd8C\x7f\xad\xa1\xcd\xbf\xc9\xdbq\xdf\x13!\xc4?=\r\x16\x18\xb4\x95\xa2\xbf\x01GZk|\x89\xa4?\xf3\x9b\xdb\xb6Z\xae\xba\xbf\xbdH\x96Q?b\x96?\xbdQ\x14XCL\xa6?Km\x02\x1cA\x13\xb8\xbf\xb0\x80{\x8c\x8d\x14\xa5\xbf\xdfJ\xc3\xb2\x00\x18\xa9?\x07r\xffS\x0b\xa8L\xbf\xa2}\xd5-\xa0j\xcc\xbf\x88\x02\xb6dk\x18\x86?\x85t\xf9\x19i\x0f\xd0\xbf\'\x15\xf3?)\xbf\xb2\xbfm\xcb\xb6\x1c\xfc2i\xbf\x9f\xb6e\xd0\xc9\x99\xae\xbf\xe8]b\rpu\xb3\xbf\x16In\x11\xf9\xe0\x9b?\x01\x8b$\xcb[\xea\xb4\xbf8\xbd\x84\xd3\x95w\xad\xbf\xf9\xd2\xd2\xb5\x826\xc3\xbf\xba\xd9\xbct\x87\x04\xa3?|\x8d\x89\xa7\x9c\xa8\xc0\xbf\xf1\x9c2\xbdo\x8d}\xbf\xf4\x84\x03S\xa5g\xab?\xac\xd1\x87\r/S\xb3?}\x06c{\x947o?!\xd63\xed\xbes\xad?\xc9\x0b#\x07\xec\x04\xb5\xbf\xf8y\xdda-\xe7z?w\xe8\xcdXo$\xb2?\x02\x18K\xa49\x81\xad\xbfSdv\xf7\x02o\x91?\x88"\xc6\xee\x0f\xda\xc9?\x88\xf0\xfe\xaaZw\xb7?\xd6\xb6\x8c\xd6q\x98\xab\xbfS\xdc\xb6\x15\xc5\x16[\xbfZ=\x86\xf6F\xa4M?\xcf\x0eW\xb5\xc9\'\xca\xbf{\x01\x1c\x0c\x01n\xba?>\xda\xdb\xc4\x13\x8b\x98?\xddNU\xb9.`\xc1?\xbb9\xda\xaf\xc8\x94\xab\xbf\xd8\x81\xcd}\xa3:\xaf\xbf\xbalboRP\xa7\xbf\xb6\xe7\xd5\xca5\x17\xce\xbf#\xf5X\xda;\xa8R\xbf>\xf0\x13-\xa5\n\x94\xbf\x97f7\xdb\xb3\x95w\xbf\x0c\xb2\xfd\xfd\nV\xb7\xbf.\x8b\x0b0\x8d7\x9e\xbf\x93\xbb%Hb\xbbB\xbf\x83pw\x05\xf89\x82\xbf`\xf7Tq\x1e\xc7\xc0\xbf\xd2\xc3\xbdHm\x0f\x96\xbf\x8e\x1b\x9b+\x12\x05\xb3\xbf\xd5\xee\x8c\x8bo\xf6\x9c?X#B\xfb\xacM\xb2?\xae\x11\xe6\xda\xc1A\xd2\xbf]\x9c\xa9\x03\xaa\x08\x9b\xbfY\xbe/W\x18\xe6\xb8\xbf\xfb\xb7\x92\xbb\xfd~\xa9\xbfu\t\xf3\x90z\xfd\xbc?\xe98\xda\xa0\x14l\xbd\xbf\x9b\xe6\xb6\xf5\x9b-\x95\xbf\xa1q\x86j?@\x90\xbf\xef\x19=L\xe0\xf1\x88\xbf\xb9\x9d\xae\xbe\x9b\x81\xb6?Ood\x92\xa8\x80\xb2\xbf+\x99\xfd\xc8\x87\xd7\xac\xbf\xe83\x11\xe0w\xee5\xbf\x85*\xb4\xa3\xd9(\xab\xbf\xb6G\xa4\xb9\xf2\xb9\x9d\xbfU\x85V1,\xb9\x91\xbf\x9a\x98\x82\xafl\x03\xb1?+r<\xfc\xf0\x9e\xba\xbf\xc6\xe0\xdc\x97\x91\x8c\xb2?\x13\\\x8d\x9a\xad\\\xb0\xbf\x1f\xbc\'T\xd1:\xa2?\xacH\xebW0z\xb0\xbf3w\xe1\xa4\xa7\xc1\xc0\xbfb6\x15\x04\xe2\x13\xd0\xbf\xdb\xd0\x10\x8aX\xd5\xa7?\xdb\xbf\xbe\xdbDY\x96\xbfq\x84\x0c>A\xdd\xc0\xbf\n8"t`y\xa4?\xaa\xc3u\xa2\xaf\xe0\xc3?\xa9\xacG\xea\xb5%\xc4\xbf\n\xc4\xa9\xf1\x8b$\xad\xbf\xddO\xc3\xae\xd7\xeb\x86\xbf\xd6B#\xc5\x08no\xbfb\xa1 t#\\\xb7\xbf\x1aK\xed\xec\xa9\xad\xdb?\x95\x14T\x9a7\xc2\xc1\xbf\x99\xb6\xd5\x94\xbd\xc4R\xbfb>p\xd8\xe7\xe0\xa6?\x96spd\xa8T\x94?\x13w6\xef\x902\xbe\xbf\x9e4\xd6\xba\xd58\x92\xbfS\xe2y\x807\x19\xd6?\x8f\x1b\x9c\x05Ye\xb6?\xe4\x196\xb2\x7f.\xcb?\xd6\xc1\xc3\xe99\x96\x9b?\xcbC\xa2\xaf\xde\x94\xcc?\n\x1fT\x175S\xad?^\xde\x88\xc7$\xf5\xa9\xbf]\xf3\xa9\xce0\x8b\xc2?E\x82\x02\xf6Nm\xb4\xbf[\xb9I\x88U\xd3\x7f\xbf\xe6%O\xf0\xa0\x8c\xb5?T\x80\x91a\xad \xae\xbf\xbb\x11a\x99G\xb0\x90\xbfA\x88{`\xc6c\xe2\xbf]\xdbhFSk\xa7?\xa4)v\xa7\x03\xc4^?\xc3 \xc2\xcbd\x1c\xcc\xbf\x1d\x1eKy\x17t\xbe?\xbd_\xbf\x1bi\xaa\xda?\x04\xd8\x92\x8f\xb3m\xa3\xbf\x95\xf2^\\77\xac\xbf\'\xd4\x89H k\xb1\xbf\x88,\xf5o\x1f\x83\xaa\xbf\x87@\xe3\xa2\xbaj\xcf\xbf&\x84\xd1;\x92\xa1{?\xe4\x88&\x1fN.\xc5?a\x93\xbd\xf6\xa2\xc7\xc0\xbf[\xcd\x04f\x05v\xb7\xbf3 \xb3\xb0\x02\xf2\xa8?\xf4\x9f\xee\x10\xa3f\xae?\x0f\xe2i\xb0\xba\'\x9c?\xa7am\x81!\xfd\xa7\xbfR9\xbe<\xbe\xee\xc4?8\xf5\x01\x8d\xe3\x9e\xcc\xbf\xf2l\x19\x0bS\xf1\xa7\xbf\xca"\xde\xdc\xa3\xa4\xab\xbf\x8a\xb8c+\xeca\xcb?=\xee\xec\xab\xc4\xa5\xab\xbfV\x1b\x97I\x81\xb8\x9e\xbf5\x1b\xbeR}\xd7\x9b\xbf\x85\x95\xd6\xcc\x87\x98\xc3?\x82)g\x87\x9b\xe8\x9a\xbf\x95\x97\xab\xdc\xf4\xaa\x88\xbf\x92\x8fG\x1bu^\xa3\xbf=\xe4z\xb6\xb4h\xc7?z\x07\xb4\x80\xe0y\xb4?\xb3J\x1d\xc1\xa3e\xc1?\x18\x1d|Y;H\x84\xbf\xff\xf9|qX\x02\xdd?}\xdd\xa6s\x8d\xe8\x8f?J}\x035\x95\xcd~?\xf9\xf4\x00M\xd9\x0c\xaf?aP\x15@Q\xf5\x84\xbf\x92\xad\xabD\xe3\x1e\x88\xbf\x872Rf\x03\xf8\xcb\xbf\xec&m\xd0\x98\xeb\xc2?\xc5\xe7\x94S\x87\xd8\xb9?\xaaF{m\xfa\x17C\xbf(\xaf\xd4\x18 9\xd0?$K\xa5Tv\xe8\xa5?\\V\xb2\x07\xf1\x15\xa0?\xd2>\xf1\xbb\x9c\x17\xb0?\xf19 r\xe9|\xc4?\x1a\xf8\x10^Jy\x83?\xc3\xb02\x12qV\xd1\xbf\xe4;\x00\xd3\x95\xf5\x97\xbf2w\x00\x1b\xd6\xc2\x85\xbf\xb2b\xb6\x1b\xd2\xfe\x8c\xbf>!\x8b\x97\xcb\xa2\xa9\xbf3\x83n\'|\x8a\xc0?Z\x1e\xa2\xa2\xa4\x9a\xbc\xbf\xee\xa0\x071\x084\xb8?q\xb9\xa5\x7f\xa5\xea\xbb\xbf\rG)\x1bt&\x8d\xbf\x1d\x84\x11\x1bLj\xa4\xbf\xd2\xd2\xc6\x7f\xf6\x9b\xae\xbf\x88\xb2\x8e\xac\x81\x0b\xd3\xbf\xc3b\x17\xf4@\xa5\xb8\xbf\xd2\x89G\x037\xb4\xa6\xbf/g\x9f\x11u\xe4\xbd\xbf\tYO<o\xe7\xa8?\xff0\xd5\xa7\x15\xc3\x97?p}I\xe3\x04\x06\x9c\xbf\x07D\xb6\x99\x8c\xdb\xc2?8l|\xd0\xb1\x0b\x9e\xbf\x88K\x13\xe2\x86\xf3\xaf\xbf\x87L\tS\xdc$\xb1\xbf\xc4`\x89\x0f\x7f\xba\xb8\xbf\xf4#\xc4L\xf2\xbb\xc7?l\xdd~\xd6\x8a\x95\xba?\xa2z\x1d\xa5\x1e4\x87\xbf^\x91\xb5\xb9\xec\x16\xb0?\x11\x98\t \x15\x02\xc5?\xfb\x9bL\xb1\x16vu\xbf\x8e|\x0c|\xef\x9e\xa3?0W\x86q \t\x80\xbf\x9a\xc7\xf3&Pk\x7f\xbf\x1c\xbc\xa3@\xd1\xce\x80\xbf\xbb;\x90\xb0\xcd\x94\xd3?l\x86\\\x11 !\xda?\xc9\x07\x8f\xdbo\xc8\x89\xbf\rCi\x80\xcb\xdd\xca\xbf\xb2\x1a\xf1\xafo\x96\xb0?\x9a\xb4(\x14\xc9\xf5\xb7\xbf\x92x\x91\x17(R\xc6?\xafQ\xddl\xe8\xb3\xb7\xbf:m[\xd0 u\xa3\xbf\xad\xa9t2\x17\xf7\xae\xbf}\xad\x8e\r\x89\x91\xb7?\xcdf\xfb\xebti\xa0\xbf\xd6\xca\xaa\x1d\x845\xd5?\xf4\xaa3\xe9\x82\x80\xa3\xbfa3\xd9\xf7\xe52\x99\xbf\x7f\xe9\xd5\xbc\xb7\x86\xc8?\xb2J\x0f\xd1\xee"\xb5\xbf\xa7\x8c\xfe\x1d\x90-o\xbf\'G%\x99\x9c\x8d\xa7\xbf@&\xa7h\x06\xdb\xd3?\x8fT\xc9\xad\x8d0\xa4?\xd2Z\x85\xc6N\x8a\xab\xbf\x8e\\\xedy\x06\x18\xbd\xbf\x0e\x8f\xdc\x87\x01\x11\x82?%\x9a\xc6\\\xd3\x10\xb3?\x11F0\xcd\x91n\xbb\xbf\x19|epl\x9d\xc4?\xb0\x14\xba\xae\xcc%\xca?-\xdc\x06\xc4\xe9t\xc1\xbfe\xbbR\x10\x0e\r\xbb\xbf\x1b\xa1L\\\xab\xbd\xb4\xbf$\xc3\x7f\x18\xb8i\xa6\xbf\xc7\x8bB\xd4\xcf+\xcb\xbfu\xc8\x80\x86\xbf!\xb4\xbf\xcay5`\tJ\xb8?\x87\x1c{\x93Vl\xaa\xbf\xf8\x0e\x1f\x1a\xb2\xc7\xc0?@1\xdfM\xfb\x8f\xc5?\xf1\xd1%\xb7\x1a[\x9e\xbf\xc1\xc8\xa8\x85zQ\xa4\xbf\xc7\x96\x1d\xa9kg\xb3?\xef\x0c\x16XS\x02\xb7\xbf\x98\xe9\xf5w\xa0\xd9\x82?\x80C\xb5\x19i\xfb\x91?$\xe1\xd9L\xfa\xe5\xb3\xbf\x9a\xa1\x90\xb2\x05\x82\x96\xbfs\xea\xeb\x14\x07SG\xbfU\xce\x10\xaf\xe40\x82?v\xf8\xfe\x1f=\xbb\xdd?\xc9\x1f\x0e\xeeB\x0ei\xbf\xd0\x0c#\xcaDW\xc2?;t\x9b\xcd\x04\xf2\x95?\x7f>z\xd3\xc7\x8e\xc0\xbf(\x15&\xd7\xd0\xbe\xac?JY\xf4R\xe51R?Z\x88\x1c\x1cp}z\xbf\xef\xa5\x16s\xd9]\x9a?\xd2\xe2oYC\x8e\xc0?2n\x80\\\xb1\xe1\xc5?}\x8e\xad\x89*s\xd9?y\xae\xb7\xfdV\xbaz?\xa3\xb0\xafx\x91\xd4\x8c?@\xf0vz/\x96\xa7\xbf8\x98>\xc6\x8d%\xb4?\x00-8\xa9\x02\xdc\xc7?gt\x1el\xf2a\xbb?\xdc\x9d,xQ\x8a\x9b?o\xb27\xab\x8d\xb8\xd6?x%\xb4\x02\x98\xdc\x9e\xbf\x8cm.\xed\xa9\xc0\x99\xbf\x90\xa4\xf2?\xcf\xfd\xdc?\x7f\x19i\x18\x03\x93\xa5\xbf\t7\xf8\xd5\xc3OM?\xcc\x15\x9d)?\x98\xa4?\x10G%\x1c\x17\x0e\x9e?<\xb4\x87\xf7\x8d\x0f\x86\xbf\xe9\xc7\x04\x8dsW\x8c?}\x0ba\x0eM\xc7\xc5?\x9e\xa3\x89\'Xv\xc3?\xa3\xc4\n\xd2\xba\x82\xb9?!S\xd9\xe8%\xc4\xb1\xbf#*\x16\x92\xba\xa2\xc0?\xcdK}.\x89\xaf\xd6?\xd7\xe7\xcb\x7f\x95\xaf\xd0?{\xd0\xff\xf0\xe2g\x98\xbf@\xb9\xe5\xc3\xe0\x85\xac\xbf\x86\xe1\xd4_\xe9\x1b\x8b?\xcb\xee\xbc\xd33\xc9\xc2?\xfaP\'!\\\x8a\xcf\xbf\xaa\xf7\x0bG\t\xa7\xae\xbfA\xbb\x95\x91\xb13\x84\xbfQ\x1d\xb8\x96&\xc9R?\xde|\x90\x941a\xab\xbf|4\x9b\x995\x9f\xb1?\xa72J\xbc\xfa\xbc\xc2?\xa8&\x0f\x91f\xef\xa0?5\xbe\x8c\xe9r:\xc1?z\\I3\x87{\x8a?\xd5@\x97\x82\x17\x04\xb4?P\xd0\xd0\xc2>\xcc\x8e?\x9d+\xeb\xef\xbbP\xcc?\x884\x08\xfaF\xe6\x97?=\xaa\x90\xe1\xc5\xbf\xc0?\t\xca\x1a\xd7\xe1\xa7\xb0?\xbd$Ml=\x92\xbd\xbf\x8dc\xb1\xe2IC\xbc\xbf\xa1fU\xb8\xfc\x97\x8a\xbf\xad\xebkBR\x8a\xb3\xbf\x91\x87\x06#c\xb5\xad?\xd7\x95_\xca\xeaU\xa8\xbf\xd0%\x80\xa2\x1aw\xbf?-\xd2\xfd\xde\x19m\xb3\xbf\xfd\xdf\xd2\xa1\xc4X\x80\xbfz\x0b\x88\xf3\xcb\xad\x80?\xc9l\xb0\x19.\x15\x99?\xd8?\x8d\x11B\xde\x89\xbf\x85\xad\x8a\xc4\x1b\xe4\x90\xbf\x87s\xdd.\xe1\xf2S\xbf^\x9c\x98\xa6\xa5X\xc8\xbf\t)\xb8\xc1\xe8\x8e\xc3?\xfd\xad\xc0)tj\xa9\xbf\xdd>U\xdcBy\x81\xbfz\xb1}\xd967\xbe\xbf\xf0\xa9\xef5\x8b\x06\xba?Z\x8c\xeeKev\xbf\xbf\xcf&\xfeD\xe9\\d\xbf+\x8a1\xc1\x8c\xab\xac?\xbd\xc7\x07\xc3\xbe\xde\xaa?J\xca\x89\xc5\xd5\xda\x96\xbf\x19s\x89\x16\t\x97\x96?6\x12\x90\x94\xa7\xcc\x13?\x95s\xd4m\x04\x06\xac\xbf\xb0\xb6\\\x08\xa4\xf7\xb6\xbf\xec\xb11pG\xf2\xb8\xbf[\\\xef\xa8`\x96\xbb?\x00\t{&\xbf\x92\xb5\xbf\xb6\xa2i\x13L\x1d\xa3?\x98/\x98bF\xfc:\xbf\xe4\xf3.\x8fb\xd4\x83\xbf\xdc4\xbfH\xff\xd0\xbd\xbf+.C\x17N\\\xb7?\xba\xbdK\xfdCf\x93\xbf#E\x8d.\xddV\xa5\xbf\x0c}\'\x07]!\x81\xbfQ!H\x88\xb0\xf1\x96?\x10\t=\x08GR\x9f?\xe00\xe6 6\xa3\xc6\xbf\xfb\xfbaN\xae\xf3\x7f\xbfxp^N\x14\x84\x9b?\'\xe4R\xde\x14\xb0D\xbf\xb6zd\x83\x06\x19\xbd?;\x00F\x89R\x81\x8a?\x92\xb2\xb2\xc6\x97(\xb1?i\x1c~cx\xa0\x80?XE\xa8\x96\x9dW\x96?\xd3\xf9\x1a\xd8`>\x88?\xa3a\xb5\xad\xc0[\xa3?\xb9j \xd4 V\x92?K\xfc\xac\xa3\x168q?\xcdO\xf3\x1bu\x10\xb1\xbf\xc7\x04\xce\x06\x0b\x01\xa5?\xeamA}e\xaf\xb8\xbf]\xe1O\xa4bN\xb3\xbf\xc44\xe9\x08\xab\x19\xa0\xbfx\xf1k**\x98\xa4?\x9e\x8ah\xd1\x9c\x84\x92\xbf\x07\x1clk\ti\xbf?D\x7f\xc0\x7f\xf3\xeb~\xbf:\xdb\xca\xba\xb4\x8e\x8b?\xa6\xf9\x95\xc3I\xf6\x86\xbf\xf4\x16\xac\xd4\x00\x12\xa8\xbfL*\x9a\'\x8dV\xc2\xbf\xa7\x916Clj\xa5\xbf\xf0\xb9\x00\x87\x94\x98\xc6?`\xc1\x8d\x1a\x1c\xc4\r\xbf\x82$6\xfe?$\xaa\xbf\x11\xa6\xe5\x0f8\xd5\xce?y\xab\xa3\xc6\xff\x02\xa8?\x8e\x9f@\x0eX\x1c\xb0?X\xa2\xa6\x1f\xdc\xbc\xa5\xbf6W\x88\x9b@\x95\x9a?\xe5\x0f-I\x19\xab\xac?\xd9\xa2\xacio\xf4\x97\xbf\x0bf\xff\xd6\xd5\xdcw?\xe3\x03s\xfcbm\xbe?\x0c\x14W\x13\xa4z\xad\xbf\xd6E\x19\xce\xda\x1c\x9c\xbfi\x10v\xacdG\xb9?\x81O\xb4\xc6\xa0#\xb0\xbf6t\x94\xe0i\xf6\xb4?q_(\x9e\x7f\xa7s?\x9e\x1fJ\x13\xec\xe8\x84?\xddw\xcb\x85P\x81\xb8\xbfM\xd2\x13\x0b\xe8\xaa\x98?\xb8\xf5\xbb\xcc\xcf\xaf\xa6\xbfq\xc0cwE\x8d\xd6\xbf\xfb\x95.)-(\xa8\xbf\x7f\xca\x1aUP{t\xbf\xefzA\xdd\x18\x82\xa4\xbf\xb3<\x1e\xc5$\xbf}?J\xa1\x13\xd0)-\xa1?\xe6\xc9\xd8\xe4~\xa7\xbd?\xbd,\xe6F\xc8Z\xad?5\x96\xf9w\xa2\x0c\xab\xbf\x7fI*\xcb\xa6o\xc6\xbf\xfd\xa0%\x1b\xcd\x8b\x97?I\xe2\xfe|F\x90\xc0\xbf\n\xe7m\x04h\xf5\xbf\xbf_rx\xac\xb7(\xce\xbf\xb6\xabo\xe1\xaa\x92\xb6?l\xcc\xd6\xea\xe0\xcf\xcc?\xf0\x02\xd5\x10\x03\xfa\xad?>\xcd\x96{;7\xbe?XT\x14%\x1d#\xd7\xbfB\xff!;s\x1f\xa2\xbf\xc4rb\xb6\xb4\x86\xba\xbf\xa1\xda\xc8\x7f\xa0]\xc8?\xb5\x89\x1a\xbe\x14(}\xbf\xda\xd0\x9fq\x94{\xbf?\xd6\xc5\x1b\xf4\xb4\xec\xa8?G\x83\xff\xc5\xd8\xcb\xe7\xbf/\x80\xed\x0f\xd1\x9f\xaa?\xb7\x10\x1dK\x13\xef\xad\xbf\x81~\xb2\xfb.\t\xd0?\x82\xe0\xf2\xe8\xa1K\x89\xbf|_\xcf\x02\xeez\xe7\xbfU\xd0\x9e\x7fz=\xc1?\x13\xaaJ\xbfxZ\xc1? ]\xb6\xdc\xd8\x8e\xd0?@\xebq\x81\x15C\xbb?\xa3\xa1\x0b\x95;@\x9e?\xff?\xba\x9cx\xe5\x97\xbf(\x96\xb9\xb1Z\x1b\xbd?\xb1\xbc\x04\x03pz\xb1\xbf\xd2.b\xfd\xd3\x88\xcb\xbfF\xa7o\xa4\xfd\xff\xb0?\xfb3\xdf\xfc\xca\xf4\xac\xbfd\x9c\xa0\'s\xd0\xb5\xbf&;f\x88\x85&\xd8\xbf\xd9\xacZ\x17\xbei\xb9\xbf\xd0\xf4\x1e\xab\x9c\x88\xba\xbf\xc5:\x8c\x920<\xa0?\xa1\xf3.\n\xd5\xab\xb1\xbf\x8b\xe4p\xecx?\xb4?\xb1\xd3\xee\xd1\xc2M\xbc?\xb9\xf7@\x9d\x88\xc9\xa4\xbf_^\xcf\xab\xcd\x9c\xd9?\xdc\xbc_\x03\xba\x84\x94\xbf\r\xc3(I\x00E\x99?\xe1\xd8\rB\xabP\x80\xbf\xe7WiO\xfbC\xcc\xbf0\xafD1\x0c\xe8\x86?\x0f\xd0O\xa7\xe8M\x8e\xbf\x19\xdb\x83\xc8N:|?\x15w1\xa9\xa56\xa3?}[\\0\xd3\xf6S?\xb9\xef\x95J\xb0s\xbe\xbf\x18\x92\xd8\xe4\xec\xd5\x97\xbf\xdf\xebY[\x94\xa2\x93\xbf\x87\xd0~\x1e\xf96\xc5?,\x97\x0bl\xbe\x98\xc6\xbfU\x85\xc9<\xbd=\xc8?\xd7\xf5\xe7}0\xc8\xd2\xbf\xf3\x11[\x97\x8fh\x98\xbf\xf3\xb9vg\x08\xec\xb0?\x8d\xa0\xf4\x90`\xa8\x98\xbf\xea&X\x11\x8d\xf0\xd1\xbfQ\xd7\xcb[7\x8c\xc0?\x87\xe5D\xca\x08\xbbt\xbf\xb2N\xbd\xcf\x16=\x92\xbfZL`\xf6\xd4B\xbf\xbf\xb3#\xec\x0f0\xd2\xb7\xbf\xf5\xc8\x7f\x8f\xd1}\xa2?\xee\xb91(\xc1\x84\xc3?\xbar\xf5\xf0p\x83\xa2\xbf{\x1d\x95\xb9\x02\xce\xab?0<\xfcO\x91\x7f\xd5\xbf\xed\xb9\xb1a\xf2 \xc3?Q\x18\xba\n?w\xd3\xbf\xc3\xec\xe2Z\x85E\x8d\xbfCn\xca;\x98`\xc1\xbf\xe39\xab\xdb\x94\x8a\xb9\xbfjYj\xfa\x1fP\xa4\xbfY\x97\xc0\x130\xb4\xc1?\xc6\x07\n\xe3y\x92\xa3?`\x1e\x18\xf2\x80\x0f\xb6?k`\x196VH\x86\xbfi8\x95(\x96+\xba?\xe4\xd7\xec\xa6\xecG\x9c\xbfJ\xdf\xa9\x99\xaf\xad\xa4\xbf\xa6\xc7\x8e\xac\xfa;\xc7?a\x8b\x01\xc2D\x8b\x84\xbf\xd5\xa7\x87\xd0\xb7d\xb7\xbf\xa5r\xa9%\xa9\x1d\x8d?=5k-\x8c\xc1\xab\xbf_g<\xc7\xe3c|?\xb4\xc2\x82@\x93\x7f\xa6\xbf\x8d\x7f\xcb\xb0\xa3\xfc\x91\xbf\xe6Rou\x14Y_\xbf\x8c\\\xbf\xd4*\xf9\xbd\xbf\x8b\xc4{\xbd\xbf\xc2}?U\x80\x14\x0e\x8c\xe2\xb0?\x81R\x83\xc20\xa0\xb4\xbf\x14\'V\x8aR\xd2\xb1?Y*\xf6\xe9\x06\xd8\xb3\xbfBR@\xa8<\x10\xc2?\x06l\x81\xdc\x06\x95\xb7\xbf\xf0\x9bn\xe3\xdeq\xa8?\xed\xa48\xf2\xac3\xa7\xbf\xfc\x80\x14\x97\xa3\xde\x80?\x1f\xf3\x9f}\xcdC\xa4\xbf{\xf9#\xbc\x1d\x9e\xa2?\xceb\xf8\x13\\\x90\xb9\xbf\xd9\xbf\x90\xe1\xe2\xe3\xae\xbf\xeeT\x91\xf3t\xb7\x8d?\xfd\xc0\r\x15\xb3\xe9\xbe\xbf\xa9\xd3\x18\x146\xe5\\\xbf\xb8\xdc\xfd\xd0J\xa8`?\x93\xf4\xe5J*B\xae\xbf\x05\xdd\xd8\xe5\x1ev\xb4\xbf\x80\xba\x80\t\x89\xce\xa6?\x8f\x93\t\xb01\xef\xb1\xbf\xbca\x04\x17a:\xb3?aeL|\x01Z\xd7?\xe7#L\xbd\x1d\xa6\xa8?\xf7\x81\xfc\xf6\xd3@\xbd\xbf\x8eM\x13\xcbC\x04\xa4?\xf1\xa0u%\x9bl\xa0\xbf\x87\xe4\x10a\xf8\xf8\x93\xbfLv\xbf\xb5M\x1a\xb0\xbfE%\xd0#Y\xed\x91\xbf5]\xb6]\xb0%\xa5\xbf~*\xd7g\xaf\xf7\x99\xbfLcF{\xa3\xf1\xb1?wyo`\xfde\x92?^\x80\xfe\xb3\x92\x16\x80?x\x0c\x01\x9d/\x02\xd3?\x8d"x\x0f\xe2\xd6\x85\xbf\x9e0$}\xfc&\xc2\xbf\x17`\x13\xe2U\x13\xba\xbf\xae\xa9\x99\xcb\xef^\xab\xbf2\xa4s\xe0e\x9d\xaa?u\x02\x98,/\xc6\x97\xbf\x90\xec\xe9\x80\x11\x1b\xa6\xbfS\x94,\x02q3\xba?#\xd2i\x1dz\x11\xb5\xbf\x96)U_\x8fe\x97\xbf\x8d2\xca\x8ei\xbe\xa4\xbfH\xbf\x17\x8a\x99\x93\xc0\xbf\xder\x80<6@\x84\xbf\x90\xe97\xb3c`\xaa\xbfP\xf1T\xf3l\xcb\x9d\xbf\'\x14\xeft\xe0\t\xb5? tQ\xba\x7f\x8d\xa6\xbf2\xdaB=\x10\x8c\x89\xbf\x07|\xeeIb\x82<\xbfGm\x85\x047\x8a\x99\xbf\xb9g\x8cuh\xd5\x89\xbf\xdb\x88R\xc8q}\xa1?\xce\xa0\xe6{7\xfa\xa1?\x8b\xc1\x89\x08\x84\xb8\x99?\x18ky9\x9ej\xb5\xbf\xfa&\x15\x85\xf3~\xa0?\xa1&4 \xe0\x82\xc9?\xe7\xcdq\xf9\xa6\xb2\xb6\xbfVe\x13A\xa6\xe6\xb6?>e\xf7\xeb\x96\xd7\xb1\xbf"\xbf|n[\xce\x8a\xbf\x08\xbaj\x8b{s\x94\xbfl\xb0\xb8\xba\xb1\x01\x95\xbf\xd3<\x97\xc0m\x9a\xd8?\x11r\x16\xaf{\x10\xa7?F\xb0\x08\xd0\x1b6\xcd?L\xd3!\t\xe6\xd7\x97\xbf\x02\xedTVr\xb7\x8e\xbfst\xae\\\xf5\xd8\xac\xbf\xbb\x0c\x1e0n\xed\xb0?\xd1[\x04(i\xb2{\xbf\x07\xd08\xf0\xef\xa1\xb5\xbf\x05\xb4\x02\xf0\xcd\xbc\xc5?~\x91V\xac\x17 \xbc?\xa9\xf9\xd5B\xeb\xf7\xc1?\x97\xa1\xb1\x88,\xfd\x90?\xff+\x1a\xd5&\xdc\xad\xbf\x06j<%Y\xb8\xa2?\xb9\xeep&\xf5\xae\xb5\xbf\xe5\xb6\xf7&r\x14^\xbfk\x04\x8b\xf5\x01\xdc\xbd\xbf\x9f\x8a{r\x90\x1f\xa6?\xb1E\x89\xd4\xe4\x97\xa5\xbf\x1d\x8d\x1a\xc3\xafU\x81\xbfP\x96\xb4f\xddf\xad?\xb9"\xb5|\xd4\\\xc7\xbf\xc9\x02,5\xf7\xbd\xb3\xbf-\x9d\xdfK\xda\xcf\xa8\xbfC4\xa9\xfc\xde\xce\x91\xbf\xa5\xa2\x0e\xbdB\x7f\xa3\xbfi\xdbI\xb5z\xb3\x95\xbf\x07\x7f\xcc\x9b2\x17\x8e\xbfj\xec\x1a\x86\xf4\xdd\xa4?`r\x0b?q\x97\xb3\xbf\xceI\xf2M\x1b\x13\x82?k\xf5\x94-\x06M\xb0?\xbf\xdc\xed\xcd\x1d6\xb6\xbf\x11\xa8\x05\xb6\xb8E\xbe?\xef\x13y\xc4\x95\xc8\xb4?\xbe\x95\x81\x14\xf8\xec\xb8?\x0c\x0e\x99\xda\x9e\xd4\xc1\xbfP}\xc7R\xbb\x06\xbb?\xce\xbbP\xd40\x86\xab\xbf%\xc5\xfe\xdc\xd5ne?\x9e\xce\xee\x93y\x1f\xa4\xbf\xdeQ\xb4Z>\xa3\xbb\xbf\xd8.\xc2\xbevH\xb8\xbf,\x8e\x9ax\xa2\xa0\x8f\xbf>\xec\xbf=]\xbe\xb4?\xbb+#\x06u\x0e\xc0\xbfC\x9c\xdb?\xa6\xdb\x92\xbf\x81\x89O4\xe0\xa2\x9b\xbf\x08\xe0\xb8\xdf\x8d\xbb\xc8\xbf\x9e\x15\xa8\x98\xc4S\xbf\xbfq|\xfd\xcfF\xc9\xbf?\xe4\xa3\xc4\xa8>\xa8W?\xcf(\x16C\xb8\xb2\xca\xbf\x91\x95D1\xc5su?3k\x0fHUw\xb3?~N\xf6U\r\x91\x80\xbf\x92\x06O\xa0\x1f;\xab\xbfs}\xda\x8c\xf0\xe4\xc3?\xdd%\xd2%\x1a\r\x9f\xbf\xb0\xfabdZc`?p\xd0\x8e\xe5sUl?\x01\xac5\x87x\x7f\x8a?S\x83E\xbc\xbd\x08\xa3?\x11\x10\xf8\xed\xa9\x04\xb1?.\x0b\xde\xf5\x9b\xa8\x9a\xbf\xb4\xc4\xa5MR\xb1\xbe\xbfG\xd9\xee\x8b\xc2\x05\x85?:\xb9V\x0e\x03\x14\xa5?}\xaa\x1e\x16\xfd\x91\xa3?\x9d\x9f\x90\xb2\x81!\x95?\xd2pi\xe4\x9b\xe96?\xc7\x03\xc2\xa3M\xcf\x9d\xbf\xc6\x01d\x8c\xae7\x97\xbf\x8e\x1d\x873L\xcd\xa7?)\xc3\xd5x1\x16x\xbfAEJ-<\x83\x7f?\x91)\xf1\xf0\xa5}\x93\xbf^\xe3t\xb2\n7\xb1\xbfQ\x03\xa3\xf4\xd7\xc3\x80?\xad\xe6M\xcd\x13\xda\xc0?\x89\x12=\xef\xb8.\xbd\xbf`\xd6u\xeb!\xe9\x9b\xbf\x87\xaa:\x82"*\xc5\xbf\x95\xf9\\\xa1O\xcf\x96\xbf2\xee\x1f@\t7s\xbf\xed2b\xbd\xea\xad\xb4?\tiP\x8a\xea!\xc4?\xbc\x85~\x17X\xda\xa4\xbf\xe8\xcd\x16\x98\xdb\\\x91\xbf\x99\x15\xec\x83\x15\xe6\xaa\xbf\xcbI\x1a\x92\xb5\x8d\xb6?\xf8\xb6>\xd6W\xc8\x9b?\xe9\x90\xfeT\x18+\xb6\xbf\xc8\xce\xea\xfcK\x13\x9a\xbfOA\xee\x16u\xa6\xb5?\xa9_\x1f\xee\xc5F\xbb?\xbe\x0fB\x15\xe1\x04\xa1?)Q\r\x06\xe0\x0cl\xbf\xbbS*\x1dlua\xbf\xbf)\x9a\xb6L\xad\xa2\xbfn\x01P\xaf\x82#\xbb\xbfi\xa1\xa0\xb2A\x1a\xc5\xbf9Y\xd0\x83\x1c\xed\xc2?\xa7\xef\x0c\x94p\xa5\xba\xbf&\x90\xaf\xaa>\xcc\xb0?\xbf\x06\xdd\x86T5\xa8\xbf\x1b\x8d\x9e\xccF\x0f\xa3\xbf\xdd$\x98\xe8a\x0c\xc7?g\x0b^\xd5\xbfX\xb6?k+T\xd4a.K\xbf\xa2Zn!\xfeZ\xbc\xbf\xfdb\x8f\x95\xb1\xae\xa1\xbf`B\xa4\x8b}\x9d\x91?DT\x84\xe0\xa1\x19\xa6?@:\xfe\xf1\xaeV\xd3?Kb\xad(\xc5H\x8e?oc\xe5R\xd7\x1d\x99?\xa5\x10p\x8e\xe6\x83\x9a\xbf$\x82~\xfd\xf0?\xa2?|\x85\t\xe4+@\xb7\xbf\xbd\x1a;\xa1\x17%s?\x82L\x9fF\xd6#\xa9\xbfQ\xce]C|Sh?\xeb\xf7L9\xbb\x88\xb3\xbf\xb6c\x90\xba\xa9\xc4\x9a\xbf\xaa\r\x11>\xb5\xd1\x7f\xbf\x004}\xa4NEF\xbf\xa5\xad\x90!\xb7\xfc\x9a?Vf\xc8j\xb9I\xa7\xbfL\x0e\xb5\x12b\xf1\xc0\xbf\x91\xc6X\xa0\xaa\xa8\xc3\xbfh\x84\xf0\x0f\r\xd5\xa4\xbf\x19\xa2-\xe0\xd6w\xb0?(d\x82\xf8-\x11\x98\xbf\x08\xc6-\xe6\x15S\xc8?;\x90\xe1\xbb\xd8\xe4\xab\xbf\xde\xac\x10\xfb\x03\xf7\xa0?\xce\x8f\xc4|\x8c\xf2|?\x1fW\x85p&\x0fw?\xc93V\xf6\x85.\xb1\xbfS* f\xcaG\xa1?\xab\x83\xb6\xfa\xfb\xb1\xc4\xbfX\xcb{\xfdW3\x99?F\xc0\x1fy3\x9c\x98?\xad\xe4\xdf\nv\xa0P?\xa8\xc3 \xb8\xf4\x0e\xb9\xbf\xa3R(\xeeq*}\xbf\xaaC<\x10XL\xa4\xbfv\n\xf9\xbf\xdf\x80\xab\xbf\x1e|\xbd|<\xee\x9f?%\x894\x90\xce\xf7\xb3?^K\xe1\xe3\xa4]\xa2\xbf\xa5\xec\xa5\xea\x1b\x8e\xd6?\x9e:XxXl\xa5\xbf\x8b]Q-\xdb\x03\x99\xbf\xba\x8b\xfe\xbd9?\x90\xbf\x05\xa8\xecw\x9b\x0b\xb2\xbf\xd3y\x93Z\xe4V\xab\xbf\xc9C\xd4\x86OH\x9b\xbf\x87\x17\xf5E\x03\xe2\xb2?\x83\x0b\x85\x00 \x8b\xa4?\x8aE\xc8\xa4\x85\xc4\xb7?f\x9fl\xb8\xe0`\x8d?\xa6\x1b@L\xb4J\x86\xbf\xa9m%_\xa5\'\x85\xbf\xaf\xa7\x16?\x06l\xcb?@NU\xc8$\xcf\xa4\xbf\xc8\xdf\xcc\xfa\x83Zv?\\\xbb\x0e\x95\xc7\xad\xa7\xbfE\xb7\x9dZ_\xc3\xad\xbf\x8e\xdf\x89*SY\xc3?g\xae\xb0U\xd9\r\x97\xbf\x10\x82E\xa8\xd6\xa0\xbb?\xa1\xf6w73\xb4\xb2?u"\x1c\x8cJ\x18\x8b?zx\xf4\xb6T\xe4\xa6\xbfn\xc4\xf0\xb3\xdd\xcc\x88\xbfS\x84f\xf0\xa4\xef\x84?\xfd\xceI\xdb\x13\xab\x9a\xbf\x91\xee\xb1\xe3\xa6\x88p? U\xd49\xf2\xec\x9f\xbf\x97)L\xbf\xa71\xaa\xbf\xd7\xdd\xd9\x88Om\xac\xbf\xe7\xa9\x95\xb2\x9f\xceL?\x8f\xfcf\xa8\xc2|t\xbf\xd2\x05K\xd2\xf6\xa6\x96\xbfDO\xc9L\x15@\xc1\xbf/1v\x05\x1b\xf3i\xbf\n\xe5*\x10\xb3U\x91\xbf?\xc4+0\xe2\xf4\x97\xbf?\x03\xc9q\xad\x1cj\xbf\xcaM\x02\xf8 `\xa5\xbf\x7f\x02_\xc5\xa4\x0c\xcd?6\x93P\xb1\xf7\xad_?5\xdb\xbc~u\xf5b\xbf\xa4\x88\\\xf7\xecx\x86?\n\x1f\x85EQ~\xb4?\xd1\xaaj+\r\xaf|?O9\x1fda$\x8c?X\x06\xad(\xc5\xd5\xa6\xbfmW|\x12\xe8s\xb4?.\xff>/:$\xb5?\x82V!\x82\nE\xb0\xbf\\\xac\x0309\xdb\xa2\xbf_b\x1f\xff\xd7\xda\xb6?\xc6/\x84E1\xf3\x9b?%\x0c\x17\xf4\x02\x04\xab\xbfN\x83\xfb\xcc\xe6\x0c\x81\xbf\xd2MJ`O\xce\xa0\xbf(\xe4\x90N\xd80\x9d?5\x00\xae\xf5\x99h\xc1?Xs\x91 (i\xb9\xbf+\xcbR\xf6\xd4\x05\xb1\xbf,\xa5LL\xa8\xa5n\xbf/!}\x97\xb2\xdf\x98\xbf\xd6nd!a\xa8z?hM\xd2\xdc_0\x8b\xbfk\xcc\xcb\x02\xd8:j\xbfy\xa2:\xe0\xb3\xdc\x81\xbfj[E\x0e\x809\x93\xbfFg\xc95\x0c\xbb\x85\xbf\xfa\x0b\x14\xe2\x84\xd2\xc6\xbfG\x1d\xc4\xb6\xef\xf8\xa0\xbf}\x0ef\xfdO\x03v?\xab\x9c\xa8\x1f\x8fX\x8a\xbfE^\xeb\x12\xefih?\x99jG))eX?\x08\xca8\xe8\x8f\xbd\x91?\xbd\xc4d\xe3\'{\x91?s\xafk\x1c\x9e\xae\xb6\xbf\x9e#c\xa2\xf4\xb3{\xbf>\x89\xfa|\n\xc7\x7f?m.\\)N\x95\x83?\xf5\x95\xd1\xa9\xd5~\x85?\xc8n\x9c4\x00\x19\xa7\xbfX\xaa|\xb9\xe8[\x89\xbf\xd4\x8b4\xbf\x14\xc7\x8d\xbfJe\x8e\xc0\xff\xbd\x8b?\xcf\x82\xba\x0f\x98\xd6\x8c\xbfU\xf7\x1e"\xd7\x8ap\xbfk\xd7Y\x0b\x19\xb9\x8c?)\xf4\x15\xfd\xc3nH\xbf\x97\xf3\xf8\xcb\xe7db?\xaeV\xae\x84\xc9 `\xbf\x040;\xe4\xcd\xdd\x80\xbf\x8c\x85\x1d\xe5\x89\xd3\x0e?\xf8Ffx\xc7\rP\xbf8\xe3\xb6\xbf.\x82\x94?\xc9\xa6\xb4\x1c\xe9*\x97?_>\xb0\xc0\xdb\xac\x8e?\x90W\xd6\x05H{\x83\xbf\xaf\x04\x10U\x17\xe5\x8d?\x16\x95&\x82>$a\xbf\xe8\x80%G\xa1:\x92\xbf+\x90*\xad\xbc\xd6\x92?!d]\xec\xd9\x06\x9e\xbf6?5 a\xdaO?\x82\xa0>w\xf7\x93D\xbf[2PN\xd8\xd2\xa3\xbf\xcc!L\x07N\xa3\x97?H\xb0\x0e`\x97!\xb1\xbf\xfa\xbe\xde8\xa4U{\xbf\xc5\xfa\xdd\xb6L\x9f\x9d?\xbct\xd0\xff\xd5L{?\xeb2\xc0m9\x853?\\,{!at\xa5?<\xfb\x9e\xfa}\x17\x95?\xdcP\xd5\x10\x18\xbf\x96\xbf\xedL?\x9c\x96Ks?$\x17\x83X\xea\xbdu?=\xbe\x89\x91l"\x93?J\xd4\xcfq2\xe3|\xbfc\x1a\xa817E\xac?\xa4%\xdd\x01\'\xc4\xad\xbff\xa4n\x8a09\x94?zVL\x84\xe2#\x87?\xb6Nv\xads_s\xbf\xa2\xc5P!C\x17x?-\xfa\x90\xa5s#v\xbf\t<\xff\xf3\xcb\xee\x86\xbf6\x81\xc5E\xdb*\x95?\xa1x\xbf\x91\x1d\xc5w\xbf\xaeg\xfa\x0e\xe9\xc0&\xbfH\x14\xfd\x7f\xdd\xb4\x85?F_\x90\x85\xf9\xae{\xbf\xd9\xd3\xd8_if\x90\xbf\x15\t\x8c\x99\xe1P\xa0\xbf\xd7:\x0b\xf9]\x02\x83\xbf\x1d\x8f\x15\xb1\xdaC\x9e?\xdb\xf9T\xaa\xb1\xfa\x8f\xbf\xebs>\xdc#B\x92\xbft\xda1\x8a\xd9\xe3\x95\xbfK\x1faU-\xe4\xac\xbfv\x87\xf1\x86\xc1o\xa4\xbfE\x02\x9b\x87/C\xb2\xbf\xdf\xfcz\x07q\xce\x96?p~\x19\xdf.\xb1\xa1?(&\xd6dQ\x98\x91\xbfyc\x0762\xaa\x95\xbf\xe2\xb4\x873-\x7f\x8c?=ch\xcd\x8c\xc1\xa2\xbf|\xa5[\xd6\xae\x0f\xa0\xbf\xc9"\xb1\x07\x98\xea\xa9\xbf!.}\xc3\x8a\x9e2?\xa0\x99\x06/j\x8d\xb0?\x96\x99B\xd8>\x11W?\xad\x8bIk)\x0c\x8d?\x14KP\x1eM]w?o\x8e\xbcv\xd0\xd1\x07?\x99\xd6\xa3\x80fM\x86\xbf\x93{;8\xd1\x12\xa3\xbf\x8f\x7f\xee\xf3\xfe\xdd\x98?\xfec\xb9\xb9\xee\x96\x83\xbf\x83K\x87\xff\xd2\xfc\xb1\xbf\xd2#X\xaa\xa3t\xce?\xa7D?B\xc9\xd0\x94\xbf{\xf4U\xa6\xbf\x15\xb7?\xf6^\x06}\x99\xfd\xb2?\x9d\\\xc9X\x84M\x90?\x87\x99\xect\xdbm\xbf\xbfY>L\x95\x94\x11\xb7\xbf\xd3^I\x00N=\xa0\xbf\xfe,6_\x12\xfe\xb9?\xb6Pb\xc6\xd3\x05\x83\xbf\xce\xf7j<\x8c\rf\xbf\x84\xab\x8f\x99\xb7|\xaa\xbf\xda\x14\xc2\xfb/\xaa\x86?\x1d\xd3\xc4\x8c\xe0\xe7\xa3\xbf\xd6\xf6\xd4F^\xe8\xaa\xbfS^\x03\xf1\x1b\xd0\xb4?\xc2\xc1\x99\x97\xcf\x86\xbd\xbf\xca\x1a\xaa\x81\x9c\x94\xa9\xbf()&\xe6\xaf\xf5\xc7?\x9525\x02^ \x81?Wwc5\xeb\x83\xb8\xbflE~U\xfa\xb7\xab\xbf\xfe\x11\x08\x94\xaf5\x98?\xb6\xe6\x0c-\xb6\x83\xb5\xbf#\xcc\xda\x954\x96\x94?\xce\xc7\xfa\x98\x12\xf9\xb2\xbf\xa0\xee\xf0\xb2V\xb4\xb1?Rv\x87\xd8\xf9\xba\xac?.c\xd5\xfa\xf8F\xc3\xbf\x07\xfa}\xed0\x8c\x96\xbfo\xebZ\x0fA\x96\x96\xbf<$\xd7l\x1b\xef\xab\xbf\x9f;}\xce\xcddM\xbf\x90\xd6\xef\x17\x81\xaaf\xbfQ\x97\xec\xab1\x13\xc2\xbf\xb2\xf1$\xaa#(\x93?+8\xbb\xe9\x1f\xf4\xb2?\x9b\xd0\xcd\xf2`Y\xa8\xbf\xacECt(\x9a\xc1? A\x90\xe3\xbdV\xc7?\xeb\xf5\xa0\x1d\'\xd1\xa1?\xdd\xa0\xb8\x92\xa2\xe3\xaf\xbf9\x9a-o\xc4\xee\x8c?\xd1\xf9\x92\xec\xaf{\xa6?\xeb\x84;\x84\xa7}\xb1?>2\xdfL\x86-\xd8\xbf\xc6\xc6\xb0\x10s\xafd\xbf\xffS\x7f\xa8$\x16\xaa\xbf\x9e\x84\x96~\x9c\xe7\xa9?\x95\x92\xfb6\xd6j\xa2\xbf\xda/\xe9\xb3p\x99\xa0\xbf\xfdrv5\xc5\xe1\xb6?\xb1fl\xe6\x9aN\xa1\xbf\xae1\x88\xcb\xb2l\x8a\xbf\xbe\x1fA\xd1i;\xc2?\xfd\xe4H\xfe:\t\x91\xbf\xd2\x9c\x1a\xbd\x96\xcd\xc6?\x08\t\xa0\xd7~\xc8\xad\xbfWZ2p_Z\xda\xbf4\x89HQ\xce\x94\xbc\xbf?R\\\xd0\xc5&\xa5\xbf\x0c%/\xc8j\xf3\x8e?\xd6\xd9F1\xefB\xa7\xbf\x9b#\xa8\xc0\xf5\xbb\xcf\xbf\xf49\xcaZ\xcc\rr?\xb3\x03\xb9\x8d\x1al\xb1\xbf\xd0Zf\x86\xe62\xb5\xbf\r\xf3RX\xe8\x9f\xc4?r\xce\x18U\xf8\x99\x88?\\Y\x8b%]\xbf\x9a\xbf@\xaf#aE\xbf\x83?^\x8f\xa1\x93h\xfa\x83\xbf\xdd\xfe\x7f\xd3C\xbc\x9a\xbf\x96\xba\xff\xc5\xfbK\xc0?\xc0\xa9\xfb\xc5\xcc\xd2\xa4?\xfcaX\xd4i2\xbd??=Q\xd7\xbd(\xbf\xbfw6\xc5\x9f\xf4\x98k\xbfvq\x00\xa1F\x17\xca?\xcaVK\xd7\xa3v\xd1?\xe69\xa7a\xb5\xfd"\xbfh\xb0L+@<\xb6\xbf\xcc\xd8T\xe1\x06\xeb\xb7\xbf=\x1b9\x0e\xfaM\x9d\xbf\x98l\xed\xd5\x04;\x9f\xbfF\xeaR\x04\x98x\xd0?\xca\x15\xef\x93=\xbf\xcb?u\xac\x9a\xc3\xd0\xce\xaf\xbf\x9d\x98\xee\x9d\xc2\x12\xb1\xbfr\xc9\xc4@\xeed\xb8\xbf\xb1:\x02C\xe4\xa6u\xbf+\x02\xc5\x1e0\xff\x9f\xbfp-\xc7\x80\xe6K\xc2?4\xf9\x94\x0cFy\xbb\xbfTN\xad\x9c1`\xd3\xbf\xcfV]U\x96\xf8\xc9?\xc8!\x02-"\x11\xc0?\x13m\xd7\xbd\x1f^s\xbf(4\xa9\x9b[\x97\xd0\xbf\xf5\xb8H\x89T \x99\xbf\x9b\x0c\xc10Q\xd4\xc6?E\x9c\t\xb9\xfe\xc6m?\x029\xdb_v\xa0\xb7\xbf`omM\x9f\xad\xb2\xbf]\xae\x04~Y\x96\xbe\xbf93\xd4\xcdU\x1d\xbf?\xe3\xff\xddo|Np\xbf\x12\xcc!\x90`\xe9\xa9\xbf\xe7\x98\xadKK\x97\x99\xbf\xe7\xa2\\\xf9\x11\xa5\xb3\xbf\xaa\xff}*\xb8;\xb3\xbf7JSo\xb1\x82\xb6?\x95\x8f\xe2\x83\xe3\xe7\x90\xbf\xac\tO\xcc\x18O\xa0?\xe9\x88&4@6\xb4\xbf\xd7\xc7CN\x13Y\xaf?\x9e\xce\x18\xd2\x8b\xbb\xbb?\xd4F\x1b\x01U\xac\xb5?\x1fO\xe9\xa02k\xb8\xbf%d`\xda\x81Z\xa3\xbf\x96\xea;\xadh\x85\xc5?\x08\x8a\x0b\xdc?E\x82?\xa3\xcf\x86\x98`0\xa9\xbf\xd5\xf0\xf9\x87\xf9[\xa0?\xce\xda\xbf\xe3~\'\xa5\xbfY\xfc*\xae\xa0\xf9\x96?PAi\xe7\xac\xd4b?qy\x01\xa3.\xaf\xae?\xc4\xfd\xbe4i\x16\xa0\xbfznf\\\xff\n\xa0?.\xe4\xa3\xb3OM\xb3?>\xf6*\n)\x13\xbf\xbf\xc5\xe9\xe3\x01Z\xa0\x80\xbf`\xd8+\xc1\n\xff\xb4\xbf\x94\xbf"Xq\xe9\xa0?RP\x83B\xfcI\xa2\xbf\xf3\xf8\x1a\xb52\x80\xb5\xbf.\x80Hl\x15\xda\xa8\xbf\xdf\xff<\x8e\xfbm\x8b?\x19b\x16\xae#8\xaa?>)R|u\xa5u?\xbb\xcej\x07\xa3\xb7\x9b\xbf0=\x84u@X\x9d?B\xcc\xc0\xe0]k\xb7\xbfI\x85\xc7"4\x1f\xb4\xbf\xc9P\xbb\xfc\tM\xa3?\x8a\x16\xaf\xeb@w\x8a\xbf\xf5\xd2\xebP\x16\xc9N\xbfu\xd7`\xcf\x1c\xcc\xb0\xbfX4\x8eRA\xc2\xbf?g\x05\xb3ym\xf4\x85\xbf\xb3\xa7Y\xbc\xb3\xa9\xa6\xbffU\xf0\xd4vz\xc2?J\xd8\xf8&\xb1\xe3\x84\xbf\xf7\xea\x9e;\x90\xc2\xb0\xbf\x9d\x85F\xc0\x02Q\xc0?2\x05w4\x96\xd4\xb7\xbf\x95^V*\x8a\xc3\xac\xbf\xa7\x0f\xd0j-\xee\xa8?\xc4\xf5\xec\x01 \x04\xa4?\xb2hW\xb4\xbeG\xc6?E\x9aP~q\xc1\x81?FG\xe4\'\x8c\xa5z\xbftz\x83\xc5\xc8\x8f\xc7?d_\xbe\t\xf0\xddT?-\xf3\'\x1f\xfa.\xb5?\x135\x18@\x89&\xad\xbfv\x89\xa4C:8\xb4\xbf\xc1T\xcd\xed\xbfe\xa6?\x83\x83\x9d\xcaq\xf2\x9a?\xbe\x11\xdegr\xa7\x89?\xa40\xbf\x97\xe3\xf4\x9a?\x99t\x9f\xe4S\x99\x93\xbf\xc0\x8b\xd1\xba\x9c~\xa6?\x1f\xa4mv\xf2\x8f\xce?\xfc6Dl_g\x85\xbf\xd6.\x97{u\x7f\x87?\xf5\xdc\x9b\x1a\t\x89\xa5\xbf\x9f+\xab\xd8G\xf8\xb3?\x9bg\'4l>\x87\xbf\xe7\xd9\xc4z\xdc\'\x8c?G\x14a2\xfbc-\xbf\xc4\xfb\xeciM\x89\xd4?\xf8]\xb4\x18\x0e{e?||7u\xfd\xf6b\xbfd\xdc0|f\x94\xcc?$v\x11\xf9\xf6=}?u\xb2v\xd4\x1dL\xb2?5\xedp"i\x87\x8b?\'\xe6\xb6\xb3\x8f\xff\x8c\xbf\xb3\xae\xccmj9\x8d?\xebq\xa6\x1d\x9a\xde\xb3?[\xa9p\x0c\x94\x06\xbb?\xb9\x1f=\rz<\xc0?nO\xadg\x05_\xc1?!\xfc\xa2\x87sQ\xab\xbf{\xa4_R_O\xd4?\xbc\xf7\x8a8rv\xa9?\xa8\xb0!\xce\xf9.\xc1?\xda\x80\xeb\xbd\xbd3\xb4\xbf\xdem\x97\xec4\x0b\xc3\xbf\x8f9"\x93\x9f.\x99\xbf\x8a\x88-HK^\xd3?q\xe1]\x97\x81\xe3\x99?2CZ|it\xa4\xbf\xa6\xcb]\xbc}\xc3\xb5?V\x06\xfe\x15\x10\xe9\xb1?F\x80x\xec0\x96\xc4\xbf\xb2s\x9a\x8a\x9a\xf4\xbc\xbftj7\xcb\x12\x8b\xbe?\xe3eye\x91l\xab?\xabo%\xcb%\xcd\xc3\xbf]\xac\x9dS\x82\xbd\x80\xbf\xfd\n\xcb\xdd\x9ef\xbf?\x12` \x1d\xa9\xc9\xac\xbf\xa4_\xff{\xc8`\xb9?\x829z\x1b\x11n\xb3\xbf>\xb5\xb0T]\xc5\x93\xbf\xa07\x85\xf2\xb5\xc0\xc8?\xea\xabN\t\x8aP\xbf\xbf\xb7j@\xe5\x0e;\xc8\xbfS\xd0\xe2-?t\xb9\xbf]-\xec|\x98\xec\x98?\xfc~\xean\x9d\xb8\xb0\xbf\xc5\xdd\x12\xe6x\xb7\xb1?\x95\xdc\x07\x15\x8b\x1c\x8a?\xc8\xb1\x0e)J?\xa3?w\x11\x89\xcf%\x0eF\xbf\t\x08]\xae\x1bi\xcf\xbfi\x81\x80\xcc\x89P\xc0??\xb7T\x91f\xc4\xaa?\x17\x85\xcf\xa7j\xd1\x97?\x1d6\xf7D\xbc(\x96\xbf\x83 \xbb\x99\x1a\x0c\xc1?;$\'&\x7fY}\xbfu\x16\xa6z\xc5f\xcc?R;qQ\xa2\xad\xc1\xbf\xdd\xed\x8b\xee5\x0b\xa2?\xd0q\xb6\xcc\x11\xe5\x8a\xbf\xbcP:\xaa\xd8W\xc3?\x86\x03\xfe\xba\xb8^\xaa?^;\xe1\x95\xf8%\xcf\xbfTV)3 _\xcc?;ng\x13\x93+\xc5\xbfy\xef\xf9r\xdb\xfb\xb2?\xdf\x13\xecK\x9aT\xb0\xbf\xd4\xd9;U\xb2\xcb\xad\xbf\xe8\n\xf0<7\x14\x90\xbf\xc2\x8c"\xf0[\x89\xd7?y\xb6\x8c`\xde\xf5\xbf\xbfD\xd4n\xf2\xb3\xbdt\xbf\xe3+$\xfa\x83\xe2u\xbf\x90D \x1bo\x98\xa4\xbf\xf0$$UA\xf1W?1\xf9\xd2\xc42V\xca?4I-\xe3\xde\xb8\x87\xbf\xc0\xfe\xcc\xd4\xe1\xd3\x84\xbf\xbf\x89\x96A_\xe9r\xbfjx\xa13\xcbZ\x9b\xbf\xe5\x1f\xcf\xc9\xa9\xe1\xa6\xbf\xe3g\xe9\x8f_>\xb2\xbfbR&\xeb&+\xc2?~\x11\xe8\x96\xb6;\xba\xbf\r;\xcf\xfe\x0f&\xc5\xbf-\xa1\xcb\x91\xeb>\x83\xbfG\x0b\x91\xf0\x88x\xb8\xbf\x04\xda\xcd\xa1\x08$\x90\xbf\xbbU\x8cauj\xa8? \xa3G\xe7$>\x90?Mer\xe4\x104\x91\xbf\xb3\xf5T\xfb\xe9\rL\xbfLR\x8a\xf3X\x7f\xc8\xbfV\n\xc2\xaf\x08\x8c\x8a?D\x1c<K]4\xc9?\x0f\xd8?Gs[\xb5\xbf(\x11%\xb2+\xfb\xd2?\xa1o2\x93\x9a\xe1\xd3\xbf\xc2V/\xbbo\xf8\x97\xbf\x96\xf3\xce\xd3\xda\x8c\xb3\xbf)\x9dR\x8fN\xd6\xa1?\xaeM/\x8bl7\xc0\xbf/\\\xcd\x19\x87\xa0\xc1\xbf\xbf\x11\x0c\tHs\xb9\xbf\x92\x995g\xf3]\x89\xbf\xbdH\x83K1\xd5\x8f\xbfg\\\x9cc\x02\xa2\x9e?\xdbP\x86\x9a\xfc\x17\xbf?\x1et\xb7Q\r\xd7\x91?h\x7f\xdd1\x898\xc4\xbf\x97\xcb4\xef\'f\x9f?Kp#\xa1\xb4/\xcf?\xde7\x9fa\xe0|\xa0\xbf\x13\xc0\xb3ck\xcb\xb7?+\r\x95\xd22\xe6\xc0\xbf\xb7+7\x04h\xb2\x8d?\xee\x8c\xd1\x8c\xd8\xc1\xb9?\x15\xe1\xf6\x8d\xb2"\xd4?\x88\xdc\xab#\xc0\x84t\xbf*\x03\x93\xcc0\n\xd5\xbf\x82\x86\xa6|\xbbS\xd5?\xf8\xd1\xc7T\x14h\xa8\xbf\xf5jUb\x0fB\x8c\xbf\x8e\xeb\xbe\'\x87M\xbe?\xa3\xfb\x93\x9b\xd0\x02\xb9\xbfN\x91\x89\xad%p\x85?\xd2\x00\xb3\x16\nIw?|\xd7\x02\xc71l\\?\xee\xca\x95\xf4\x8b\xdf\xac\xbfh\xc3mc b\x8f?\xa9\xbf\xd5\xc2\xc6h\xc0?\xd7\xa5hc\xc15\xb2\xbf\xca\xdfW\x07\xe7\x00\xd9\xbf\xe7\xe2gy5]\x92\xbf\x89t\xad\x13+c\xc1\xbf*Ni\xd7\x0f\xe2\xb4\xbf,\xe0u\x92\x95k\xa3\xbf\x1b\xc0\x13\x13\x15,\xa2?Oz\x07\xebr$\xe1\xbf\x87\x07A/"\xa3\x91\xbfA\xa8\xber\xe1\x86\xe0\xbf`0\x85\xd1\xd5\xca\xaa\xbf w+\x91\x03\xd3\xa4\xbf\x0eq\x8f2\xf2\x81\xa6?\xcfC\xc7g\xb0#\xb6\xbfu\xef\xce\x90<\'\x91\xbfa#\xdfGp\xbf\xbe?\x1d\xbd.\x1c6\xe9\xc0?\xa1\xba\x0f\x8d\xc7\xa0\xc9?\x89r\xd9\xd1C\xdf\xc2\xbf\xa0\x1f\xf0\xf6[/\xa6?Q\xb8\xc9Co\xc9\xea?\x9a\xc3(\xd0\xf5\x83\xc0\xbf*\xbf\x99\xc3\xc3$\x87\xbfY4\x82\x9fk\x1f\xb2?r\x81\xc4"\x0en\xbd?\xde\xe4:\xb8ao\xcf\xbf\xd4\x03\xa36\t\xf7\x90?\xc7S\xf4\x9b\xae\x04\x95\xbf\x14.\x9b\t\xeb\x87\x85\xbf\x1fZ\xc9h&e\x96\xbf\x8d6\xa6OI8\xc0?\x83^Rdc\xdb\xb3?\xa9\xba3\'\x80\x10\xb7\xbf\x00\xf9_\xa3LK\xc3?a*\x88\x98M\xf3\xc4\xbf6\xe0r\xae\xaa\x99\x90\xbf\\R\xda\xcf7\xb2\x84?`\xadp\x9bj\xe8\x9a\xbf\xbbGZy#\xb8\xc1?\xa7\x85\x84\x81\x11\x8a\xc3\xbf+A\xfd\xee\xa2\xa1\xcb?\xb7X\n\xe7V\x14\x87?\xb0\x933\x86w\x14\xaf\xbfX/\xd8\x8bA,\xdc\xbf\xa8\xban\xd6\xa1-{\xbf\xd6\x04\xb2\x86\x8c\xb7\xc2?fs\xe4\xd2\xd5;\xb2\xbf,!\xffu\xb7H\xc6\xbf \xcf\xd4\x06\xf5W\x83\xbf\x1cxJn\x1e\x82\x87\xbf\xd3\x9c\\\t\x12\xdc\x9c\xbf\xf3\x85\\fl\xb8\x85\xbf\x7f\x84\xb1\x81\x00\xa6\x93\xbfn\xa2FF\xd1y\xb4\xbf\x1d\xc2\xa9\x0c\xe8\xabb?f<\x96zh\xe2\xde\xbf\x97\xf05\'\xf0 \x8e?\xe7\xcc\x12-V3U?k\xedw<"\xd4\x8c?\xd9`\xd2u\x8c\xab\x91\xbf\xb8\\k\xd8(\xef\x86\xbf\x0fj\x10\x0f\xbe\x8e\x96\xbf3]\xc4E;8\x98\xbf4N\xe4\xd7\xdd\xfd\xa0?3H8B\xc3\xa8\x95?\xb0\x17\xea\xf4~\xbc\xae\xbfs\xcd =\x01m\xe0\xbf\x8a\x93\x10MzO\xc0\xbf\xabV?`\xa0\xb6\xb7\xbf\xfe\xb9\xef\xe8.\xb0\x94\xbf\r48;\xfe\x9b\xa3\xbf\xa8\xc8\xb1\xe7a\xc0\xb1\xbf\x1b&?\x16\xeb\xa1\xa0\xbf1\x9aE\x97\xcf_\x8c\xbf\xf3\xf0\xc7\xedS~\x91\xbf\x8e\xf0k\x0e\xee\x9f\xa6?\xfc\x82[\x13k\xf4\xa8?\xc3\xdfX\x89\xa8\xcd\xa4\xbf\xcfj\xab\xed\n\xa8\xaf\xbf\xe8PP\xe4\xc4\xa3\xae?\x04\x00\xa1\x0e<\x96\x8b\xbf\'_"<1d\xd4?\xed\x10\xd3V&E\xb7?\xf2\xa9\x84\x07~\x00\xa8\xbf\xdb\x0e^]\xcb\x15\x8f?A\xee\r\x129\xb3\x8a?\xb8\xe0\xc6y\xa4\x8f\xb2?AaD\xc2w\x80\xae\xbf;rQ\x19\x08\xee\xd7\xbf\xc3\xaen\xa0\xe2/\xb0?H1\xf7B\xc2\xcd\x91?\xd8\xcb\xf19\x95\x95k\xbf\xfc\x86\x8d\x9d\x8f\xcf\xa8?I\x8dJ\xd7\xfa\xe8\xb0\xbf0\xc5H\xcb\xf9\x81\xc0?@S\xe68\xdf\xde\xb1?\xd7N\xdct\x12\x84\x99?\xcd\xd6nb\x11c\xa3\xbf$.|\x88\xe90\xb3\xbfw\xf2[\xb8\xedL\xb0\xbfc\xc1-\x01\xd9y\xbb\xbf\xb6N\xa5%k\x8c\x8e?\xb7g\x93\xdb\x12\xfa\x83?5C\x1d}\x01t\xc0?\xd6\x1d\\\x97\x92\'\xc4\xbfj\x12W\xcbLi\xac\xbf\x92q\xcdOY\xec\xa7?\xe3P{\xc2\x152\xb0\xbf\xde\x85&5\xc2C\xc5?y\xaf\x8b\xb7\xc7.\xa3?\xdd"!<\x19\xda\x83\xbfB\x1f\x17\xf4\x1a~\xaa\xbff\x8c\x99\x87\x04\xca\xc0?\x94\xbf9w\xce>\x97?V(\xa9\xf7z\xc6\xcf?/0\xb4\x96\x04J\xb3?\xb2)\xb7KDz\xb6?nC[\xcf\xc8\xd6\xd1?\x03\x8d\xce:\xec\xb7\xc2\xbf\xf4a\x8c/\x1c\x01\xb4\xbf\xbe\xc0\xa4sF\xe4\xd0\xbf9\xe1\xc6\xact\x90\xaa?gR\xc93\xb9\xd0e\xbf\xa55\x01E\x83\xf7\xc3\xbf\xda\xd4T%\xe6\x8d\xa4\xbf\x90Az\x8e\xca\xc0\xe2\xbf{\xa6\x91\xb4\x89s\xbb\xbf|\xa3\x86\xd0-T\xb2\xbf\x13\x8c@\x87\xc9\x1a\xb6?3\xb8\xd4\xf8\xbcX\xbd\xbf\x19\x8fhf^\x93\xe0\xbfg\r\xdeX$\xc5\xbe\xbf\x0eYZ\xb4\xaf\x1d\xa2\xbf\xa4\x08\xee\x81U\xb3\xb6?-\xdeiA\xb0l\xd7?\xebd\x1b8\x91\x88\x9b\xbf\x98J\xe1\x00\x9f\xf8\x9f?\xe7\xb5G\xb1\xef\xa4\xb6?li\x8dQ\x1e\xc7z\xbf\xa0cm\xbe\xee\x9e\xd3\xbf\x9d\xc5\xcb\\\r\x14\xbb\xbfr\xb4\xb0Z\xc7Y\xbe?w\x9d\x87JK\xcb\xae\xbfS\xa0Pe\x16\xc0\xb0\xbf\xfd^|\x85\xd7T\xb4\xbf\xd6\xa8\xdb\x86\xa5\x17\xc1?\x0f\xff\xcam\xd8\x93\xb6\xbf\xec]2\xf5GR\xc6?X\xd2\x9b\xdf\xbb\xc5\xae\xbfR\xee5\x99\x8e\xbbl\xbf\xf9\xf3\x0b\x14\x17\xa4\xb9\xbfUgkevc\xd3?\xc9P\t\x934\xef\xb8?U\x03\x1d\xad%s\xc2\xbf\xf3n\xfd+\xa6\xf4]\xbfOF\xc0i\xe8\x1e\xb7\xbf_ \xb1\x08lP\xb0\xbf\x87o\xbb\x06\xda\xae\xc1\xbfqv\xc4\x0f\xa6?\x92?p\xfd\xa5\xca\x8a\x1a\x9e?|\x9b\x01\x80\x17(\x8b\xbf\xd1\x0cQ\xdc\xb2\xa7\xc8\xbfP8\x8a\x87K\xa6\xbb?\xdc\x98Z\xdf\xfa\xa5e\xbf9\x8e\xa8X\xdcR\x84?\xc5r\x15\x02\xca\xe4\xd7\xbf\xa5I\x9f6\x8c?\xc3?\xc0\x99\xce\xa1c0\xb6\xbf\xe3#\xa4\xd6\xdd\xd0\x9a\xbf\xe1\x01s\n\x84\xab\x9f?\xba3b\x07n\x8f\xb2\xbf\x0b\xb6\xa37\xaf\x06\xce\xbf\x0c\xcb\xc3e\xab\xb9\xb8\xbf\xde\x0e\xa2\x8b\x8b\x96\x89?\xfb\xf1\x1d\xd9\xf4\xf7\x8e\xbf$\x9e\x82\x00\xf5\xb8\xa5\xbf \xd4\x8d\xaf\xbd\xaf\x94?\xa6mQ$\x1c\xc7\xb8?\xc6\xf8\x10\x1a\x06)\xbc\xbf\x97\x8bt\x84$]\xa3?\x12\x81^_}&\xb3\xbf\xa2\x1d\x1c\xa3\xcf&\xd5\xbf\xe1\x85\x003\xec\xac\xb8?\x98\xb1\xfe\xb3(\x17\xd5\xbf{\x989>3S\xb0?\xa0\x86\x8dAL\x87\x9c?\xe3\xb0\xa2\x1b@\x9a\xaa?\x8e,\xef\x97\x86;\xbc\xbf\x85P\xdc\x8ar\r\x94\xbf\x91\xe0\xeb\x96\x08\x0e\x98?gX\x1e\x99\xf4t\xc8\xbfW\x116/[8\x8a?\x1a\xfe\xd8I\xc1\xc0\xc0?a\x0e\xbd\xe0\x8a\xe8\xa9?\xcc\x01\xab*T\xe6\xb0?-\xbbe\x12\xb4\xda\xb9?h\xf0\xb5H?`\xbf?\xf0\xfa\x9d\xa9\xd3}\x82\xbf\x19\x9a~\x14\x16\x99\xad\xbf\t\xa7\xc2\xf9g\xfb\xa3?\x92\xc8T\xb2\x0f\xd4\xb6\xbf\xfe\xe9\xb9OG\x88\x94?cVsCM\x84A\xbf\x1edW\x044S\x97\xbf\x01\xfc\x81\xf3\x8d\xf0\xb0?\x96(k\xdaB\x06\x90\xbfgM^d\xf9\xd1\xc7?\x9f\xdb\x8a\x98FT\xb5?G1]h\xf1\x93\xc5\xbf\xde\xc6\xc1\xc1\x15\xc2\xbc?\xe6Fe\x00\xf7\xf7\xc7\xbf\x02\xced\x8fl\x92\xb0?\xe6\x91\x80\x96\x0b\xa8\x93?\x19\x18W\xfa\xbd\x01i\xbf\xadK~\x94\x1e4\xa8\xbf\x94X\x98Y\xfa\n\xb8?\x9eg\xc7\xc8(G\xc0\xbf\x8b\xba\x8e\xda\x00\x9a\x92\xbf\xde\xe5\xa9\xe0\x89\x00\x93?\xc93\x82\xbb\x80\xd4\xb6\xbfh\x1f&0\xb6\xb8\xcf?a\xcd\xfat\x00\x11\x9d?V\x99*\xc4\xd7Xt\xbf\xe6\xfa\xdf\xd1\xba\xdc\xc0\xbf\xd7.k:\x05\xc2\xb9?\xbb;\xde\xd7\xc6e\xae?\x17\x19\x1aL+\xca\xb1\xbf\xf2H$\xcc\xd6\xc1\x93\xbf[[V:r\xe7\xcb\xbf\xf0\x91\\S\xbb]\xaf?\xc7c).\x8b\xf1\x9f\xbf\xca&Mlz\x14\xc0?z/z\xa5\xcc\x92\xb0?>(\x1f\xa5\xddI\x93?\x05\x06\x06PhW\xad\xbfG\x93\xcb\x9b"\xea\x9d?\xbb\xcf\xe1\xb8\xa3Y\x9a\xbfb\xb3\xb0\xe2\x97\x0f\x88\xbf\x1a\xb1\x0f\xb19\x9e\xa6?0\x9a\xd2\x99E\xda\x95?\xa8\x1b\xc2\x9c*\xddq\xbf\xfc\x0f\xd5\x0cm\xb9\xd4\xbfia\x0e\x9c\x7f-\xc5?4\xafg\xb6\xca,\xae\xbf\x86F\x10\xde\xd1A\x91?\xc8>w\x08m\x8b\xc0?C\x7f\xfaI-\xe6\x8c\xbf\xc8\x18\xa3\x93\xeb\x03\xa6\xbfk%\x9b\xcb\xd9E\xbc?8\xc5\xe2\x14\x06\xa0\xb2\xbf\xb4\xfd\xfe\xa3\x1c\xbe\xcf?\x89\xe1\xe9"LS\xa8?\x9a]\xd6\x9b\x89\xe5\x92\xbf\xf0\xf1\x15\r\x1eF\xcf?C\xbb\xcfXx\x96q?\xef\x90\xa5\xc5R\xca\xb8??\xc1\xfe\\\xacb\x9c?\x18\xd4\x9cg\xd1\xf8\xc5?\x13a\x10\xc3g^v\xbf\xa7..\x8b\xa9d\x9b?\xb0\xb6o\x19\xfe<\x92\xbf\x1aX5h+\x0f\x8e?p\xe0\xb1\x91\x8f\x0e\xb7?E\x17&\x9e\xea\xbb\x95?\x85V\xe5Ms\'\xa1\xbfD\xff4\x13\x1bk\x95?\xb5\xd7\xb0\x12\xf2\xd8\xb2?`\xa2o\xa5\x16\xb8\xb4?\xca\xf1\xcbX\xfc-\xce\xbf\xa5\x8b\xb3\xbf\x97\xfe\xcd?\xc2\x87\xcdC\xe3\x1ep?\x84\xd8\xe2\xe3\xcb[\xa3?\t)\x80\x17w\x90\xc1?\xfby}\xd70\xe8\x92\xbfx6\xfal\x8e\xb7\x08\xbf\xc8\xaf\x92\x9fS\xc0\xd5\xbf7vS\xa6C\xe8\xbe\xbf\xf9\x12\xf9\xd96]\xb0\xbf\xae\nqD\xaau\x8d?4D\xac|\xe4\xfc\xb3?\xe2\xd9\xf0\xd9-\xacv?v\xc1/>2w\x8e\xbf\x908`\xcf\xf3ef\xbf{K\x15\xb5\xaa\xf2\xc8?2,\x80\x848\xee\xb3?U\xd6\xbd_\x02\xd0\xca\xbf\x9b3\x8b,D\x0e\xdd?k\xea\xcc\x00\x8b\xd5\xc4\xbf\x88\xf6\xd0\x82di\xd3?\x88\t09\x8a\x89\xb5\xbf\xf3u&\xbf{\x85\x9d?\x89\xa7L\x18\x82\xa0\x96\xbf\xcb\xd8\x0f\x05\xcc\xad\xbf\xbf\xb0\xac,\xd6\xeeb\xa1?)\xf6\x96s{A\x93\xbf\xd6\xdd\xb2\x96\x00\x10\xa5?\xbc\x81\xde\xbf5\xf1\xa6\xbfIL\xda\xe5\\\xee\xab?8l\xf5n\x01\xda\x90\xbf\x0fE\xaf\x18c\x02\xa8?`\xb0\xd5y\x95\xc6\xb6\xbfM\x7f\xe0\xee8N\xd4?\x95\x15+\xfbJ\xf9\x98\xbf\xcb\x7f\xec\xa7\xc0\x8f\xbd?\x087\xf3S\x13M\xd1?\x8c\xcfR\x1e\xach\xa7\xbf\x05\xfd\xe2\x1b\xb9B\xb3\xbf@-\xa1[\xc8\xad\xc9\xbff\x04\x0b\x8a\x8a\x80\xc5?\x1e\xfa\x80\xe8\xa2b\x9a\xbf\x8d\xaf\x08\xbf\x8f\xfb\xae?c>=T\' \x98\xbf\xf0\x96\xeaX\xebJ\xa9?\xe0\xc6\xc7\x12\xf6Q\xb4\xbf#\x13]\x91W=\xb9\xbf\xf2\xf1\xb55W;\xb4\xbft\xb9v\x99G\xa2\xbb\xbf\xa1\x14\x86z\x94-\xad?\x0e=k\xce\x8f\x08\xd1\xbf`\x7f\nG\xa6\x9e\xa6\xbfs\x85(\xa0\xb8\xee\xb6\xbf\x08\xa7Rz0\xb8\xbb?tMp\xf9\x11\xc4d\xbf\x0b\x08C\xb0\xf8\xe6\xc8\xbfQQ\x043\xb9\xa9\x9e?\x06\xa6\xc4\xeb\xbd\x84\xae?\xb8hR\xfc\xf0"\xad?\xb6}\xc0\xc1\xfd\x9a\xa3?W\x0b-fA\xe2\xbc\xbf\x96\x0f\xa6<\xdf\x8e\xb9?\x8b\xcf\xc9l\x97\xd4\xc6?\n\x83\xc5\x1c\x14\xf1\xbe\xbf@\x1d-\x99\x1d\xd6\xc5\xbf\xb1v\xac[AW\xb6?\x88\x82> r\x1e\x83?#\x0b\x14\x87i\xb1\xb5\xbf\xbfd\x9a~T\x16\x8c\xbf\xe7\xbf\xe8}1=\xa8?]\x9d\x89\xe8\xc5u\xd4\xbf\xcf/\x94\x99=\xe0\xad\xbf\x91>\x0e\x0fB7\x9b?\xab\xd9\x0bt$\xa3\xa0?nz\x05\x06\xb0\xc8\xbb?aR\xdcfc>\xaa\xbf\x17\xbb \xa4\xba\xd4\xd0\xbfX\x02c@\xbd\x14\xb1\xbf\xd0n[\xc8\xbaB\x9c?\xdfm\xc7\x9fp\x8e\xb0\xbfi\x99\xd9"\t\x95\x98\xbf\x95\xe8S\xd6\x1e\x88\xc1\xbfv67\xc0\xc5\xcc\xb4?;\xe8E\xa0\xb4\x1b\xdb\xbf93V\xd0\x0c\xb8\x88?\xdd\xadC.\xe3v\x8e?iv\x84\x04\xa9\x11\x82\xbf\xf79|ho=\xd2\xbf\xb3T4Up[\xb2?J\xd0\x90\xe6c\xd8\xb0?\xb4\xc3\x8f>+l\x9a\xbfx\xcd3\xe5$K\x9d\xbf~\xd0cK\xe8\x13J\xbfE\x04\xc0\xb7\x8b>\xb1\xbf\x86\x89\xda\xd6\x9bN\x83\xbfpix\xa6Y*\xb8\xbf\xd9\x07M\xf8\x02^\x81?\x01\xb7\x8d\x8e\xb9\x04\xc4?\xef!\xe1K\xca\x9d\xbd\xbf\x89\xc7l\xb0\xc7\x17\xb0?\xb4\xea\x06\xf4;2\x84\xbf"3z\x95P\xa4\xaa\xbf\xfde\xf5\xfc+\xea\x99\xbf\xa1\xd8u\x84\xb3\x04\xbb?\xf3>Z\xfd\x08\xd3\xa4\xbf\x17\x9f\xa3\x8f\xd9\xf9\x91\xbf\xbb\xa6G\x95\xf5j\x98\xbf\xed~CAz\x9d\xb7?\x1c=\x8f\xd0\x92W\xc1?\xd9\xb6\xe2\x87\xc8\r\xa0\xbf\xe6d\x1c)\xdf\xd3|\xbf\x946\xeb \xce\xe6\xb1?\x82kV\x9b\xfe0\xbf\xbf\xc4\xa5\x8c%]\xf3\x96\xbf\xd9\x08G\xd9;4\xd0\xbf)Z0H\xf7\x95\xe1\xbf \x10|\xf4\xed\x1d\xae?[HKC\xa3\x0c\xad\xbf\x87_\x85O\x89\xa7\x84?=\x9f\xe9L\x1bl\xc3?\xa8P\xe7\x17\xdf\xd9\xd4\xbf\xbd\xe6I\x1b\x84\xe5\xb7?CI2\x13U\x97\xb1\xbf\xb5\x15]\xe3!$\x80\xbfE\xc6=\xa9X\x9b\xc7?pP0\xb5\xa4\xae\x9f\xbf\xae\xe9\x81f\x9c\x1a\xbb\xbf!\'bQRM\x8f\xbf\x0bj]\xcd?\xdf~?\x80\x08R\xf8\xafD\xab\xbf\xe5\x8c\xf4T\x9c\x00\xb8?\xf2\x96U\x19\x87\xe1\xc9?\xbb<\xd57\xb6\x8a\xb0?\xee\xd5\xb88\xe0\x81\x94\xbfrC\xe0\x0ff\x95\x80\xbf\xb0\x13\xe4\xe3\xd5+\xbf?\xb2\x1f\xa2\xf9@\xa2\x9d\xbf\x0f\n=\xaf\xe2\x05\xc8?\x19\xec\x83\xb24\xe4\xa9\xbfa\r"\x9d\x04o\xcb\xbf\x81\xfc\xde\xa1\x8f\xe2\xcc?k\x02\x91(\x86k\xd4\xbf|k\xe6q\xc4]\xab\xbf\xa1<k\x01r}\xc6\xbf\x80\x8f\xdb\x852z\xbf\xbf}?\xc4=\xc9m\xb3?\x0c\x02\x9e!_t\xae?jya:u\xfb\xb5?\x07?s\x88\xb3\x8co\xbfF3\xfa\xee\xd5d\xc1?\x1a\xe6\xb7\x15\xf0Z\xc2\xbf%\xf3&*\x8ay\xc0\xbf~\xfe\x10\xce\xb3\xa0\xc3\xbf\xab\xcbB\xb8@\xe3\xb9\xbf7ER\xad\xbf\\\x86\xbf\xde\xdf\xcfHx\xae\xd5\xbf\x01B\x06\xa3\x8a,\xb0?\x05\xf7\xcb9\xab\xdd\xbc?SIB\xdd\x05\x93\xa4\xbf\xddyL\x9b*\xe8m\xbf\x93\x03h\xc0\x10R\xb6\xbf%[\xbe?\x98\xec\x8f?\xde49\xb8\xa9D\xa2\xbf\x8b%C\xf0\xc9\xaf\x8d\xbf\xbbP\xb0\xb0\xf8@\xae?\xa3@\x05\xcbdA\xcc?}\xe6#\'!\x87\x8a?8\x97}F\xba4\x92?\x91\xb6\xf9\x0b\xa8J\xa3\xbfD\xf57\x12ca\xb1\xbf\xb1\\\xe0/\xf7>\xaf?"\x15o\x93z\xd4\xaf?\xf0\x84k]j\xc7\xaf\xbf\xe0v\xcf\xb3?o\xa6?dWm\x05`a\x9b\xbf\xe5\xef\xee]\xc8\x92\xbe?\xc2&\xcfD@\xa3c?\x9a\x00\xbe7 ~\x82?\xa4\xe4\x7fN"7\xa8\xbf\xb6\x8cR\xf5\x04\xed\xa2\xbf\x8a\x1cNr\xbe\x1d\xab\xbf/\xf2b\xdd\xb6;\xae?\xbc\xce{\xc3\xcb\x00\xb1\xbf}\xf4\xb7\x06\xa6@\xc5\xbf\xe1\xdc\xb0\xf5z\xd61?-\xfd\xb2\xa7-\x8e\xc4\xbf\xb1%U\x86\x9f8q\xbf\x04\x8a\x95\xe8Yn\xc5?(5E\xefV\x00\xa7\xbf\xe4J\xaf)k\xcd\xa5?t\xb9\x9b\x94\xd3g\xb3\xbf\xbe\xe4n\xf6\x1e\x85\x9a?\x06\xbez\x1b\xa2.\x8b?\xde\xf06\x9f\xaag\xc6\xbf\x04\tp\x08"\x16y?\xe5|\x93,g\xb6\xaf\xbf\xb0\xaa\xddG\xb1\xc0\x81\xbf\x17\x0f\x15IM\xad\xb9?\xea\xb3\xa2a\x8eP\xdb\xbf\x19\x00\xc7\xd7\xa9\xb4\xa2\xbf\xc0p\xd2\x9a\xe0\xd1\x9d\xbf\xa3\xb3]\x1d\x8dT\xbf\xbfQ\x9d3LU\xe3\x88\xbf\x88\x01\xb0\xfe\xf7i\xb8\xbfP\xa6\x00t$`|\xbf\xf0\x92K\x9b@\x98\x9d\xbf\x12\x9b#\x8f\x0b2`\xbfY\xe4e\x80\x842\x9e\xbfJ[\xf6{\xa5\xf3\xbb\xbfo\xa4\xaa\xb2\x93i\xaa\xbf\xa6\x82\xfc\x1c4N\xc8?O\x06\x90\xbf\nb\x8c\xbf\x0c\x9b$\x85\xf0[x\xbf\xb4\xe1H\xbcX\x17\xc8?@>=\xcf"G\xbb?q\xa59)\x98\x12\xc5?\x91\x11&\xcb\xb8!\x80\xbf\x03> \xaa\xf2*\xa1?\x8e\x81w\xfa6\x19\xa6?!\xcc\xa8\xf0oB\x99?\x86H%\x92.\x03\xa2?@b\x1b0q\xf2\xa3\xbfr\x9b\xfdv\xda\xd7\xb8\xbf\xc0\x0c\x0f\t3\xc3J\xbf\x1d\x8b\xa3u\x99\x11\xce?h\x06\x0f\xd4t\xae\x99\xbf\\\xb6\xbf\x96\x93\x7fp\xbf\xf8\xb3y\x93\xd5C\xca?o\x16zf\x9d\xa7v?\x01\x10\xcf\x15=\x83\xd1\xbf;q\x92\xc3\xfb\x9b\xc3?v\xce\xd5\xf4\xe8r\xb4\xbf\xd4\xa8d^D\x83s?\xbd<\x99%]\x8a\x92?\x0b\x85a\xe9\xf9\x19\x8c\xbf3\xbc\xbfZ\x06\xde\x84?Q\x12l\xd2\xdb>\xc1?\xf4*qK\xbf\xcf\xae\xbf\xdbF\xac\xf8\xf2\x81\xc9?\xfd\x1f\xa2\xa8\xe25\xbc?q\x8e\x1b\x8d\xe6\x8a\xc2\xbf_\xb51M\x10\xdcf\xbfw\xd5\xf7\xd4\x0bo\xaa\xbfp\xd2\t\xde[8\x9a?\xd9H\xfe\x90p\x96\x87\xbfs\x839\x7f\xd0(\x97\xbf@=\xb4\xa9\x9d\x01\xa6\xbf\xecFV\xc3\x8c\x86{\xbf\xabW\xb0Ub\x0c\x85?\x99f+1\x96^\xac\xbf|\x85\xee{A\xd0\x8b?\x05Ym6\x7f\xc7\xc2?\xcd/;m\x01"\x9d?A\xc7!\x18\xa9\x00w?/\x05V\xfe/\x8dq\xbf`\xf3\x97E\x06\r\xc4?\x95-|\xa2J\xb2\xa4\xbf\xe8\xa9\xc7\xdeO)\xa6?\x11\xf9n\xc9\xaag\x9e?\x12\xa0\x7f4\x024D?S\xa3\x85\x9e}H\xc1\xbf=\x8f-[\r_\x9d?\x97\xcfn\xd2\t=\xaf?\xc7\xdaa\xdf50\xa5?\xbc\xcb\x85\xbd\xcdE\x9c?7\x8e6\x88L\xd4\xba\xbf\xaa\xa6P\xf0I\xcf\x93?C\xd6u\x1c7\xa4\xa7\xbfw(\r\x05\xcdN\xa6\xbfE\x0f\xc8TB\x1by?\x83fJ2\xc6\x04\xb5?\xac\x96\xfaNs\xfa\x96\xbf\x8e\x16Z<\xa02\xb3?\xdd@\xb8\x83lO\xc8\xbf\xe1f\x88\x1d\x86s\xbe?\xb7\xbf\x08\xe99Z\xa9?\x0fd[\x86\xb3?\x9a?_\x9d\tA:\x05\xb3?\xf1\xdc\xa335\xb0\x9e?\xad\xefPR\xc9g\xa6?y\xcd\x90\x04`V\x99?\x1b]\x18\x97\xf8\x90\xba?]\x9eUF\x05m\x94\xbf9\x95;\x92\xb7\x1a\xa2?\xa9\x1dnb\xbf1\x90\xbf\xa8q\xfd\xac\xafk\x9d?\x93{\xa2\xb3\x9cY}\xbf\xb5 \xe5\x81\x8b\xff\xb0?\xca\x16\x07\xa0\xd3\xa8\xad?\xfeD\x0f\x9eK\xf8\x9d\xbf@#\xe9\xd7F)\xc4?\x99\xa7\xc5zd\xa4p\xbf\xad\x8af\xbbI\'\x80\xbf\xb7+\x13\xbe\xfc\x89\x93\xbf\x1f\xcfO\xa5\xa7\xe7\xbf\xbf\xeb\x05\x9b\xac\xeb\xc0\xb2\xbf(f\xe8U(\xb7\x90\xbf,M\xe0X\xfdR\x9c?\x8f~qZ\xe1\xff\xa9?\xf4\xd4\xae<\xecw\xa7\xbf\x7f\xfeXK\x12\xa1\xb2\xbf\xad\x92Lqh+\xc1\xbf\x98\xc4x\xfb}6\xb9\xbf\xeb\tiP\xc4&\xa9?\xc8\xa8\x85\xe1\xd2h\xb2\xbf\xd0"O\x1e\xff$\x8b\xbfp\xeb\x04\xce_\x01\x80\xbf\xea\xbf\x83\x18\xceg\xcd?\xae\xaeb\xd9\x00\x1f\xaf\xbf\xb38e\x18\x7f\x93\xac\xbf\xd2C\xd0\x87 ?\x95?/\xf71\xc5\x9e\x87\xb4?\xae\xfa\xd4\xe1\xd4\xdd\xa7\xbf\x9f.\xf0\x8b1\xbc\xb6\xbf[\xe7K\xc2\x86\xc0\xc3\xbf\x16\xdf \x1c\x1d\xb3\xb3?\x8ew\xa3\xa8\xfb\xa5\xc3?X\x11\xf1\x1bhY\xc4?F\x8a\xd0M\xb7\x11\xb0\xbf|\xf7\xd4n\x17i\xa8\xbf\x96\xec\xf9\xf9\xbbrw\xbf\xb5\x97\x06;a\xc4\xa5\xbf\xd6\x90l\xbf\xc0\xb2\xc6?\xee\xac\xedk\x00\x93\x88?.\x1f\x9df.+\xac?\x80\xc3\x01z\xed\x14\xad\xbf\x1f\x8e\x0f\x00\xfe\xe7\xb5\xbf\x9e\xc9a\x8ff\x90\xd1\xbf\xd2\x9b\xe9]\x9d\x96\xa2\xbfK\x9e\xb8\x95h\x9f\xa9\xbfQ\x92\x87\xd8\xc6b\xb3?\x12\xb99\xca=<\xb3?o2\xfbq\xe3\x93\xa4?\xc7\xde\x91\n\x0fr\xab\xbf(\xb5\x18c\xe4\x93\x8d?@\xf9\x9a\x8e\x11\x17\xb6?\xfb\x17|q66\xc4\xbfD*\x1dx\xd1`\x91\xbf+K\xe0sXZ\xa8?\xfc\x0eG\xbe\xac\x19\xc1?*!\x19\xd5%\xf3\x9a\xbf2\xb5.\x0b\xe0C\x92\xbf\'Hi\x11\x8f\xdb\x99?8\x19\xcf\xeb\x92J\xba\xbf\xda\xbe\xfeS\xf7\xed\xbd\xbf\xf1\xd2\xaf\xbc\xd7\xa3\xa6?\r\x99\x05"\xd0|\xb9?\xe8\xce\xc7\xc3\xc3\x1dg\xbf\x03\xef\xab\x85j^\xb6?\xe4\xed\xb1\x83\xf6U\xc2\xbf\x1e\xc4\xf1\xe0x\x15\xa1?\x07\xae\x83\xd5\xadn\xa9?\xe0\xb5.\xe79\x9c\x97\xbf\x0c+\xf4D\xb2\xbf\xb0?\xaaF\xbdN\xd1\xf3w\xbf\t\x81\x89*\x18F\xc5?Gz\t\x97\x06~\xca?\xc1\xd9\xa7\x82\x07\xab\xc8?@\x9f\xb4"\x0f\xa0\x9a?h,\xac\x1cI\xd7\xb9\xbf\xb7\xa7\xd3\xf5r$\xcb\xbf|\xb3\x8bz\xb4\x19~\xbfU\x93\xafp\x15\xc0\xb3?\xf4\xfdI\xe6\t!\x96?a%\xedx\xean\xc4?\xe5Q\x0bQ\x91\xb5\xaf\xbf\x9b\xd9\xf2\xfd)Sw\xbfC\x08nJ\x9c\xad\xb3\xbfrU\x9e\x0b\xff:D\xbfs\x96\xf7\x9f\x16\xda\xa8\xbfG\x12f\xd8\xc3\x04\xc4?\xa1\x10\xb7\x99\x1f\x81\x89\xbf\x0f\xe7>\xa2\t6\xb3?{(V\xbb\x83E\x85\xbf\xc1\xc8\x84\xa73@\xb3\xbf6\x0b\xc3\x82\xe4\x8a\xc0?\xb9f\xe0\x8f\xff>\xb7?\x02\xf8z\xae\x87\xa1c?\xdf\x87\xa7\xca\x88\xa1\x8c\xbf\x08\x01\x85\x10\x02\xea\xa9?\xd7i9\x1d#O\xb0\xbf\x91\xd6\xac\x11\x98\xf2\xb0?\xef\xd0`\x1eS\x92\x90?\x00\xbf\xc1\x90[\xde\xb4?\xd9(\x04!W\x1c\x97\xbf\x01\xf2C\x93\x17\x93\x97\xbf0\t\x0bM\xf7\x0c\x84\xbf\xa4\x7f\t\x05\xeb8\x89\xbf\xaaS/\xee\xd9\xbe\xb4?\xe0\xc1z\xaf\xc8H\xc8?\x8a\xa5\x9b&0;\xbd?\x96\x0b|\xa0b\xd2\x8a?\x0c%\xc7\xa5\xa3\x99a\xbf\xcaA\x00\xe6\xf2\xc9\xb0\xbf\xecV9\x0c[\x92\xa8?i\xb6)0\x1ch\xc1?_\x1b"\xaf\xe2\xba\xa6?Y\x84\xc0\xe2,(\xc5?H\x135\x982ZJ\xbf\xe3la@Qk\x87?\xc7@\x7f!A\xfe\xba\xbf\xf9Q\x11u\xb1\xc4\xd0?\xe1\xef\x1c\xd2\xed\x18\xaa\xbf\x80\xd3\x17\xdbL\xe8\xa3\xbf\xf3\xddr(\xac\x8d\xc5\xbf\x7f\xb59\x9e\xf5\xf3\x82?65-(]\xc1~\xbfK\xa13\x19\xb3\xf0\xbd?\xd3\xb7\xff\xbf\'\x11\xb3??\xb9\xd7\x1d\x04z\xc4?K>\xd1\x87x5\xb3\xbf\xd7\x1co\x84\x95H\xb4?#\xce\x9f\x83o\xef\xa9?\x10\x19\x9e\x89B9\xbb\xbf\x9f\xfc\xf5;\xfc1\xa3?=~\xb3EXn\xa8?\x15\xcd\xbbX\x05\xb3\xd1\xbf\x08\xba\xbe\x86:\x92\xc3?\x1a\xfb\xb8k\xb2\xf5\xc7\xbf\xa4\xe3u\xf6#\xf4\xb5\xbf\x84`D\xd9\xbe(\x92?l\xbbUt)\xd4l?\x7f\x9f\xb42\xdd\xa7\x8c\xbf\x84\xa8\x11\xb1U\xc7\x97\xbf\x97\x15\x15\x92\xf3\xeet?\xce#\xebJ)\x82\x8a\xbf\x88\x81\x97\xe8q^b\xbf85\xad\xe3\xb8\xe0\x8c?J\xcd\xbar\xfa_\x92\xbf\xe8\xcd\xf3\xce\xe1\x1e\x86\xbf\xadlK\xfc\xf6\xcb\x91\xbfh\xd6\xfd\x89\xbf\xe4\x80\xbf\xdc\xc9\x1dB\xe6\xa8}\xbf\x8b\x94\x0e\xc3@i~\xbf\x19\x1e\xd49\x91\xf4v\xbfIIl\xb2\xce\x08u?8eil\xeek\x85?\x12\xde\xc6\x05\xc3\xc0\x87\xbf[\xca-\xe2\x1b,\x8a?\x035\xf7\x10\x93{~?O\xdb\xbb\xe5\x1a\xbd\x8b\xbfF\xa1\xd0 \xacSp?\x193\x02\xe0\xab\xa8y?\x98j\xe6\x00\xcb\xe1j?C\xc4\xad\xd1S\x85k\xbf\x90\xd5]\xe6\xb3B\x86\xbf\x95\xa8\xeeX\x98\x15\x84?\r\xc7:j\x95-~?\xfd$;\x94\xba\x07x?\xb1_\x83rG\xd8o?\xaf\xfer%\xf6\xfd\x90\xbf)\xe0\x89\xc9I\xf1s\xbf\xe0t\xee\xbd\xe4\x13\x9a\xbf\x13\x89\xd9\x94\x10t\x89?\x00\x00\x00 =g\x82\xbf7\xa3\xb7\x87\xbc\t\x93\xbf\x8d\xd3\xfddrjG?.x\xdf\xa6\xcc\xa1d?I\xda\xb3\xb1\x1da\x01?"0\xb5\x8f\xb4\x8a`\xbfd\xc9\xd8B\xbe`\x87?\x1aJ1\xeeo\x0cF\xbf\xb5{\x89\xf2\xcc\xd9\x98?u\xd2\xd5$\x08\xe8\x97\xbf!\xf0\x02\x105\x18u?\xce@\'lqs\x96\xbf\xeb\xf9\xe6\xe7\xbf}\x8c?\xd6\x9e,C\xd8Vx?l\xff/\x14\xf9\xac{\xbfQ\xbb\x16\x10R7x?\x9a\xa3\x85m\xb3\x90G\xbf\nP\x9fA\xe6hg?g\xd5\x99f\'\x9e\x88?\xc4\x8epI91\xa3\xbf\x06\x08\x9bLd\xe3a\xbf\xf3\xf2P\x89w\xfe\x83\xbf=\xf2\x1d=\x8b\xc7b?{j%\x87\x92\xa23\xbf\x00z\xaa3\x03\xd2S?\xcf\xd8>@\xe7\xfdl?$\xba\x8bl/X\x81?0B\xb4\x01\x82w\x90\xbf\x92\x0e\xa7MQ\x82\x8f\xbf\xb3&\xd8\xa2\x88\x81p\xbf\xb6#F\xfd\xbb\x9d>\xbf\x83X\xb0\xcb\x95\x06@?I\x15\x94\x00d\x0ey\xbf\xd5R\xd4\x10\x19\xe2_?\x93\xce_\x1e\xe8\xfe\x94?\xb4\xb7Q\x9c\x12\x1em?I6\xfe\x98\x1c\xedg?d\x8ftk^\xf2\x91?;6C\x0cU\xfa\x80\xbf\xd5\xda*\x8c\x9d\'Q?\x03H4\x84o:\x83?\xdc\xf4\xfdb\x90\xf7\x8f\xbf\x82n\xa8Fm\xe2\x80?x\x1f\x9a\xe9^6\x88?\xa5\x12\xc1\x1c*0\x8e?$\xa0)\xc6`~x\xbf@\xa4\xa4\x83f\xe8u\xbfh\xf5{\xacX\xcb\x98\xbf\xae\x97/\xbaF\x98e\xbfb[n\xfau{|?\x06\xdc\xf7\x80\xb3$\x9a?\\\x99\xea4Yux?\x9f\xf98\xa1\xb1\xd8\x82?\xc2\xe1\xcd4@\x1bd?6\x94l\x01\x96@Q?\xfd\x9f\xd2\x07/\xfed?\xa2\xa5\x07\xe9\x9a\x94j?y\xb8\xe3\x06\xa6\xb8\x88\xbf\xef\xed\x80\x1d\xe8\x12b\xbf\xad\x04vv\xd7"\x8b?\xe4_\xdeWm\xd8\x80\xbf\x18\xac\xec\x86O\xf0h\xbf\x1f}Wr\x1e\xd0\'\xbfG\x10S\x90Q@r?0\xc6\x1d\xd7\xd90\x87?\x9a~A\x03\x18j\x80?\xbc\x10\xc5\x11\x0e\'X\xbf?An\x10R\x91\xa8\xbfM\x14\x01\x86iN\xa2?\x145\xa4\xf3Fc\x80?\x7f#8]\x9f\xf5\xda?\xb3\raV?E\x8c\xbf\x10>\x05\x9f\x17\x15\x9d?\xfe\x93\x18}\xd6\x01\xc3\xbfM\xed\xb7\xa3\xf3s\x8d\xbf\xbe+\x04>\xe5V}?\xe5\xd9}\xe2X\x9a\xb0\xbf\xee@KM\x12\xca\xa4\xbf\xc02\xdaa\xd5\xf2{?7:\xceS*\xaf=?\xc69\xc8Fh\xf1^\xbf\xf3*\x8f\x11\x1bu|?\xdb\xf9Xd\xd2k\x98\xbf\xb7\xa5F5\xe9{\xa6\xbf!ijM\xe6\xb7\x91?w2\xc6\x1cF\xb9\xa0?\x14\'$~\xbb\x83\xa1?\xe0\xb4\xcf\xcb*U\x90\xbf0Gom\xdc\xf4\x87\xbf\xdb\x0bH\x99w\xcfh\xbf\x00\xba\x057+\x91\xb0\xbf<\x16\xb5\xc0=\x94\xb1?\x99\xe3\x94\xc1\xc8\xadu?\x15am\xad\xed\x8a\x90\xbf\xf4\x02w\x8f\x0bg\xad\xbfZ\xb2\x02<\x1f\rd\xbf\x19\xa7\xa2\xa3\xea\xa9\x8b\xbf\x00\x0c\x8aY\xc7\x0b\xb2\xbf\x0f\x93X^\xf48\x92\xbf\xe8n\xfb\x87\x04A\xae\xbf-\x07\x00\r\x01#\x8d\xbf\x8f\xf7\xab\xa1 \xcd\x9f?X*\\k\xe96\xa7\xbf\xaf\xa2\xd7?o\xe6~\xbf\xbf9!U\xf9m\xb9\xbf(\xf6\xe7x\xcd\xb9\xcc?\xec\xc6mRg\x02\xb2\xbf\xb2\x14\x80f}\x95}\xbfZ\\\x0f2V*\xb2?\xbc\xb8\xef*N)\x9a?\x92\x00\x9a\xafR\xeby?gA\x9b\xa9\xcdq\xa4\xbf\xb0\x8d\x1a`Qh\xa7?\xfb\xd4\x98/X]\xa6?`\xc3\xb1\x84{Z\xf2?\xaa\xce=\xf4\x80\xdaz?\xf5.\x05\xba\xafy\x8a?\xa2{\x14P\xe6l{?c\x84\x11e\x96\xf3\x8b?T\xac\x8c\xce\xb6<\xe7?O3c\xf2L\x94\xc0?8\xa1jK\xe4\x12\xa9?\xcd\xa9\x7f^\x06\x11\xa8?3\x19\xeca\x8c \x9d\xbfd\x1e\xb9M\x8a\x06\x95?q\r\x1d\xf45\xfc\x81\xbf$\x16c\xdf\x94\xd9\xb7?S\\\nR\xd9\x07\xc3\xbf\x8f\xa71\x1b\xf1\xe6\x98?\xf6V\x06\xe1\xba?d\xbf==\x92\xad\x97\x9b\xa5\xbf\xde\xfa\xa1\xc9\xb4\x8b\xa0\xbf\x8d\xb90a\x0f\x19i?\xc4n\xae\x9bs\x94\x84\xbf\x05K\xfc\xf8\x00n\xbc\xbfh\xcbE\rQP\xce\xbf\xbb\x1a\xbfo**\xc1\xbf~\xe1\x12\xfa\xd8\n\xac?S\xf8\xeb\xfbX\x8ad\xbfq\xc4m\xdf\xc1x|\xbf\x1d\x0b\x9bKk\xa4\xbc\xbf\xc5\x07\xee\xa3\x8c \xb8\xbf\xd5\x07\xd2FXv\xa3?\xc2\xefP\xc2\x10\xd7\xab\xbf,E\xd8\x11.\xa6\x93?g\x96DU\xe5\x11\x97\xbf\xda\x83\x9d;\xf3\xc0\xa2\xbf\xc08\nG\x8b\x80\xba\xbfJ%0X\xe0\x10~\xbf\xe7\x94\xce\xd6\xf2\x83\x91?Q\xa8\x8dA\xb3\xd4\x96\xbf\x92X\xd4\xb2TZz\xbf\xfcm\xc7h\xe9id\xbf\x03\xa83\xb3\xe1\x14\x97?\xfe\xd4\xa0\xa0\xdb\xe3\xa6?\xdf\xaf7?\xe0\xc9\xcb?\xc5L\xcf\x95\xbe(\x8e\xbf\xe6\xdd\xc5\xb5S\x8c\xa7\xbf\x1f\x8e`(\xa9\xdc\xc1?f\x80\x80\xb7J\x0c\x98\xbf\xae\x12A^\xa5[\xb3?\xc2-\xf8\xd9\xffSe?R1b\x8fTJz?\xae\x02\xca\xb0\xce\xa4\xb1\xbfk\x18\x1f\'\xf4\xac\xb7\xbf\xe0\xa5Ep\x1f\xcfv\xbf\x935k2o\x13\xab\xbf\xe6\x88\x10\x93\xca\x99\x97\xbfQ\xde\xe9\\\xd8\x9a\xc5?\x9eo\xacY\xb8!\x8d\xbf\x02\xbf\xfe\xe5\x82\x1bd\xbfy\x83]\x9d\x1b\x88\xa2?\xe9\xd7B\x9f>k\xb9\xbfE\xbc\\\xc9\xf1\x82\xaa\xbf\x98\x8a\x13\xc7\xcaE\xac\xbfH\xfb\x8dp\x0bV\xcb?%\xacrFW|\xbe?\xaf0\xb5\xcbp\x91\xc5\xbfQq)\x08/\x8f\x92\xbf\x1b\xf8\xe1\xb2$\xac\xa2?\x1a\xae\x86\x88X1`\xbf\xaf\xd8\x00\xf8\x91\xe1\x9b\xbf\xf5\xa2\xf1\x15\x1c\x0c\xb2\xbf\x9f\xdb\xb0\xfd\xbe\xf7\x86?/\xbd\xa0\xfe\xc4\x17\x91?\xf4\xf0\xce4Q\x0e\xa7?T\xb0\xd8\xf1\x1d\xf9\xc0?N&\xfe\xf6U\xdb\xa2\xbfe\xa4iY\xa6j\xb3?\xd8\xe4^\x19O\x06\x94\xbf\x9a\xc3\xb0~\x0f\x01\xab\xbf\x07q\x97NP\x06\xa0\xbf\xff\x08w\x80*m\xb6?\x9a\x06\x1d\x0f\x07\x08\xa7?,\x8a\xb0\x8c\xd6\x04\x9b\xbfdW\x88\xdc\xc2\xf6\\?\xe7\x07\xa8\x9a\xe5~\xab?\x1e\xbb\xfb\xc1\xfb\xec\xc2\xbf\xe3\xab\xed\xc2\xba\xca\x9d\xbf^\xcd\xb3\xa85A\x86?r\x92V;\x98\xbbi\xbfn;\x0eP\x87/\xc2?\xb0\xb0\x07#\xe0\xd4\xbf\xbfX?}\xe8\xd3\xd8\xa7\xbfI\xfd\xa8\xae\xe7\x18\x92\xbf\xb4\x1c_F\xcaM\xc1?\xa3l\xdb7\xe6\x7f\xc4?\\\xa7\x87l\xb5\xf3\x84?\x99$k\xef\x9c=\xc4?\xf7\x14(Y\x17k\xa2\xbf\xe8\xf0\xb5>\xb0#\x9e\xbf\xd3\xae\xc3U+vw\xbf\xe3\xf2\x98\x7f:W\xc3?\xab\x14$\\2\x96\xce\xbfi\xb3\xf8L\x8f\xd7\xbf?\x1d\xb5;oL\xbf\xaf\xbf[\x98\xc6\t^\x05\xb8\xbf\x86\x92h9Na\x87\xbf\x01\xc1yp\xca\xb0y?\x1a\xb7O\x00\x91l\xa1\xbfu\xcb\x8c9\x91%\x90?\xa4\xa6\xe7\x8c\xf6}\xa9?A\xe6n~\x11\xd5\xbe?\xea\xc2\x86\xd1\xb8c\xa5\xbf\xafl\xecx*P\x90?\xf528\xde \xe9\x81?\x90\xcbTl\xf9<\xd0\xbf\xc2\x0f\xb3W\xc3\x9f\x8c\xbf\x83 \xc9\xec\xad\x07\x94\xbf{\x05x\xf5o\x19\x8a?}\xd8\x13\xe2\xb2\xb0\x9b\xbf\xf8Fl+\xafy\xd0\xbf\xb9\xf4\xb8\x83\xd6\x17t\xbf<\x9b\t\x15j\x1f\xb1\xbf\xec+\x13\x1c)\xa0\x9b\xbfx\x94\x9c\xd0n\xfc\xc7\xbf_\x0c\xc3TE\xa8\x9b\xbf|),\x10\x06\xd4\x97\xbf\xca\x87\xe0\xfb\xd3\xa3\x8e\xbf\xa1\xb8\x18"\x95\x96\x9c\xbf\x15\xa4=\xedEr\xd0?m`\xa7\xf7)\x1c\x8f?!k\x88\x87\xa8\xa7\xa8\xbf\x82\xf3\xdd(],\xb4\xbf\xed\xban;xA\xb0?;\x034\x1ck\xff\x9e\xbf\x9b\xd3\x82\x93\x0e\r\x89\xbf\x05PQ\x95/V\xb8?\x14u\xef\xc9(\xd3\xa2?\xa6\x08\xc3[P4\xaa?*\x87\x12.;\'\xbb\xbf\x19o<\xd8\xaf-\x82\xbf\xf9\x9b\x8d\xa2@r\x81\xbf\xb9\r\xe82Ht\xc2\xbf\xda9\x06G\x8f\x86\xb7?n\xb8\x80\xe8Z)\xb8?\xef\x0e\x8ez\xb6\x1e\x96\xbfCW\xd9\xcb0\xd5\xa2?\x1c\xd26C\xedN\x81?\xec\xdf2\x02\xd9\xd1\xb4\xbf\xea\xd6@7\x03\xdc\xb3?\xd5\xbbu\xa3\x98r\x8f?~Ji\x1b\xe4\x82\xc8?\xd2O\x0e\xec\xc9H\xd1\xbf\xf3\xc2\x17\xb8A\x16\x91\xbfk\xc8\x8eU-\xbc\xca\xbfB\xf3i,\xc5\xa3\x9c\xbf\x85\xf3\xb4\xb3\xa8%\x92?D\xadkXC\x97t?\x8f\xf0R\xa2\x0e\xc2{\xbf\xb9\x8f\xa5\x92\xb5\xddy\xbf\xfb\xea\xc8\xce\xec_\xf5>~&\x1b"u\xa5S?\x9a\x98u$\xc6`{\xbf\xcc#/J\tx\x91\xbf\x1c\n}\xa2U$\x83?\x10\xa4\xb7u\x9d\x84\x83?4\'\xaa{\x97\xf6}?\xe0Z\xe6\xcaY\xb6\x8b?\\\xde\x89\xce\xc8\x01\x89\xbf\xf6\x13o\x19*\x1d|?\xe0\xde\xb0\x03\xc1\x96`?C\x0b-\x9c\xfd\x92\x8e?%\xbcJa\xe9\xc4\x82\xbf=\xd1xtb\x97f\xbf\xf1O\x00\x17"\x8e`\xbfS2\xec\x12\x1d6o?wk\xcfn\x99\xfb\x81?\r\xadK\x90\x11`\x89\xbf\xbf<\xaf\xba\xfe\xad\x83?,\x18\xb1eZ$\x8a?[\x9cWz/~V?\xc3.\xac\xd9h w\xbf\xedm"\xbd\x1e\xdel?\xc8\xa3\x8d\xdbO\xd9W\xbf\xae\x8a\xf1\x16\x9c\x9c\x7f?\x9f\x8a`\xd0\xe0J\x8a\xbf\xa5\xad\x1di\xaa(R?\xb4z\xea\xe2e`~?\xc5\x17\xac2`F\x19?W\xf7\xd7\x1d\xae\\X?\xdd\x82\xabE\xc4et\xbf>E\x12\xc3Nqu\xbf\xbdV"\xc2\xef\x9d\x83\xbf_\xdb\xd521\xb2c\xbf\x97o\xee\xe3\x98\x14\x8f?\x0fE\x9c\xcf\xbc0\x95?\x14G1\x8b\xf4\xfa\x85?i3\xfe\xe5\xc3\xca\x87?\xb1uF\xa5B1c?\x0cbl\xc2\xc6\'\x85?\x02\x1cZJm:\x8d\xbf;\x7f\xba\xb9\x15/t\xbf)\xd0$\xe8\xfeYa\xbfe\xa9\xcf\xc6E\xa6I\xbf\xf9+\x1d\xa3\xc0ND\xbf\xa3i\xa0B\x95\xd4\x8e\xbf\xe1\xd9"\x06\xa0\xe6n\xbfF\xda\xb6\x8b\x9a\x85\x9e\xbf\xb49\x8a\x01\x84\xac\\\xbfwsQW3\xcdT?,\xb0!-\xb3\xb7\x85\xbf\x8a\xd4*9\xaf\nS\xbf}\xfc\xfc\xc5Y\xb3\x89?sB\x90w\xf3\xce\x95\xbf\x88NJ\xb5\x13\xab\x87?A\xdf\x12\xe6v\x18\x8e?\x028S\x96\xc2]g\xbf\xd4\xb93\xca\x17\x9a\x81\xbf\x8fe\xeaEN\xe8\x91\xbf\xdd\x9b.\x80\x96\x84u\xbfu\xc9g\xdf\x0b\x8f\x87?\x84\x00\x02\xe5|Ov?\xd5\xbd"\xac\xad\x8e\x82\xbf\x156\x08{\x7ffl?\xefq\x9b\xb80\xd8\\\xbf\x16\xd6\xeai#C\x94?\xce\xf9\x1a\xa05\x1be?w!m\x9a\xcb\xcbe\xbf\\o\x12\xd32\x1bv\xbf\x11\xb6H`\xb0\xe5\x92\xbf\xde\x80\xb2\x16c\x16\x89\xbf\x9eM\x10, \xe9A?\xd1\xecw\xd8k|\x80\xbf\xbdu\x0c\xc2l\x9a,\xbfH\x04\xc5+\xa0j|\xbflJ\x1b4\xb49d?\xdduH\x93\x1cA\x90\xbfx\x1b\x1b\x80j]7\xbf-?\x01\xa8\xd5\xde\x89?"i\x87\xac\xd3w\x81\xbf\xca\xe9\xac\xfe%\x10k\xbfW\\\xf0\xaa\xec\x08\x91?\xc0a^\xe1D\xbb\x81?\x1aj\xa4\x17}\x14\x82?\xc9\xfcs\xcdvqq?#\x8d\xba\xccLA\x9a?8\x0c\xd4*k\xb2{?\x1d\r\x14O\xbe\x15\x95\xbf\t\xd3\xacG\x97n~\xbf\x16:\x91NAke?\xff\x04\xb9\xb5\xed\xe7p?\xf2u-\xcea\xf2D\xbf9\xc6vq\nD|?\xde\xed\xf0W\xf0\x13Q\xbf\xbb\xee\x8d\xb2\xf4Xx\xbf\xeb\xd9\xc2\x96\xa9\x8e\x81?:\xe3\x10\\]=t?\xdd\xdb\x8aJ\xc85\xbf?\x87\x0c\xa9i\x0e\xbd\x83\xbf\xe7\x82\xf6\x9f\xc0!\xa0\xbfd4\xd1:x\x96n?\xe44f\x98\xa6\x93\xb7\xbf\x17Av\xfd\x83\x81\xcc\xbfS\xe4\x80k\xf3:}?\xe0\x83\xfd\x0cVO\x90\xbf\xacD ,\x9ctR?u\x01\x91\x1f\xc4Y\x9f\xbf\xf6\xecd\x89\xcf{\xa0?\xa5\xc5L\xd2&\x03\x9d?\xabvs\xf9\x8b~\x95\xbf\xb5\xbb#(;\x9d\x97\xbf\t\xdd2/n\xef\x90?\xbd\xeeN\x05\x960\xc1?o\x1a\x9d\x01\xdc\xea\xb0\xbf\xaeLk\xed\xaa\xbe\xb2?H\xde\xb6(}?\x9c?Y\x01\x1f\xbc\xe4\x83v?\x87\xc8\xa2\x86\'\xf5\xa7?\xc1\xa8\xd5\x00\x8c6\xa7?\x88JS,\xc7\x8d\xa7\xbf\x07\xc9k\\`,\xbc?\xfc\x84\x9c\xedaQ\x81\xbf\x0c\x83\xf8\xf1h>\x8a?\xed\xe4^<\xe6\x7f\xb9?\xe4.\x90\xa6n\\\xb1?\xcbS\x86@VK\xb1?\x01\xe6\xc5\xf3\x89\xae\xaa\xbf[S5\xa3\xa3\xcf\xa2?\x04\xe6}\x91\n\xbc\xa6\xbfu\xf3\xe8\'\x10\x17`?b\xe4(\x16\xef\xa6\xbc?\x80\xa1\xd6H\x18S\x93?&\xf2\x82=wH\x96\xbf\xb8\xd0\xc1\xc9>F\xaa\xbf\x819N;\x8a|\xc2?\xc6\x80_\xc4\xa1\xe2\xa8?\xd3^\x83\x7f"9\xb2\xbf\x9a\xbfz\x80\xfa8\xa6?\xbe\xf1\xf6X\x8f\xcb\xa9?\xfb\x16\x8e\x15\x99\xef\xa2?Ip\xf2\\e\xe8\x92?\xcc)\x10\xc1Nl\xab?\x8a\x179\x8dH\xf8\xa7?T\xf3\x88\xd6nQ\xc2\xbf\x19\x17;\xb5W\xf8x?\xbf\xbc;\r\xaf\xfc\xa9\xbf\xe1\xad\x1f\x87m\x9b\x94?\xde\xbc\xd0\xa8\xd8Mt\xbfh\xdcm\xc29\xf7\xbc?J\xdap\xcb\x15\x97\xa8?jL\xd5\xe5;\x0b\xba?3\'\x9a\xa2B\xb2\xbf?\xda<\xca\'\xc0\n\xc2\xbfX\xa7\xaf\xa1\x18\x92\xa2?\x84\xd6X\x88\xe8\xeds?\x90\xfb&|lq\xad?\xd4*\xb5\xf3\x08\x0f\xb2\xbf\x07$\x1do\xc9a\xa0?\xc3\x7f\xd4\x1b&\xb2\x93?6\xc9\x11\xd7\xa7\xbfr?\xb9\xd0\x13\xc0\x90\xb8\xa6?o\xb72\xb1A>P\xbf\x82\xc0\xaa\xc4\xee\xfa\xa9?u\xc7]\xbf\xcd\xda\xd7?\xe3E\xf6\xe7\x17_\xd3\xbfe\x17\xc05v\x9e\xd7?o\x10\x9b\x1f\x12\xdb\x8e?\x7f\xbfyL\x8b\xa8z\xbf\x7f\xb9\x7f\xa9\x15Ft?\x91.\n,\xa9}\xaa\xbf\xa9\x02\xf5\xadz\x16\xa5\xbf\xc1\x85\x97\x83\xb1\x16\xa5?\xb1\xd5\xee\'\x83\x8c\xb2\xbf\x9e;\x17g\x8dq\xaf?\xf4=\xb8\x8e!\x1db\xbf\x16\xe3\xa5z[\x87\xd8?Cm\xb0\x0b\x1a\x9a\x96?\xafu_k\xca\xa7\x98\xbfz8?\xc2\xbf\x17\x9b?=l\x85M/g\x8c?|\xd9o\xa4\xff\xab\xa1\xbfc>T\x1cw\xad\x7f\xbf\xf1\x8d\xc1\xae\x0bV\xb8\xbf&T\xd5\x11\x84\x17\x95?rLA\xf4!\xab\xcd\xbf9\x81wI\xcc\xb8|?\x93fm\x88\xec\xc2\xc3?\xaaX\x16\x9b\xe6\x9aa\xbf\xf1\xc6\x9e\x00\xc1\x9e\xa3\xbf\x0bY\xe6\xa9M\xec\xd6?\xaa\xa4\xe6A!\xa4\x91?O;\x80\xab\xb4\x1f\xbf\xbfeR\x04(%\xed\xc0\xbf\x16\xa5$\x80\xa9:\xa4\xbf7\xcb\x94\x10\x97\x16\x98?\x97\x1c\xf2}/\x8aU?\xe7\'r\x13\x0b&\xd8?1\xc3\x7f\x12\x81\xb7\x8b?\xdeHh%\xc0r\x95\xbf+\xe5\xb1+\r\x1d\xbd?\xa0\xf8\x02\xa2\x86\xd7\x91\xbf\xbeK,\xd9u\x99\x83?\xa0p\xce\xc2\xcd\xc7\xab\xbf{\xdf\'1y!\xc0?\x8e\x1e\r\xeae\xe2|?p,\x0e\xd5\xc8D\xb1\xbf\x95\xd8\xbd\x0cM\x16\xb4?#\x1a\x0e\xe6\x7f\xd0\xa3\xbf\xcc\xab\x0c\xf1\xab \xca?\x08\xf8Vj\x11\x9d\x80?\x01\xb7x\xd6Y#\xd7\xbf@\x04z\xd4\x85\xf0\xa9\xbf\x8dU^\x81wC\xb7\xbfuB\xc4\x1c\xec\x8c\xb0\xbf\xbe|\xfe \xaa\x83\xc9\xbf\x8d\x0b\x89,\xc6\x90\xaa?I>m\x96\xf6\xee\xda?m\xf6\x80\xbee\xea\x98?\x8e\x99<\x93A\xaa\xa0\xbf\xf9\x8f\xa5\xb3\x8e\x1bv\xbf}\xb2\xdc*\xd1\r\xc8\xbf\x16`P\xc3\x86n\x8d\xbf\xdaE\xd6#\xe7\xcb\xb0\xbf\xaa.\n\xde0\xed\xb3?\xfeg5P@s\xca?\xc2W\xe5i\x90L\xb0\xbf-\xfc\xb98I\x92\xa7?\x81\x9f\xebW\xf8^\xb9\xbf\xa0\xc4\xc8Fm\xf4\xc9?\xcc\xc9\xb6\x90^C\x94\xbf\x16""\x8c\xbd\xee\xc2?\x01-\xb0d\xed\x19\xb3\xbf\xb9F\\\xd1d\xd5\xde\xbf\xce]\xc0\xb7\xd5\x92l?1\x15=\x1a\xc9D\xb0?K\xec\x0e+\x9c)\xaf\xbf\xa6\xf6\x999/\x02\xb9\xbfH0X\xb2\x96U\xe0\xbf\x010[+=\x16\x84?\xd8\xfcr\x88\x9c\xf8\xa7\xbfF\x05p!\xd9\x1d\xb7\xbf\xbb\x12\xbc\xcdD\x04\x8e?\xcf\xb75+/\xa6}\xbf\xeb\xa8`\xeb\xc6"\x99?)\xcc\x82e\x8a=\xb3?*\x1f\xa1\xa6\xbe\xb6\xc9\xbf\x98K\xe9@q/\xbb\xbf \x14^\xc8\x18\xec\xb8\xbf\x00\xefN\x0e\xe7\x18t?\x8b\xb18\xfe\xfc>\xbb?!\xb2\xb2FD\x94\xd0\xbf\xab\x05\xb2\xb7u"\xb7\xbfV0\xc8\xebv4\xc0?\x0e\x81\xbb\x04(\x1f\xc2?\x05R\x93\xc1/\x90\xb9\xbf\xd5e\x82\xcd\xbe\xd9\x8f\xbf\xc6\x9f\xf3g\xf8L\xb6\xbf\xea\xce\xc0\xac[\x92L\xbf\x82<\x896J;\xca?\x02\xb2,\xdf\x11Y\xa4\xbf\xde\xcb\x92?p\x94\x8e?\xdd\x08\\h\xa9#w\xbf\xce\x07>\x85\xc7,\xd0\xbf\xe9?X\x811^\x8e\xbf<\x01\xea\xe8\xdbS\xa5?\xc39Z~\xa1\x9f\x97\xbfZ\x80\'\xac\xfc%\x8a?\x98N\x8f\xcb\xf0\xa4\x95\xbfh\x0e\xa0\x88_\x1f\xbe?\x10<\xac\x149i\x9c?\x06^\x19b\xd0g\xaa?\x1f/\x12J\xc6\xe3\xa3\xbf\xfd,$\x9f\x1c\x15\xc3\xbf\xbf\xafF(\x91\xfb\xd2?\xcf\x86\xf6\xdcw\x8c\xb1\xbf\xc8\xc9\x1b\x14\xb0\xf9\x7f\xbfbJ\x07A\xe4(V?\t%\xf9\xdf\x9a\x1a\xb0?\x97\xfaIh<\x05\xd3?\xb86\xf8\x18/\xb9\xa7\xbf\x85+\xb9\xfb\x17\x05\xa3\xbf\x81\xf67Pi\xff\x99\xbfT\xf1\xda:\x17\x89\xb3?6\x18;5\x84\xd7\x94\xbf\xcb5\xf8<\xdc\xd3\xb6?\x15\x8c{c\xd6\xf1|?&\xcb\xf5\xb3\x00\x93\xb6?\xfc\xd1\x10\xe9Y$\xa4\xbf\x96mM\x13c=\xbc?\x8b\x81F\xa2Q\xa5\xb3?2\x99Y\x8eum\xad\xbf\x95U\xc4\xb29\x89\x90?\x04\x9c\x87\xec\x85\x97b?\x1da\xd56\x00\xff\x8e\xbf\xb6\xf8\x17\xe2W\xc4\xb0?\xf7\x86\xc7\x94L\xac\x92?5n\xbeB\xd6>o?Q\xd7\xca\xd2W\xe5Y\xbf\xceS\xb4\x10\xe8\x19<\xbfL.%\xe9dB[?\xcf\'\xc9\xd1*\x06v?\t\x91\xc39\x92\xd9j\xbf\xd7-n%\x165\x81?\xfe\x908y\x0e\n\x82\xbf\x92U\xff\xeb\xd4\x06o?\x1c\xcf~\x1c\x99\xf6\x90?!Pd0\xc8\x06\x90?<\x00\x1e`*;k?[Q*\xd1Q\x15\x80\xbf\x91\xc9h\xf9pzy\xbf~F.\xd4\xe3o\x8f\xbfZ\xa0h\x8d\xa0\xa3\x8c\xbf\xbc\xccX\xf2b\x11h\xbfa\x1b\x139\x13\x01/\xbf\x03\xf5\xecC\xbdR\x80?\xb44v\xf5\xae\xfd\x89\xbf\xfc\xf2\xca\xf9Z\x00\x87?i\xba|\xe4gR\x92?\x9d\xc4I,\x87\xf0\x90?\x91>Y\x81\x178r?\xdb\x91M\xbeh\xbev\xbf\x184\xfe\'%\r\x8b\xbfv\xfa\x18\x94\xb4\xc7\x84?\xac<\x10\xfaC:\x83\xbf\xf9\xb1)\xe9J2t?\xf0CHF\x9do(?Tw\x01\x11\x07\x9b\x82?A\xb6\xe1\xe1\x83T{\xbfVi\\S\x06\xe0<?o7\xef\x90\xdb\x9f\x8f\xbf\xbe\xa3E\xe7\\E\x85?\x8e\t\xed\xb2-\x1e\x87\xbf\xd3\xb7\xea\xdd\xd3\xe4\x93\xbf\x859h\xb0\xdd\xd5\x92?\xf5J\xce\x95\xf4\xdfq?\x90\x8bJ\xed\x95\xe8\xe7>\xb8\xcbZc\x03\xdbf\xbf\xd1{\xc4\xac\xba\x81w?\xc9D\x07JOHp?\xc1\x8f7\xbfM\xd5\x8b\xbf\xbf\x08\xc7\x14\x18\xb4\x8a?\xb4\xc2\xfd\xeeNU\x92?\x81\xfd\xbau\xcc\xeed\xbf\xf9\x8eS\xa5\x83\x14\x8b?d>~LX\x1bx?\x11N\xb0\x1cW\x87\x8a\xbfJ\x84\xe8\xca\xc5\x833\xbf\x02\x19\x07(\xa1D:?\x1b{\xdf\xf4\xbb\x8a\x86?*\xb1\xe5o\x0c-z\xbf\x8eK?\xcd"a\x8c?(F\xc1mMFf?\xad\xeb\nT\xd1+}?}\xeaa\'W\xc2\x80\xbf\xd4\r\xba\xb1b\x8bb?\x1d-\x85M&l\x83\xbf\x16?\xeaC\xe4\xec\x94?[\xf4\x06\xaa,\xd6\x95?\x82o}\x16\x927s?\x94|>\xad7+\x8c\xbfO\x91Z\xe4]#\x9e?\xf9\x8a\xb2\xb9\xb8\x99X\xbf\xe9\xe7E)5\xa4q\xbf\x16:\xf8\xc11\xb9\x91?V\xa1Qn7@\x91?\x80f\xab\xa9\xbbiz?;*\n\xb4{`\xff>}\x8a\xdah\x1b\x1d\x82\xbf3=oY\xec\xae\x8a?z\xcd\xef\x7f ,|\xbf\x0f\x97<\'\xd3i\x86?\x95E\xf5,\n\xa5d?\x01\xaa\x8cM)!I\xbfn\xf1k\xea\xb8Ip\xbf\xd1F\x7f\xad&\xd1@\xbf\xe1p\xe1ei*q?\x9a/\x12\xc0\x8fw\x84\xbf\xea\xb2\'\x11\xc4\xd6\x86?.\x83\xa2l|\x07O\xbf\xa9\x88!\x11<\xdai\xbf\xdc\x86\xc6\xf7G\xf3D\xbf@\xa6\xfc\xa3\r\x9f\x88\xbf\xb9[+\xe9\xfb\xd7\x7f?L\xdf\xe7\xe0\xa5\xfb\x92?\x1f\xeb\xd6x\x18h\x8b?&\xad%\x10*\xdcq\xbfb\x8cO\xcc\x10\xae{?\x08\xba\xb4\x9df\xec1?\xc5\xa9\x7f\xfc\xfa?\x91?\x81\xcd&x<\xadv\xbf5,\x13\xf2\xa0\xa0b?L\x9d\x16\xfe\x90\x8a\x81\xbfQx\xab\x03\x9cKG\xbfk\xf5\x99\x19e\x11\x8d\xbf\xf6\x12\x86{\xf1>y?-?\xf9\xfd\xc6\x0cY\xbfrn\x83\x1b\x9d\xe5\xb5?*A\xe0\xc7\x8ba\x9c\xbf\xa6e\'\x802\xc3I?8\xbb\xf3\xcf\t\xda\xd1?:\xf6\xeael\xaf\x98\xbf\xaa\xd7\x83\xb4\t\x82\xad?r@\xb6e\xe0M\xc0\xbf\xc0\xffD\xf2XN\x9e\xbf2!\xea6\x06Z\xa6\xbf\xc2\xaf\xb1k\\\x83\xc0?boQ/\xc1\x12\xc3\xbf{[\xab\xc7\xa8\xd1\xa0?F\xe8i\xac\x14\x12o?L\xae\xb5\xdc\xe2\x7fX\xbf%\xdc&\xf5\x80\x98\x9b\xbfl\xe6\xf6\\,\x89\xad\xbfT\xce\x82\xe6~G\xbd?\xf8)\xa1)\x15v\xd6\xbf\xb5i +\xbcl\xb5?\xe2\x04\xe7{\xd3\x00c\xbf\x8c\x9f\xef\x8f\xa9\xb2\xb7\xbfxP\xfer1\xda\xa3\xbf\xe8\xc5\x98\x1a\xf6\xde\xa1\xbf\xaa4\x0f\x83\xb7\xcf\xa8?\xc6\xbcD\xe9\xc5(\xa9?\xea#\xcc%\t\xe2\xa2?\x9c\xc8$X\xa3\xb5\x9b?\xa5\x0c3hx`\x85\xbf,\xdao/dx\xc4\xbf\xcbXa\x8d\xf4\\\xaf\xbf\xd3\xcf\xa7\xaa\x81\xe4\xb1\xbf\xbb\xed\xa4\xc6=\xd5\xb7\xbf&\xea\xd3\xebW\xfd\x82\xbf/Wm0!U\x91\xbf?\x00o@\xdb\xe8\xba?}e\xc3\xbbvB\xc7\xbf\xc4\xabz\x15\x84\n\xa1?\x16\x03\x84*\x19\xe4\xa1\xbf&)\xf9\xcb\xbe!\xaf?+g\x15\xbd\x03\x97\xc0?\xacd\x15\xca!\xfc\xcb?\xcbU\x1bV\xfc2\xb9?@\xd8M\x9eus\xc2\xbfJ\xc6\x14#\xd4\x8b\x83\xbf\xc3\x8e8\x95\xad\xe6\x87?E\x0e\xf3r\xc4R\xc6?rB-\xad\x00\xa3\xa7\xbf\xee]\xda\xa1]\xd6\xa9\xbf\xc9\x02]\xb1\xef\x9d\xa7\xbf\xb4@\xfd\x02\xafS\xb1\xbf\'M\x9at\x17^\x9d\xbf\xfep\xa7.\x83\x1c\xa1?\xd6\xe8\xa9\xdc\x93\xc7\xad?K\xe0\xd9\xd7w_\xc5\xbf\x1e\xa5\xccD\xbek\xa1?JA`+\xc9\x12\xbc?\xa9\x15\xe8P\xb6\xaf\xc4\xbf"\x08\xe8\xbd(\x0c\xb0?\xb4\x8b\xed.\xf6\\\x8a?\xe8"5\xcdv:\xc4\xbf\xd5\xee~v\xaaO\xb4\xbfS\xecM\xef-:\xac?\xfe\x1f\xdc\xa1\x9f@\x91\xbf\x94\x9f\n\x82\xe5\x1c\x97\xbf\xa1S\xbe\x8d@%\xd7\xbf\x94\xd4\xf1p\xbfGH\xbf\xef9VX\x1c\xf1\xa2\xbf\xf4\xe3\xf6\x0bs`\xa5\xbfg\xe0\xaa\xd6\x8bF\xc1?}\xd7\xd7\x83\x91{\x91\xbf\xe9~$h\xb3\x9be\xbf\x97\x16x\xcb\x9dgl\xbf1\xf7\xd9\xb5\x07\x14\xbb\xbf`1\x15C=\x88\xb9\xbfGr\xef}[\x8f\xc2?\xbb\x8ev\xd8\xddj\xb1?_\x808\xf1L\x85\xab?SU\x0b\xb8g\x8a\x8d?%uC\xc8\xfa(\xa0\xbf\xea\x03\xd1FuR\xc8?L\xdbUl\xda*\xcb?\x8b\xd0\xeb\xddNz\x96?\xb2\x91&k\x94\xfd\xa1?\xca\xec\xbf\xd7?\xbf\xb9\xbf\xa9\xbe\x00H\xae\xfe|\xbf&H\xd9\x9d\xb9\xfe\x98?\xd0\x0eg\xe6*B\xb0?\xa3Nm<\x1c@\xca?\x7f\x9a$E\xe1V\xb5\xbfEYt\x16\xe3R\xb2\xbfm\xa0\x94{\xe5\x83\xb0\xbf\'\x10q\x1c\x04\x17\xb7?1K0\xff0\x93\xa8\xbf\x93\xc9\xe0p\xa3\xcc\xbe?\xe0K\xb9\x9cb,\xb1\xbfzE\x06\xac\xa6\xae\xd1\xbfq\xc4(F\x85\x14\xc7?\x97\t\x9f\xfbOVq?E\xa3\xf8\xdeT\xda\xbd\xbf\x16\xfd\xd5\x9e\xc8P\xca\xbf\xa5\x9ai3rM\x9f?\x00W\x9d9\xb0\xff\x98\xbf\xccA\x07\xac\xde\x92<?.\xc6E\xe1T\xc5\x81?\\!\xc1\n\xb4\xc6\xaa\xbfH\xfa\x05\x14\x8a\xbf\xb2\xbf\xd1rg\xfb_\t\xcd?\xc2\x07\x8bDu\x15\xa9?B\xf4\xec\xda\x03\x1a\xc4\xbf\xd2\x18\xed\x93+5\xcc?N\xd1\x9c\xca\x15\xaa\x92\xbfa\xdb\xb8\x97\xdf\x8f\xb5\xbf\xcd\x15 \xf4XY\xa8?g\x93 \x8dg\xeeX?\xe0D\xe3\xca\xc9\x9cq?\x89\x88g\xea\xf5f\xa3?\x88|d\x96c\xce\xbd?\xecg4\x81\xd1\x98\xb6?\xa7\x07Z\x9f\x00u\xa4\xbfe\x1d\xa2\x0f\xea\x85\xb3\xbf\xe14Pu~\x9f\xb5\xbf\xd4\xaf\xa7\xfdc\xa6\xa8?A\x1d\xec-\x19\xbe\x91\xbf)\x82\x13&\xef8\xa3?\xf9\xd8J\x0fq\xbf\xa0\xbfP\x90y\x1f\x8bV\xa1\xbf\xf1\x02\x80\xa8\x0e1\xa8?|\xa7WU^\x8e\xaf\xbf]\xb4"\xdc_\xfe\xb1\xbf\xbcl\x96b\x08y\x98?\xd1\xda(\x81\xdc&\xb2?$g&\xf4^\\\xa6\xbf0\xb8\xcd\xb62\x99\xa2\xbf6jM\xd8\xb2\xea\x8b\xbf\x18\x0e\xc9\x12\xf8\t\xad\xbfv\x9d$\x15QR\xad\xbf\r\xa7\xda1\xb4\x0c\xa3?\xd7\xecE\x86t\x19\xcd?^\x18u\xef_Z\x8f\xbf\x9b\x9a\xc9\xfd\x12\xcf\xae\xbf\xfb\xcb\xb3\x192I\xb2?\x8e\x83\xf2\xb6\x8c\xbf\xc4\xbf\x84\xa9\xa1\xa7>f\xb5\xbfX\xeb\x19\xac\xe2_\xb1\xbf$\\\xeb\xe2\xc4\xd0\xb8\xbfcl`{@\x06\xb6\xbfN`\xad\xd5C\xfa\xb6?\xd1\xdf"3\xe7\'\xa0\xbfck\x8da\xe3\xf8y\xbf\t\x9f\x80p\xe0\x92\xa0\xbf1hY\xfbA@w\xbf\xab\xd0?\xe7\xccu\x97\xbf\x95\xce_k\xb8\x90\xc0\xbf}\x9b\t\xe0G\x97\xb0?\x89\xb7\xff\x0b\x93\xa4\xbe\xbf?\x079\x12\x1cb\xb6\xbffC\xef\xe4\x90d\x98?\xd8\xb0{]\xd4D\xa1?6\xbe\xef\x99e^\x9c\xbf%\x8dBp\x00\xd1\xb9?Pb\xa4k|\xaf\x96?\xc2\xdc|\x18\x18\x8e\xc4\xbf\xa6_\x93q\x88\x12\x82\xbfe\x05\xdeJQW\xac\xbf\xb8\xc4)\xc5%\xd0\xc1?\xab\xe7e[c\x1fz\xbf\xe5D\xd7\x8e\xb1\x03\x9c?C\xdc\xc86\xe5B\x82?*\x00\x9fe\xa8\xa7\xa5?\x9d\x00\xc1\x06\x9d\xa2\x81\xbf\xae\xefV\xdd\xe3t\x83?\xcaaq\x9bp< \xbf\xc2\xa7I \xc7d\xae\xbf\xc5\x1d\n\x9a\x90\xac\xbf?\xe7\x85A\xbdwU\xa8\xbf\x9f\xd4\xea;q\x93\xc4\xbf\x18\x9e=N\xd4Kh\xbf\xd7\xba\x832\xfeG\xb0\xbf\x94\xde-*\x84\x91\x9b\xbf\x7f\x95\x87!\xbb\x16\xb9\xbf\xf0\xd0\xfb\x8c\xdc\xe6\xc2\xbfK\n\t\xe5W\x18\xb1\xbf\xeb\xdbh\xf8k\x10\xb2\xbf\x86\xa3`U$\xe8\x89?\x118v\x15\xef\xf7y\xbf\x0b\x95d\xccXrs\xbf\x1f\xa8;]\xb2i\xcc\xbf\xd1f\xc4C\xb1\xee\xb1\xbfh\xc8\xb4\x9c^\xae\xba?v\x15@Cd\xeb\xa4\xbf\xf7n%1,z\xc7?\x92\xf0\x88\n\x1c\x1c\xc0\xbf\x1d\x1b\x15\xa7\\Z\xaa?.72\xb2\xa9\x9e\xa2\xbf\xa5\x0c\x9e#\xc6\xde\xa1\xbf\xab\x9b\x08Hg\x82\xb7?np\xac\xb6\xcc\x84\xb6\xbf\x99X\xcd\xa3It\xa1?HC\xb6\xa4\x99\x0e\x95?)\x1bqM\x80\x88\xa8?)\xef\xaa\xec\x17\x07\xb3\xbf\xe7\xb3\xb8\xe0\xe9\x82\xb0?w\x0f\xe3a\xdfCr\xbf\xbc\x02\xa1N-\xff\xb1\xbf\x9e7.4\xef\x0b\xa1?\xc3\xb8\x01\x89r\x12{\xbfe\x08\rk\xa0-\xa5?\x8f\xb4\x11\xfa\xcd\xad\xb1?\x87\xa5\xe4\xbc\x03,\xbe\xbf\xba\x16\xd3_\xec"\xbb\xbfe\xcd[[d\xc0\xbf?\xceHG\r(\x18\x07?\x1a9~""\xf1\xc6\xbf\xcf@\xd9\x8dU\n\x87\xbf\x1a\xd8n\x1eD\xf6\x92?\x14\xc7\xf7!. \xa7\xbf\xd9\x19S\xef\t\x15\xb0?\xc3\x14\t\xdd5O\xad\xbf\xa2\xf0\xf2,6.\xdd\xbf\x8axai\x19\x16\xaf\xbf\x06\xd4\x1d\xd3O\x11\xc1\xbfy\xf8Q\xcd$\x83\xc0\xbf\x11C\xf3W\xcc\x9a\x91?\xb2#W\xdc\xe7\x9a\xb2\xbf\xcc.\xfd"\x02\x18\xcf\xbfn1\xd0=\x93\x9d\xd3\xbf\x99\xd0d\xbe\x8b\xa3\xd1\xbfic\x10\xe1dm\xaf?\xe6V9\x92\xd4\xd3\xd1?\x91KE\xe4\xa6\xef\xd7?\xf9\x12\xa8\xbf\xddox?C\xf5\x06\x15=.\xc6?\'\xf1mg@\xbf\xa7\xbf\xe2\x04.T\x04n\x87\xbf\xf2\xadR\x12_F\xd6?\x08\xf7\x1b\x10T#\x93?-9\xe5\xf2\x8fQ\xb6?\xb0\x90\x8237\xe0\x98\xbf\x93\x8a-)\xa6\xd5\xb0\xbf\xe0\x1e\xf8t\xd4\xcc\xcb?o\xc3\x9e\x06h\xf5\xc1?\x1e\xd6\x07\xa4\x15\xab\xdc?\xb8^\xfa{\x83\xf1\xd1\xbf\xadUi_\x8c\xeb\xc6\xbf\x90\x05%\xee\xc86\xc2?\xb6\xff\xdb\xa5\xe7\x85\xd3\xbf\x9cIp\xc8j6\xa9?\xbc\x89\xf5#\x02\xb7\xa6?\x90?{\x1aXo\xb6\xbf\x13\xc5P\xa0\xc9\x94\xd3\xbf\xfb\xe4}@\x88#\xd3\xbf\xa7[\x86\xb1)\x11\x8d?\xf2\x19\'\xabe?\xa8\xbfa\xdf["\xd0\xe0\xb5?\x0b\x9f@\x94\xf6\x1c\xcd?\x98|#\xf5\xfe\x80\xd3?\x9e%\x7f\xb2\x9dQ\xa3\xbf\xd1\xd8\xcb\xe1\x8eW\xab\xbf\xb9a\xd9\\\xad\xec\xc4\xbf\xc3\r\x95\x04!$\xa0?L\xda\x15\x8e&\xbe\xaa?\x96\x9bh\x8d\xadf\xad?\x99\xb7\x01\xa70T\xe6\xbfqqb\xd3\x07\x83\xa8\xbf\x839\xc1cL\xa9\xc6\xbf\xdb\xc1\t\x03\xa69\x82\xbf\xf4\xf0T\xc3MV\xbb?\x8fH\xe5C\xcd\xcf\x95\xbff\xa7\xdc:w\x9c\xc2\xbfu\x84\x8c\x06\x8a\xdc\xaa\xbf\xf0\xb8\x1ft\x18`\xb2?\xb8#\xad\xb8-`y\xbfY@Z\x16\xf82|\xbf\xee\x03\x07\xd4\xfc\xc4\xac?\x8d]\xdf\x0e\xde\xa9\xb1\xbf\x9b\xbb\xd2\xddjW\xc9\xbfWF\xd9_(2\xe3?4r+\xb6EP\xcf\xbf\xe1\xcc:\xaeY\x81\xcb?\x84h<\xeb\r`\xab?\xe4\xc6&\xce\xcf\x98\x93?\xce\xfd\x89\xed\x80\xd6z\xbfUT\x9eJ\x15\x88\x97?\xc1*\x9bh\x0f\xdb\xad?j;\x0b\xa3\x1d\x80w\xbfjs\x9c\xd9O\xaf\x90\xbf\xa7\x15\x94\x97J\xa5\xaf\xbfQ\x8e\x02\x9d\xb4\xa4\xc8?\x89\xb5P\x00e\xab\x9f\xbf\xabD\x8a%\x16n\xa0?\\\xfc\x98\xba3?\xab\xbfC\xb6\x8b\x9c\xa6Z\xbe\xbf*\xb7\xefY\x0b\x14\xb2\xbf\xc1\xb0\xad9\xac\x1e\xb0\xbfm\xb0Ny\x98\xda\xd5?^\t\x83\x00\xb8A\xac?\xec\'\x11\xe5u\xef\xc5\xbfz\xaf\xc7-j\xe2\xa3?\xc9\xda\xd2\xac4\x17\x8d?\xfd\xd4\xc2\x9ax\x14\xa0\xbf\xb1\xdd\xb0D@z\xa7\xbf3\xd0\xfb\x0cz\x81\xc8\xbf\x90\xf7\xe9$\x9d\xb4\x8a\xbf%\xd3\\\xfe\xe9\xb1\xc5\xbfij\x8b\xd7\x97\xa5\xa5\xbfp\r\xa8\xba`)\x98?\xaf\x1d\xb6\xaf\xe7\x02\xbc?p+N\xb9\xce\x0f\x80?\xd6Z4xz\x96\xcf\xbf\xcf\xbe\xb9Q\x00\xc8\xb5?.\xf6l \xe9\xd8\xb4?X\nz\xb3\x12\x11y\xbf\xe0U\xf8v\xe1d\x84\xbfF(\xba!k\xdd\x81?Qx(\xc8J\xa3\x8a\xbfw}\xd9\xaf\x0c\xa8\xb5?\x8e\x99o\x7f9\xf6\xcc\xbf[,\xd6rH\x95\xaa?\x99\xc9\x91Q\x8f\x1f\xb1?\x1b/\x94{\xa0\xfc\xa2\xbfY\xd5>\x1d\xbd\xf5\xaa\xbf\xb1\xa5W\xfe\xec\x8b\xaf\xbfM1\x84\xf0T!q?\xb6A\xd8\xfat4\xa3?\xc6\xeed(f\x9eu\xbfay\x02\x15\xed\x80\xaa\xbf\nA\xa4\xea\x99\x8e\x9d?\x17\xb5Vb9\xc5\xb0\xbf\xf7\x1c\xbe\x8c9\x1a\xa3\xbf\xad\xcaM\xa6\x9cA\x8c?\xcf\t+\xcdQ&\xbe\xbf\xf2\x83\xeb\xed\x0cs\xa7?\xae\xe1"\x9f \x86h?\xcdzeD\xfa\x99y?\x9a\xb6\x1b\x85b\xc6\xb7?y\xba\xfde\xef\xe7\xa7\xbf(\xe3\xf0\x81\xf6L\x92?f\x8dZ)\xb9\x1f\xb6?K(|!\x13\x8e\x81?@\xb4\x9b\x87\xa2\x89\x84\xbf\xa7\xd6Zg{3\xab?\x03\xe0\xb1\x1c\x94X\xa2\xbf \xb0\xefj\xcd\x84\xa5?J\xa2\xef\x85\xd8\xbe\xa0?\xa1\xdd\xb0\xc1\x99\xd7\xa4\xbf\xa7\xd8\x0b\xfd\x89I\x8e\xbf\x08\xd9\xa0\x07\x9e\xed\x80?T7\xf7GT!L\xbf\xdb{\xf9\r\xf5\xde\xa4\xbf\n\xd4\xf9\x00\xfdU\xb4?/\xdd$\xae\xc3\x99\x97\xbf~q\x88V\xdfW\xa0?\xb5n\xef\xf8\xa0&\xc1?b\xd9!\xb1\x84}\xa6\xbf\xbe\xec5\xe6\xa4\xa8\\?\xd2\xee\xa9\x07\x18\xae\x97\xbf\xb0\xfbV\xd5^\x16\xba\xbf\x1cA\x9c\xe0\x7f\xb4\xa5\xbf\xbd\xea\x90\xe2j\xae\x80\xbf\xe1\x96B|w\x9f\xae\xbf\xceAsA\xb6\xe3\xce?D{\x14\x1b|\xcd\xa4?\xcf\x04\x8e,/\x13\x9c?\x7f\xbd$\x9f\x1a\xc0\xa4\xbfx\xac\x86\xbd<\xaaG?\x07Z\xfe\xc8\x92\xc4\x82?\x02\xc4\xf5\xfayH\x90?S!\xf6\xec\x92P\xaa?\xd4\x8b9Y\xa38g\xbf\x1a;{\x9b\xa1d\x98?\x02\xf1\x1e\xd1\xac%\x9b?\x07\xab\x8d\xa9\xde\xfe;?\x1fp\xd4\xe6<[\xa3\xbf\xadj\xed\x03\x83S\xcb\xbf\n\x1bt\x06@\xfa\xdf?>\\\x07\xbc\xb51\xa1\xbfXu\xc8w\x03\xc2\xa6?\xa5\x80\x87\x8cw\xee\xa5?~\x93\xee!NF\x97\xbf/\x8a\xb5\x93\xf9z\xb3\xbf\x1c\x9f\xed*\xcd\xd5\xc0\xbf=E7\xf0`@\xb1\xbfJ\x95sj!\xe3\x94?T\x1eNPP\xa2\x9a?m\xc5\xd6\xa1\x84\xc7\x89?\x9a\xfa\x06VY\xa3\x8b\xbf\xb6|\xd9y\xab\xf5\xb8?E@\x1f-p\xd4\xb1\xbf\x1fl\xc6\x01\x94q\xb2?y\x9a\xdf\x95\x0f\xb6y\xbf=\xcc\xe1\xa5$\xcc\xc0?(\x94\x1b\xee_b\xa9\xbf\xff\x8e\x06c8\xe0\xa3\xbfS\xf0A\xbb\x8d\xf1\xb0?j\x98dwiu\xa3?\xf97#Q\nRk\xbf}\xb1.Mb4\xa0?\x11~\x18\xba\xae\x8b\x83?7\xa14\x9eY\xa6\x84\xbfm\x96\x83 p\xac\xa3?\xfc@~vr\x97\xa9?\x10\xeea3\xc5\xb0\x9e?X\x92\xe2\x80Zz\x90\xbf&\xb1&\x13j\xb2\xb0?\xdd\xea\x90\xe6\x04\xe0\x95?\x96\x82\xf8\xbd\x0co\x9a?\xe8/\xbe\x94I\x16\xc0\xbfF\xdeG4\xfb\x0b\xaf\xbf\r\x7f"$^\x17\xa1?\xd2\xac\xf3[\xd2#\xc0\xbfpo\xd7^\xfc\x99\xc0\xbf>\x0f\xa2\x0c\x85@\xa8\xbfx\xfaIdRR\x8b?\xd1\xd8.\xe1\xa5\xeeO\xbf>1le\x1d\x95\xa0?e\x93c\xedq\xa1\x98\xbf\x02a\xeeVw\xfe\x81\xbf\x01\xc899\x95V\xbc?\xed\xd7:QD\x1f\xb9?F\xee;\xa1\xe8\xc8\x91?r\xff\x96\xd8\xf1\xca\x99?0\xda\xd8\xd43\xfd\xa7\xbf\xa2\xd8w\x8aJ}f\xbf\xd5\xda\xc3\xdd\xee\x06\x9a\xbf\xca\xb7K\x92\x16&\xd1\xbf\xa9VY#$\x03\x99?J7}!\x19h\xb2\xbf\xdd\x7f\x940\xc2\xcby?\x14\xe2\x1d\x0f\xb1\xcc\xb0\xbf\x01\xd9\xd7\x162Jn?\t\xc0\xd9\xe2U~\x8f\xbfF\xa14\xe4\xd7+\xb0\xbf\xd4\xcfH)\xfeS\x9c?\x0e|\xc9\xdcC\x84b?\x8f\r\xb7\x18\xb1Y\xcc?\x1f\xb5\xcae\xe7i\xb8\xbf\x90%\xe3|\xdd\xda\x83\xbf\xd1\xcbZ8k\xd9\xa2?\x10\xf8n|\x93\'\xc7?%NS\x07H\x13\xa8?*YkF*\x04\xc0\xbf\xb4\xfe\xc6\x80Z\xba\xcb?M\x02\x87\x1e\xacs\xb3?\x99\x00\xd3\xcf.\xeb\xa0?\xf5\xe7\x8bC\xe6\x0e\xb7\xbf\xa0\x91h\x8f3\xbb\xc1?y3\xd8\xc4\xf7\x1c\xb3?[\xf2\xee\xf0\xb3\xab\xa8?\x97\xa1\x9d%0\x1c{\xbf\xd5\xc7\x8bPm\xeb\xba?\xb5\xd5"\x9c\x84\xec\x93\xbf\x85Gq\xcdI\x85\x87?\xe9C\xcc\x8e@\xc8\xba?L\xc0`\x12?\xf9\xbb\xbfs\xb6\x99\x88\xb87\xc2?\xa3\xe67\xbf\xcfh\xcd?\xc0$\'P\xe4?\xb2\xbf\\\xf7H\xc8\x05E\xcb\xbfR~>3WY\xa1?q\xa1\xea>\x14\xfd\xb4?~\xf8i\xc1\x98\x1b\x85?\xb3\x0e"T\x1e?\xc0\xbf\x89\xb5"\xea\x9a\xc0\xb4?8\xa7>\xd2\x05L\x9a?#B\x08T-\xed\xa7\xbf\xd1\x837\x87\x80\x89\x86\xbfyf\x17\x1fha\xac?\x95\x99\xf3\xe6^i_\xbfu \xd4$Ck\xbd\xbf\xacF\xaf\xd9\x19\x14\x95\xbfo\xd0\xd3T\x86Yr\xbf_=`"\xd28r\xbf\xd1\x929\xe7\xd6>\x9b\xbf\x88\xc6Q\xa3T|\xb6\xbf*\n\xa1^\xab\xc5\x89\xbfk\xc6\x05\xc7e\x90\xb1\xbf\x9e\xa3|\xbcH\xcb]\xbfs\xcdP\xa2\x87 \xa3\xbf\xa2X&\x1f7\x16\x8b?T\xe4\xee\xd7y\xd7\x87?\xf7\xd9\x99\x8e\xb8\xc1\xcd\xbf\x7f`\x0f\x00K\x95\xb9?\xee\xb4\xe7\xad\x08\xd3\xa1\xbf\xdf\x9d?i\xf1\xdb\xa1\xbf\x96\xc5\x0e\x96\xf9J\x82\xbfm\tx\xb1)\x80{?c\x88\x9f\xf4B\xdc\x85\xbf\xbb\xb8@!\xf4\xe8\x8e?U\xfa\x1d\xaa\x08Q\xc4?\xd1\xc5\xc5\xe7\xe1\x05\xcc\xbf6Q\xc2(\x11j\xa5?\'\x85_%\xf3\xbb\xbe\xbf\xbb\x1c\x05\xe4cK\xb5\xbfH<N\xaeT\x98\xb7\xbf>\x9c\xd9|&,\xa1\xbfAL\x1b\xde\xa5\xda\xb9?\x15\xaf\xdd\xdbh\x18\xc4\xbf_(\x15\x1d\x1aw\x8a?\xa0\xe6\n%=B\xb8\xbf\xbbV!;\x93`\xb8\xbf\x1e\xad\x9e\x1a\x9f|\xb4?G\xdb\xe4\xfeb-\x1e\xbf\xe2\xf8\x8b\xe71N\x8e\xbf\xbf4{:\x0f\xaa\xd4?\x7fbZ9\xf7]\xcd?\xd3-\xad\x1a\xe8\x81a\xbf#\xf1G\xb2$\xdf\xaf\xbf\xf8Q\x01\xe0*2w\xbf}F\xc2\x94h&\x8f\xbf-\xd2\xfb\x92v\x1e\xb6\xbf"$\x9c\xff\xd1r\xd4?\xbb\xe4\xc5ex\xa5\xcb?`Sw"%\xb7\x96\xbf\x85\x02\x86)Iz[?@k\x85\x12^\x90\xc0\xbf+\xb2P\x0f-\x99\xb3?i\xc0\x12V\x83\x84\xc2?A\xa1y\x8be\x0f\xbc\xbf(\x9f2\xb9\x91\xce\x8f?\x0cGE\xd1\x05\x94\xb1?V\'\xe8\x97\xc5\xcd\x9f?"R\x8b\x02\xc0"\xbb\xbf\xdd0\xbb\x0f\xf1\xa6\xdf?\xaf\xef\xae\x92wW\xa0\xbfF\x9e\x953\xe01t\xbf\x0fU\xaa\x08\xa90\xa7\xbf\xba)\x9e\xc3E\x0c\xb2?\x06\xbb\xa3\x91\x8c\x8b\xc0?R\x90\x88\x15x\xf1\xbe?\x9bR\xf5\xa7#\xf0\xb3\xbf\t\x01\xe6q\x82\xcb\x83?\xef\x99\x1e\x99\x0f\xf1\xdf?z\x0c\xea\x0e\xf4\xbe\xb8?\xc33\xf8\xe9\xe2\xce\x9a\xbf\x94\xe1\x0e\xa6\xd5-\xd1?\x06f}x\xb4\xe6\xb4?p^\x9e\xfeP(\xc2?\xc7N\xb0Z\x0bR\xa6?\xc6\xeb\xee\x8e%`\x95?s0D\xb9\xd8}\xc0?\xdb]\x8f!\xe9\x87p\xbf\xffX#X\xdc\x93f?E\xa1\x0b/\xc3\x8d\xa7?\xe3\xc3\xef\xd3\xe6C\xb4?\x1a \x04\xea\x18X\xbc?."C\xd9\xa4\xbe\xc0\xbf\xf1\xa0\xe59r\xe5\xb6?\xb0\xb1\x1f\xafC\xb9Q?!\x13h\x07\x9eF\xb1\xbf\x07\xe3\x0c \x02\x12]\xbf\xfc\x87~\xd4\x8d\x1c\xb1\xbf9\x13\xcb\x17\t\xba\xc5?\x18\xce&U;\x95\x99?\xac\xe3\xf3\xdd\x9ed\xc7\xbf\xa2X=$8;\x91?Y\xac;\xd9\xcb\xde\xbc?\xea\xbeB)\xc7\xaf\xa9\xbf\x99\xd1D\xf7Mg\xaf?ujc\xe3\x8f \xb7?\xc5yv\xd3\xb4\'\xa1?\x00;\xba\x91\x8b\xf1\xc9?\x87\xfe^\xcc&\x92\x90\xbf:y;g\xa1\xb2\xd4?h\r\x84\x0b\'\xd1\x93\xbf\xc2\xf8|"\x96\xdd\xb4\xbf\x8f\xa1C\xd6\xc1\x85\x93\xbf@.\xd7\xbd\xfe\x18\xcd?\xe1x\xb44P\xb4\x98?2\x89\xccn\xc4\x9a\xa4\xbf\xc1\x80\xaf\xe7g\x82\xac?nN\x04\xe8B+\xad\xbf\x86M\x98\xa9{\x01\x19\xbf\xd0\xfe\xa4\xe4\x05\xc7k\xbf$j\x97\x98|`\xbf\xbf\xd6pL}\t:\xbb\xbfb\x0c\xcf\xb8\xa4\xb8\xc7\xbfU\x8c\x9f\xa9F\x9a\xc5\xbf\x9f\xa7w\x92\x0f\r\xad?\xa3reV$\x13\x9a?EQl\xcei\xa3\xb5?+Y\xab\xd20\xc0\xb0\xbf\xa9m\xbb+Z\xb7\xcf?\x83V\xef\xba\x8f\x8f\xba?\x0fR\xba\xe6\xf3+\xaf?m8\x88\nX_\x8e\xbf\xca\x83\xfe\xe9G\xef\x92\xbf\x9b\x04F\xe4&Z\xa9?\xad\x01$q\xfd\xc6\xb4\xbf\xeeS\xe1U\xf2\xb0t?\xbe\xc9T\x98Mx\xd0?F\xdd} kp\xb4?\xa6\xc9$\xba\xffX\xc8?\x07!I\xe2\'\xfb\xb3?q\xd5\xa6\x95m\x85\x9c\xbf,t\xc0N\x90\xac\xa7\xbf;\xb3\x1d\xe0\x0bD\xb3\xbfD\xea\xf1=\x7f\x08\x8c\xbf`\xf3\xae\x83\x89\xc2\xba\xbf\x17B\x84&\xd9H\xb1?\xb4W4_\x82\xe6\xc8\xbf#\xc6\x92\x14\x0f\xdc\x99\xbfz\xfe$\x0eV\xe2\xb0\xbf\xde"2~1\'\x90\xbf\x1d`f\xe3\xa6B\xb2\xbf\xbb\xf5\x18&bY\xa8?~hl\xf7c\x9b\xb9\xbf\x93hyoH\x19\xba?\x10D\xd5\xf9=\xe8\xa5?fM:[\x8d\xfc\xc7\xbfHnfj&\xd4\xa5?\xde\x86w\x9am9\xb4\xbfo\x8e}2Q\x85t?Oz\t~\xf4\x85\xa0\xbf@\x07\xf5\x17\xbaR|\xbf\x9e\x15E\xc5\xc3\xa7\xb4?\xa4\xb0\xbd\xae\xfcE\x88?\xee\xe4\xd2\xe0e\xc6\xb7\xbf\x94\xd2\xc1NOV\x90?+\xb5W\x98\x82J\xb5?$\x8c\xd7\x8ch\x08\xa3?\x924:\xbf\xeez\x99?\xef\x8f1\xca&"\xca?F\xf0\x980i\x13\x85\xbf\xe9\xc6\xa9\xda\xc5c\x8f?\xa7\xab\xb5\xd3C\x87\x91\xbf\xa6\\<$aM\x95?\x1e7\xd8\xb6\x11\'\xa8\xbf*b7n3\xb4\xa9?\xbdi\xec\x0c\x87\xe7\xbb\xbf\xd5\x1c\xa7\xa5\xd6[\xab\xbf\xd2\xc2\x97\x8c\xdeM\xc7?\xc8\xd1\x8d\xd7\xb3\x05\xb8\xbf\x0b\xe8.zEX\xa2\xbf\xb6\xcf\x0e5\x0emO?b\xac\xc1\xc1Um\x90\xbf\x82\xcd\x85_\xf2\xfd\xc0\xbf(\x8f\xd3des\xb7?\xff\ra\x95\xfa\\\x92\xbf8\x9f\xea\xa6%4\x9a\xbf\xcf\xe3\xa3 \x1d\x9b\xe9?\xcf\x04L\x80r\x99h\xbf\xa0\xf1HS\x84\xaav?]>0e\xf88\xc2\xbf\xfaMI\x8bV\xfe\xa7\xbf\xdf\n\xbd*v\x7f\x98?\x07\xd9\xc9\x1b\x9f\xa9\x9b\xbf\xb2f\xd2\x00\xff\xd8\xa2?6-I\xb9\xde"\xa3\xbf\xf29\xa3\x95;2t?\x1c\x02\x0e#\xb8\x1d\xbe?\x12\x03M\xe3k\n\xa2\xbf".\xf6\xa1\xd4\x8f[\xbfVRgU\x08S\xd9?\x15\x91\x14\x1fc$\x99\xbf\xba\xe6\xe76\xd2\xfc\xab?\x97\xb1\xe6l\xcc\xd3\xa1?\xf3\xf6]9\xae\xc2\x8c\xbf\xa2\xdc\xde\xbd\xb1K\x9a?\xc5,\xb6\xfe\xb2Q\xb2?f\x1b\xd0\x14>\xb3\xba?\xee\x17Z\xb5MK\xcd?tu\xde%\xea\xf7\x9c?\xee\xf6jd\xbaY\xb9?\x07M\x05Z\x88\xc2\xb1\xbf\xef\xbb\x90u{j\xaa?\xef\xb7\x1f\xae\x05\xf4\x87\xbf\x15\xe17s\x0b\x1c\xb4?\x04Bn\\\x9d\xa3\xa5\xbf\xf7\xa7r@\xb0\x88\xaa\xbf\x9e\'\xf1B\x05S\xa4\xbf8];\x9a\xa9t\x88?(\xca\xd8[*\x8eV?\x0c\x9c\x06\x9a\xdcA\xb2\xbf\x98\xe6OSH\x9c\x97\xbf0\xf3\x19\xd25*\xb5\xbf!\x9f\xff\xec\x8c\x8a\xc8\xbf">\x0f30j\xab\xbf\x07\\\xffu<\x8a\xa8\xbf\xf5R\xa9:\x8cj\x99\xbf\'\x15]\x19U\x83\xd7?h\xae\x93\x1d\x02a\xc1\xbf\xb6a\xcbc<r\x94\xbf\x11r\xd6\xc0\xae\x81\x98\xbf\x1b\xe0-\xb0\xf7\x91G?1\xeeD\xb9\xa2\xf8\x8c\xbf1k\x81/\x1c3\x92\xbf\x9f\x92\xbd\x11a\x19\xd1\xbf\xe4J\x01\'df\xbb?\xc7f\xc6\x0b\xf8S\xe0?\xa2u\xf3@\xd2\x12\x13?m\x97\xfd \x00+\xc0?\x14g\xd4\xe9\x01N\xc1?\x19\x9fi\x1d\x84\xe5\xb0\xbf&o\xef\xa5\xbc7x\xbf\xc3.\x08Gl\xc9\xa1?\x89\r~\xe3>\xf6\xbb?{!3\x81~\x95\x84\xbf\xa4He\x91 W\xb0?G\xffH\x89nI\xa0?\x8f>\x0b\x1bgr\xab\xbf\x9f.\xc5\xbe\xd4\xdaq?\xdfy\xc9\xa0\x8e3\xac?B/O\x8cC\xed\xa1\xbf\xa0\x8dJ\xfc\x9fw\xc4?\xf0\xe7?>\xef/p?7qD\x06\xc9\x00\xa7?\xa4\x93+\xc3\x1aw\xa4\xbfw\xd4ji\x93\x11\x9a\xbfU\x8e\x8cyP\xbb\x97?+\xd6\x13Z\xe8 \x9b\xbf\xfe7\x8eb\xb1Z\xb1\xbf\xfb\xb2\n\x16\x1ew_?\xbd\xe5(\x91P\xc2x\xbfF"\x85\x15\x9c\xcc\x88\xbf\xf1OK\x88Y\x80\x81?\xd0y\x8e\xce\xa0\x06\xc3\xbf4\xc0\x06\x1b>:\xb7?\xe3.\x1e\x05\xc6\x9f\xa4\xbfP\xbf\xc0;!\xeb\x82?\x9a\x9f\xef\xd0BX\x83\xbf\x8do\xb2e\xf8Q\x90\xbf\xe0\xfb\x89\xb0\xcfY\x96\xbf\xb0\x84U\x15\xd2\xeb\x91\xbf\t\x00\xfd\x0e\xaaKF\xbf\xe3\xc9\xd0\x83\xe0\x94\x97?\xd5\xb9\xf1\xd2\xd7h\x7f?\xa3_\x037\x18\xb1\x93\xbf+\xbf!\xadu#q\xbf}\xdae\xd0\x94+\x9d?\xab\xb6\xca\x11gU\x93?r\xf1V\xad\x84~\xc7?\xe2\xae\xfe\xbdf\xe4\x7f\xbfnX\xf1\xbek\xbf\x82?\x1e\xa2\x0b\x95g\xf1\x83\xbf\x04\xb3XW&\x0cc?\x06\xde\x17\xe5\xf2\xae\x97?\x8a"\x01\x93D2\xa0?\x01<N/\xbe\xc3\x9a\xbf\xb79\x96\x1c \xb8\x95\xbf\x04\xfcX\xeaw\x00\xaa\xbf\x8bp\xd65,X\x8b?-\xad\x9e\xf9\xf7\xf2e?\xbd\xa6\x13:\x9aU\xa2\xbf\xed\x86$\x9dW?\x90?\x96U\xac\xca\xb5\xe5\x95\xbf\x06`\n\x88\xb5\x17\x88?\x06Q\xed\xbb\xf6d\xe3\xbf\x0b\xf6\xe3\xcf\xc6\x1d\x9f\xbff\xe5\x84\xce\xee\x02\x84\xbf\x10\xb7\x1a7\xa2\x89\x94\xbfk\xe3\xdd\xb3P2|\xbfGB\xf1\x19\x8a\x80\x97?|V\xd0\xb8\x02\xb4\xb7\xbf\x14X\xb1\x83v\x01\xb3\xbf\xe3\xd1\x90%"\xe1t\xbf\x07JC0\xd3\xff\x87?eEu\xf0\t\\\xc3?_\xba\x05\x10\x11\xf9\x9a\xbf\x05\x997\xe7y\xb54?\xfc6B\xeet\xf6\xdf?\x88\xf7\x00\x17\x14d\xc1\xbfP\x0bb\xba\xe8\xe5\x83\xbf\xce#\t\xc0\xdeQ\x8a\xbf\xb5\xca\xe84\xb9\x18\xa8\xbf<\xfa\xa1\x9a\xea\x8f\x85\xbfn\xb6\xadCu\xa3G\xbf\xc7\x81\x96\xd9+9v\xbf\xd71\x80\xba\x0b6\xd5?R\xa1\xdc\xa2\x9d3\x90\xbf\xd8!\xb3\xb1b-\xc9\xbf,\x11_\x8e\xa6\xb8\x89?>\x07\r\xa5\xa1\xb9\x82\xbf\xb3\x86\xce\xda_\xdd\x9e\xbf\xea\xae\xc4\xa3\x97\xfa\xad?\x1d\x04\xc1\x95"\x0f\xd0\xbf]\x9e\x86\xfe\xb7\x1d\xa7?[o\x84U$\xeab?q?\x89\xd4g\xe8\x88\xbf\x85S\xe8f\xa5\xf2\x91\xbf\xc0?&\xda\xe3\x1f\xa9?\x07\x1c\x13\xff\xae\xf7\xc1?\x9e$\x87*\xd4?\x96\xbf\xd0\xa26*\xab\xa0\x8d\xbf\xe3\x8aX\xde\xdd\x0bn?o\x11]_63\xa7\xbf%\x11\xbf\xbe\xad]\x92\xbf\x00\xa9\xb6\xb9\xa9\xcb\x9f\xbf\tv\xd9H\xc0\xcf\x8a\xbf\xc5\xad\xe7\x19\t\x8a\xc2?1\xfaz\xb7\xde\xb5g\xbfov\x04=\x19U\xc3\xbf\x95p\x94/:\xa4\x97?p\xcf\x11(\x8c\xd2\xa0?ZA\x80\xf5Qy\x9c\xbf\x9a\xf9\xff\xfc{6\x8b\xbf\xa8\xa8Ru\xe8\x81\x9d\xbf\xb4\x03hv\xe3~\x9f\xbf}\x9f\xc6\x16\xc1\xef\xa3\xbf\x82{\x9d`>E\xa0\xbf`X\xecE\xa5$\x8a\xbfC\xcf\xfd\xf3\x0e\x8b\xc6?E\x8b\xda\xd3\x7f\'d?\xd8R\xc0V\x17Ot?\x8f\x86t\t\x05\x1b\xc1?i\xd5\xd4\xc3\x1e\xd7\xa0\xbf\xd0\xdc{\xc8T=\xa4\xbf\xf8\x08\x9bg\x86\xdb\xa6\xbfH\xb1\x90\xe3L\x92\xb4?\xca\xc0\xedF`\xa4q?T\xc4\xa9\xee[D\x87\xbf\x93\xfb,UP\xa8\xc8?\xd9\x93\xa8\xeb[\x01\xd9\xbf+\x1d\xe8\xed\xe2\xe7\xca?\xc3]Sl\x95\xfab\xbf~W\xff\xd8\xb7e\xca\xbf\x03?m&h \x8b?\xa8\x9f\x14\'\x8bRk?\xa3\xa8i\xaa4\xf1d?B_#\xc2\xb5+\xb8\xbf \x1f6b;9\xb2?\x0f\x02-\xc2\xb9\xa3\xd2?\xb8\x88\xda\x90p\xb8x?\xd2=.54\xb9\xb4\xbf\x1eD\xb6Yc\xd3\x88\xbfr\xfe\x90[\xea\x04\xbe?\xec1\x90\xe3\x1a\x87\xd0\xbfl\xe6@\x10\xbf\xa5\xa1?\xe2\xa21\x07\xb3O\xc1?\xce\xb6\xab\x04\xf3\xdc\xae?\x05\x8a\xa2C\x1a:\x88?$\x1f@\x0e~\x88\x9c\xbf\x02a%\xefx/\xb5\xbf\xa5\x7f\x9a\xa8\xa19\xd9?\xb2\x8f?\xe6\xc0pu\xbf\xc8e\xd0\\~}\xc5?O\x8e\xee\x91[\xc6\xb0\xbf\xb4\x0b\xe8\n\xdf\x08\xd0\xbf\xfe\x99Y\x07\xe1\xa8\xb3?\x1a\xd4\x89>73\xa1?R\xaf\x1d\x9b\xedV\xc5?\x84\x9bC\x02\xe7J\xb8\xbf\xba\x96x\xdd\x1f\x06\xd0\xbf\xe7\xfew6\xfd\x88\xc7?o"\x06\xed/\xe0\xa1?\xf6\xb5\x82\xe8\xe4\xbe\xb1?`\xbf\x82\xf1\xa2\x95\xaf?\xed\xbe\xa0\xbe\x8ch\x83\xbf\xb9\r\xb7f$\xb4\xa3?a#\x04TE\x88\xb0?\xdd\x93\xbc\xe4\x1d+\xca\xbf.\x9di\x81\xe2#\xc1\xbf\xd2[\x998\xec\xe7\x92\xbf\xa5\x83\xd6i\x0b\x1f\xa0\xbf\xaf\x8e\x7f\x8a\xfdI\x92?\xbb\xc7/\xa9\x0e\xf0\xca\xbf\xd0s)\xe2\xc2\xe1\xc0\xbf\xe4@y90p\xa0?Iaz\x8e\xd4\x1c\xb0?\xb4\x1f;/\xf64\xc9?o\xb35\xd3\x8c\xfew?\xe9\x81?\x84+4\x93\xbf\xbaz\xe6_\x95\xb7\xb0?\xed\xbe\xf8\x8e\x10\xb3\xc1?\xec\xc2\x18T!|\xb5?AU\xb4Ay\xe2r?6K\xf7\xe7\xc9I\x88?\x01<\xda\xc2Ft\xcf\xbf\xc2\x83\x8b\xf2\xb6\xffj\xbf`\x94K\xf2\xd9:\xa5?\x8f\xdf\\\xfe\x7f\xf1\x9b\xbf\x8fU\xd8=\x92\xd6\xa8\xbfK\x01D\xcd\x8bMp?\x02y\xd2K\xc1\x0e\xa8\xbfp\x06\xc2\x82<\x86\x80?\xcdzY\x1c\x08\xda\xab\xbf\xfc\xce9Na\x14\xaf?\x04;G^\xf9\xda\xbd\xbf3aX7\x1c\xdf\xcc?\x96\xd67\x1d\x1d\x18\xc6?\xca\xab\xa5#R\xac\xae\xbf\x13\xcf\xdb\xac\xdfG\x95\xbf\xe7pu\xf5\x97\xb6\xe1\xbf\x19{\x92\xf2\xd8\xd4\xd1?\xad\x90_\xa7\xb5\xc1\x9c?\xac\x96\x11\x1c#\tu?\xf6=\x801\x86\xf5\x80?\x05\xe1\x81\x07\x90m\xae\xbf\x97"\xfc\x06\xf8"\xb6\xbf\x96\xef\xce\x8a\xa3\xc0\xb0\xbf\xf3\x80\xc6\xf1\xcd\xe2\xf1\xbf\x8c\xfc\xa4/\x00\xed\xa3\xbfA\xb7\x15\xa1Q\xe7\xb8?\xec\xc1|\xe5\xa4P\xc2\xbf^/\xf1\xeb\xb4\x86\xb4?\x81\'\xc9B\x0b\xd2\xbf\xbf\xa7Q\xa62\xb9\xbe\x87\xbf\xcf\x95\xa4\xaeF\xe7\xb5?\n\x14\x17}\xa4\xb2\x84?\x8e\x89OeYD\xb6?M\x031\xd4\xd2\xd4U?\x00\x00\x00\xc0\x817\x8c?\x00\x00\x00\x80\x87#r\xbf\x00\x00\x00 \xb2\xf9\x83\xbf\x00\x00\x00@t\x89O\xbf\x00\x00\x00\xa0z\xf56\xbf\x00\x00\x00\xa0\x0c\x08}?\x00\x00\x00`Q\xfc^?\x00\x00\x00 eJ\x98\xbf\x00\x00\x00\x80\xdeIS\xbf\x00\x00\x00 e1\x8d\xbf\x00\x00\x00\x00\xbd\xafe\xbf\x00\x00\x00 /\xdaw?\x00\x00\x00\xc0\xc7=z\xbf\x00\x00\x00\xa0\xe8\xf5\x98\xbf\x00\x00\x00@\xbc\x9c\\\xbf\x00\x00\x00 \t\xd8J?\x00\x00\x00\xa0\xc4 o\xbf\x00\x00\x00 |\xcf{?\x00\x00\x00\xa0IM\x84?\x00\x00\x00\xc0p\xa3\x84?\x00\x00\x00@\xa6\xaf8\xbf\x00\x00\x00 \xb0\xb7Q\xbf\x00\x00\x00`\x94\x13i\xbf\x00\x00\x00\xa0]}\x85\xbf\x00\x00\x00\x00\xb4\n\x97\xbf\x00\x00\x00\x00u}\x83\xbf\x00\x00\x00\x00\xd0\xb8q?\x00\x00\x00\xc0\x92\x9bx?\x00\x00\x00`, >?\x00\x00\x00 ?\x9cT\xbf\x00\x00\x00\xe0\xf1\xacs\xbf\x00\x00\x00 \xc6\xbfc\xbf\x00\x00\x00\x00\xa7%e\xbf\x00\x00\x00 \t\xc1\x80\xbf\x00\x00\x00\xa0\x8b\xb7~\xbf\x00\x00\x00\xc0V_\x85\xbf\x00\x00\x00\xa0\x19+w?\x00\x00\x00 \x84\x08|?\x00\x00\x00\x80\xf0\x95\x8a?\x00\x00\x00\x00\xad\xe5l?\x00\x00\x00 \x99\x8cc?\x00\x00\x00\xc0\xc8%\x89\xbf\x00\x00\x00\xa0\xff\x9b\x86\xbf\x00\x00\x00\xe0?.k\xbf\x00\x00\x00@\x03\xad\x7f\xbf\x00\x00\x00\x00\xff,\x8e\xbf\x00\x00\x00\xe0\x03\x0f\x85\xbf\x00\x00\x00\x00\xef\xa1\x84?\x00\x00\x00\xa0\xb4\xa0\x8f\xbf\x00\x00\x00\x80\xc2\x86\x85?\x00\x00\x00 \xb5&\x87\xbf\x00\x00\x00`z\x8ff\xbf\x00\x00\x00\xa0\xc9\xe4\x8c\xbf\x00\x00\x00\xc0\x12\x11c?\x00\x00\x00\xc0fbK\xbf\x00\x00\x00\xe0N/\x94\xbf\x00\x00\x00@S\xa7m?\x00\x00\x00\xc0\xb7{\x83?\x00\x00\x00 "0\x97\xbf\x00\x00\x00\xe0\x80\xa0\x8e\xbf\x00\x00\x00`\xcb3\x91?\x00\x00\x00@\xa0\x94q?\x00\x00\x00\x80\x8d\xcb\x7f?\x00\x00\x00\xc0O\x95s?\x00\x00\x00\xc0\xe8;j\xbf\x00\x00\x00\x80q\xcb|\xbf\x00\x00\x00\x005\xb0_\xbf\x00\x00\x00 \x04B`\xbf\x00\x00\x00 \x1b\x0f\x89\xbf\x00\x00\x00`\xb7Fs?\x00\x00\x00\xe0$u\x88?\x00\x00\x00@:\xc5v\xbf\x00\x00\x00\xe0\xce\x01@\xbf\x00\x00\x00\xa0\r\xa2e?\x00\x00\x00\xa0\xaf^z\xbf\x00\x00\x00@Y\x97\x93\xbf\x00\x00\x00 \x11\xe3j?\x00\x00\x00\xa0mp\x84\xbf\x00\x00\x00 \x98\xbf\x1f?\x00\x00\x00\x00\xbc\x10\x94?\x00\x00\x00\xc074\x93?\x00\x00\x00 \x17\x05\x81\xbf\x00\x00\x00\xe0\x9b\xf0i\xbf\x00\x00\x00\xc0q/w?\x00\x00\x00@\xd1+`?\x00\x00\x00\xe0/\xe9r?\x00\x00\x00 \xe4\xcb\x92\xbf\x00\x00\x00\xc0\xf8 \x91\xbf\x00\x00\x00\xa0\xd3U\x8c?\x00\x00\x00@t\x05\x8d?\x00\x00\x00 \xe5\x02t?\x00\x00\x00\xa0i\xe2\x84?\x00\x00\x00\xe0*\xfb\x83\xbf\x00\x00\x00\x00\xd93w\xbf\x00\x00\x00\x80\xd0\xc7Z?\x00\x00\x00\xe0\xef\xeew?\x00\x00\x00 B\xa2\x8e\xbf\x00\x00\x00@eZM\xbf\x00\x00\x00@\xe0\xa5\x91?\x00\x00\x00`]\xb3\x86\xbf\x00\x00\x00@9T\x89?\x00\x00\x00\xe0Q\x04q?\x00\x00\x00\xc0\x0f\xeaM?\x00\x00\x00`<\x8aV?\x00\x00\x00 \xb7\x03q?\x00\x00\x00 I\xbag?\x00\x00\x00@b\x7f|?\x00\x00\x00`\xefk\x87?\x00\x00\x00\x80N\xd6{?\x00\x00\x00\x00\xb7\x8fT?\x00\x00\x00@\xb9\x04r?\x00\x00\x00\xe0\x82\ny\xbf\x00\x00\x00@\xba\x95t\xbf\x00\x00\x00\xe0^\x07q\xbf\x00\x00\x00\xe0\xc5\x0c\x8a?\x00\x00\x00\xc0$\xfep?\x00\x00\x00\x00\xd0\xf4\x8f?\x00\x00\x00\x80\xff\x02f\xbf\x00\x00\x00\xc0\xea\xbe\x85?\x00\x00\x00 \xe6\xf4u?\x00\x00\x00@\xcf\x16l?\x00\x00\x00`\xc0vf\xbf\x00\x00\x00\xc0\xe0dG\xbf\x00\x00\x00\x00\xe8\xf93\xbf\x00\x00\x00 \x9c\xaa\x89?\x00\x00\x00\xe0\x17\xc9r\xbf\x00\x00\x00\xc0\xb1\\\x93?\x00\x00\x00\xe0\x98n\x81\xbf\x00\x00\x00\x80\xcar\x8b\xbf\x00\x00\x00 \xc3Ur?\x00\x00\x00\x80\x9fR\x90\xbf\x00\x00\x00\xc0<9z?\x00\x00\x00\xc0\xb6\xd5o?\x00\x00\x00\xe0_\x04l?\x00\x00\x00\x00\xd7<\x84\xbf\x00\x00\x00\x00n\'\x91?\x00\x00\x00\xc0\x14\x18\x8b\xbf\x00\x00\x00`\xa8A~?\x00\x00\x00 \xb6\xb3T\xbf\x00\x00\x00`m\xa0x?\x00\x00\x00\xc0\x8e\x8a\x7f?\x00\x00\x00`\x86\xff\x88\xbf\x00\x00\x00`\tE\x86\xbf\x00\x00\x00@1\xc2\x87?\x00\x00\x00\xc0\xe1ym\xbf\x00\x00\x00\xc0\xa7\xd4e\xbf\x00\x00\x00\xe0\x8f\x1a\x95\xbf\x00\x00\x00`\x8f;Q\xbf\x00\x00\x00\x00W\x81a?\x00\x00\x00\xe0\r\xc3\x83\xbf\x00\x00\x00\xa0\xd7@\x83\xbf\x00\x00\x00\xe0\xf0o\x88?\x00\x00\x00@\xc4=\x8b\xbf\x00\x00\x00@<\x9d\x83\xbf\x00\x00\x00`\xc2\x01\x86\xbf\x00\x00\x00\x00\x04\xe02?\x00\x00\x00`\x179\x91?\x00\x00\x00@)\x83|?\x00\x00\x00 A\x9e~?\x00\x00\x00`\xee+\x95\xbe\x00\x00\x00\x80\x82\x93b?\x00\x00\x00\xc0\xa5\xfdr\xbf\x00\x00\x00\x00 \xa1\x89\xbf\x00\x00\x00\xe0\xc7#f\xbf\x00\x00\x00`\x93lp\xbf\x00\x00\x00\xa0\x99\xd8x\xbf\x00\x00\x00\x80\xb5\xc2r?\x00\x00\x00\x80\x86Vz\xbf\x00\x00\x00\xa0\x9f\x9a\x85\xbf\x00\x00\x00\x80g#\x98\xbf\x00\x00\x00\xa0\x9fG\x84\xbf\x00\x00\x00\xa0n\r\x88\xbf\x00\x00\x00\x00H\x00\x8e\xbf\x00\x00\x00\x80\xf67Z?\x00\x00\x00\xe0\x0c\x8eb\xbf\x00\x00\x00 @\xde\x90?\x00\x00\x00 \xdd(O?\x00\x00\x00`\xce8|\xbf\x00\x00\x00`F7s?\x00\x00\x00`, }?\x00\x00\x00\x00d\x99\x8a?\x00\x00\x00\xc0\x80\ns\xbf\x00\x00\x00\xa0\xe9\x04\x86\xbf\x00\x00\x00\xe0\xd5\xf7\x86?\x00\x00\x00@["_?\x00\x00\x00`\xc4\x9a\x8e?\x00\x00\x00\xe0\xd02g?\x00\x00\x00`\xc4-x\xbf\x00\x00\x00`\x95\xce\x8a\xbf\x00\x00\x00\xe0\xa9]i?\x00\x00\x00\xa0\xbdJP?\x00\x00\x00\xc0\xe0;\x83\xbf\x00\x00\x00`\x15\xc9\x85\xbf\x00\x00\x00 l!R\xbf\x00\x00\x00\x009\x86e\xbf\x00\x00\x00\x80\x03\xe8r\xbf\x00\x00\x00\xe0\x97qi?\x00\x00\x00\xa0\xfdvr\xbf\x00\x00\x00`\x1c\xe4`?\x00\x00\x00\x00A\xffy?\x00\x00\x00\xc0\x85v\x9d?\x00\x00\x00\x00t\x94\x84?\x00\x00\x00 \xf0\x80m?\x00\x00\x00@\xe3Oz\xbf\x00\x00\x00\xe0\xe2J\x04?\x00\x00\x00`S\x85u?\x00\x00\x00`\x96\\s\xbf\x00\x00\x00`\xb6/C?\x00\x00\x00`\x144r?\x00\x00\x00\xa0\x9f0a?\x00\x00\x00\x00\xcc\xb8`?\x00\x00\x00\x80\x82\xef`?\x00\x00\x00\xa0\x02\x91o\xbf\x00\x00\x00\xa0\xb6]z\xbf\x00\x00\x00\x80\xc1\x9b\x81?\x00\x00\x00\x80D-{\xbf\x00\x00\x00@\xe4\xe3p\xbf\x00\x00\x00@2\xa7\x88?\x00\x00\x00 \x08\xc5v?\x00\x00\x00`\xba\x02\x87?\x00\x00\x00@\x04\x00#?\x00\x00\x00\xa0\x02&A?\x00\x00\x00\xa0I)|?\x00\x00\x00\x00\xd8}p\xbf\x00\x00\x00\xa05\x11f\xbf\x00\x00\x00\xe0\x18\xaap?\x00\x00\x00@I\x8f|\xbf\x00\x00\x00@\xfc\xb7\x87?\x00\x00\x00\xa0/\x9fP?\x00\x00\x00\xc0^3\x97\xbf\x00\x00\x00@\xec\x8br?\x00\x00\x00`w-l\xbf\x00\x00\x00\xc0\xdaXt?\x00\x00\x00 ~\x0f\x7f?\x00\x00\x00\x80\x8b^\x81\xbf\x00\x00\x00\x80t\xefk?\x00\x00\x00\xe05\xa9s?\x00\x00\x00\xe0\xd7\x9b\x81\xbf\x00\x00\x00\xc0\xaf\xc5{?\x00\x00\x00\xc0\x8e}\\?\x00\x00\x00\xe0\xf0\xa9{?\x00\x00\x00\xa0\xa2"\x92\xbf\x00\x00\x00\xe0 \xd0\x8c?\x00\x00\x00`=\xe2k?\x00\x00\x00 ^aa?\x00\x00\x00@5\xfdz?\x00\x00\x00@\xfb\xb2=\xbf\x00\x00\x00\x80\xc0\xab\x85?\x00\x00\x00@<@\x99\xbf\x00\x00\x00\xe0oM\x83?\x00\x00\x00\x00\x98\x04y\xbf\x00\x00\x00`\x15a\x88?\x00\x00\x00\xe0M\xa7\x85?\x00\x00\x00\x00\x8a\x81t?\x00\x00\x00\xc0\x9b\xa4\x80?\x00\x00\x00@\xbamt\xbf\x00\x00\x00\x80\x14\x90s?\x00\x00\x00\xc0o\x1e\x89?\x00\x00\x00`\x02\x8f}?\x00\x00\x00@\x93\xe3h?\x00\x00\x00\x80FGx\xbf\x00\x00\x00\x80a\x7f\x85\xbf\x00\x00\x00@\xf8h&\xbf\x00\x00\x00\x00\x0f\xbau\xbf\x00\x00\x00@b\x87\x81?\x00\x00\x00\xc0\x17\x1e{?\x00\x00\x00\xa0:\xc3\x81?\x00\x00\x00\xa0\xa8\xd7\x89\xbf\x00\x00\x00\xa0}\x93@?\x00\x00\x00@\xf1\xd4O\xbf\x00\x00\x00`KuS\xbf\x00\x00\x00\xe0M{z\xbf\x00\x00\x00`!#q\xbf\x00\x00\x00\xc0\xf5\x85x?\x00\x00\x00\x80T\xf0\x82\xbf\x00\x00\x00`v\xfcm?\x00\x00\x00\x00\xdf\xc4\\?\x00\x00\x00@\xda\xec\x86?\x00\x00\x00\xc0\\\xe1k?\x00\x00\x00\xa0\x85\x93Q\xbf\x00\x00\x00\xc0\x96\x96h?\x00\x00\x00\x80\xc7\xe8\xb5>\x00\x00\x00\xe0\xe0\xdfx?\x00\x00\x00\xe0z\xbd\x82\xbf\x00\x00\x00\x00\x1f\xc3O?\x00\x00\x00 \xed$\x8b\xbf\x00\x00\x00\x80k\x96\x86\xbf\x00\x00\x00@/\xf9~?\x00\x00\x00\xe0B`\x87?\x00\x00\x00\x80Aq\x87?\x00\x00\x00\xa04@l?\x00\x00\x00\xa0\x88\xfbi\xbf\x00\x00\x00\xa0\x97?\x8e\xbf\x00\x00\x00`\xd22b?\x00\x00\x00 \x0f\x9b\x87?\x00\x00\x00 6\xda\x90\xbf\x00\x00\x00\x80\\ w\xbf\x00\x00\x00\xa0\'\x82\x88?\x00\x00\x00\x00\xca\xb3\x84\xbf\x00\x00\x00\x00&\x18x\xbf\x00\x00\x00\x80\xe66\x8d\xbf\x00\x00\x00`7\r\x89\xbf\x00\x00\x00@W\xac\x83?\x00\x00\x00\xa0\x11\xca\x8a\xbf\x00\x00\x00@"\xd1\x92\xbf\x00\x00\x00@5\xa4t\xbf\x00\x00\x00\x00\xe8a\x90\xbf\x00\x00\x00\x00\x04\xadu\xbf\x00\x00\x00 f\xa2Z?\x00\x00\x00@1|U?\x00\x00\x00\xe0`w\x81\xbf\x00\x00\x00\x006#\x8b?\x00\x00\x00\xc0\xf4\x96u?\x00\x00\x00`4i\x8c\xbf\x00\x00\x00\xc0zey\xbf\x00\x00\x00\x80\xf4\xa6q\xbf\x00\x00\x00\xe0E"v?\x00\x00\x00\xe0v\xa9J\xbf\x00\x00\x00@9\x86\x86?\x00\x00\x00\xa0\x02q\x83\xbf\x00\x00\x00`\x1e\x14w\xbf\x00\x00\x00\xe0B|\x82?\x00\x00\x00@\x91\x91\x8d\xbf\x00\x00\x00 l\xc1\x92?\x00\x00\x00 \xbe\x15{?\x00\x00\x00\xe0^\xf6\x8e?\x00\x00\x00 p?Q\xbf\x00\x00\x00`\xf5Z<\xbf\x00\x00\x00\x80\x88#\x80\xbf\x00\x00\x00\xa0vEy\xbf\x00\x00\x00\x80\xbfuu\xbf\x00\x00\x00\xe0O\xc1\x81\xbf\x00\x00\x00\x00\xc9EH\xbf\x00\x00\x00\xc0\x8a\xd2\x83?\x00\x00\x00`\xcf\xea\x80\xbf\x00\x00\x00`\x0b,\x88?\x00\x00\x00\xc0\xbc\xd5\x83\xbf\x00\x00\x00\xc0\x92\xc5\x82?\x00\x00\x00\xc0N\xc7o?\x00\x00\x00\x00@rz\xbf\x00\x00\x00\x00 \x8f\x81\xbf\x00\x00\x00`\x0f\x1c\x8b\xbf\x00\x00\x00 \xf3\xf3\x88?\x00\x00\x00 6)k?\x00\x00\x00\xa0\x9cA\x8b?\x00\x00\x00\x80\xc6\xb8\x86\xbf\x00\x00\x00\x00\x9e\xf9\x88\xbf\x00\x00\x00\xe0\x10h\x9c\xbf\x00\x00\x00\xa0\xe3\xe4\x82?\x00\x00\x00\xc0\xd2_\x93\xbf\x00\x00\x00\x00i\x03w\xbf\x00\x00\x00\x00\x07\xec\x90?\x00\x00\x00\xa0v|\x80?\x00\x00\x00\xe0Q^\x87?\x00\x00\x00\xe0\x1e\xd9s\xbf\x00\x00\x00`1\xf6Z\xbf\x00\x00\x00\x00C\x0fj?\x00\x00\x00\xc0m\xd5\x80\xbf\x00\x00\x00\xa0\xc9\x01e?\x00\x00\x00\x80Tlw?\x00\x00\x00\x00\x8d\xf5q\xbf\x00\x00\x00\x80\xa4\x1bT?\x00\x00\x00\xc0\xcb\xfaw?\x00\x00\x00\xe0\xd0\r\x87\xbf\x00\x00\x00\xc0/\xd0\x8e\xbf\x00\x00\x00\xe0\x15\xb2\x82\xbf\x00\x00\x00\x80\xe2\xdcc\xbf\x00\x00\x00\xc0H\xf6\x8e\xbf\x00\x00\x00\xa0\xd0\x14z\xbf\x00\x00\x00\xe0\x8d\xec\x92\xbf\x00\x00\x00 \xf9\x8c\x8f\xbf\x00\x00\x00\x002\xf2r?\x00\x00\x00@"\nj?\x00\x00\x00\x80\xd8\xd8"\xbf\x00\x00\x00`\x12\n1\xbf\x00\x00\x00\xe0CTj\xbf\x00\x00\x00 _\x0f\x80?\x00\x00\x00\x80\xbe\x81{\xbf\x00\x00\x00\xe0\xbc\xdcc?\x00\x00\x00 M0h\xbf\x00\x00\x00@\xca\x89\xf4>\x00\x00\x00@\xdc\x9es?\x00\x00\x00 \xe4Q\x87?\x00\x00\x00\x80FM\x8d\xbf\x00\x00\x00\xc0t\xd9o?\x00\x00\x00\x00\xbc\xf1l\xbf\x00\x00\x00 \xce\x9ar?\x00\x00\x00\xe0\xa6)\x8d\xbf\x00\x00\x00`\xc0=t\xbf\x00\x00\x00`\xb8*\x87?\x00\x00\x00`*\x8aa?\x00\x00\x00\xc0\xc3ZR\xbf\x00\x00\x00 \xe3\xe3a?\x00\x00\x00\x80\xdae|?\x00\x00\x00\xa0\n\x08\x90?\x00\x00\x00\xe0\xf2D{?\x00\x00\x00\xe0\x01;u\xbf\x00\x00\x00 *\xe2\x85?\x00\x00\x00\x00\xc2\xe9e?\x00\x00\x00\x00z\xc5\x81?\x00\x00\x00 \\\xddx\xbf\x00\x00\x00\xa0\xdb{~?\x00\x00\x00`\x0eM\x8a\xbf\x00\x00\x00\x80\xfd\x8d\x91?\x00\x00\x00`\xa3rK?\x00\x00\x00@\xc7\xc2\x89\xbf\x00\x00\x00@\x1b\x17w\xbf\x00\x00\x00@\x99\r}?\x00\x00\x00\xa0\xe2\xf7\x88?\x00\x00\x00 \xeco\x88?\x00\x00\x00 nnc\xbf\x00\x00\x00 \x8e\x9fl?\x00\x00\x00\xc0\xfdr{?\x00\x00\x00`U\xc3\x91?\x00\x00\x00\xa0}\x03w\xbf\x00\x00\x00\xa0\xad\x12\x8c?\x00\x00\x00 \xd7\xfcu\xbf\x00\x00\x00 \xa3|s?\x00\x00\x00\xe0\xcfw{\xbf\x00\x00\x00\xc0\xda&~\xbf\x00\x00\x00\xe0t\x94q\xbf\x00\x00\x00\xc0WHr?\x00\x00\x00@mF\x91?\x00\x00\x00@\xf1\xd4U?\x00\x00\x00\x00E\x10\x83\xbf\x00\x00\x00\x80\xf8\xd9\x87\xbf\x00\x00\x00\x80l[\x9d?\x00\x00\x00`\xa13\x83?\x00\x00\x00\xc0\xd8\x8b\x88?\x00\x00\x00\xe0\xec\xdbd\xbf\x00\x00\x00 Q4\x88?\x00\x00\x00\xc0yjz\xbf\x00\x00\x00\x80\xc2!j\xbf\x00\x00\x00\xa0u\xb0\x8c?\x00\x00\x00\x80\x96TX?\x00\x00\x00\xa0A\x91\x93?\x00\x00\x00 M\xb7y?\x00\x00\x00\x00\x92\xcer\xbf\x00\x00\x00\xa0?\xa8x\xbf\x00\x00\x00`r5\x8f\xbf\x00\x00\x00\xe0\r\x03\x8f\xbf\x00\x00\x00\xa0\xad%\x91\xbf\x00\x00\x00\xe0s7\x84\xbf\x00\x00\x00\xe0\xb3\xa9\x85\xbf\x00\x00\x00 (Cy?\x00\x00\x00\xc0l?\x11\xbf\x00\x00\x00 \xf0\x8bF?\x00\x00\x00\xc0\xfe\xe7|\xbf\x00\x00\x00\x801\x96\x87\xbf\x00\x00\x00\xa0\x8b\x0f\x80\xbf\x00\x00\x00\xa0\xca\xd1\x8d\xbf\x00\x00\x00`\x1eP\x83\xbf\x00\x00\x00@E\x17e\xbf\x00\x00\x00\x80\xa0\x18\x91\xbf\x00\x00\x00\x00\xd2C\x88?\x00\x00\x00\xe0\\\xa5v\xbf\x00\x00\x00\xc0\xa0\xc6|?\x00\x00\x00 \x94Lv\xbf\x00\x00\x00\x80F\x86\x95\xbf\x00\x00\x00\xc0\xf3\xcaz\xbf\x00\x00\x00 {{\x83\xbf\x00\x00\x00`,]\x8e?\x00\x00\x00`\xf2\x96z\xbf\x00\x00\x00`\xee\xd8v\xbf\x00\x00\x00\xc0\xf8\x1c\x87?\x00\x00\x00@\x1c\xd7\x81?\x00\x00\x00\x80\x11\xc1\x87\xbf\x00\x00\x00\x00\xf0\x17U\xbf\x00\x00\x00@\x00\x90w\xbf\x00\x00\x00\x00\x01\xab\x81?\x00\x00\x00@\x8ax\x81?\x00\x00\x00 \xd0DS?\x00\x00\x00@k\x94\x89?\x00\x00\x00 X0S?\x00\x00\x00 \xb1\xc1k?\x00\x00\x00 \xf3Hp\xbf\x00\x00\x00 [c\x88\xbf\x00\x00\x00`\xd2;\x88\xbf\x00\x00\x00\xe02\xd6\x8c\xbf\x00\x00\x00@{g\x8c?\x00\x00\x00\xa0a\x01y?\x00\x00\x00\xc0J!Y\xbf\x00\x00\x00\x80\x10`|\xbf\x00\x00\x00@V\n\x8d\xbf\x00\x00\x00`\xbdt^?\x00\x00\x00@\xc6\x08\x89?\x00\x00\x00\x80\xfe.z?\x00\x00\x00\xe0sx\x88\xbf\x00\x00\x00\xe0\xf4J\x88?\x00\x00\x00\x80*&\x96?\x00\x00\x00\xe0*Sg\xbf\x00\x00\x00\xa0\xc8\xccn?\x00\x00\x00\x80\xb3hq\xbf\x00\x00\x00\x00W\x05\x88?\x00\x00\x00\xa0\x92\x11\x95?\x00\x00\x00\xa0cf\x90\xbf\x00\x00\x00\xc0\xacMy\xbf\x00\x00\x00\x00\t\x005?\x00\x00\x00\xe0\x02\xd5\x8c\xbf\x00\x00\x00 \x97\xb5\x8e?\x00\x00\x00\xa0\x14k\x81?\x00\x00\x00\x80\xf24\x90\xbf\x00\x00\x00@\xbecb\xbf\x00\x00\x00`\xd5\xf2\x8d?\x00\x00\x00\x80\x85\xed@\xbf\x00\x00\x00\xe0\r\x9fc?\x00\x00\x00\x80\xf6fj?\x00\x00\x00\xc0\xb52\x91?\x00\x00\x00\xa0\xabrG?\x00\x00\x00\x80x\x84\x90\xbf\x00\x00\x00\x00{\xf2\x96?\x00\x00\x00\xc0\x19FM\xbf\x00\x00\x00\x805\x85j\xbf\x00\x00\x00\x80ej\x8c?\x00\x00\x00`W,\x90\xbf\x00\x00\x00\x80\x0e\xd5\x92?\x00\x00\x00 Rc\x87?\x00\x00\x00\xe0\xa2:k\xbf\x00\x00\x00 \x8d\xd9\x95?\x00\x00\x00`\xc7\x14o?\x00\x00\x00\xc0O\xa9\x86?\x00\x00\x00\xe0WNq\xbf\x00\x00\x00 S\xdcx\xbf\x00\x00\x00`_\x89J?\x00\x00\x00\xc0\xa8\xfbQ\xbf\x00\x00\x00\x80\xca\xd7\x83\xbf\x00\x00\x00\xe0jx\x8d?\x00\x00\x00\x80\x96\xe8\x91?\x00\x00\x00\x00\x15|\x95?\x00\x00\x00 \x0c:;?\x00\x00\x00\x00S\xda\x80?\x00\x00\x00\xc0\x0b<\x8c?\x00\x00\x00\xe0\x1aNi\xbf\x00\x00\x00@\xa4\xb1U\xbf\x00\x00\x00\xa0\x85n\x91?\x00\x00\x00\xe0gV\x83\xbf\x00\x00\x00\xa0\xb7\xa6\x98?\x00\x00\x00\x00\x06%f\xbf\x00\x00\x00\xc0t"\x90\xbf\x00\x00\x00\xe0X\xd7\x93\xbf\x00\x00\x00\x806K\x8c\xbf\x00\x00\x00`\x83\xdd\x95?\x00\x00\x00\x80\xdfgk\xbf\x00\x00\x00\x00)\xf0\x87?\x00\x00\x00\x80\x891\\\xbf\x00\x00\x00 \xfe._\xbf\x00\x00\x00\xa0\xd5.r?\x00\x00\x00`\x8c?}?\x00\x00\x00@1Rz\xbf\x00\x00\x00\x00\x89{W?\x00\x00\x00\xe0\xa2\xf7\x89?\x00\x00\x00\x00\xb1\xec\x80?\x00\x00\x00\xe0\x06\x90\x94\xbf\x00\x00\x00\xc0t\x8dd\xbf\x00\x00\x00`\x12X\x8c?\x00\x00\x00\xe0LY\x86?\x00\x00\x00\xa0\xb0b\x84?\x00\x00\x00\x00\x08G\x89?\x00\x00\x00 *\xa6b\xbf\x00\x00\x00``\x80\x83\xbf\x00\x00\x00`\xef\xf5Z\xbf\x00\x00\x00@d5\x86?\x00\x00\x00\x80F\x93\x16\xbf\x00\x00\x00\xc0`\xe9n\xbf\x00\x00\x00\xc0\xae\xb6\x8f\xbf\x00\x00\x00\xa0\xe9\x80\x7f?\x00\x00\x00@\x81\x13u\xbf\x00\x00\x00\x80\xe1\x7f\x92?\x00\x00\x00\x00\xbe\x89\x85\xbf\x00\x00\x00 \xd6\x96\x93?\x00\x00\x00\xe0u\xd7~\xbf\x00\x00\x00\xe0\xb8\xd7\x8d\xbf\x00\x00\x00\xe0\xf8\xac\x82\xbf\x00\x00\x00`\x00\x93y?\x00\x00\x00\x00S\x13\x8d?\x00\x00\x00\x80\xbf\x0c~\xbf\x00\x00\x00\x80k[\x8d\xbf\x00\x00\x00@\x0e\x1cn?\x00\x00\x00\xe0X\x14}?\x00\x00\x00\x00\xa9\\\x85\xbf\x00\x00\x00`\x90R\x80?\x00\x00\x00\xc0J\x86Z?\x00\x00\x00 A\x12a\xbf\x00\x00\x00\x00Q\x9bw?\x00\x00\x00`\x1fa\x85?\x00\x00\x00\xe0\x97\xe3\x86?\x00\x00\x00\xc0\x97c\x82?\x00\x00\x00\xa0\xf6\xe5\x85?\x00\x00\x00\xa01\x87x\xbf\x00\x00\x00\xa0c\x9c\x95?\x00\x00\x00 \xdf:\x84\xbf\x00\x00\x00 i>s?\x00\x00\x00\x80\x0b\x8az\xbf\x00\x00\x00\x80c8y\xbf\x00\x00\x00\xa0\xc5\x0c\x90\xbf\x00\x00\x00 E\x00y\xbf\x00\x00\x00\x00\x9f1\x84?\x00\x00\x00@&d|?\x00\x00\x00\x00\x839x?\x00\x00\x00@1\xa5\x8b?\x00\x00\x00@v"\x90?\x00\x00\x00\xa0\xfd"a\xbf\x00\x00\x00\xc0\xad\xaf{?\x00\x00\x00\xe0\x92\x08\x8e\xbf\x00\x00\x00 \xde)r\xbf\x00\x00\x00\xa0\x89\x0b\x8a?\x00\x00\x00\x80Qce?\x00\x00\x00 \xeeE\x84\xbf\x00\x00\x00\x809;J?\x00\x00\x00@4A\x83\xbf\x00\x00\x00\xe0[\x1bp?\x00\x00\x00@\xd5i^\xbf\x00\x00\x00\xe0VB{?\x00\x00\x00@CV\x83?\x00\x00\x00\x00\x1e@r?\x00\x00\x00 w\xe0w?\x00\x00\x00\xa0 ?f?\x00\x00\x00\xc0\xbb\x8b\x8c?\x00\x00\x00`\xbd.\x81\xbf\x00\x00\x00\xe08/\x84\xbf\x00\x00\x00\xe0a\x8bi\xbf\x00\x00\x00@\x14V\x8d\xbf\x00\x00\x00\xe0\x95\xbb\x96?\x00\x00\x00`\x98\xf9\x87\xbf\x00\x00\x00\xe0=\xc3p\xbf\x00\x00\x00`R\xf8\x85?\x00\x00\x00\xa02Xt?\x00\x00\x00`|\x07q\xbf\x00\x00\x00 \xb6\x82\x81?\x00\x00\x00@\xd9\xddo\xbf\x00\x00\x00`\xa3\x81\x83?\x00\x00\x00\xe0\xbfX\x98\xbf\x00\x00\x00\xa0-\xd6\x8d\xbf\x00\x00\x00\xc0a\x02\x85\xbf\x00\x00\x00\x00\xbe\xfa\x8b?\x00\x00\x00`5Ps\xbf\x00\x00\x00\xa0*\x91[\xbf\x00\x00\x00\x00.e\x82\xbf\x00\x00\x00\xe0\x14\xb4\x8a?\x00\x00\x00\xe0\xe9-\x8e\xbf\x00\x00\x00\xe0\x1e_g\xbf\x00\x00\x00\xa0\x9e\xbf\x87\xbf\x00\x00\x00 aU\x85\xbf\x00\x00\x00`s\xd9u?\x00\x00\x00\xc0\x94\xfcf?\x00\x00\x00@\x87-~?\x00\x00\x00\xc0\xc6\xdbe?\x00\x00\x00\x004\x01\x92\xbf\x00\x00\x00\xe0\xa1\x85\x8b\xbf\x00\x00\x00`\xebZ\x8f\xbf\x00\x00\x00 I\xf8X?\x00\x00\x00\xe0\xf9?\x82?\x00\x00\x00\x00\xbf\xfe\x80?\x00\x00\x00\x80\x9e\xd7r\xbf\x00\x00\x00 \x87\xb8\x90?\x00\x00\x00\x80-\x1a\x87\xbf\x00\x00\x00\x00\xb2\x92w\xbf\x00\x00\x00\xa0]m\x8f?\x00\x00\x00\xc0\xf1\x1b\x89?\x00\x00\x00`\xed\x01t?\x00\x00\x00\xc0!\xae\x81\xbf\x00\x00\x00@UrF\xbf\x00\x00\x00`\x8dR{\xbf\x00\x00\x00 \xb3\xfc5?\x00\x00\x00\xc0\x127\x80\xbf\x00\x00\x00\xe0\xcd\xdb\x87?\x00\x00\x00\xe0\x11\x03\x87\xbf\x00\x00\x00\xe0L\xe5c\xbf\x00\x00\x00\xe0uP\x89\xbf\x00\x00\x00\xe0\xb4\x1b\x90\xbf\x00\x00\x00 \xa3@9?\x00\x00\x00\x00\xb2L\x8d?\x00\x00\x00\x80\x17\xadw?\x00\x00\x00\xe0u\xf8N?\x00\x00\x00\x80\x89Os?\x00\x00\x00`rfz\xbf\x00\x00\x00\xa0Y\xbc|\xbf\x00\x00\x00`\xafV\x80?\x00\x00\x00\x00\x8c\xcc\x99\xbf\x00\x00\x00\x00Y\xa8I\xbf\x00\x00\x00 \x87\x88\x80\xbf\x00\x00\x00@I\x0b\xa2?\x00\x00\x00\x80\r\x0ck?\x00\x00\x00\xe0\x99\x8e\x8c?\x00\x00\x00 _y\x87\xbf\x00\x00\x00\x80H\x15\x88\xbf\x00\x00\x00`\xaf\x0f\x8d?\x00\x00\x00\xa0\xc5\xc2r\xbf\x00\x00\x00`\xcf\x17{?\x00\x00\x00 \xb6\x85\x82?\x00\x00\x00 \xf3\xd8\x9e?\x00\x00\x00\xc0\xe3\xab\x88?\x00\x00\x00\xe0wHs?\x00\x00\x00\xc0\xe8K\x7f\xbf\x00\x00\x00\xe0\x06\xee\x89?\x00\x00\x00 \xa6\xf0\x88?\x00\x00\x00\xe0\x8b\xfd\x84\xbf\x00\x00\x00\xc0W\xb6t\xbf\x00\x00\x00 ]\x1ek\xbf\x00\x00\x00`\xd1\x84O?\x00\x00\x00\xc0\x00Lm?\x00\x00\x00\x00\x03lD?\x00\x00\x00\xc0\xb6\\v?\x00\x00\x00@p\x05\x82\xbf\x00\x00\x00\xc0O;s\xbf\x00\x00\x00\xa0|+\x86?\x00\x00\x00 i\x81e\xbf\x00\x00\x00`vN\x84?\x00\x00\x00\xe0\x1d\xbf\x94\xbf\x00\x00\x00\xc0\x1d\xe4o\xbf\x00\x00\x00\x80\x18\xfa\x88\xbf\x00\x00\x00\x00L\x8d\x9c\xbf\x00\x00\x00\xa0\xccij\xbf\x00\x00\x00\xa0\x1c\xc0p\xbf\x00\x00\x00\xc0\xb9\xe7\x91?\x00\x00\x00\xa0Z\xe2t\xbf\x00\x00\x00 7\xd0f?\x00\x00\x00\xc0Tz\x93\xbf\x00\x00\x00`8\x99\x8b?\x00\x00\x00`\xe3\xcd\x84\xbf\x00\x00\x00\xa0l7l\xbf\x00\x00\x00\xc0\x1a`\x81\xbf\x00\x00\x00\xa0eot\xbf\x00\x00\x00\xa0^\xbc\x8a?\x00\x00\x00\x00w\xbb~?\x00\x00\x00\xe0\x16\xa5\x1e?\x00\x00\x00 SZM\xbf\x00\x00\x00`\x82\x99w\xbf\x00\x00\x00\xe0\xe5\x0e\x80\xbf\x00\x00\x00@,\x1dd\xbf\x00\x00\x00@ \xe3\x80\xbf\x00\x00\x00\xc0\xd6Y\x82\xbf\x00\x00\x00\xa0\xbd\x9fr\xbf\x00\x00\x00\xc0?\xd9r\xbf\x00\x00\x00\x00\xac\xaas\xbf\x00\x00\x00\x80d\xe8\x81\xbf\x00\x00\x00 \xab\xc1h\xbf\x00\x00\x00\xc0\x0cex?\x00\x00\x00@@\x96\x88\xbf\x00\x00\x00\xc0\xbc=n\xbf\x00\x00\x00@\xd6\xf8d?\x00\x00\x00`v\x7f\x91\xbf\x00\x00\x00`\xfa\xaf\x7f\xbf\x00\x00\x00@Y\x08p?\x00\x00\x00\xe0\x15\x95\x85?\x00\x00\x00\x80\x87\xfao\xbf\x00\x00\x00\xe02J\x7f?\x00\x00\x00\xa0 \xdc\x91\xbf\x00\x00\x00@_\xabz?\x00\x00\x00\xc0~\xfd\x85?\x00\x00\x00\xe0*\xf9\x9e\xbf\x00\x00\x00 8;N?\x00\x00\x00\xa0k\xa0\x96?\x00\x00\x00\xe0;O\x98?\x00\x00\x00\xc0\xb8\x8dh?\x00\x00\x00\x80\x9anl?\x00\x00\x00\xa0V\xf5w\xbf\x00\x00\x00\xe0*R\x80?\x00\x00\x00`\xc97F?\x00\x00\x00\x80m\xa4y\xbf\x00\x00\x00`\xea\xef\x8a?\x00\x00\x00`\x94\x99s\xbf\x00\x00\x00\x80\xff\xc4Q\xbf\x00\x00\x00 \xfb\x90f\xbf\x00\x00\x00@U\x92X\xbf\x00\x00\x00\xc0\xde^h?\x00\x00\x00`\xa6J[\xbf\x00\x00\x00 \xca\xe0t\xbf\x00\x00\x00\x80\x9b]H?\x00\x00\x00\x80hwJ?\x00\x00\x00@\xe9\xd3\x8b?\x00\x00\x00\x00K\x92\x85\xbf\x00\x00\x00\x80\x87@\x88\xbf\x00\x00\x00\xe0\x90+\x91?\x00\x00\x00 \x04\xd4l\xbf\x00\x00\x00`\xc3~\x8c\xbf\x00\x00\x00\xc0([\x96?\x00\x00\x00\x00\xd4\xa6\x90?\x00\x00\x00\xa0\x19\xa3\x93\xbf\x00\x00\x00`[\x14j?\x00\x00\x00`\x0f\xd0\x80\xbf\x00\x00\x00\x80\x86#3\xbf\x00\x00\x00\xc0\xd3m*?\x00\x00\x00\xe0\x95\xe6\x8a?\x00\x00\x00@\x1f+\x88?\x00\x00\x00\x00\xbd\x10C\xbf\x00\x00\x00\x00\x9c!q\xbf\x00\x00\x00\x00\xb8\xc0E?\x00\x00\x00@\x080\x8a?\x00\x00\x00\xc0\x97l~\xbf\x00\x00\x00\x80(\x9d\x95?\x00\x00\x00\xc0J\xc6X\xbf\x00\x00\x00 \xe6L\x8a\xbf\x00\x00\x00\xe0S\xc8B\xbf\x00\x00\x00\xa0\x15\xb9f?\x00\x00\x00\xa0\xf1\xa5\x7f?\x00\x00\x00\xc0$Ru?\x00\x00\x00\xc0\x83E\x81?\x00\x00\x00\xa0\n*\x80?\x00\x00\x00\x80~\x8b\x81?\x00\x00\x00@]\xfa\x89\xbf\x00\x00\x00\xe0E\x96\x85?\x00\x00\x00\xe0\xdd\xb8w\xbf\x00\x00\x00@\x82/v?\x00\x00\x00\x00\x91\xa8~?\x00\x00\x00`XH\x88\xbf\x00\x00\x00`\x1f\xba\x8c?\x00\x00\x00@%&\x8d\xbf\x00\x00\x00\xa0\xc7\xc0\x85?\x00\x00\x00\x00\x07M\x81?\x00\x00\x00\x80\xe0\xc3~?\x00\x00\x00\xe0o\xdd\x8e?\x00\x00\x00\x00\x04\x9ds\xbf\x00\x00\x00\x00\x96\xc9\\\xbf\x00\x00\x00@\x0b\xf1t\xbf\x00\x00\x00 \xf9^\x89\xbf\x00\x00\x00\xe0\x0b;p?\x00\x00\x00 {YM\xbf\x00\x00\x00`\x80\xdf=\xbf\x00\x00\x00@\x0bdx\xbf\x00\x00\x00\xa0\x9c\x85o\xbf\x00\x00\x00@\x07\xdb\x80?\x00\x00\x00`:g\x93\xbf\x00\x00\x00 N%\x7f\xbf\x00\x00\x00\xe0f\xcbt?\x00\x00\x00`\xe7\x99Z?\x00\x00\x00\xc0I\x1ah?\x00\x00\x00\xa0\xe8\x9eq\xbf\x00\x00\x00\x00\xc1\x91\x83\xbf\x00\x00\x00\xc0\xb1Bp?\x00\x00\x00\x00\xbd\x99\x89\xbf\x00\x00\x00 e\xf9\x82?\x00\x00\x00\xa0\x04\xacL\xbf\x00\x00\x00\x80\x9e\x88d?\x00\x00\x00@C\xe6U\xbf\x00\x00\x00\xc0\x94\x15K\xbf\x00\x00\x00 \x08sx\xbf\x00\x00\x00 y\xac\x82\xbf\x00\x00\x00\xa0\x0c\xefs?\x00\x00\x00\xe0\xedz\x93\xbf\x00\x00\x00 l\x05f?\x00\x00\x00`\xcd\xccW?\x00\x00\x00\xe0v07?\x00\x00\x00 \xcb{z?\x00\x00\x00\xc0h\x8aY?\x00\x00\x00\xc0/\xdf\x88\xbf\x00\x00\x00\xc0\xb9e\x88\xbf\x00\x00\x00\x80\xc4\xc3\x99\xbf\x00\x00\x00\xa01\xc3\x89\xbf\x00\x00\x00\xa0\x1f\x11\x92\xbf\x00\x00\x00\x00x9Q?\x00\x00\x00\xe0\xe9\x1a|\xbf\x00\x00\x00\x80`\xc6_\xbf\x00\x00\x00 b\xdc\x91?\x00\x00\x00`\xb8\x0b^?\x00\x00\x00\xa0\xcd\xdc\\\xbf\x00\x00\x00\xc0f\'\x83?\x00\x00\x00\xc0\x84T\x80?\x00\x00\x00\x80\x10\xc5u\xbf\x00\x00\x00@\xa3[{\xbf\x00\x00\x00\xe0\xfd\x12Y?\x00\x00\x00\x80\x97\xccu?\x00\x00\x00\x00\x1d<j?\x00\x00\x00@p\xebt?\x00\x00\x00\xa0\xc4\xdf\x8a?\x00\x00\x00\xa0\xe8ol?\x00\x00\x00\xc0\xe0\xe0\x86?\x00\x00\x00`FE}?\x00\x00\x00\xc0\x02\x9dy\xbf\x00\x00\x00@_\x93L\xbf\x00\x00\x00@[\xb8s?\x00\x00\x00\xa0\x8b\x13\x91?\x00\x00\x00\xc0f\xa1r?\x00\x00\x00`@-\x8e?\x00\x00\x00\xa0\xd3w\x84\xbf\x00\x00\x00`\x1d3\x8f\xbf\x00\x00\x00`n@\x81?\x00\x00\x00@T\xbd\\\xbf\x00\x00\x00@9`{?\x00\x00\x00\xc0K\xa8Q?\x00\x00\x00@G\xe8x\xbf\x00\x00\x00\xe0\x1dX\x94\xbf\x00\x00\x00\x00\xdb\xe6u\xbf\x00\x00\x00\x00\x8d$\x86?\x00\x00\x00\xe0\x9c&p?\x00\x00\x00 )7l\xbf\x00\x00\x00\x80\xf6\xd2\xf7>\x00\x00\x00\xe0H\xca\x87?\x00\x00\x00\x80:`_\xbf\x00\x00\x00`\xfd\xefo\xbf\x00\x00\x00\x80\xc5\xe8z?\x00\x00\x00\xa0\x83\x88k?\x00\x00\x00\x00)\x97\x86\xbf\x00\x00\x00\xc0\x9e\x89\x89\xbf\x00\x00\x00`\x7f\xa4`\xbf\x00\x00\x00\xe0\x97\xd1\x85\xbf\x00\x00\x00 \x97_\x80?\x00\x00\x00\xa0\x1b\xb0\xe7\xbe\x00\x00\x00\xa0\xd1Xq\xbf\x00\x00\x00@\x17\x19o\xbf\x00\x00\x00\xe0IL\x88\xbf\x00\x00\x00\xe0:\x0b\x8e?\x00\x00\x00\xc0-<\x18?\x00\x00\x00\x80F\x94z\xbf\x00\x00\x00`R\x8b\x8c\xbf\x00\x00\x00\xc0H\xa7\x83?\x00\x00\x00\xa0\xc8\xd1p?\x00\x00\x00\x80\x8d\x05d\xbf\x00\x00\x00`\x9bi|\xbf\x00\x00\x00\xc0\x98C\x81?\x00\x00\x00@q\xdf:?\x00\x00\x00 \x13*u\xbf\x00\x00\x00\xe0z\xc0\x83?\x00\x00\x00\x80\x93Bs\xbf\x00\x00\x00\xc0\x1a8v\xbf\x00\x00\x00\xc0}\x9a\x86?\x00\x00\x00\x00\xea\x1c\\\xbf\x00\x00\x00\xc0\x93\x14\x7f?\x00\x00\x00\x80\xa3\xf1q?\x00\x00\x00\xe0\xb9Qh\xbf\x00\x00\x00\x80\x98\\q?\x00\x00\x00 \xce\x89\x81?\x00\x00\x00@WlT?\x00\x00\x00\x00\xabx\x91?\x00\x00\x00\xa0P\x8fk\xbf\x00\x00\x00\xc0\x15\x12{?\x00\x00\x00\xe0\xa6Gv?\x00\x00\x00`J\xc8|\xbf\x00\x00\x00\xc0{oU\xbf\x00\x00\x00 w?u?\x00\x00\x00@\x84p(?\x00\x00\x00\xc0F\r\x87?\x00\x00\x00\xc0q\xab\xfd\xbe\x00\x00\x00\xa0\xf4p0?\x00\x00\x00\xc0\xb9\xdbi\xbf\x00\x00\x00\x80\xae\x0cs?\x00\x00\x00@\xe8\xca\x8e?\x00\x00\x00\x80J\xf2{?\x00\x00\x00\xe0\x8f_y\xbf\x00\x00\x00\xe0\x0b\xbb\x93\xbf\x00\x00\x00\x80P\xad;\xbf\x00\x00\x00@.y{\xbf\x00\x00\x00\xc0\xb8\x0f]?\x00\x00\x00 \xd4\xc5r?\x00\x00\x00\x00\xd1\x0ep?\x00\x00\x00\x80\x0e\xf1\x86?\x00\x00\x00\x00\xc9\x8cQ?\x00\x00\x00`\xc7+v\xbf\x00\x00\x00\xc028\x8f?\x00\x00\x00\x80\x9e\xf9e\xbf\x00\x00\x00\xc0\xc6z\x93\xbf\x00\x00\x00 \xe1\x8ep?\x00\x00\x00\xc0C\xc3\x8b\xbf\x00\x00\x00 \xc8XQ\xbf\x00\x00\x00@h\x83R?\x00\x00\x00`\xf8yz\xbf\x00\x00\x00 \xa6p^?\x00\x00\x00\x80~\xc4\x81\xbf\x00\x00\x00`,\x99<?\x00\x00\x00 \x00\xe5\x87?\x00\x00\x00@\r\xf7o\xbf\x00\x00\x00 [Jw?\x00\x00\x00@\xf9\r\x8d?\x00\x00\x00\x80\xb5/t\xbf\x00\x00\x00\xe0\x95\x1c\x90?\x00\x00\x00\xa0\xbd%S\xbf\x00\x00\x00\xa08>m?\x00\x00\x00@\x97\xd1\x89?\x00\x00\x00\xe0Z\x01}?\x00\x00\x00\xe0\xf2`a?\x00\x00\x00`p\x83\x87?\x00\x00\x00\x00\xe9GQ?\x00\x00\x00\xc0U#\x86\xbf\x00\x00\x00\x80\x19\xa4t?\x00\x00\x00\x00\x8cLj\xbf\x00\x00\x00 qf\x93?\x00\x00\x00\xc0\xb2\xcce\xbf\x00\x00\x00` \xa5\x82?\x00\x00\x00\x80\xef\xf8?\xbf\x00\x00\x00`\xc0\xee\x95\xbf\x00\x00\x00`C\xb3\x85\xbf\x00\x00\x00`\x92\x08[\xbf\x00\x00\x00\x80j\xac\x86\xbf\x00\x00\x00@\\\xcb{\xbf\x00\x00\x00`\xf4\xe7s\xbf\x00\x00\x00`\x7f\xdf`\xbf\x00\x00\x00\xc0\x18\x80\x80?\x00\x00\x00\xe0I\xc2\\\xbf\x00\x00\x00 \xdd\xf6\x8b\xbf\x00\x00\x00\x00T\x06m\xbf\x00\x00\x00 \xdf\xe5\x91\xbf\x00\x00\x00\x80\xa3\xb0{?\x00\x00\x00`\xb5\xcd\x8b\xbf\x00\x00\x00 \x9a\x87a?\x00\x00\x00\x80\']t?\x00\x00\x00 \xa8\x96\x82\xbf\x00\x00\x00@\xc8\xc4\x98\xbf\x00\x00\x00\xe0\xb7\xa6y\xbf\x00\x00\x00\xa0B\xe6`\xbf\x00\x00\x00`-P]\xbf\x00\x00\x00\xc0%Mc?\x00\x00\x00`t\x97N\xbf\x00\x00\x00@\xd0+\x86?\x00\x00\x00\xa0\xde\xad\x8f?\x00\x00\x00\xa0\xed&\x90\xbf\x00\x00\x00\xc0/\xf2p\xbf\x00\x00\x00\xe0=Sx\xbf\x00\x00\x00 \x9fB\x91\xbf\x00\x00\x00\xa0N\x86w?\x00\x00\x00@\x8a\xc0\x88\xbf\x00\x00\x00 0\x17p\xbf\x00\x00\x00\xc0\x9a\xe3d\xbf\x00\x00\x00\xe0\x93\xc9z\xbf\x00\x00\x00\x80EY>\xbf\x00\x00\x00\x00w\x1dj\xbf\x00\x00\x00\xe0\xdfF\x87\xbf\x00\x00\x00\xa0\x17\x8ay?\x00\x00\x00\xa0\xa7:}?\x00\x00\x00\xc0D+\x87\xbf\x00\x00\x00 \xeb\xe4\x80\xbf\x00\x00\x00\xe0\nbw?\x00\x00\x00 \xb7fY\xbf\x00\x00\x00 &Ap\xbf\x00\x00\x00\x00\xa0\xc7`\xbf\x00\x00\x00`\x01r^?\x00\x00\x00\xc0\x9e&\x18?\x00\x00\x00\x80\xac\x93[?\x00\x00\x00@\x95_\x82\xbf\x00\x00\x00\x00\xda\xd9g\xbf\x00\x00\x00\x00\xa2x\x94?\x00\x00\x00\x002[\x8e?\x00\x00\x00\xe0\xc1\x93\x92\xbf\x00\x00\x00`~\x8d\x8c?\x00\x00\x00\xa0\x00\xa7r\xbf\x00\x00\x00\xa0(\xe7\x83?\x00\x00\x00 \xbe\xcb|\xbf\x00\x00\x00\xe0\n\xdaf?\x00\x00\x00 uxq?\x00\x00\x00\x00\xf3%r\xbf\x00\x00\x00@H\xc54?\x00\x00\x00\x00\x01U>\xbf\x00\x00\x00\x00\xf9\xa0\x82?\x00\x00\x00\x80\xbd[p\xbf\x00\x00\x00\x80\xd3\xdf\x88\xbf\x00\x00\x00\x00\x9f\x9c\x8a\xbf\x00\x00\x00\x80\xa1\xa98?\x00\x00\x00\xc0\xf15J\xbf\x00\x00\x00 \x08\xce\x83\xbf\x00\x00\x00`<(\x99?\x00\x00\x00\xa0\xdf\x9cr\xbf\x00\x00\x00@h2\x82\xbf\x00\x00\x00\xc0\xca\xeef?\x00\x00\x00\x00\'\xf0j?\x00\x00\x00 Gs\x08\xbf\x00\x00\x00\x004\'\x86?\x00\x00\x00\x00\xd2\xe3w\xbf\x00\x00\x00\xa0\x1a\xcdB?\x00\x00\x00\xc0\\\xe7\x83?\x00\x00\x00`\xae\xc9\x8a\xbf\x00\x00\x00\xc0\x19A\x82?\x00\x00\x00 ea^\xbf\x00\x00\x00 FJ0?\x00\x00\x00@IV\x19?\x00\x00\x00\xc0;`f?\x00\x00\x00 |\x99\x7f?\x00\x00\x00\x80\x9d\xf1x?\x00\x00\x00 \\\t\x89\xbf\x00\x00\x00@\x1e4e\xbf\x00\x00\x00\x80\x1e;\x80\xbf\x00\x00\x00\x00S\xa3\x87?\x00\x00\x00@h\xb3~\xbf\x00\x00\x00 \x18P|?\x00\x00\x00\xc0*\xdfd?\x00\x00\x00 \xf7cx?\x00\x00\x00 KR\x82?\x00\x00\x00@\xb7\x8fw?\x00\x00\x00@\xd7\x8b\x82\xbf\x00\x00\x00 \xb9\n{?\x00\x00\x00\xa0u\xf5F?\x00\x00\x00\xa0\xd0BC\xbf\x00\x00\x00\xc0\xe9$g\xbf\x00\x00\x00\x80s\x01x?\x00\x00\x00`\xb2\x8b\x93?\x00\x00\x00`\x9b\xdb\x80?\x00\x00\x00\xc0\xa6\xaeV\xbf\x00\x00\x00`fM\x99\xbf\x00\x00\x00\xa0\x94\xce\x83\xbf\x00\x00\x00\x008\x85y?\x00\x00\x00@\x16<T?\x00\x00\x00`\x87\x8c\x89\xbf\x00\x00\x00\xe0JR\x83\xbf\x00\x00\x00@8up?\x00\x00\x00\x80Xv\x89?\x00\x00\x00@\xc1\x16\x8a\xbf\x00\x00\x00\xa0\x17\xf7\x85?\x00\x00\x00\x80\x84\xf0w\xbf\x00\x00\x00\xe0\xccm\x80?\x00\x00\x00\x80\xc4E\x80\xbf\x00\x00\x00 \xce\x98\x91?\x00\x00\x00\x00\x12\x9b\x8f?\x00\x00\x00\xc0mgn\xbf\x00\x00\x00\xa0w\x1bj\xbf\x00\x00\x00`\xff\x04\x8d?\x00\x00\x00\xe0\x80\xed\x81?\x00\x00\x00\xe0C\xe3y?\x00\x00\x00\x00\xbf<T\xbf\x00\x00\x00\x80\x8d\x04\x8b?\x00\x00\x00 \xb2\xaey?\x00\x00\x00@\xa9|\x8c\xbf\x00\x00\x00\xc0!\x81\x8e?\x00\x00\x00\x80\x17\x8e\x90?\x00\x00\x00\x80Ky\x85?\x00\x00\x00 \xe7*}?\x00\x00\x00\x00\xf0>r\xbf\x00\x00\x00\xe0s\xb0\x83\xbf\x00\x00\x00\xc0\xb9Tq?\x00\x00\x00\x80v\x8e{?\x00\x00\x00 3\xbfU\xbf\x00\x00\x00@\xdf\x1a\x8a?\x00\x00\x00\xe0\x05k`\xbf\x00\x00\x00\xe03\x97o?\x00\x00\x00\x80\xc3TV\xbf\x00\x00\x00\x80\x9c<|?\x00\x00\x00\xe0\xf2\xa4\x87?\x00\x00\x00\xe0&\x9f\x89?\x00\x00\x00@\x8e\x1d{?\x00\x00\x00 \xe8\x01v?\x00\x00\x00`\xdb\xbem?\x00\x00\x00\x80\xbb[p\xbf\x00\x00\x00`\x0bx\x84?\x00\x00\x00`\xe7\xe6d?\x00\x00\x00\x80\xdd\xe9w?\x00\x00\x00\x00\xf0\n_?\x00\x00\x00\xc0\xac\x15\x85?\x00\x00\x00\xc0P\rw?\x00\x00\x00\xe0[\xfdT?\x00\x00\x00@\xb2Wu\xbf\x00\x00\x00\xa0\x07]^?\x00\x00\x00\xa0\xcac\x8a\xbf\x00\x00\x00 (\xb1\x88?\x00\x00\x00 \x83\xdcx\xbf\x00\x00\x00\xc0\xb2\xa1\x96?\x00\x00\x00\xe0\xa3\x15\x8e\xbf\x00\x00\x00 \x8b\xfe\x80?\x00\x00\x00`V[\x95?\x00\x00\x00\xc0\xa9v\x8a\xbf\x00\x00\x00 \xb2\x1d\x7f?\x00\x00\x00\xa0\xe0\x9d\x86\xbf\x00\x00\x00\xc01\n\x8e?\x00\x00\x00\x00\x0f\x1a\x8a\xbf\x00\x00\x00@f\xeeT?\x00\x00\x00\xc0fF\x91?\x00\x00\x00\xc0|\xfc\x86?\x00\x00\x00\x00\xc9\xa9\x87?\x00\x00\x00 \xc1\x88\x8c\xbf\x00\x00\x00\xc0\xe6xv\xbf\x00\x00\x00\x00=\xef\x8b\xbf\x00\x00\x00\xa0#\xc2m?\x00\x00\x00@\xe8\xc9s?\x00\x00\x00\xe0u\x02\x91?\x00\x00\x00`o\xbeS\xbf\x00\x00\x00@\xad\xf4u\xbf\x00\x00\x00\xc0GHf?\x00\x00\x00\xe00\x19\x80?\x00\x00\x00 \xbd\xa3\x96?\x00\x00\x00\xe0\x1d\xe9\x97?\x00\x00\x00`m"\x84\xbf\x00\x00\x00\x00=H`\xbf\x00\x00\x00`\x06;\x8a?\x00\x00\x00\x80l\x85\x81\xbf\x00\x00\x00\xe0\x19\xf0~\xbf\x00\x00\x00\xe0\x89\x0f\x93\xbf\x00\x00\x00 Q\xe3h?\x00\x00\x00\x00\xben\x8e\xbf\x00\x00\x00\xa0\xbc+\x8f?\x00\x00\x00\xe0\xe2\x1ez\xbf\x00\x00\x00\xe0\xe1PT?\x00\x00\x00\xc0\x82\t\x8a\xbf\x00\x00\x00@(:\x7f?\x00\x00\x00\xe0xj\x92\xbf\x00\x00\x00\x80\xe3\xcc}\xbf\x00\x00\x00\xa0T\x08i\xbf\x00\x00\x00`\xe4\x00\x7f?\x00\x00\x00 ,k\x15\xbf\x00\x00\x00@\xa8\x10\x84\xbf\x00\x00\x00 \xf6\xbbz\xbf\x00\x00\x00\xa0 \x91\x88?\x00\x00\x00\x80\xde\xb8L\xbf\x00\x00\x00\xe0Y\xd2\x85?\x00\x00\x00 \t\x08\x87\xbf\x00\x00\x00`\x15\xfe\x91\xbf\x00\x00\x00\xc0&W\x81?\x00\x00\x00\x00\xc4\xebr?\x00\x00\x00\x80\x97\xc4\x94?\x00\x00\x00\xe0\x14\xd4N\xbf\x00\x00\x00\x806\xceq\xbf\x00\x00\x00@\x83|[\xbf\x00\x00\x00\xc0\xe6\x10.\xbf\x00\x00\x00\xa0\x04{\x8f?\x00\x00\x00\xa0\xa5D\x86?\x00\x00\x00\xe0\x03\xe0>\xbf\x00\x00\x00\xa0-\xfba?\x00\x00\x00 (\xc8\x91?\x00\x00\x00\x00\xdb\xadu\xbf\x00\x00\x00\x00\x82hy\xbf\x00\x00\x00\xe0\xa5\xcc{?\x00\x00\x00\x80\xe5\xe1\x80\xbf\x00\x00\x00\xa0])=?\x00\x00\x00\xa0!\x91v\xbf\x00\x00\x00`F\xdf\x85?\x00\x00\x00\xa0<\xd3\x80?\x00\x00\x00`\x97\x8dZ?\x00\x00\x00 s\xcc\x82\xbf\x00\x00\x00\xa0\xa8o]?\x00\x00\x00@\x05\xbb\x95?\x00\x00\x00@&\xcc\x84?\x00\x00\x00 \x1c{j?\x00\x00\x00\xa0:)\x8f?\x00\x00\x00\x00\xc1[\x92?\x00\x00\x00\x00K\xac\x88?\x00\x00\x00\xe0\x0eIi\xbf\x00\x00\x00\xe0\xa7en?\x00\x00\x00\xa0%\x03Q\xbf\x00\x00\x00\x80\xf1\x11x?\x00\x00\x00 I\xe4A?\x00\x00\x00@\xc6\'\x81?\x00\x00\x00@c\xf3\x83\xbf\x00\x00\x00 \x8e?z\xbf\x00\x00\x00@\xe3KX?\x00\x00\x00\x80\x07k\x9d?\x00\x00\x00@\x11\xe7g?\x00\x00\x00@\x91{\x85?\x00\x00\x00\xa0%\xdcr?\x00\x00\x00 S\xddz\xbf\x00\x00\x00\xa0\xdb@?\xbf\x00\x00\x00\xa0\xce\x19u?\x00\x00\x00@\xf7\x95z?\x00\x00\x00\xc0\xa2\xda\x85\xbf\x00\x00\x00@YOu?\x00\x00\x00`\x176m\xbf\x00\x00\x00\x80\xf6\x0ev?\x00\x00\x00@\x1b\x0cb\xbf\x00\x00\x00\x00\x9fo\x8e?\x00\x00\x00 \xdb\xd5n\xbf\x00\x00\x00 L\x1c\x93?\x00\x00\x00 /\xea\x8c?\x00\x00\x00\xc0\xf2\xf0p\xbf\x00\x00\x00`\xaf\xf7\x82?\x00\x00\x00\x80\xd2\xaa\x8f?\x00\x00\x00\xe0\xaai\x90?\x00\x00\x00\x00\xc7\x05r?\x00\x00\x00\x00\xc7q\x89\xbf\x00\x00\x00@\x9aot\xbf\x00\x00\x00\x809\x1a\x92\xbf\x00\x00\x00\xc0\x89\x98\x84\xbf\x00\x00\x00\xe0\xba\x1c\x81?\x00\x00\x00@\x84\xcf\x88?\x00\x00\x00\x80ids\xbf\x00\x00\x00@\x87\x9bu\xbf\x00\x00\x00\xa0\xee\x9fx\xbf\x00\x00\x00@\x89Y\x8f\xbf\x00\x00\x00\xc0-\x91x?\x00\x00\x00\xc0\'\x8c\x86\xbf\x00\x00\x00@u?T?\x00\x00\x00\xe0\xb6\x99\x86\xbf\x00\x00\x00\x00\x93\x08y\xbf\x00\x00\x00\xc0\x19\xaah\xbf\x00\x00\x00\xe0l\xfd\x84?\x00\x00\x00\xe0\xfc\xd0{?\x00\x00\x00\xe0\xb2\x12q\xbf\x00\x00\x00\xe0\x1ffi\xbf\x00\x00\x00 \x13rx?\x00\x00\x00 \xe9\x9f\x8e?\x00\x00\x00\xc0\xa6\x88[?\x00\x00\x00`\xbe\xf5y\xbf\x00\x00\x00 \xb9\x0cq\xbf\x00\x00\x00\xc0\xb4\x15h\xbf\x00\x00\x00\xc0\xa7\xe5~?\x00\x00\x00@)Pt\xbf\x00\x00\x00\xe0\xbd\x0fR\xbf\x00\x00\x00\xe0\xd5ou?\x00\x00\x00@\xb0\xc9\x7f\xbf\x00\x00\x00\xe0"\x90\x11\xbf\x00\x00\x00@\x82\x85B?\x00\x00\x00 \x15,|\xbf\x00\x00\x00\x80\x9e\xf6h\xbf\x00\x00\x00\xa0\x02-\x90\xbf\x00\x00\x00`I\x12_\xbf\x00\x00\x00@{}V?\x00\x00\x00 \xfe"v?\x00\x00\x00@2pm\xbf\x00\x00\x00 \x935\x8c\xbf\x00\x00\x00`"\x8e%\xbf\x00\x00\x00`\xaa\xb8\x83\xbf\x00\x00\x00\xc0\x80X\x86\xbf\x00\x00\x00`\xcb_n?\x00\x00\x00\x80go\x94\xbf\x00\x00\x00\x80\xab\xb3\x7f\xbf\x00\x00\x00\xa0<\xbc\x96?\x00\x00\x00`\xe4\x1a\x92?\x00\x00\x00\x00V|\x89?\x00\x00\x00\xc0\xa7\xb4\x86\xbf\x00\x00\x00@ii\x8a\xbf\x00\x00\x00@g\xad\x8b\xbf\x00\x00\x00\xc06w\x83?\x00\x00\x00\x80^\xb0h?\x00\x00\x00\x00\x8d\xcfm?\x00\x00\x00@\xe6MQ?\x00\x00\x00\x00\x12\x83p?\x00\x00\x00\x00M_\x91\xbf\x00\x00\x00 \x9d\x83\x83\xbf\x00\x00\x00\xe0%9\x80\xbf\x00\x00\x00 \xbc\xc4g\xbf\x00\x00\x00\x00\xda\x81\x7f?\x00\x00\x00\x80\xe08{\xbf\x00\x00\x00\xc0\xd2p$\xbf\x00\x00\x00\xa0\x99\xb1|\xbf\x00\x00\x00\xa0 m\x80\xbf\x00\x00\x00\xc0\xbd\x9e\x96?\x00\x00\x00\xa0>\xdbh?\x00\x00\x00 o\x8f\x8d\xbf\x00\x00\x00\xc0z\x1e\x8c?\x00\x00\x00@\x1c\x19p?\x00\x00\x00\x00Mj;?\x00\x00\x00`\xaa\xd5\x86\xbf\x00\x00\x00\x80\x00fu\xbf\x00\x00\x00\x00\x98\x12\x93\xbf\x00\x00\x00@\x08\xa7\x88\xbf\x00\x00\x00\x80\x87YM?\x00\x00\x00\x80-\xe0\x80\xbf\x00\x00\x00 \n\xe4\x90?\x00\x00\x00`\xe6\xab\xf8\xbe\x00\x00\x00 \x08Kr?\x00\x00\x00\x00\xba\xa4Y?\x00\x00\x00\xc0y\x10Q?\x00\x00\x00\x00\xbf/\x7f\xbf\x00\x00\x00`\x05\x9a\x8b?\x00\x00\x00 \xb1\x8b\x87\xbf\x00\x00\x00`\xe2\x99\x85\xbf\x00\x00\x00@L\x0cu\xbf\x00\x00\x00\x00\x19U{\xbf\x00\x00\x00\xc0oV\x9a\xbf\x00\x00\x00\x80\x152g?\x00\x00\x00\x00!\x82[?\x00\x00\x00\x80\xd7Dm?\x00\x00\x00\xc0-]s?\x00\x00\x00`h\x04\x84\xbf\x00\x00\x00\x80\x06~\xd1\xbe\x00\x00\x00\x80.\xf8x?\x00\x00\x00`\xe0\r\x80\xbf\x00\x00\x00\xe0n\xd9~\xbf\x00\x00\x00\xe0\xbb\xb7w?\x00\x00\x00\xc0\xfb\xcf{\xbf\x00\x00\x00\xe0\xabe??\x00\x00\x00\x00-e\x82\xbf\x00\x00\x00\xe0\\\xdb\x83\xbf\x00\x00\x00\xa0\xb3\xa8\x8c?\x00\x00\x00 \xf5oq\xbf\x00\x00\x00\xe0\x03\'f\xbf\x00\x00\x00 fcx\xbf\x00\x00\x00\xa0\x06\x87}\xbf\x00\x00\x00 R\xf7\x90?\x00\x00\x00 C_\x85?\x00\x00\x00`W|\x80?\x00\x00\x00\xe0\xcbR\x80?\x00\x00\x00\x00j\x1d\x8a?\x00\x00\x00\x00,\x1e\x8a\xbf\x00\x00\x00@7\xfbj\xbf\x00\x00\x00@~ ~?\x00\x00\x00\xc0(\x85\x88?\x00\x00\x00\xe0\xfb\xa7Z?\x00\x00\x00 \x8d\x00v?\x00\x00\x00\xc0\xe0y\x90?\x00\x00\x00\xc0$\xd0R?\x00\x00\x00\xe0\x15\x12t\xbf\x00\x00\x00`\xc5i\x8a\xbf\x00\x00\x00\xc0e\tx?\x00\x00\x00\xe0N\xec\x81\xbf\x00\x00\x00\x80R+q?\x00\x00\x00@\x81\xf2~\xbf\x00\x00\x00\xe0\xd4\xbbu\xbf\x00\x00\x00\xc0\x82\x1b\x89\xbf\x00\x00\x00@|\xd1\x8a?\x00\x00\x00\xc0\xf9\x80\x89\xbf\x00\x00\x00`r\xf6\x88?\x00\x00\x00\xc0\xde\xbep?\x00\x00\x00\x00\xdc*s?\x00\x00\x00`\xd5\xb1\x89\xbf\x00\x00\x00`\xd4\x82~\xbf\x00\x00\x00@\x8c~f\xbf\x00\x00\x00\x80\x0c|{\xbf\x00\x00\x00`\x05\xabg?\x00\x00\x00@\xb3\xc4\x8c?\x00\x00\x00\xa0\xa7\x08\x84\xbf\x00\x00\x00`\xc9\xfal\xbf\x00\x00\x00\x80\xca5\x8f?\x00\x00\x00`c\xcc\x85?\x00\x00\x00``\x01{?\x00\x00\x00\xc0\xbfk\x83?\x00\x00\x00\x80\xfdK\x84?\x00\x00\x00\xe0\xef.q?\x00\x00\x00\xe0\xdd\x00j\xbf\x00\x00\x00\xc0\\\x15s\xbf\x00\x00\x00\x00p\x8dy?\x00\x00\x00\x00\xfa\x92\x82\xbf\x00\x00\x00\x00X)o?\x00\x00\x00\xa0\xca\x8d\x81?\x00\x00\x00 \xfa\xf7a?\x00\x00\x00\x00\xc7\x92b\xbf\x00\x00\x00\xa0f\x9b\x90?\x00\x00\x00\xc0\x9f\xe6u?\x00\x00\x00\x00\xfa\x9a}\xbf\x00\x00\x00`B\x9f\x86\xbf\x00\x00\x00\xc0\xc3\x04u\xbf\x00\x00\x00`\xa9\xcel?\x00\x00\x00`R\xb9|\xbf\x00\x00\x00\xe0\x14^`?\x00\x00\x00\xa0\xf6!v?\x00\x00\x00\xa0\xa7Cp\xbf\x00\x00\x00\x80\xb3,\x82\xbf\x00\x00\x00@\xb6\x14^?\x00\x00\x00\x80\x9bjd?\x00\x00\x00\xa0\xcd\xb1\x81\xbf\x00\x00\x00\x80^\xbez\xbf\x00\x00\x00\xc0\x15\xa6F?\x00\x00\x00\x80"g\x8d\xbf\x00\x00\x00\xe0\x08Zx?\x00\x00\x00\xa0o\xcb\x8b?\x00\x00\x00 !\xd0q\xbf\x00\x00\x00\xc0\x14M\x96\xbf\x00\x00\x00\xa0h@}?\x00\x00\x00\xc0KC\x81\xbf\x00\x00\x00\xc0\x95\xe0u\xbf\x00\x00\x00`\n&}?\x00\x00\x00\x00\xbf\xc0\x82\xbf\x00\x00\x00\x80/\xf4\x83?\x00\x00\x00\xc0\r\x16@\xbf\x00\x00\x00\x80\xa6Tp?\x00\x00\x00\xe0/\xb6x\xbf\x00\x00\x00\x00\x90\x9c\x86?\x00\x00\x00\x00\x9e\xe2I\xbf\x00\x00\x00@\x04\xb7\x81?\x00\x00\x00\xe0\xeeb\x82?\x00\x00\x00`\xbc\x96u\xbf\x00\x00\x00\x80]s\x90?\x00\x00\x00@"\xb9\x81?\x00\x00\x00@\xd8\xfc\x15?\x00\x00\x00\xe0{\x9b\x80?\x00\x00\x00\xc0\x9ff~?\x00\x00\x00\xc0\x92\xfe\x8f?\x00\x00\x00\xc0\x0b\x07\x93?\x00\x00\x00`\x9c\xdd{\xbf\x00\x00\x00\xe0\xab\xe8\x92\xbf\x00\x00\x00@\xc9\x0b]?\x00\x00\x00`\x03C}?\x00\x00\x00 \xc1f\x87?\x00\x00\x00\x80\x02\x0fw\xbf\x00\x00\x00\x80\xef\xe8\x83?\x00\x00\x00\x80a(w\xbf\x00\x00\x00\xc0i\xab\x87\xbf\x00\x00\x00\xe0N\xa0v?\x00\x00\x00 s\r\x82?\x00\x00\x00\xc0\xa7Z\x85?\x00\x00\x00\x80\x13\x8c\x93?\x00\x00\x00\x00S\t\x8e\xbf\x00\x00\x00@:\x9a}?\x00\x00\x00\x80\xbe\xcdF?\x00\x00\x00\x80:\xd1\x83?\x00\x00\x00\xc0\xeet\x82\xbf\x00\x00\x00\xe0\x9d.b\xbf\x00\x00\x00\xe0\xba\x1c|?\x00\x00\x00 \xe5\xc2x\xbf\x00\x00\x00`\x12\x0eR\xbf\x00\x00\x00\xe0\xe4\xc7\x91?\x00\x00\x00 \xb3V\x87?\x00\x00\x00\x00\xf6Kv\xbf\x00\x00\x00@J\xf7b\xbf\x00\x00\x00\xc0?\xb2\x90?\x00\x00\x00\xc0\xea\x12s\xbf\x00\x00\x00 4"W?\x00\x00\x00\xc0\xcf\x86\x8d\xbf\x00\x00\x00\xe0\xd0\x1c}\xbf\x00\x00\x00@D\x97\x81\xbf\x00\x00\x00\xe0\xcf\x07N\xbf\x00\x00\x00\x00\x08\xffN\xbf\x00\x00\x00\x80^\xc2~\xbf\x00\x00\x00 \xddEs\xbf\x00\x00\x00`\x8f\xcd~\xbf\x00\x00\x00\x80\xd5\xads?\x00\x00\x00\x00R\xd1\x96?\x00\x00\x00\xe0\x08\xc7D?\x00\x00\x00\x80\xf0Z\x8a\xbf\x00\x00\x00`dw\x88?\x00\x00\x00 <\x1e4\xbf\x00\x00\x00\x00}\xae\x89\xbf\x00\x00\x00\x80)\xeb\x92?\x00\x00\x00 df\x85?\x00\x00\x00\xe0\xc9\xb4\x86\xbf\x00\x00\x00 0A\x81?\x00\x00\x00\xc09\xdej?\x00\x00\x00`\xf2 i\xbf\x00\x00\x00@\x8c\xd0\x89?\x00\x00\x00@\x07\x08\x99?\x00\x00\x00@Z`a?\x00\x00\x00\x00\xd8gu?\x00\x00\x00\xc01\xf5\x85?\x00\x00\x00`*\x93S?\x00\x00\x00 \x06!\x83\xbf\x00\x00\x00\xe0\xcb\xb7\x95\xbf\x00\x00\x00\x80}\x0cr?\x00\x00\x00`w2^\xbf\x00\x00\x00\xe0o\xc6>?\x00\x00\x00 \xa1\xe5w?\x00\x00\x00\xe0\xa54U?\x00\x00\x00 \x1c\x1f\x83\xbf\x00\x00\x00\xe0\xd5\xf9\x9b?\x00\x00\x00\xe0\x01\x9f_?\x00\x00\x00@\x0c\xe2z\xbf\x00\x00\x00\x80\xffin\xbf\x00\x00\x00\x00h(a\xbf\x00\x00\x00 \x03\xe7<?\x00\x00\x00@w\x8fw\xbf\x00\x00\x00 _\x9dm\xbf\x00\x00\x00\x80\x0f\xff\x95?\x00\x00\x00\xe0\xa1\xf9\x91\xbf\x00\x00\x00\x80U\x00s\xbf\x00\x00\x00\xc0\xc3uh\xbf\x00\x00\x00\xc0? \x82?\x00\x00\x00\xe0e}\x84?\x00\x00\x00`f\xfd\x9f?\x00\x00\x00 \xf5\xf0\x94?\x00\x00\x00 \xdd\x80W\xbf\x00\x00\x00\xa0\x1a\x9f_?\x00\x00\x00 _S&?\x00\x00\x00\x80Y\x0ec?\x00\x00\x00\xc0[\\\x86\xbf\x00\x00\x00@\xb8Ci?\x00\x00\x00@\xad\'\\\xbf\x00\x00\x00`\t:|\xbf\x00\x00\x00\x00\x14\xfc\x7f?\x00\x00\x00\x80\x15\x99}?\x00\x00\x00\x006\x99\x85?\x00\x00\x00\xa0\x80ep\xbf\x00\x00\x00\xe0Q:\x96\xbf\x00\x00\x00\x00\x02+b?\x00\x00\x00`\xf7\x1b\x94\xbf\x00\x00\x00@)\xed@\xbf\x00\x00\x00\xc0=\xad\x7f?\x00\x00\x00 5u\x97\xbf\x00\x00\x00\xe07\xc9~?\x00\x00\x00@ ~r\xbf\x00\x00\x00\x80>S\x94\xbf\x00\x00\x00\xa0\x9a\xb9\x86?\x00\x00\x00@\x18j\x88\xbf\x00\x00\x00@\xfa\x9a\x86\xbf\x00\x00\x00\xc0\xc3\xbck\xbf\x00\x00\x00\x00\xc1:o\xbf\x00\x00\x00\xa0}\xe9\x85\xbf\x00\x00\x00\xe0\xae\x06\x83?\x00\x00\x00`\xabp\x86?\x00\x00\x00\xc0\x9dt{?\x00\x00\x00\x005F\x87?\x00\x00\x00\xc0\x1aI[\xbf\x00\x00\x00\xe0BBm\xbf\x00\x00\x00 \xfc\xf1\x84?\x00\x00\x00@+\xbah?\x00\x00\x00`\xc1\xf4\x96\xbf\x00\x00\x00\xe0\n\xf0[?\x00\x00\x00\xc0c\nr?\x00\x00\x00\xa0\x00t\x95\xbf\x00\x00\x00\xe0\x12Tq\xbf\x00\x00\x00@I\x8c\x81\xbf\x00\x00\x00`\xa7\xfb\x82\xbf\x00\x00\x00\xc0\x89)\x8b\xbf\x00\x00\x00\xe0\xd99\x82?\x00\x00\x00\x00V\x13P?\x00\x00\x00\xc0=\x83d?\x00\x00\x00`=,T?\x00\x00\x00 \x16\x8cP\xbf\x00\x00\x00\x00\xf8\xf2\x82\xbf\x00\x00\x00`\xdc}_\xbf\x00\x00\x00\xe0\x0f\x9c\x8e?\x00\x00\x00`\x95\x80t?\x00\x00\x00\x80\xe7\xf6\x93\xbf\x00\x00\x00`\x13\x19\x8b?\x00\x00\x00`,\xe7\x88?\x00\x00\x00\xa0\x8c\xe4\x80\xbf\x00\x00\x00@IM\x91?\x00\x00\x00\xa0\xda\x18t\xbf\x00\x00\x00\x00\xf5\xce{?\x00\x00\x00@z\xbf\x87?\x00\x00\x00 \x06b~\xbf\x00\x00\x00 tE\x82\xbf\x00\x00\x00\xa0\x0e\xbe\x81?\x00\x00\x00\x00\x91\xb2D\xbf\x00\x00\x00`\xde\x84r\xbf\x00\x00\x00\x80N\xf0x\xbf\x00\x00\x00\xa0o\x80\x86\xbf\x00\x00\x00\xe0\x9d\xcb\x91?\x00\x00\x00\xc0L\x0cl\xbf\x00\x00\x00`\xcdBV\xbf\x00\x00\x00\xc0@\xbd\x8c?\x00\x00\x00\x00\xfc\xb1\x88\xbf\x00\x00\x00 \xd9\xe8r\xbf\x00\x00\x00\xa0$\xa7\x84?\x00\x00\x00`#\xfe\x83?\x00\x00\x00\x80\xf5S\x7f\xbf\x00\x00\x00\xa0u\xe4x\xbf\x00\x00\x00\xc0\x8a\xe8r\xbf\x00\x00\x00`\n\x12r\xbf\x00\x00\x00\xa0\xb1t\x82?\x00\x00\x00\x80\x81&\x85\xbf\x00\x00\x00\xe0N\xbad?\x00\x00\x00`^zb\xbf\x00\x00\x00\x00\x8f8Q\xbf\x00\x00\x00\xc0:\xa2\x82?\x00\x00\x00\x00a\xe4i\xbf\x00\x00\x00\xa0fP\x8b?\x00\x00\x00\xc0\xc7\x89t?\x00\x00\x00 \x91\xa1\x88\xbf\x00\x00\x00\xe0\x8c\x98^\xbf\x00\x00\x00\x80\xbb55?\x00\x00\x00\x80HC\x91\xbf\x00\x00\x00 \xeb\xf9\x88?\x00\x00\x00\xe0\x04e^?\x00\x00\x00 \xa5\x11\x81?\x00\x00\x00@\r-F\xbf\x00\x00\x00\xe0\x1fX\x8d\xbf\x00\x00\x00\xa0\xee\x18e?\x00\x00\x00@\x9f\x1a~\xbf\x00\x00\x00\x80\\+t?\x00\x00\x00\xc0\xb3\xaa\\?\x00\x00\x00@\xf0\xc1o\xbf\x00\x00\x00\xe0\xbf$\x88?\x00\x00\x00`\xe4\xf1\x96\xbf\x00\x00\x00\xe0\xe2\xf6\x8a\xbf\x00\x00\x00\xc0\xc4\xe8S\xbf\x00\x00\x00\xc0\xf3\xbe\x83\xbf\x00\x00\x00\x00!\xc6o\xbf\x00\x00\x00\xe0#<\x88\xbf\x00\x00\x00`\x8b\xdcs?\x00\x00\x00\xe0\x99\x14\x91?\x00\x00\x00\xa0\x9fj\x96\xbf\x00\x00\x00\x00\x0e\xcb\x8e\xbf\x00\x00\x00\xa0\xab\x10\x91?\x00\x00\x00@\xcb\xdah?\x00\x00\x00\xc0V a?\x00\x00\x00@Cfl?\x00\x00\x00@\x9c\xe2\x10?\x00\x00\x00\xc0\xa9\xe8E?\x00\x00\x00\xa0{F\x8e\xbf\x00\x00\x00\x00\x9a\n\x89\xbf\x00\x00\x00\xc0\xc2\xbb~\xbf\x00\x00\x00\x00\x00\x19\x89?\x00\x00\x00\xc08iJ?\x00\x00\x00\xe0\x1b\xd5n\xbf\x00\x00\x00 \xb6\xd8~?\x00\x00\x00`y\xbd\x7f?\x00\x00\x00\xc0f>Z?\x00\x00\x00`\x0c\xd9t\xbf\x00\x00\x00\x00\xa9\xc2}?\x00\x00\x00@M@\x81?\x00\x00\x00 \xc6\x98\x86\xbf\x00\x00\x00\xa0|7`?\x00\x00\x00 ^\xb4\x95?\x00\x00\x00@B\xa0}?\x00\x00\x00\xe0\n\xc8b?\x00\x00\x00@\xd9}\x89?\x00\x00\x00\x00\xe3[\x7f?\x00\x00\x00`\xdd\xb1I?\x00\x00\x00\xc0\xd0\xbcx?\x00\x00\x00\xc0\xe4W~?\x00\x00\x00\x80\xde\x02A\xbf\x00\x00\x00 \xc8\x85\x93\xbf\x00\x00\x00\x00\xd9\xfb}?\x00\x00\x00\xe0@\x19p\xbf\x00\x00\x00@kM\x8c?\x00\x00\x00@lur\xbf\x00\x00\x00\x80\x18\xf9t?\x00\x00\x00\xc0\xec\xb6p\xbf\x00\x00\x00\xa0\x8e7i\xbf\x00\x00\x00\xa0\xb5\x1a@\xbf\x00\x00\x00\x80\x85\xa6\x90?\x00\x00\x00\x00\x06iR?\x00\x00\x00\xa0\'\x1e\x83?\x00\x00\x00\x80\x82bg\xbf\x00\x00\x00\xa0n\x11o?\x00\x00\x00\xc0\xffL{?\x00\x00\x00\xa0S3\x17?\x00\x00\x00 |U\x96?\x00\x00\x00`\xc3\xd2s?\x00\x00\x00`t\xab;\xbf\x00\x00\x00@\xb2m\x85?\x00\x00\x00@\xa0\x97\x96?\x00\x00\x00\xa0\xdd:N\xbf\x00\x00\x00@\xdd\xbcS\xbf\x00\x00\x00\x80=\xfbW\xbf\x00\x00\x00\xc0X\x89\x96\xbf\x00\x00\x00@\xfd\xdd{?\x00\x00\x00\xe0\xff\xf7\\\xbf\x00\x00\x00\xa0|\xd2}?\x00\x00\x00\xc0%Hz\xbf\x00\x00\x00\xe0\xf5\xbdF?\x00\x00\x00\x00\xe7\x96\x94\xbf\x00\x00\x00@{\xa2z?\x00\x00\x00`\x96sT?\x00\x00\x00\xa0\xc45\x86?\x00\x00\x00\xa0\xa0\xacy\xbf\x00\x00\x00\xe0\xd0jr\xbf\x00\x00\x00@\x00.\x91?\x00\x00\x00 \xf0\xb0\x82?\x00\x00\x00\x80\xd5+`?\x00\x00\x00\x80\x1bdY?\x00\x00\x00\x00\xe8\xc4U?\x00\x00\x00\x80h\xf4\x94?\x00\x00\x00\x80\xfa\xb1\x8e\xbf\x00\x00\x00\x80\xb6d\x96?\x00\x00\x00\x80\xf5!v?\x00\x00\x00\xc0\x86\xb6{\xbf\x00\x00\x00\xa0\x99 \x87?\x00\x00\x00\xe0m\xff\x91?\x00\x00\x00`\x02\xc9\x89\xbf\x00\x00\x00\xc0bi\x94\xbf\x00\x00\x00\x00!\x00\x8c?\x00\x00\x00\xa0E\x15\x88\xbf\x00\x00\x00\xe0c\x14o?\x00\x00\x00\xa0\xbd$\x90\xbf\x00\x00\x00\x80\x93\x9d\x89\xbf\x00\x00\x00\xc0P\x12[?\x00\x00\x00 \xc85k\xbf\x00\x00\x00@b\xb3U\xbf\x00\x00\x00`\xe4@z?\x00\x00\x00\xc0\xdd\x9e\x9c\xbf\x00\x00\x00 \xe3\x80J\xbf\x00\x00\x00\x80\xf9\xf3\x97?\x00\x00\x00\xa0\x88\x97(\xbf\x00\x00\x00\x80v\xfd\x82?\x00\x00\x00\x00b\xa3|\xbf\x00\x00\x00\xe0V]r\xbf\x00\x00\x00\xa0\xe8\xcfb?\x00\x00\x00\x80A\x95\x82?\x00\x00\x00`\xa1\xb4\x8a?\x00\x00\x00 k\xf1\x87?\x00\x00\x00\xa0\x90Z\x84\xbf\x00\x00\x00`\xc0\xfa~\xbf\x00\x00\x00\xa0=\xb1c?\x00\x00\x00@C\xea~\xbf\x00\x00\x00\x80#\xfel?\x00\x00\x00\xc0\xf3\xef\x9a\xbf\x00\x00\x00@=\x91r\xbf\x00\x00\x00\xa0\x1a\x94\x82?\x00\x00\x00\x00n\x80y?\x00\x00\x00`\x1a\xe9o\xbf\x00\x00\x00`\xa83m?\x00\x00\x00\xa0\xe3G\\?\x00\x00\x00\xe0\x87nw?\x00\x00\x00`\xfa\xbbx\xbf\x00\x00\x00 \xa88m?\x00\x00\x00`\x07\x92l\xbf\x00\x00\x00\xe0\xb6\x18\x86\xbf\x00\x00\x00\x00\xee&w?\x00\x00\x00\xe0\x9c@%\xbf\x00\x00\x00 \xd5\x84\x84\xbf\x00\x00\x00@P+f?\x00\x00\x00 aOl?\x00\x00\x00\xa0bS\x96\xbf\x00\x00\x00`\xef)g?\x00\x00\x00\xe0Z\xb1|?\x00\x00\x00 i\xd8h?\x00\x00\x00\xe0[\xb4\x8a\xbf\x00\x00\x00`\x99\xd8\x86?\x00\x00\x00\xe0n\x81=?\x00\x00\x00@r?\x81\xbf\x00\x00\x00`\xe4\xc9\x90?\x00\x00\x00`\x83\xf7\x95?\x00\x00\x00\x00_\x18y\xbf\x00\x00\x00\xa0Wa\\\xbf\x00\x00\x00@\xf0_}\xbf\x00\x00\x00\xe0\xd0;\x8e\xbf\x00\x00\x00 :_M\xbf\x00\x00\x00\xc0w\x8b\x8b\xbf\x00\x00\x00@[\nq?\x00\x00\x00 \x14)n\xbf\x00\x00\x00@\xfeh|\xbf\x00\x00\x00\xe0\xff^\x8a\xbf\x00\x00\x00\xe0\xd0Xy?\x00\x00\x00\x80\x06iB?\x00\x00\x00\xa0r\x1e\x81\xbf\x00\x00\x00@\x83\xda\x81\xbf\x00\x00\x00\x00\xbf\xe0\x81?\x00\x00\x00@1\x11\x82\xbf\x00\x00\x00\xc0]\xbar?\x00\x00\x00`\t^{?\x00\x00\x00\x00A\xb2\x80?\x00\x00\x00@6)r\xbf\x00\x00\x00\xe0\xef\xcbv?\x00\x00\x00\xa0\xfe\x02\x83\xbf\x00\x00\x00\xc0\\\xd4\x90?\x00\x00\x00\xa0\x16\x8fa?\x00\x00\x00\xa0|\xa6`\xbf\x00\x00\x00@\x04Qn?\x00\x00\x00@\xa2\xe8\x9b?\x00\x00\x00\xa0\x18b\x83\xbf\x00\x00\x00\xe0r\xbft?\x00\x00\x00`2\xd1o?\x00\x00\x00\xc0/\xf8z\xbf\x00\x00\x00\x00\x8b\x83\x85\xbf\x00\x00\x00`:Y\x80?\x00\x00\x00\xc0\x86Qj\xbf\x00\x00\x00 .1a?\x00\x00\x00`\xe8\xe1z\xbf\x00\x00\x00`B\xddt\xbf\x00\x00\x00 \x10Qs?\x00\x00\x00\xc0K\xdbq?\x00\x00\x00\xe0\xaa\x8d\x83?\x00\x00\x00\xc0\x87\xc7v?\x00\x00\x00\x00g\xa4r\xbf\x00\x00\x00 \xe0\xdc\x82?\x00\x00\x00\xa0\x96\xb5\x98\xbf\x00\x00\x00@\x06Zu?\x00\x00\x00\x80tvt\xbf\x00\x00\x00\xa0\xa3\xcb\x84\xbf\x00\x00\x00\x00;\x0f\x86\xbf\x00\x00\x00\x80\x1ek\x80\xbf\x00\x00\x00\x802\x1d}\xbf\x00\x00\x00\xa0\'\x03I?\x00\x00\x00\x00\x93\r~\xbf\x00\x00\x00\xe0\xc5z\x8c?\x00\x00\x00`.\x0cX?\x00\x00\x00`\xb5\xa8o\xbf\x00\x00\x00`\x1a,k?\x00\x00\x00@\xf9!\x11\xbf\x00\x00\x00\xa0\x0c\xc0\x89\xbf\x00\x00\x00@\xb0\x02G\xbf\x00\x00\x00\xc0o\xaa`?\x00\x00\x00 \xe5.\\\xbf\x00\x00\x00`\xe6Lq\xbf\x00\x00\x00@\x99p\x88\xbf\x00\x00\x00\xa0@tg\xbf\x00\x00\x00\xa06\xefl\xbf\x00\x00\x00@.\x9cg?\x00\x00\x00\x80\x03\xc0q\xbf\x00\x00\x00`;\x81\x87?\x00\x00\x00\x80u;\x8b\xbf\x00\x00\x00\xc0\xb4]O\xbf\x00\x00\x00`\x8c9h\xbf\x00\x00\x00\xc0(\x14\x81\xbf\x00\x00\x00\xa0\xe28\x82?\x00\x00\x00 \x9b\x14\x81\xbf\x00\x00\x00\x00\x04\x04\x9b\xbf\x00\x00\x00@=&~\xbf\x00\x00\x00\xa0\xf3@\x89?\x00\x00\x00@(\xd6\x92?\x00\x00\x00 \x156a\xbf\x00\x00\x00\xe0\xb2[W\xbf\x00\x00\x00\x00Ay.?\x00\x00\x00\xe0d+\x90?\x00\x00\x00\xe0\r2\x97?\x00\x00\x00 \x0c\xf7\x8b\xbf\x00\x00\x00@\x93\xb7,?\x00\x00\x00\xe0v4Y?\x00\x00\x00@!\x9at?\x00\x00\x00 2\xfbP?\x00\x00\x00\xc0m\x82\x90\xbf\x00\x00\x00\x805},?\x00\x00\x00@\xdc\xe7T\xbf\x00\x00\x00\x80M\xc9S\xbf\x00\x00\x00\xe0fy\x88\xbf\x00\x00\x00\xa0\xc3\x89o?\x00\x00\x00\x00\xe1\xc1\x88?\x00\x00\x00\x80\xe9_\x83\xbf\x00\x00\x00\x80\n\xe3`?\x00\x00\x00\x00\x80P\x96?\x00\x00\x00\xe0$\x18u\xbf\x00\x00\x00\xe0\xe9\x96j\xbf\x00\x00\x00\xc0\xbe`v?\x00\x00\x00\xc0\xeb\xed{\xbf\x00\x00\x00\x80l\xe5|?\x00\x00\x00\xa0\x1c\x00\x10?\x00\x00\x00\x00L@j?\x00\x00\x00@\xf6\x9a\x83?\x00\x00\x00@\xb9\x8d\x80?\x00\x00\x00\x80\x984\x8c?\x00\x00\x00\xe0\xc3\x8a\x90?\x00\x00\x00\x80K2\x8c?\x00\x00\x00\x00U\x90r\xbf\x00\x00\x00`\x93\x88|?\x00\x00\x00\x80\x8eic?\x00\x00\x00 \xa1\xde\x91?\x00\x00\x00\xc03\x8el\xbf\x00\x00\x00\xc0\x98\nw?\x00\x00\x00\x80\r\xaap\xbf\x00\x00\x00 &w_\xbf\x00\x00\x00\xa0\x7f\x8dD\xbf\x00\x00\x00 \xe5<\x88?\x00\x00\x00\x00b\xbdt?\x00\x00\x00\xa0s\x89\x8c?\x00\x00\x00`iyh\xbf\x00\x00\x00`\xfb\xf6\x88?\x00\x00\x00\x801\x0b\x96?\x00\x00\x00\x80\x9b\'Y\xbf\x00\x00\x00\xe0\x1f@l\xbf\x00\x00\x00\xc0i=2?\x00\x00\x00\xa0\xec3\x86?\x00\x00\x00\xa0\xf2\x86I\xbf\x00\x00\x00 \xd9\xf5t?\x00\x00\x00\x80\xc7\x13\x91?\x00\x00\x00`\xc52b?\x00\x00\x00\xc0\xb6\x1a:\xbf\x00\x00\x00\x80\xf5\x1e\x83\xbf\x00\x00\x00\xe0o\x96|?\x00\x00\x00\xe0\xa9\x10\x84?\x00\x00\x00\xc0\xac\xb3G\xbf\x00\x00\x00 \xfb\x94\x8b\xbf\x00\x00\x00\xc0\x15\xda}\xbf\x00\x00\x00\xe0,\xf7\\?\x00\x00\x00\xe0\xb0\x84|\xbf\x00\x00\x00`\xe0P\x84\xbf\x00\x00\x00\xa0\x86\xb7r?\x00\x00\x00\x00/x\x86\xbf\x00\x00\x00\xc0\xa8\x16\x8c?\x00\x00\x00\xc0\xf1\xc2\x92?\x00\x00\x00\xc0\x9e\xb4\x93\xbf\x00\x00\x00@J\x1c\x88?\x00\x00\x00`\xe1\x8a\x91\xbf\x00\x00\x00\xa0\xb0\xaek?\x00\x00\x00\x00U\xa6\x80?\x00\x00\x00\x80\x9f|p\xbf\x00\x00\x00\xc0\x92\x18s?\x00\x00\x00\x80\xf1\xbbx\xbf\x00\x00\x00\xc0\x81\x03d?\x00\x00\x00\x80Ul\x80?\x00\x00\x00\x00z#s\xbf\x00\x00\x00 Z3z?\x00\x00\x00\x80\x80#\x80?\x00\x00\x00\xc0\xa9\xbdx\xbf\x00\x00\x00`cQ\x84\xbf\x00\x00\x00\xc0c\x97\x8f?\x00\x00\x00\x80\xcc\x95b\xbf\x00\x00\x00\xa0\x85\xb8\x81\xbf\x00\x00\x00\x80\x1b&\x93?\x00\x00\x00\x80\xba`>\xbf\x00\x00\x00\x00g\x9bt\xbf\x00\x00\x00 \xa1b\x83?\x00\x00\x00\x80\x08$\x8c\xbf\x00\x00\x00\xc0/\xe1~\xbf\x00\x00\x00\xa0\x9a3|?\x00\x00\x00\x80\x19_Q\xbf\x00\x00\x00\xe0\x88\xb8~\xbf\x00\x00\x00\x80qMl?\x00\x00\x00\x00\x83;v\xbf\x00\x00\x00\x80G\xdaa?\x00\x00\x00\x80F\x81\x89\xbf\x00\x00\x00@\xb5\xfc\x82?\x00\x00\x00`p;{?\x00\x00\x00\x80\xa4Tc\xbf\x00\x00\x00@\xa3A\x8a\xbf\x00\x00\x00\xc0\x0b\x00\x94?\x00\x00\x00@\x0e8\x8a?\x00\x00\x00\x00z_\x90?\x00\x00\x00\xe0\xdf\xfa>\xbf\x00\x00\x00\x00\xb4|r\xbf\x00\x00\x00`\xe3"\x99\xbf\x00\x00\x00`\x0c\xc4\x9a?\x00\x00\x00`\x8bk{\xbf\x00\x00\x00\x00\x9f\x0fq\xbf\x00\x00\x00\xc0\xb8`8\xbf\x00\x00\x00\xe0\xf6O\x94\xbf\x00\x00\x00\xc0\xc5\x07Q?\x00\x00\x00\xe0m\xdcb?\x00\x00\x00\xe0n\x11\x86?\x00\x00\x00 \xdc\xf9x\xbf\x00\x00\x00\xe0]\x82\x86\xbf\x00\x00\x00@\xacM\x85?\x00\x00\x00@J+\\\xbf\x00\x00\x00\xc0\xa1p\x84\xbf\x00\x00\x00`\xff"\x85?\x00\x00\x00\xe0\xa5\xa3s?\x00\x00\x00\x00\xeb\x06u\xbf\x00\x00\x00\xc0W\x17\x90\xbf\x00\x00\x00\xc0\xd3\x99\x8e?\x00\x00\x00`&\t\x88?\x00\x00\x00\xe0\xd8u\x8c?\x00\x00\x00`\xdd\xd3\x8a?\x00\x00\x00`i\x1f\x89?\x00\x00\x00\x00\xb06|?\x00\x00\x00`\xd8\xb2\x8b?\x00\x00\x00 ir\x8f?\x00\x00\x00\xe0G\x81{\xbf\x00\x00\x00`v\'z?\x00\x00\x00\xa0\x9a\xad\x85?\x00\x00\x00`\x92\x98\x9a?\x00\x00\x00 \x9f\xcb\x85\xbf\x00\x00\x00\x00%q\x8b?\x00\x00\x00\xa0\xb5\x86z\xbf\x00\x00\x00\xa0\xa7\xf9\x7f\xbf\x00\x00\x00\x00l\xd0t\xbf\x00\x00\x00\x80\xfa\xb1\x80\xbf\x00\x00\x00`\xa7\xc2\x87?\x00\x00\x00 \x1cy\x84?\x00\x00\x00@\x9d`\x80?\x00\x00\x00@\x9a\x1f\x80\xbf\x00\x00\x00\x00w\xbeV?\x00\x00\x00\xc0\x02\xb8x?\x00\x00\x00\xe0}\xd7\x81?\x00\x00\x00 \xdb\x17r?\x00\x00\x00\x00\xc2\xabv?\x00\x00\x00\xc0SDw?\x00\x00\x00\x000\x99\x92\xbf\x00\x00\x00 \xdb{\x9c?\x00\x00\x00\xc0<\xa9u\xbf\x00\x00\x00 \xb8,\x82\xbf\x00\x00\x00\x80Q\xfb\x8e?\x00\x00\x00@\xd3\xd7M?\x00\x00\x00\xa0&\x1fp?\x00\x00\x00\xa0M\x1dh?\x00\x00\x00@\x00E\x84\xbf\x00\x00\x00\x80\xb3\x89f?\x00\x00\x00`\xc0V\x94?\x00\x00\x00`\xf1\xd7U\xbf\x00\x00\x00 C\x15`?\x00\x00\x00`\xf7\xb2\x80\xbf\x00\x00\x00`\x903\x96?\x00\x00\x00 \x12V\x90\xbf\x00\x00\x00\x80\xd0j\x89?\x00\x00\x00\xe0[2>\xbf\x00\x00\x00\xe0\xfc\xb2}?\x00\x00\x00 \xe4\x02z?\x00\x00\x00\x00\xad\xf1a?\x00\x00\x00\x00\x04\xe1m\xbf\x00\x00\x00`C\xe0U\xbf\x00\x00\x00\x80\x80u\x81\xbf\x00\x00\x00`\x89dh?\x00\x00\x00\xe0N\x8dv\xbf\x00\x00\x00\x00\x11\x8f\x83?\x00\x00\x00@+\xfa\x84\xbf\x00\x00\x00@\xf1`\x94\xbf\x00\x00\x00@P\x96Q\xbf\x00\x00\x00\xa0Y\x08p\xbf\x00\x00\x00\x00\xea\xb6\x81\xbf\x00\x00\x00\xe0\xf4\xe0p\xbf\x00\x00\x00@\x91\x06t?\x00\x00\x00\x00\xc8\x05\x81\xbf\x00\x00\x00\x00\xcaQ\xf5>\x00\x00\x00`\xf2\xeaq?\x00\x00\x00\x80\x0e\x0e,\xbf\x00\x00\x00`.\x84\x98\xbf\x00\x00\x00`rv\x92?\x00\x00\x00\xa0\xce\xdd\x7f\xbf\x00\x00\x00@\xf2oI\xbf\x00\x00\x00\xe0\xbd\r|\xbf\x00\x00\x00\x00\x06\x06\x9c\xbf\x00\x00\x00@p\xe7J?\x00\x00\x00 \xf4mX\xbf\x00\x00\x00\xe0<\x01g\xbf\x00\x00\x00\xa0\x198\x90\xbf\x00\x00\x00\x80S\x17\x8a\xbf\x00\x00\x00@\xdcB\x8d\xbf\x00\x00\x00 \x7f2x\xbf\x00\x00\x00\xa0\x03\x90{?\x00\x00\x00@\xb1r\x86\xbf\x00\x00\x00 \xdb\x0fB\xbf\x00\x00\x00\x00*\x9cb\xbf\x00\x00\x00@\xd7\xb6[?\x00\x00\x00`\xa4\x97}?\x00\x00\x00@\x19`\x90?\x00\x00\x00 \xe2\x96|\xbf\x00\x00\x00`5\x9e\x91?\x00\x00\x00\x00\xf9\x86t?\x00\x00\x00\xc0\x1e9\x87?\x00\x00\x00\x00\x01\xeap?\x00\x00\x00\x80\xab\xc1^?\x00\x00\x00\xa0\xeb\xe2y\xbf\x00\x00\x00\xa0g/y\xbf\x00\x00\x00`\x9d\xb6\x83?\x00\x00\x00\x80\xda\xd5~\xbf\x00\x00\x00\xe0\x99\x89p?\x00\x00\x00@{\xfa^?\x00\x00\x00 b,\x80\xbf\x00\x00\x00\x807\x90\x93?\x00\x00\x00`\xfd\xedq\xbf\x00\x00\x00\xc0s\x9f\x87\xbf\x00\x00\x00\xa0v\t\x88?\x00\x00\x00\x80\xb6\xf7\x93\xbf\x00\x00\x00\x00\xe3r\x8c\xbf\x00\x00\x00\xc0M\x82T?\x00\x00\x00@Q\xaay?\x00\x00\x00\x80%\x9dd\xbf\x00\x00\x00\x80\x9c\x8eg\xbf\x00\x00\x00\x00_cr\xbf\x00\x00\x00`\x05m\x82?\x00\x00\x00\x80:s\x94\xbf\x00\x00\x00`D\xd9\x92?\x00\x00\x00\xc0x\x1d\x86\xbf\x00\x00\x00`\xa3\xe8d?\x00\x00\x00\xa0rE}?\x00\x00\x00\xc0\x08\xc5\x80?\x00\x00\x00\xc0\xb5\xa9W\xbf\x00\x00\x00 \x1d\x13X?\x00\x00\x00\xa0\xa5\x9b\x82\xbf\x00\x00\x00\xa0\xe2A\x80\xbf\x00\x00\x00\x80s\xa9~\xbf\x00\x00\x00`Ri\x80\xbf\x00\x00\x00`\'|z?\x00\x00\x00 @j\x80?\x00\x00\x00\x00\x9c{/\xbf\x00\x00\x00@U\xa1\x83?\x00\x00\x00\xc0\xc7\xbfn\xbf\x00\x00\x00\xe0\x16\'\x8f?\x00\x00\x00\xa0\x85\xdd`?\x00\x00\x00`o\x7f\x85?\x00\x00\x00@\xf4\xfc\x85?\x00\x00\x00 (\x08m\xbf\x00\x00\x00 \x05Lu\xbf\x00\x00\x00`\x18 {\xbf\x00\x00\x00\xe0\xc8<\x8a\xbf\x00\x00\x00\xe0\xbf\xfcM?\x00\x00\x00\xc0\xf0f\x8f\xbf\x00\x00\x00 \xa8\x92\x87?\x00\x00\x00\x00\x19\xf3\x92\xbf\x00\x00\x00 \r\xc8\x89?\x00\x00\x00\x80\x82\xebb\xbf\x00\x00\x00\x80[+|\xbf\x00\x00\x00@\t\xc7w\xbf\x00\x00\x00\x00\xed1\x97\xbf\x00\x00\x00 \x90\xbaq?\x00\x00\x00`\x1d\xdb\x81\xbf\x00\x00\x00\xa0\x15\xb0\x89?\x00\x00\x00\x00\x1en\x84?\x00\x00\x00 \xec\xf4\x81\xbf\x00\x00\x00\xa0X\xb5T\xbf\x00\x00\x00\x00*\xff`\xbf\x00\x00\x00\x00J\x93M?\x00\x00\x00 \xc1\xd1P\xbf\x00\x00\x00 \xc8v}\xbf\x00\x00\x00\xc0z\'\x81?\x00\x00\x00\x00#Fv\xbf\x00\x00\x00\x00\xd2\xb6Z?\x00\x00\x00@H\x08\x8c?\x00\x00\x00`X\xf4@\xbf\x00\x00\x00 \xce{8\xbf\x00\x00\x00@\xab\xb2\x8e?\x00\x00\x00\xa0\xf8\xadZ\xbf\x00\x00\x00`\x80\x9f\x82\xbf\x00\x00\x00 \x0e\x89\x8e\xbf\x00\x00\x00@\xfc\xac\x92\xbf\x00\x00\x00@[]Q?\x00\x00\x00\xc0j\x9cM\xbf\x00\x00\x00@\xc5>\x8c\xbf\x00\x00\x00\xa0\x14h\x83\xbf\x00\x00\x00@5\xe6{\xbf\x00\x00\x00`g\x9a\x8b?\x00\x00\x00\xc0\x9d\x8au\xbf\x00\x00\x00\x00\x03]u?\x00\x00\x00\x00\x9e}~\xbf\x00\x00\x00\xe0\xae\xe8\x85\xbf\x00\x00\x00\xa0Z\xf9\x7f?\x00\x00\x00`\xbb\x95\x80\xbf\x00\x00\x00\xa0\xf7\x9eT\xbf\x00\x00\x00`\xaf\xaf}\xbf\x00\x00\x00\xc0\xe72w\xbf\x00\x00\x00\x80%\x15\x9b\xbf\x00\x00\x00\xc0\x06#l\xbf\x00\x00\x00\xa0k\x17v?\x00\x00\x00\x80\xa6\x91+?\x00\x00\x00 _\xbb\x8e?\x00\x00\x00\xc0G\xae\x83?\x00\x00\x00\x80\xf1\xf6t?\x00\x00\x00\xe0\xde\x11\x84\xbf\x00\x00\x00`E\xf8\x86\xbf\x00\x00\x00@8\xdcp?\x00\x00\x00 \xbb\xc3\x89\xbf\x00\x00\x00\xe0\x14\x8e\x91\xbf\x00\x00\x00\xa0\xdb\xfdY?\x00\x00\x00\x80\xd6;I\xbf\x00\x00\x00`\xef{\x8b?\x00\x00\x00\x00\x1c\xa2)?\x00\x00\x00\xe0\xa7\x93r\xbf\x00\x00\x00\xa0_;\x81\xbf\x00\x00\x00\x80=~r\xbf\x00\x00\x00\xe0\xb3\xbe\x87?\x00\x00\x00\xe0\xacWY\xbf\x00\x00\x00\xe0(\xc2~?\x00\x00\x00`\xd9\n\x92?\x00\x00\x00\xa08;k\xbf\x00\x00\x00\x00\'\x99\x7f?\x00\x00\x00\x80\xd4-\x86\xbf\x00\x00\x00\xc0 \\\x8d\xbf\x00\x00\x00\xe0\xecP\x84\xbf\x00\x00\x00\x80\xd6\xb7J\xbf\x00\x00\x00\xa0\xfb\x1a\x8e?\x00\x00\x00`\x98a\x84?\x00\x00\x00\xa0d\xe3\x8f?\x00\x00\x00 c\xa2d\xbf\x00\x00\x00\xc0bk|\xbf\x00\x00\x00\x00r\x0c\x92?\x00\x00\x00\xe0\x06\x9a\x8d?\x00\x00\x00\x804\xa2\x84\xbf\x00\x00\x00@\xe9Uw?\x00\x00\x00\xc0#\xf9\x89?\x00\x00\x00\xc0\xbc\x9c\x81\xbf\x00\x00\x00 \xff\xdey\xbf\x00\x00\x00@[aj\xbf\x00\x00\x00\x80UR\x82\xbf\x00\x00\x00@LW~?\x00\x00\x00@\xa8\xf9@\xbf\x00\x00\x00\xc0\xb5\x1eE\xbf\x00\x00\x00\xe0\\\xbdw\xbf\x00\x00\x00\xa0/~p?\x00\x00\x00\xa0Q\x0eY?\x00\x00\x00\xe0{\xa0\x89\xbf\x00\x00\x00\xa0\x03\x10\x92\xbf\x00\x00\x00@\xbai\x8b?\x00\x00\x00\x00\x8a\xa7\x8a?\x00\x00\x00@T)\x84?\x00\x00\x00\xc04\xe4l\xbf\x00\x00\x00\x80[\x15\x81\xbf\x00\x00\x00\x00\x9d\xd9\x92?\x00\x00\x00 `\xf8\x87?\x00\x00\x00@j\n\x8d\xbf\x00\x00\x00`\xfbHw?\x00\x00\x00\xc0\x96rq\xbf\x00\x00\x00`\xefD\x91\xbf\x00\x00\x00@\x82\xfc\x95?\x00\x00\x00\x00G\xf9`?\x00\x00\x00\x00}\x18\x8b\xbf\x00\x00\x00\xe0\xc8A\x90?\x00\x00\x00`q\x9f\x80?\x00\x00\x00\x80Q\xe3V?\x00\x00\x00@E7\x97?\x00\x00\x00\xa0\x10\x80q?\x00\x00\x00\xe05\xf6\x83\xbf\x00\x00\x00`\x1d\n:?\x00\x00\x00@, \x84?\x00\x00\x00\xc0\x9c$o?\x00\x00\x00\x003\xb7L?\x00\x00\x00\x004\xd0p\xbf\x00\x00\x00\xc0\x15.O?\x00\x00\x00\x80\x05\x8f1?\x00\x00\x00\x80\xd8\xdfe\xbf\x00\x00\x00\xa0vf\x9c?\x00\x00\x00`L\xcaU?\x00\x00\x00\xa0`\xb3\x83\xbf\x00\x00\x00\xe0\xde\xe1\x80?\x00\x00\x00\xc0\x82\xeb\x9c\xbf\x00\x00\x00\xe0S\x14p?\x00\x00\x00\x00\xcc\x19\x83?\x00\x00\x00`\xdd\xd1t\xbf\x00\x00\x00`\xad\x1cr?\x00\x00\x00\x80\x81Mr\xbf\x00\x00\x00\xa00\x8ar\xbf\x00\x00\x00\x80\xb5c\x8f?\x00\x00\x00@\x1bo[?\x00\x00\x00`\xdc\xcer\xbf\x00\x00\x00\x00l\n\\?\x00\x00\x00 \x13\xb4m?\x00\x00\x00\xa0\x91G\x98\xbf\x00\x00\x00\xc0\n#x?\x00\x00\x00\x80D\x8d\x86?\x00\x00\x00\xc09\xe8c?\x00\x00\x00`\xcd\xf9h\xbf\x00\x00\x00\x00N\xa0\x87\xbf\x00\x00\x00\x80\xc3"j\xbf\x00\x00\x00`-Ey?\x00\x00\x00\x002\xb8v\xbf\x00\x00\x00\xa0\x89\xd8\x87?\x00\x00\x00\xc0A\xd7s?\x00\x00\x00\x80\xaf\xe9\x82\xbf\x00\x00\x00\xe0\xcfbd\xbf\x00\x00\x00\xc0\x08V\x8c?\x00\x00\x00\x80\x88\xa8\x88?\x00\x00\x00\xa0\xcf\xe5\x8b?\x00\x00\x00`\x84\x9c\x91\xbf\x00\x00\x00@Kz\x85?\x00\x00\x00\x00\xcf\x00g\xbf\x00\x00\x00\x00\xa9\xc8[?\x00\x00\x00\xe0\xd0\x8d\x93?\x00\x00\x00\x000\xadT\xbf\x00\x00\x00\xa0m)\x92?\x00\x00\x00\x80U\xe20\xbf\x00\x00\x00`Ewp?\x00\x00\x00\x00\x17\x88\x90\xbf\x00\x00\x00\xa0\x1eH\x83\xbf\x00\x00\x00@|\x07y\xbf\x00\x00\x00\x80K\x9d\x92?\x00\x00\x00\xe0\xadQP?\x00\x00\x00\x80v\xab\x8a?\x00\x00\x00\x00 \xb0c?\x00\x00\x00\xe0\xdd\x82h\xbf\x00\x00\x00`l\x03r?\x00\x00\x00`A&\x18?\x00\x00\x00\x00BQt\xbf\x00\x00\x00 \x81\xb0\x82?\x00\x00\x00`\xe7Ys\xbf\x00\x00\x00@}g\x87?\x00\x00\x00\xe0i\x02\x92?\x00\x00\x00\xa0\x97\xc8\x83\xbf\x00\x00\x00 \x89\x7fw?\x00\x00\x00`\x9a\xcf|\xbf\x00\x00\x00\xa0|}\x8c?\x00\x00\x00\x80\x92\xb7\x81?\x00\x00\x00\xa0\x8fA\x81?\x00\x00\x00\xa0\xe0\x90R\xbf\x00\x00\x00@k\re?\x00\x00\x00\xc0\x84\xba\x91\xbf\x00\x00\x00\x00\xff\x1f\x8f\xbf\x00\x00\x00@%\xa0\x83\xbf\x00\x00\x00\xa0\x0f\xb8\x7f\xbf\x00\x00\x00@\xdf6c?\x00\x00\x00\x80\xd6\x94f\xbf\x00\x00\x00`\x82\xb7\x86\xbf\x00\x00\x00@\x97\xcc\x8c\xbf\x00\x00\x00@\\}\x8c?\x00\x00\x00\xa0\xb6\xeb[?\x00\x00\x00@emL?\x00\x00\x00@\xe7\xb1\x82\xbf\x00\x00\x00`:\x96\x7f\xbf\x00\x00\x00\xe03\x9d~\xbf\x00\x00\x00\xe0+\x87\x91?\x00\x00\x00@1aw\xbf\x00\x00\x00\x80S\x8a\x8f\xbf\x00\x00\x00@C\xdc\x8d?\x00\x00\x00\xa0\xa1H\x90\xbf\x00\x00\x00@V\x0c0\xbf\x00\x00\x00\x00\xb6\xd3w?\x00\x00\x00\x80h\x80}\xbf\x00\x00\x00@\xec8\x81?\x00\x00\x00 E\xfb\x83\xbf\x00\x00\x00@pzu\xbf\x00\x00\x00\xa0^4B\xbf\x00\x00\x00\xe0t6\x88\xbf\x00\x00\x00\x80\x01\x1a\x85\xbf\x00\x00\x00\x00@1y?\x00\x00\x00\x80 xW\xbf\x00\x00\x00 \'1\x82?\x00\x00\x00`\xf9\x9f\x83?\x00\x00\x00 C\xc7\x81\xbf\x00\x00\x00\x00\xff\x06\x8e?\x00\x00\x00\xc0\xcd\x12t\xbf\x00\x00\x00\x80pT\x92\xbf\x00\x00\x00`F\x8f~?\x00\x00\x00\xa0\x1d\x90\x80?\x00\x00\x00\x00d\x07\x90\xbf\x00\x00\x00 -\xc8x?\x00\x00\x00@\xf9]\x89?\x00\x00\x00\x00}\xa8\x8f?\x00\x00\x00\x00\x80\xa0\x80?\x00\x00\x00 \x9clo\xbf\x00\x00\x00\xa0Ye|\xbf\x00\x00\x00 \xec.\x92?\x00\x00\x00\xe0\t\x95\x88\xbf\x00\x00\x00`\x8b\xc7\x87\xbf\x00\x00\x00 \xd8\xd9x?\x00\x00\x00@\xa7]r\xbf\x00\x00\x00\x80\x86x\x88?\x00\x00\x00@\x97\xed/?\x00\x00\x00 v\xf9\x96\xbf\x00\x00\x00 7\xa7\x91?\x00\x00\x00\xa0g\xdb\x8b?\x00\x00\x00\xa0\x1d\xbc\x86\xbf\x00\x00\x00\xa0?F~\xbf\x00\x00\x00\x80\x8bV\x8d?\x00\x00\x00\xc0\x1f\xe9|?\x00\x00\x00\x80\xd3wz\xbf\x00\x00\x00@d\x87\x90?\x00\x00\x00\x80\x88y}?\x00\x00\x00\x80\x8f\x06\x99\xbf\x00\x00\x00\xa02B\x93\xbf\x00\x00\x00\x80N\xd2\x84\xbf\x00\x00\x00\xc0_\x8b\x87?\x00\x00\x00@\x14"5?\x00\x00\x00\x80xNy?\x00\x00\x00\xc0g\x04t?\x00\x00\x00\x80}\xb1\x85\xbf\x00\x00\x00\x80NyY\xbf\x00\x00\x00\x00N\xea{?\x00\x00\x00\xa0sM\x83?\x00\x00\x00@\x943\x82\xbf\x00\x00\x00\x00\x81\xe7s?\x00\x00\x00\xc0\x12\xf6\x85?\x00\x00\x00\xe0Gj\x95\xbf\x00\x00\x00\x80\xcfL`\xbf\x00\x00\x00 \x93\xdc\x88\xbf\x00\x00\x00 \xc7\xc7g\xbf\x00\x00\x00`@\\{?\x00\x00\x00@a\xde\x91\xbf\x00\x00\x00`\xf5\xae\x92\xbf\x00\x00\x00 \xae\x01u\xbf\x00\x00\x00@]\x81\x80\xbf\x00\x00\x00\xe0\x8e\xb3|\xbf\x00\x00\x00`\x8d\x04|\xbf\x00\x00\x00\xe0\x8aT\x8c\xbf\x00\x00\x00`\xca\xc3\x82\xbf\x00\x00\x00@+\xebn\xbf\x00\x00\x00\xa0f\x84\x86?\x00\x00\x00@q\xf3v\xbf\x00\x00\x00`>\xcfT?\x00\x00\x00`n\x1c\xa0?\x00\x00\x00\x00\xbdf{?\x00\x00\x00\xe0\x8e\xc7\x95?\x00\x00\x00\xe0\xa6W\x8b?\x00\x00\x00\x00\x12\xea\x91\xbf\x00\x00\x00\xa0\x0b\xa4\x85?\x00\x00\x00\xe0Y\x88g\xbf\x00\x00\x00\xe0\xa2w\x84?\x00\x00\x00\xa0>\xcf\x8a\xbf\x00\x00\x00`)\\\x8a?\x00\x00\x00\xe0[ci\xbf\x00\x00\x00@w\xddi?\x00\x00\x00@\xfei\x91?\x00\x00\x00\x00\xb0a\x82\xbf\x00\x00\x00\xa01ot?\x00\x00\x00\xe0\xcf\xb3\x81?\x00\x00\x00\xe0\xdf\x8d[?\x00\x00\x00@\xe8fu\xbf\x00\x00\x00\x80=M\x87\xbf\x00\x00\x00\xe0\x01\xf5\x87\xbf\x00\x00\x00\xa0%\x9c\x90?\x00\x00\x00\x80\x89Vv\xbf\x00\x00\x00 Zv\x85?\x00\x00\x00\xa0Br|\xbf\x00\x00\x00\x80\xfcC\x93?\x00\x00\x00\xe0\xc6[\x83\xbf\x00\x00\x00\xa0!mf\xbf\x00\x00\x00 8\xb6a?\x00\x00\x00\xe0E\xc8W?\x00\x00\x00 \xcf\xc0s\xbf\x00\x00\x00\x00\x1b2\x87?\x00\x00\x00\x80\x88\x9aj?\x00\x00\x00@?\x15L?\x00\x00\x00\x80\xef\x8ep?\x00\x00\x00 \xa4\xf4\x93?\x00\x00\x00\x80\x8d\xfaV?\x00\x00\x00\x80\xc5\xbcs\xbf\x00\x00\x00 \x10\x15\x81\xbf\x00\x00\x00\xe0t\xf7m\xbf\x00\x00\x00\x00T\x9f\x87?\x00\x00\x00\xe0Y\x07o\xbf\x00\x00\x00\x00i^Z\xbf\x00\x00\x00\xe0\xad/U\xbf\x00\x00\x00\xa0!\xe2\x89?\x00\x00\x00 \t\xdao\xbf\x00\x00\x00 \xb4\xc3E\xbf\x00\x00\x00\xe0}\xbc\x8f\xbf\x00\x00\x00\xc0N\xa0}?\x00\x00\x00\xc0\xa0\xbfH?\x00\x00\x00@j#p\xbf\x00\x00\x00\x80\xa8\x98\x85\xbf\x00\x00\x00`\x04\x1cT?\x00\x00\x00\xe0S\xf7\x86\xbf\x00\x00\x00@\xce\xf6z\xbf\x00\x00\x00@f\xb1\x85?\x00\x00\x00`\x98\xe1p?\x00\x00\x00\xc0\\\x82\x86?\x00\x00\x00\x80\xc56\x8c?\x00\x00\x00@\x99\xfc\x8e?\x00\x00\x00\xc0\xb4\xcel?\x00\x00\x00`\xe8*\x7f?\x00\x00\x00\xc0\x163x\xbf\x00\x00\x00 \xae\x81\x86?\x00\x00\x00@\xd8p\x81?\x00\x00\x00`+~z?\x00\x00\x00\xa0D\x8e\x84?\x00\x00\x00\x00\x97\xe32\xbf\x00\x00\x00\xc0Q\x9b\x90\xbf\x00\x00\x00\x80\x93\xf5\x10\xbf\x00\x00\x00@\xce\x93v?\x00\x00\x00\x00$\xdb\x8b\xbf\x00\x00\x00@\xaa\x13z\xbf\x00\x00\x00\xe0\xda\x08c\xbf\x00\x00\x00\xc0\xc6\x90q\xbf\x00\x00\x00\xa0\xcd\x9d\x8a?\x00\x00\x00\xe0<%B\xbf\x00\x00\x00\xe0VVG\xbf\x00\x00\x00\x80:F\x92\xbf\x00\x00\x00@\xc5\xfa\\\xbf\x00\x00\x00`\xfc\x84\x8e?\x00\x00\x00\x00.}\x80?\x00\x00\x00\xe0\x0f\xcb\xa2\xbf\x00\x00\x00\xc0Q\xdcX?\x00\x00\x00\x00t\xb6j\xbf\x00\x00\x00\x00P=\x91?\x00\x00\x00 \xa2\xaa\x85\xbf\x00\x00\x00 a]\x84?\x00\x00\x00@\xb0E\x81\xbf\x00\x00\x00\x00\x98\xa4i\xbf\x00\x00\x00`\xe3\xe5\x07?\x00\x00\x00 \xbb9`?\x00\x00\x00\x00\x95N\x82?\x00\x00\x00\x80\xb3\xfeh\xbf\x00\x00\x00@\x99\xd7x\xbf\x00\x00\x00@\xe5Sv\xbf\x00\x00\x00`\t8\x8c\xbf\x00\x00\x00\xc0e\xc8B?\x00\x00\x00 \xd8JT\xbf\x00\x00\x00\xa0\x83c\x82\xbf\x00\x00\x00 \xbfF\x92\xbf\x00\x00\x00`\x86{m\xbf\x00\x00\x00`\xfb\xa3q\xbf\x00\x00\x00\xc0sE\x8e?\x00\x00\x00\xc0\x954M\xbf\x00\x00\x00@\x00\xc1c\xbf\x00\x00\x00\xc0<Ri\xbf\x00\x00\x00\xa0\x83\xdfq?\x00\x00\x00\xe0\x81\x0br?\x00\x00\x00\x80\x8e\xb7\x91?\x00\x00\x00\xa0*\xbd}?\x00\x00\x00@\xc7\x89~?\x00\x00\x00`P\x17L\xbf\x00\x00\x00\x80\x19\\%\xbf\x00\x00\x00`hU\x81\xbf\x00\x00\x00@\xec\xfa\x80?\x00\x00\x00\x80Ig\x94\xbf\x00\x00\x00\xc0Qk\x80\xbf\x00\x00\x00 |\xa7S\xbf\x00\x00\x00@\x12\xee\x7f\xbf\x00\x00\x00\xc0t\x05q\xbf\x00\x00\x00 \xa9px\xbf\x00\x00\x00\xc0\xd1\xb2\x95?\x00\x00\x00`\xd5?{\xbf\x00\x00\x00 \xdfZm\xbf\x00\x00\x00\xe0\x05dz\xbf\x00\x00\x00@\na`?\x00\x00\x00`^j}?\x00\x00\x00\x00w#a?\x00\x00\x00\xe0z q?\x00\x00\x00\xa0\x80,\xba>\x00\x00\x00\xc0\xc9\xe7\x87?\x00\x00\x00\xa0T\x03\x90\xbf\x00\x00\x00 P\xa6\x80?\x00\x00\x00\xa0/\xc6\x85\xbf\x00\x00\x00`m\x8e\x8d?\x00\x00\x00\x00\xdctl?\x00\x00\x00@Ueo\xbf\x00\x00\x00\xc0\x8f\xce}\xbf\x00\x00\x00\xc0\xd5\x1e~\xbf\x00\x00\x00 0\xc6a\xbf\x00\x00\x00`\xc1Sg?\x00\x00\x00\x00q\xa1\'?\x00\x00\x00 b"e?\x00\x00\x00@E9Z?\x00\x00\x00\x00\xee1k\xbf\x00\x00\x00`\xe2l\x8c?\x00\x00\x00\x80\xab\xdeh\xbf\x00\x00\x00\x80\xb9_\x93\xbf\x00\x00\x00`\xa6\xeer?\x00\x00\x00@zi\x82?\x00\x00\x00@\x10`\x83?\x00\x00\x00 \xd6\x82q?\x00\x00\x00\xe0\xe0\xdbC?\x00\x00\x00\x80\x1fje\xbf\x00\x00\x00\xc0\x00S\x9d?\x00\x00\x00\xc0o\xdf\x91\xbf\x00\x00\x00 "\xf6\x85?\x00\x00\x00\xa0\xb8\x0ft?\x00\x00\x00\x80UX]\xbf\x00\x00\x00 \xbbW\x92\xbf\x00\x00\x00\x00]0\x81\xbf\x00\x00\x00 \xdc\x08p?\x00\x00\x00\x00\xe5)x?\x00\x00\x00\xe0\xc4\x02\x89\xbf\x00\x00\x00@\x1a\xe8r?\x00\x00\x00 \x9f\x19|?\x00\x00\x00`v\xc8~\xbf\x00\x00\x00@\xbcvt?\x00\x00\x00\xc0[\xe3`?\x00\x00\x00\x00\xc3]D\xbf\x00\x00\x00\xe0\n\xe8Z?\x00\x00\x00`\x0c=\x87\xbf\x00\x00\x00\xa0)u\x85?\x00\x00\x00\xa0!\xcat?\x00\x00\x00`\xa3\x8fe?\x00\x00\x00\xe0\x84\xe3v?\x00\x00\x00 L\xe6\x8e?\x00\x00\x00\xe0W2\x80?\x00\x00\x00 \r(y\xbf\x00\x00\x00\x80\x8b\xa6V?\x00\x00\x00\xe0\\\x1d\x83?\x00\x00\x00@\xcb)u\xbf\x00\x00\x00`\x92\xc3\x97?\x00\x00\x00@\xc7\xdf\x8e\xbf\x00\x00\x00`A\xfb\x81?\x00\x00\x00\xe0\x9d\x1cV?\x00\x00\x00`m\xf5~?\x00\x00\x00\x80\xc8\x8f\x96?\x00\x00\x00@Uas\xbf\x00\x00\x00 \x91\xb5{?\x00\x00\x00 r,k?\x00\x00\x00@8\x93\x80\xbf\x00\x00\x00 \x86se\xbf\x00\x00\x00@dIy?\x00\x00\x00`\xd0\xda\x12\xbf\x00\x00\x00`\xc2M\x9b?\x00\x00\x00`\xf7\x93\x8b\xbf\x00\x00\x00`\xe7\xf6s\xbf\x00\x00\x00\x80\x91N\x90?\x00\x00\x00`zuf\xbf\x00\x00\x00@Pg\x8f?\x00\x00\x00\x00\x10\xect?\x00\x00\x00`\xdewm?\x00\x00\x00`|\xe5d\xbf\x00\x00\x00@ \xcal?\x00\x00\x00\xe0Z3\x80?\x00\x00\x00\x00\xef\x9eV?\x00\x00\x00 \x94\x08\x9c?\x00\x00\x00\xa0\xe0\xcbt?\x00\x00\x00 \x1d\x04y\xbf\x00\x00\x00 y\x07q?\x00\x00\x00\x80>\x11\x83\xbf\x00\x00\x00 H\xd9j\xbf\x00\x00\x00`\xa5\xc1s\xbf\x00\x00\x00`=\x9f\x8f\xbf\x00\x00\x00\xa0j\xba\x8f?\x00\x00\x00\xa0\x88\r\x81?\x00\x00\x00\xa0\xd3\xdd\x81?\x00\x00\x00`\xf4\xeew?\x00\x00\x00\xe0\xf0\xc2L?\x00\x00\x00@\x18p\x91\xbf\x00\x00\x00\xe0\xe3<\x92\xbf\x00\x00\x00@\xe1\xb5r\xbf\x00\x00\x00`P\t\x8f?\x00\x00\x00\xc0\xf8d_?\x00\x00\x00\xc0\x8f\x7fx\xbf\x00\x00\x00\xa0\xd5\x05\x13?\x00\x00\x00\x80l\xf6y?\x00\x00\x00\x80\xf2\xaf\x83\xbf\x00\x00\x00\xa0\x1e\xdcx?\x00\x00\x00\xa0\x9fs\x80?\x00\x00\x00\x00 \xde^?\x00\x00\x00\xc0\xabV\x88\xbf\x00\x00\x00`\x1b\xa5{?\x00\x00\x00\x80r~\x8b?\x00\x00\x00\xc0\xec\x16\x8d\xbf\x00\x00\x00\xe0}cd?\x00\x00\x00 \x92)Y\xbf\x00\x00\x00\x00\xbf+u\xbf\x00\x00\x00\x80\x07\xc5j?\x00\x00\x00\x80k\xa4\x91\xbf\x00\x00\x00@\x8b\x04y\xbf\x00\x00\x00` \xf3\x94\xbf\x00\x00\x00\x80/ei?\x00\x00\x00\x80\x88\x81\x86?\x00\x00\x00\xc0\x02?4?\x00\x00\x00\xa0\x93;}?\x00\x00\x00\xe0D\xb2{?\x00\x00\x00\xc0 \x12{\xbf\x00\x00\x00`2X\x86?\x00\x00\x00\x80\xd75p?\x00\x00\x00`,\x1et\xbf\x00\x00\x00\xa0\xc7\x0b\x83?\x00\x00\x00@ \x8em\xbf\x00\x00\x00\x00\x9d\xb0u\xbf\x00\x00\x00\x00\x89\x82x\xbf\x00\x00\x00 H\x8f\x88?\x00\x00\x00\xe0\xdd-o\xbf\x00\x00\x00\x80Sl\x80\xbf\x00\x00\x00\x00\xd3\x87i\xbf\x00\x00\x00 \x10\xc8t\xbf\x00\x00\x00\xe0\r\xb3e?\x00\x00\x00 \xc15\x8d?\x00\x00\x00\xa08R`?\x00\x00\x00\x80\xebB%\xbf\x00\x00\x00\x80l\xf0\x8e\xbf\x00\x00\x00\x80\xdd\xc9|\xbf\x00\x00\x00\xe0s\xc3\x94\xbf\x00\x00\x00\xe0)\xbf9?\x00\x00\x00\xe0\xf4\x19q?\x00\x00\x00\x80\x0cM\x94\xbf\x00\x00\x00 \x13-\x85?\x00\x00\x00\xc0\x87\xe5\x8c?\x00\x00\x00\xe0r\xeby?\x00\x00\x00\xa0*tS\xbf\x00\x00\x00@O\xa8\x13\xbf\x00\x00\x00\xe0^R\x81\xbf\x00\x00\x00\x80|sx?\x00\x00\x00\x80\x8ab\x95?\x00\x00\x00\x00\x87\xc6f?\x00\x00\x00`\xcaNw?\x00\x00\x00\x80\x07"\x88?\x00\x00\x00\x00\xb4n\x86?\x00\x00\x00\x80\xac-p?\x00\x00\x00`e1\x7f\xbf\x00\x00\x00\xc0\xb6\xf9h\xbf\x00\x00\x00\x00\xe0\x89P?\x00\x00\x00\xa0\xf3\xa6\x92\xbf\x00\x00\x00\x00\xf5\xf7\x86?\x00\x00\x00\x80\x9c:x?\x00\x00\x00 S\x16X?\x00\x00\x00\xa0\xe3\x9d\x8a?\x00\x00\x00@T\x05a\xbf\x00\x00\x00\xa0\xd0\x87s\xbf\x00\x00\x00@\x0c\xbfL?\x00\x00\x00@\x15\xcc|?\x00\x00\x00 \xcc\x1aY?\x00\x00\x00\xc0a\xbbq\xbf\x00\x00\x00@\xb0\x91??\x00\x00\x00\xa0\xf2!i?\x00\x00\x00\xa0\xbc\x0ec?\x00\x00\x00\xa0\x99D\x85?\x00\x00\x00\xe0\xf7\x04\x85?\x00\x00\x00\xa0\xabq\x86?\x00\x00\x00@\x9e\x9et\xbf\x00\x00\x00\xe0\x0e\x98\x92\xbf\x00\x00\x00 \xf8\xdeb?\x00\x00\x00\x80$\x8b`?\x00\x00\x00 \xc7\x1e\x8d\xbf\x00\x00\x00\xc0\xbc\xdb\x88\xbf\x00\x00\x00\x80\x87\xacz?\x00\x00\x00\xe0\x17^\x8a?\x00\x00\x00@\x15D\x83\xbf\x00\x00\x00\x80\x92\x1ch\xbf\x00\x00\x00 3\x90\x95?\x00\x00\x00@\x08{s?\x00\x00\x00\x00\xf5J\x86?\x00\x00\x00`\xd1\xf3\x87\xbf\x00\x00\x00\xe0]0\x8e?\x00\x00\x00\xa0\xaf\xf3\x8f\xbf\x00\x00\x00\x80\xc8\x9cs\xbf\x00\x00\x00@\xc0.w?\x00\x00\x00\x00\xce\xb2\x92?\x00\x00\x00\xa0`\x05q?\x00\x00\x00`Ws\x8f\xbf\x00\x00\x00\xa0\xf5Vm?\x00\x00\x00`\xff\x06S?\x00\x00\x00 2~\x88?\x00\x00\x00\x80\x16X\x83?\x00\x00\x00\x00\xf0\xe4j?\x00\x00\x00`\x06?\x83\xbf\x00\x00\x00\xa0s&Q\xbf\x00\x00\x00 \x89\x1e|?\x00\x00\x00@\xc2\xe7r\xbf\x00\x00\x00`\xc1=\x85?\x00\x00\x00\xa0O\xed\x8d?\x00\x00\x00\x00\xdc&v?\x00\x00\x00\xc0\xee\xabh\xbf\x00\x00\x00\x00V\xa9q?\x00\x00\x00\xc0\xb6\x1fa\xbf\x00\x00\x00\xe0\xca\x1a\x85\xbf\x00\x00\x00`pr<?\x00\x00\x00\xc0,\x03`\xbf\x00\x00\x00\xc0-\xfcn\xbf\x00\x00\x00`\xfayl?\x00\x00\x00@\x11{\x81\xbf\x00\x00\x00 \xf4Ji\xbf\x00\x00\x00\x00\x87\x8du\xbf\x00\x00\x00\xa06\x10\x7f\xbf\x00\x00\x00\xa0\xf5T\x88?\x00\x00\x00@\xaf\xfe\x7f\xbf\x00\x00\x00\xe0S\xb2w\xbf\x00\x00\x00\xe0K\x08S\xbf\x00\x00\x00\xc0S\xdc:?\x00\x00\x00\x80\xb0\xe6\x86\xbf\x00\x00\x00@bw9\xbf\x00\x00\x00@\xef/j?\x00\x00\x00`q\xd0\x91\xbf\x00\x00\x00\x80EM\x83?\x00\x00\x00\xa0\xd3L\x90\xbf\x00\x00\x00\x80@\xb1u?\x00\x00\x00 \x8dV|?\x00\x00\x00 \xd6\xbd\x8a\xbf\x00\x00\x00\x80\x05\xa0Q\xbf\x00\x00\x00\x00\xf1\x92h?\x00\x00\x00@$!d?\x00\x00\x00\x80\x17\xc3\x82?\x00\x00\x00\xa0\x89\nn?\x00\x00\x00\xa0\xceq}\xbf\x00\x00\x00\xc0\xba\x8eH?\x00\x00\x00\x80\xf1q\x8b?\x00\x00\x00`\xb9\xa7\x93\xbf\x00\x00\x00`\xe4\x18\x9b?\x00\x00\x00 \x95\xbc\x80?\x00\x00\x00@\xb4\xb5\x88\xbf\x00\x00\x00\xa0B\xff\x8b?\x00\x00\x00\x00\x1a\x06\x98?\x00\x00\x00 [(m\xbf\x00\x00\x00\x80\x07\xd3\x89?\x00\x00\x00\xc0\xd3\x9b{?\x00\x00\x00@\xe4\xa0c?\x00\x00\x00`\xcd\x12\x84?\x00\x00\x00\x80&\xd3\xe4>\x00\x00\x00\xa0\xe2_\x8a\xbf\x00\x00\x00 \x0c\xd9\x86?\x00\x00\x00`\x8dCP?\x00\x00\x00 \xa4\x8bv?\x00\x00\x00\xe0\x96K\x85?\x00\x00\x00@\xb2\xadg?\x00\x00\x00\x00\xd9ax\xbf\x00\x00\x00\xa0\xfd\xa1\x8c?\x00\x00\x00`\xde4`\xbf\x00\x00\x00\x80+0\x85\xbf\x00\x00\x00\xc0ZIy\xbf\x00\x00\x00\x80W:\x87?\x00\x00\x00\x00\xf4\xfbq?\x00\x00\x00@\x86\x8c{\xbf\x00\x00\x00@\xfaZ\x8f\xbf\x00\x00\x00@\x9d>\x8a?\x00\x00\x00\xc0\xbb\n\xe7\xbe\x00\x00\x00@eC\x83\xbf\x00\x00\x00\x00\xaa\x82s\xbf\x00\x00\x00\xc0\x94\xb74?\x00\x00\x00\x80\x9b{\x93?\x00\x00\x00 \x83[}?\x00\x00\x00 s^n\xbf\x00\x00\x00\xc0\x0f\xe8\x89?\x00\x00\x00\xc0d~o\xbf\x00\x00\x00\xe0\x070}\xbf\x00\x00\x00\xa0K\x8fs?\x00\x00\x00@o7\x91\xbf\x00\x00\x00\x80u\x14\x82\xbf\x00\x00\x00@\x11rf\xbf\x00\x00\x00\xa0\xae\xcc[?\x00\x00\x00\xc0\x8b(0\xbf\x00\x00\x00\x00qP`\xbf\x00\x00\x00@\n\xfd\x90\xbf\x00\x00\x00@\xc2\xbaw\xbf\x00\x00\x00\xa0"\x8aZ\xbf\x00\x00\x00\xa0;\xe8}\xbf\x00\x00\x00\xe0"3\x88?\x00\x00\x00`\x87@{?\x00\x00\x00 5\x9f\x81\xbf\x00\x00\x00\xe0\xb4\xdcp\xbf\x00\x00\x00\xc0(Sz?\x00\x00\x00@\xbaz\x89?\x00\x00\x00\xa0\xba!\x86?\x00\x00\x00@;\xacx\xbf\x00\x00\x00\x80\xa9jW\xbf\x00\x00\x00`2\xaai\xbf\x00\x00\x00\xa0>Cm?\x00\x00\x00\xe0\x89\xabj\xbf\x00\x00\x00`\xab\xbd\x84?\x00\x00\x00\x80\x989\x87?\x00\x00\x00@\xda\xb8x\xbf\x00\x00\x00 E\x9ax\xbf\x00\x00\x00 K\xb6j?\x00\x00\x00\xe0\xa0\nc\xbf\x00\x00\x00`\xa5\x9bu\xbf\x00\x00\x00@w\x0e|?\x00\x00\x00\x80\x1f\xc9P\xbf\x00\x00\x00\x80\xa2\xb2`?\x00\x00\x00\x80\xf8\xf2\x8b?\x00\x00\x00@^\x84\x91\xbf\x00\x00\x00`\xca\xec{?\x00\x00\x00\x80Z\xd5Y\xbf\x00\x00\x00\xc0\xf1Z\x87?\x00\x00\x00 \xcc~}?\x00\x00\x00\xa0\x7f\x8d\x7f\xbf\x00\x00\x00\xc0/[Y\xbf\x00\x00\x00`\xd0\x13I\xbf\x00\x00\x00\x80\x19\x91\x82?\x00\x00\x00@66h\xbf\x00\x00\x00@%\xba\x1f?\x00\x00\x00 &1{?\x00\x00\x00 \x05K\xf0>\x00\x00\x00 \xa2P\x8e?\x00\x00\x00`\xdd\xd3l?\x00\x00\x00\x80\xea\xd7\x82?\x00\x00\x00\x0057\x8d\xbf\x00\x00\x00\xc06$,?\x00\x00\x00\xe0\xd3Tr?\x00\x00\x00`\xb2\x13\x8c\xbf\x00\x00\x00\xe0&\x06\x82?\x00\x00\x00\xc0]\xc7\x80\xbf\x00\x00\x00\xc0\xb24]?\x00\x00\x00\xa0\x0f\xd9x?\x00\x00\x00\xa0\xb0\xfaa\xbf\x00\x00\x00\x80\x9f>\x87\xbf\x00\x00\x00`\xe4Mv?\x00\x00\x00\x80\xa1\xfat?\x00\x00\x00@\xb5\x1dJ\xbf\x00\x00\x00 f\xcf\x85\xbf\x00\x00\x00\x80\x9dzg?\x00\x00\x00`\xaf\xf0@\xbf\x00\x00\x00\x80~\xebt\xbf\x00\x00\x00 4t\x83\xbf\x00\x00\x00\xa0\xe8\xf9\x96\xbf\x00\x00\x00`\x88\'|\xbf\x00\x00\x00\xc0\x83D\x92\xbf\x00\x00\x00\xc0# ~?\x00\x00\x00\x00\xb7\x1at?\x00\x00\x00\xa0j\x07t\xbf\x00\x00\x00\xe0bl[?\x00\x00\x00 \x99p\x86\xbf\x00\x00\x00\xc0R\x91\x87?\x00\x00\x00`\x07\x10w\xbf\x00\x00\x00\xc0\x97Ar?\x00\x00\x00\x80\xfa\x8ey?\x00\x00\x00\xe0{\x9b<\xbf\x00\x00\x00 \x13\xe3\x81?\x00\x00\x00\x00\x00|k\xbf\x00\x00\x00`\xa3\xce}?\x00\x00\x00 i\x94\x8b\xbf\x00\x00\x00\x00\xce\xcf\x96\xbf\x00\x00\x00\x803\xedK?\x00\x00\x00\xe0\xa7\xa3\x96?\x00\x00\x00\xa0Z4\x90\xbf\x00\x00\x00\x00(\x94\x91\xbf\x00\x00\x00 \x8c\xc0\x88?\x00\x00\x00\x00\xea!b\xbf\x00\x00\x00@>p\x84?\x00\x00\x00\xc0_ak?\x00\x00\x00`P:\x8d\xbf\x00\x00\x00`\x97J\x84?\x00\x00\x00`\xb6-p\xbf\x00\x00\x00\xa0\x8f\x8d{?\x00\x00\x00\x80\xa8\xadZ\xbf\x00\x00\x00`\xad\x13n?\x00\x00\x00\x80E\xdb\x1a?\x00\x00\x00\xe0\x0c\x89\x86?\x00\x00\x00\xa06\xbd7\xbf\x00\x00\x00\xa0\x99\x11l?\x00\x00\x00\x00\x01qU?\x00\x00\x00\xe0%\xb5\x83?\x00\x00\x00 \x1b-L?\x00\x00\x00\xe02\x1d\x90?\x00\x00\x00\x80\xaa\x18d?\x00\x00\x00 \x0b1\x90\xbf\x00\x00\x00 1 u\xbf\x00\x00\x00\x80XK\x8c\xbf\x00\x00\x00`gc\x81?\x00\x00\x00@\x90\xe2z\xbf\x00\x00\x00 z\x84g?\x00\x00\x00 \r\x08\x8b?\x00\x00\x00\xa0\xae\xccb\xbf\x00\x00\x00 v\x11\x98?\x00\x00\x00\x80\xeb\x86t?\x00\x00\x00 \x9b\xc3w?\x00\x00\x00\xa0\xe8\xf7\x88\xbf\x00\x00\x00\xc0\xb8Dz\xbf\x00\x00\x00 d\xc8\x88\xbf\x00\x00\x00`\xe7hg\xbf\x00\x00\x00\xc0c\xb0\x95?\x00\x00\x00 \x84\x9eP?\x00\x00\x00\xc0\xbd\x15v\xbf\x00\x00\x00\xc0\x0f\xe1z?\x00\x00\x00\x00\x91\xc0\x8a?\x00\x00\x00\xa0R\xd7A?\x00\x00\x00\x80I\xc5{\xbf\x00\x00\x00\xa0{\xb2r\xbf\x00\x00\x00\x80\xe7bk?\x00\x00\x00 \xa9IR\xbf\x00\x00\x00\x00\xd0\xda\x83\xbf\x00\x00\x00@K\xcb\x96\xbf\x00\x00\x00 \xd9\x11:\xbf\x00\x00\x00\x00\xe5\x92y?\x00\x00\x00\xa0\x7f\xeb<?\x00\x00\x00`\xec<B\xbf\x00\x00\x00\xe0\x12\x94g\xbf\x00\x00\x00`\xd2o\x89\xbf\x00\x00\x00 \xfa\rw?\x00\x00\x00 \xc7\x0br\xbf\x00\x00\x00@\xe2\xef>?\x00\x00\x00`Tlg?\x00\x00\x00\x80\x1d8p\xbf\x00\x00\x00\x00^\x0ed?\x00\x00\x00\xa0\x19\xfeu\xbf\x00\x00\x00\xc0\xbf\xcd~?\x00\x00\x00\xe0q\xcf\x80\xbf\x00\x00\x00 \xfb0O\xbf\x00\x00\x00`q\xb7\x92?\x00\x00\x00\x00!\xabv?\x00\x00\x00 T\x1d\x90?\x00\x00\x00\x00\xc2\x91{\xbf\x00\x00\x00`a\xb6u?\x00\x00\x00@\x16\xfe\x83\xbf\x00\x00\x00\xe0\xf4\xb8\x81\xbf\x00\x00\x00\x80\x80\xeaq\xbf\x00\x00\x00\xc0Y>>\xbf\x00\x00\x00\x80\x15\x99\x86?\x00\x00\x00\x00^\x7f~?\x00\x00\x00\xc0\xfd3w?\x00\x00\x00\x80\xc5\x1cP\xbf\x00\x00\x00\xe05[X\xbf\x00\x00\x00\x80M}u?\x00\x00\x00\xe0\xb7\xfat?\x00\x00\x00\x80f\xae\x8d\xbf\x00\x00\x00\xe0\xda7T?\x00\x00\x00\x00\x97tn\xbf\x00\x00\x00\x80\x1c\xc0\x87?\x00\x00\x00\x80\x96\x8f\x97\xbf\x00\x00\x00\xc0\xf6\'\x83?\x00\x00\x00@\x1d\x13\x80?\x00\x00\x00`\xb2\xb8w?\x00\x00\x00\x80\xfa\x8d"\xbf\x00\x00\x00@\xd9\x94e\xbf\x00\x00\x00 \xe3\xeb\x80\xbf\x00\x00\x00`\x96\x97z\xbf\x00\x00\x00\xc0\xa6>D?\x00\x00\x00\xa0\xeb\xcdt?\x00\x00\x00`\x18>r?\x00\x00\x00\xe0j3\x93?\x00\x00\x00\xe0\x10ys\xbf\x00\x00\x00@\x84\xc5\x8a?\x00\x00\x00`\xc3\xfb\x07?\x00\x00\x00\x80nf\x85?\x00\x00\x00\xc0-[c?\x00\x00\x00\xc0\xbf\xfas?\x00\x00\x00 \xe5\x83\x83\xbf\x00\x00\x00\xe0\x81\xd0u\xbf\x00\x00\x00\xe0w\x80U\xbf\x00\x00\x00 4 \x81\xbf\x00\x00\x00@q\xcd\x84\xbf\x00\x00\x00@p\x8e\x82?\x00\x00\x00\xe0\x96\xd9\x84\xbf\x00\x00\x00`9\xd6u?\x00\x00\x00@>u{?\x00\x00\x00\x00\x02\xe4\x89?\x00\x00\x00\x00\xf2\xbdv\xbf\x00\x00\x00 \x98\x93|?\x00\x00\x00`O2^\xbf\x00\x00\x00\x00c\xe4v\xbf\x00\x00\x00\xc0\xb9\xf4\x83\xbf\x00\x00\x00\xc0\xdd\xc0v\xbf\x00\x00\x00 \'\xc1\x96\xbf\x00\x00\x00\x80Q~c?\x00\x00\x00\xe0b~\x81?\x00\x00\x00`n\xf2x?\x00\x00\x00@g9p\xbf\x00\x00\x00@C\x0f\x97?\x00\x00\x00\xc0q\x17~?\x00\x00\x00`\xa1\xc8\x7f\xbf\x00\x00\x00\x80zJ\x8a\xbf\x00\x00\x00\x00\x17\x18z?\x00\x00\x00\xa0\xb5\xde\x82\xbf\x00\x00\x00`\xbf\xf0\x8f\xbf\x00\x00\x00\xc0\xc5G\x88\xbf\x00\x00\x00 \xbeiw?\x00\x00\x00\xc0Hhw?\x00\x00\x00\x00=\x0ff?\x00\x00\x00\x00tz}\xbf\x00\x00\x00\xe0\x1a\xf1B\xbf\x00\x00\x00\xa0T\xf2g\xbf\x00\x00\x00`\'t\x8e?\x00\x00\x00@\xe6\xba\x84\xbf\x00\x00\x00\xe0\x0f\xccP\xbf\x00\x00\x00 Y\x04\x82?\x00\x00\x00\xc0\x8c\x1a{?\x00\x00\x00\xe0\x0c^l?\x00\x00\x00 \x02]1?\x00\x00\x00@6Hr?\x00\x00\x00 \n\xf9z?\x00\x00\x00\xc0;n\x82?\x00\x00\x00@\xd8Or\xbf\x00\x00\x00@Q\x03\x8b?\x00\x00\x00\x00!\x06\x80?\x00\x00\x00@\x85\x94G?\x00\x00\x00`\xc9dL\xbf\x00\x00\x00\x80\xb5\x0f\x91\xbf\x00\x00\x00\xe0\x9f1\x88\xbf\x00\x00\x00\xc0\xeb\x8c\x91?\x00\x00\x00@W\xc6<?\x00\x00\x00\x00sns?\x00\x00\x00`\x86\xe6\x87?\x00\x00\x00`\xc8\xb7\x80\xbf\x00\x00\x00\x00\xc0B~\xbf\x00\x00\x00\x80\xc6\x8ez\xbf\x00\x00\x00@\r\x8d`\xbf\x00\x00\x00\xc0{\x01\x85\xbf\x00\x00\x00@v\xcbm\xbf\x00\x00\x00\xa0K\x06\x93\xbf\x00\x00\x00\xe0i{^?\x00\x00\x00\xe0\x03Ds?\x00\x00\x00\xc0\x1am\x8a\xbf\x00\x00\x00 -mk?\x00\x00\x00 FOv\xbf\x00\x00\x00\xe0\xc6\x99\x84\xbf\x00\x00\x00\x80\xe7\xafa\xbf\x00\x00\x00\x00\xf1\xeez?\x00\x00\x00\xe0\x9ay\x90?\x00\x00\x00\xa0n\x03V\xbf\x00\x00\x00\xc0\xbe\x08\x8b\xbf\x00\x00\x00\xe0\xc8\xc9b\xbf\x00\x00\x00@\x12\xec\x89?\x00\x00\x00 2\xcb\x85?\x00\x00\x00\x80\xf9R\x94\xbf\x00\x00\x00\x00!\xf6{\xbf\x00\x00\x00\x80\xa9\x02\x85?\x00\x00\x00\xc0\x8f\xc5b\xbf\x00\x00\x00\x80\xdfIV\xbf\x00\x00\x00@\x98\x02Q?\x00\x00\x00\xa0\xeex\x8b?\x00\x00\x00@\x8fS\x94?\x00\x00\x00\xa0X\x10w?\x00\x00\x00\xe0\xc8\x0e\x82?\x00\x00\x00`\x19\xe4S\xbf\x00\x00\x00\x00G\xea\x94?\x00\x00\x00\xa0\xbdR\x8d\xbf\x00\x00\x00\xa0\x84\x94I?\x00\x00\x00\xe0$#\x92?\x00\x00\x00`3\x80\x92?\x00\x00\x00\xa0\x1b+\x7f\xbf\x00\x00\x00\xe0\ni"\xbf\x00\x00\x00`~k]\xbf\x00\x00\x00\xa0\x02\xb8\x91\xbf\x00\x00\x00\x00>.i?\x00\x00\x00\xe0\x18Sq?\x00\x00\x00\xa0y\x88\x84\xbf\x00\x00\x00\x00\x82~\x90?\x00\x00\x00\x00\x95n_?\x00\x00\x00 \xc7\x93\x8e\xbf\x00\x00\x00@\xd0\x0eq\xbf\x00\x00\x00\xc0\x83\xca\x81?\x00\x00\x00\xa08\x11\x91?\x00\x00\x00 \x87\xdff?\x00\x00\x00\xa0\xa6\xe4b\xbf\x00\x00\x00@\xb3\xfe\x89?\x00\x00\x00\x00I9w\xbf\x00\x00\x00\xc0s\xe5\x8d?\x00\x00\x00\x00\xcfQ\x85\xbf\x00\x00\x00\xe0\x81\xcb\x84?\x00\x00\x00\xc0\xf6\x0e\xa0\xbf\x00\x00\x00\x00\x99\xec\x89\xbf\x00\x00\x00\x80\xbda~?\x00\x00\x00`=\xb3}\xbf\x00\x00\x00\xa0!\x90\x91?\x00\x00\x00\x00aw\x82?\x00\x00\x00\xc0\xa0\xdf\x81\xbf\x00\x00\x00\xa0\xa6H\x83\xbf\x00\x00\x00\xa0\x1fF\x90?\x00\x00\x00 \xc7#X\xbf\x00\x00\x00\xe0\x8c\x99`?\x00\x00\x00 \xfb\xef\x8c\xbf\x00\x00\x00\x80\xa0&E\xbf\x00\x00\x00 \xf0.\x92?\x00\x00\x00\x00v\x13y\xbf\x00\x00\x00\xa0\x96@\x82?\x00\x00\x00\xc0\x87\xf4x\xbf\x00\x00\x00\xc0\x99P\xf6>\x00\x00\x00 \xa0\xeby\xbf\x00\x00\x00\x80h\x05W\xbf\x00\x00\x00`\xab\xdaS\xbf\x00\x00\x00\xa0m\xfa\x86\xbf\x00\x00\x00\xa0\xac\xcd\x90\xbf\x00\x00\x00\xc0\xcdGI?\x00\x00\x00 \xa7\x9f=\xbf\x00\x00\x00\x00\xcb\x9dn\xbf\x00\x00\x00\x80\xa6~c?\x00\x00\x00\xa0\xdb\xdca?\x00\x00\x00\xe0\x0eUk\xbf\x00\x00\x00\x809\x1d\x8b\xbf\x00\x00\x00\xe0\x8c\xf1w\xbf\x00\x00\x00 \xe9\x8c\x9a?\x00\x00\x00`\x95\xcbG?\x00\x00\x00\x00\xa9I\x90\xbf\x00\x00\x00`\xe6\xf4\x8a\xbf\x00\x00\x00\x00\xc9\x88e\xbf\x00\x00\x00 \x19\xaa\x89\xbf\x00\x00\x00@3rq?\x00\x00\x00\xc0)\xf4R\xbf\x00\x00\x00\x80\xdd"u\xbf\x00\x00\x00 \xb4\\\x8b?\x00\x00\x00\xa0u\xbe[\xbf\x00\x00\x00@mM{\xbf\x00\x00\x00\xc0\x9bVi\xbf\x00\x00\x00 \xe5\x0fw\xbf\x00\x00\x00\xe0$\x1f\x80?\x00\x00\x00\xc0T\x92y?\x00\x00\x00\x80\x8dB\x90?\x00\x00\x00\x80\xe4\x94\x89?\x00\x00\x00\xa0O\x83l\xbf\x00\x00\x00@\xe58\x86?\x00\x00\x00\x00\xbc\xe3\x8c?\x00\x00\x00 aKg\xbf\x00\x00\x00\xa0\xfa\xc9\x8b?\x00\x00\x00`\xf0J\x82?\x00\x00\x00 6\xddp?\x00\x00\x00\x804\x81N\xbf\x00\x00\x00\xe0\xb6\xe2l?\x00\x00\x00\xc0F\xb8X?\x00\x00\x00\xa0@F\x91?\x00\x00\x00\x00`\x14\x8d?\x00\x00\x00`\xbf\x80p?\x00\x00\x00 H\xb3j\xbf\x00\x00\x00\xe0>\xe0\x81?\x00\x00\x00\xe0\x18\n\x80?\x00\x00\x00 \xa8-e?\x00\x00\x00 U\xa3v\xbf\x00\x00\x00\xa08\x14y?\x00\x00\x00\x00\xc1\xcf\x82?\x00\x00\x00\x00\xfbOd?\x00\x00\x00\x00l\xd8j?\x00\x00\x00\x80\x10.\x8e?\x00\x00\x00\xc0\xca\xc0{?\x00\x00\x00\x80b-{\xbf\x00\x00\x00@\xa2z\x80\xbf\x00\x00\x00\xe0\x14*o\xbf\x00\x00\x00@\xf8^|\xbf\x00\x00\x00\xa0g\x91v?\x00\x00\x00@\x82e\x80?\x00\x00\x00\x80\x1d`f?\x00\x00\x00\x80\x06[e\xbf\x00\x00\x00\xc0\xef\x893\xbf\x00\x00\x00 y\x07\x83?\x00\x00\x00 \xbc\xaa\x80\xbf\x00\x00\x00\xa0T\xc4u\xbf\x00\x00\x00\xa01w\x83\xbf\x00\x00\x00\xa0G\x01\x9b?\x00\x00\x00\xe0KV\x89\xbf\x00\x00\x00\x00\x9c\x84\x96\xbf\x00\x00\x00 \xdc\xebj?\x00\x00\x00\x00\xb3\x0cf\xbf\x00\x00\x00\xe0u\x81\x84?\x00\x00\x00\x00\x9b\x05j\xbf\x00\x00\x00\x80f1\x85\xbf\x00\x00\x00\x00\xaf\xfc\x8b?\x00\x00\x00\xa0\xf2\xdf\x8d?\x00\x00\x00\xe0A\x9bk?\x00\x00\x00\xa0_\xa9g\xbf\x00\x00\x00 ?`q\xbf\x00\x00\x00\xc0\x80\x1d\x89\xbf\x00\x00\x00`Y\xe3|\xbf\x00\x00\x00\xe0\xfcG\x80?\x00\x00\x00 \xdd\xce\x82\xbf\x00\x00\x00\xe0([p?\x00\x00\x00@\xa58a?\x00\x00\x00\xc08I\x89?\x00\x00\x00\x80\xd6i|?\x00\x00\x00\xe0\xa1\xa3\x97?\x00\x00\x00`\x16 y?\x00\x00\x00\x00!\xac\x84?\x00\x00\x00\xa0\x1a\xa7O\xbf\x00\x00\x00 !\xa9\x8a\xbf\x00\x00\x00`\xf2\x12\x89\xbf\x00\x00\x00\xa0\xb6\x934\xbf\x00\x00\x00\x80\xa0<\x87?\x00\x00\x00`\x13\x04o?\x00\x00\x00\xe0\xbf\x86g\xbf\x00\x00\x00 \x87\xeb\x8d?\x00\x00\x00@\xb9h\x94\xbf\x00\x00\x00\x80\xa4\x90\x91?\x00\x00\x00@\xdb\xa3\x86\xbf\x00\x00\x00`OB\x8b\xbf\x00\x00\x00@!\x86\x8c?\x00\x00\x00\xc0\xff#l?\x00\x00\x00\xa0\x1c%\x8b?\x00\x00\x00\xa0\xad\xd4w?\x00\x00\x00@\x80\xf7\x80\xbf\x00\x00\x00\x80\xb7MY\xbf\x00\x00\x00@\xa7\xfb\x82\xbf\x00\x00\x00\x00\xc5\x8c\x8d?\x00\x00\x00\xa0\x10\x1c\x97\xbf\x00\x00\x00\xe0K(u\xbf\x00\x00\x00\x803Bu?\x00\x00\x00\x00\xa7\x11t?\x00\x00\x00\xe0\x06\x92u\xbf\x00\x00\x00\xe0c\x14G?\x00\x00\x00\xc0\n\x81w\xbf\x00\x00\x00\xc0m\xb7\x89?\x00\x00\x00\xa0Pz\x93?\x00\x00\x00`\x9b\t\x8d\xbf\x00\x00\x00`\x06\xe2\x90?\x00\x00\x00@E5\x94\xbf\x00\x00\x00\x80\x90RV\xbf\x00\x00\x00 \xdb\xdf~?\x00\x00\x00\x80\x00\xaf\x84?\x00\x00\x00\x00\x89n\x83\xbf\x00\x00\x00\xa0\xad\x0f`\xbf\x00\x00\x00\xc0e\x04\x8c?\x00\x00\x00\x80\xde\xedd?\x00\x00\x00\x00\x89\x17\x81?\x00\x00\x00\xa00\x18`?\x00\x00\x00\xa0\xae \x87?\x00\x00\x00\xa0\xe7Ny?\x00\x00\x00\xa0\\4"\xbf\x00\x00\x00\xc0\xc5S\x82?\x00\x00\x00\xe0\x81G\x8e\xbf\x00\x00\x00\x00\xe0\x9bz\xbf\x00\x00\x00@\xf7&h?\x00\x00\x00\xc0\xb4\xa8{\xbf\x00\x00\x00\xe0\x80\ts\xbf\x00\x00\x00\x00\xd0Mr\xbf\x00\x00\x00\xe0\x14\xcd\x8e?\x00\x00\x00@\xd1\xd0|\xbf\x00\x00\x00`r#z?\x00\x00\x00\xc0f\xf0K?\x00\x00\x00`\xed-t\xbf\x00\x00\x00\xe0\x8b\x1d\x80?\x00\x00\x00\xa0\xc5Rw?\x00\x00\x00\xa0\x0e\xef\x88\xbf\x00\x00\x00\xa0\xd3\xabv\xbf\x00\x00\x00`W\n\x90\xbf\x00\x00\x00\xe0\x8f\xdf\x8e\xbf\x00\x00\x00 \xf0\xc9t\xbf\x00\x00\x00`\x96(\x81?\x00\x00\x00\xc0%X\x8b?\x00\x00\x00 \xc1ce\xbf\x00\x00\x00 \x02Kh?\x00\x00\x00@Jsr\xbf\x00\x00\x00@\x97\xed\x80\xbf\x00\x00\x00\x80\xcaI^?\x00\x00\x00\x80\xedv\x8b\xbf\x00\x00\x00`-\xd74?\x00\x00\x00\xa0\x1a\xa9\x8f\xbf\x00\x00\x00\xc0\xad\xa0\x8c\xbf\x00\x00\x00\x80E\x8d\x81\xbf\x00\x00\x00@\xa7Nz?\x00\x00\x00\xc0\x87\x19{\xbf\x00\x00\x00\x00=\x8az?\x00\x00\x00 g/T\xbf\x00\x00\x00\xe0j}a\xbf\x00\x00\x00@T\x06\x84\xbf\x00\x00\x00 \x91Dd?\x00\x00\x00\xa0\xd4\x00|\xbf\x00\x00\x00@\xbe\xf4~?\x00\x00\x00@IkX\xbf\x00\x00\x00\xe0\x1b\x8ai\xbf\x00\x00\x00@,3~?\x00\x00\x00@\x08=R\xbf\x00\x00\x00 \x9b\xea\x85?\x00\x00\x00\xa0\x96\xfc\x81\xbf\x00\x00\x00\xa0\xfc\x01x?\x00\x00\x00 \xdcp\x8e\xbf\x00\x00\x00\xa0\xb0\x1b}?\x00\x00\x00@(og?\x00\x00\x00\x00\nJ\x82\xbf\x00\x00\x00@K\xddv\xbf\x00\x00\x00\xe0\xdb\t\x8d?\x00\x00\x00\xe0\xba\xd2\x8f\xbf\x00\x00\x00\xc0mU~?\x00\x00\x00\xa0\xe8gb?\x00\x00\x00\xa0\xb9<|?\x00\x00\x00\xc0\xfd\xe05?\x00\x00\x00`#FN\xbf\x00\x00\x00\xe0\x13\x99s?\x00\x00\x00 1D\x88\xbf\x00\x00\x00\xe0yU\x81\xbf\x00\x00\x00@Z\xf1}\xbf\x00\x00\x00 <3o?\x00\x00\x00\x80v\x95\x83\xbf\x00\x00\x00 \x9bJ\x81\xbf\x00\x00\x00\xa0\xa1\xefR\xbf\x00\x00\x00@\x17\x112?\x00\x00\x00\xc0\xeaX\x14?\x00\x00\x00\xa0\xdf\x95\x80\xbf\x00\x00\x00\xa0\x9a\xaa\x80\xbf\x00\x00\x00\xe0\x06mh\xbf\x00\x00\x00\x80\x8b\xcc\x7f?\x00\x00\x00@V\x8en\xbf\x00\x00\x00 <\xb8??\x00\x00\x00`\xa8\x05o\xbf\x00\x00\x00\xa0\x9a6\x8b\xbf\x00\x00\x00\xa0\x94\xf8S?\x00\x00\x00\xa0%pb\xbf\x00\x00\x00\x804\xe2\x7f?\x00\x00\x00\x00<\xf1\x81?\x00\x00\x00\xa0\xb79\x89\xbf\x00\x00\x00\x00\xa2A~?\x00\x00\x00\x00L{\x97?\x00\x00\x00\x009\xa0V?\x00\x00\x00@\x1a\xc6\x8c?\x00\x00\x00@\xab]s\xbf\x00\x00\x00\x80\xa2\xf7\x82?\x00\x00\x00`\xab\\r\xbf\x00\x00\x00\x00\xd6\xd6t\xbf\x00\x00\x00 \x15\x0e\x86?\x00\x00\x00 \n\x05\x89\xbf\x00\x00\x00\x80\xcf\xd5@?\x00\x00\x00\xa0\x8b\xe0z?\x00\x00\x00\x00O<\x7f\xbf\x00\x00\x00\xc0V8\x93?\x00\x00\x00@\xb6\xaa|?\x00\x00\x00 <\x80\x93\xbf\x00\x00\x00\xa0\xb74s\xbf\x00\x00\x00\xe0N\x00y\xbf\x00\x00\x00`S\xd1r\xbf\x00\x00\x00\x80@\xed_?\x00\x00\x00\xe0b\xc7\x91?\x00\x00\x00 \x02\xdak\xbf\x00\x00\x00@\xfd\xc05\xbf\x00\x00\x00\x00\xf8\xb2y\xbf\x00\x00\x00\x00.\xc9\x85\xbf\x00\x00\x00@\xae\xb4\x8d\xbf\x00\x00\x00\xa0\x97\xe9H\xbf\x00\x00\x00@\x8b\rT\xbf\x00\x00\x00@Q\xfb??\x00\x00\x00\x00O7\x8b?\x00\x00\x00@Z\x9f#\xbf\x00\x00\x00\x00G\xc7o?\x00\x00\x00 >\xe0`?\x00\x00\x00\x80\xdf`Y?\x00\x00\x00`\xa0]Z\xbf\x00\x00\x00\x80\x88\xe6R?\x00\x00\x00\xe0D\x89\x92\xbf\x00\x00\x00\xa0\x19\x1fv\xbf\x00\x00\x00\xa0\xdd\x18T\xbf\x00\x00\x00@\xcdKc?\x00\x00\x00\xe0l\x88\x89\xbf\x00\x00\x00\x80B\xee\x8f?\x00\x00\x00\xa0\xb7\x1d\x8d?\x00\x00\x00\xa0\xac\x11\x89?\x00\x00\x00\xa0\xbb\xef\x8b?\x00\x00\x00 b^\x7f?\x00\x00\x00 \xac\x07t\xbf\x00\x00\x00\xc0]Qk?\x00\x00\x00 l\xb9\x83?\x00\x00\x00 P\xeay?\x00\x00\x00\x004;l?\x00\x00\x00\xc0\xefqc\xbf\x00\x00\x00\x80\x03\x9e\x9b?\x00\x00\x00@7\xc5\x86?\x00\x00\x00`\xd3\xdam\xbf\x00\x00\x00\x00\xad\xaco?\x00\x00\x00\x80^\xed\x8f?\x00\x00\x00@\xf3Ev?\x00\x00\x00\xc0E\x0c\x87\xbf\x00\x00\x00@<J\x8d\xbf\x00\x00\x00\xe0\xc3\xc4o?\x00\x00\x00\xc0\xd6\x93\x85?\x00\x00\x00\x80ts\x85\xbf\x00\x00\x00`\xb5:o?\x00\x00\x00@\xfd\xde\x84?\x00\x00\x00@j\x7f\x86?\x00\x00\x00 \x17\xef\x81\xbf\x00\x00\x00`\xce\x01k?\x00\x00\x00\x00V\xe6\x87?\x00\x00\x00`r\xf0\x8f?\x00\x00\x00\x80\xf2\xf9e\xbf\x00\x00\x00@\xf9\x9cT\xbf\x00\x00\x00\x00,\xc8\x87\xbf\x00\x00\x00\x80\x95\xcef\xbf\x00\x00\x00\x00\x10\xd7q?\x00\x00\x00\xa0\x10\x9fx?\x00\x00\x00@w\x7f}?\x00\x00\x00\xc0\xd3\x9dv?\x00\x00\x00\x80\xe4\xd2\x9e\xbf\x00\x00\x00\xe0\xe5\xe2\x80?\x00\x00\x00\xa0\xd3u\x96\xbf\x00\x00\x00\x00\x0e\xc4\x97\xbf\x00\x00\x00\x80\xc3\x94a?\x00\x00\x00\xa0O*\x9e\xbf\x00\x00\x00\xa0H\x7fv\xbf\x00\x00\x00\xc0X\xeb\x87?\x00\x00\x00\xe0\xc4Z\x87\xbf\x00\x00\x00\xe0\xe9\x14\x91\xbf\x00\x00\x00\xa0\x0fj\x7f?\x00\x00\x00\x00\xdfKz\xbf\x00\x00\x00@\x8cfj\xbf\x00\x00\x00\x00\x0c\xfbd\xbf\x00\x00\x00\x00\xb5C\x81?\x00\x00\x00\x80"Dd?\x00\x00\x00\xc0\xfc@\x83\xbf\x00\x00\x00\x00\xa6<\x91\xbf\x00\x00\x00\x00\x18\x84\x87\xbf\x00\x00\x00\xa0\xab\nm\xbf\x00\x00\x00@d\xeb5?\x00\x00\x00`\x07\xb4\x9e?\x00\x00\x00`\xcaF\x90?\x00\x00\x00\x00\xd7Q|\xbf\x00\x00\x00\x00\x9e\xb7\x8c\xbf\x00\x00\x00\xe0\x93[}\xbf\x00\x00\x00 \xaed5?\x00\x00\x00 \xda\xb1\x83?\x00\x00\x00 \t\xaaO?\x00\x00\x00`h\xa1\x81?\x00\x00\x00 \x9b\xb9\x7f\xbf\x00\x00\x00\xa0S\'\x82?\x00\x00\x00 [\xc3n\xbf\x00\x00\x00\xc0\xf9\xe35\xbf\x00\x00\x00\xc0\xa8\xe3u\xbf\x00\x00\x00\xe0*\x1cM?\x00\x00\x00 \xed1U\xbf\x00\x00\x00\x00*N|\xbf\x00\x00\x00\xe0~\xb7q?\x00\x00\x00\xe0zR[\xbf\x00\x00\x00@\x0f&q?\x00\x00\x00\x80\x18\x96r?\x00\x00\x00 {rX\xbf\x00\x00\x00@\x1aj{\xbf\x00\x00\x00\xe0k\xbe@\xbf\x00\x00\x00\x80\xdd\xd5\x7f?\x00\x00\x00\x80\x94\xcdl\xbf\x00\x00\x00 \xaf4m\xbf\x00\x00\x00@MKs?\x00\x00\x00\x80\x0e\xae\x83\xbf\x00\x00\x00\x80\xb7OQ\xbf\x00\x00\x00\x80\xbf\xae\x82?\x00\x00\x00\xa0\xd6\xe8\x91\xbf\x00\x00\x00 \xd8\xb6\x89?\x00\x00\x00 \xd78\x8e\xbf\x00\x00\x00@\xe2\xf9N?\x00\x00\x00 \x18\xce\x81\xbf\x00\x00\x00 \x1c\xa6\x84?\x00\x00\x00\x00{\xc2\x9d?\x00\x00\x00\xe0\xdd0c\xbf\x00\x00\x00`\xf5\x85z?\x00\x00\x00\xe0=\xe1b\xbf\x00\x00\x00\x80~Ur\xbf\x00\x00\x00\xc0o\x89\x84?\x00\x00\x00`\xec\'\x89?\x00\x00\x00\xc0\xd5\x9ax?\x00\x00\x00\xc0P\xf3\x8d\xbf\x00\x00\x00\xa0\xa95m\xbf\x00\x00\x00\xa0\xd3\x1aP\xbf\x00\x00\x00\x80\x1e.b\xbf\x00\x00\x00`\xfc\x04u\xbf\x00\x00\x00`\x85\x1bl\xbf\x00\x00\x00\xa0P}U?\x00\x00\x00\xe0xhq\xbf\x00\x00\x00\xe0\xbez\x11?\x00\x00\x00\xe0\x86\x07{?\x00\x00\x00 \xebIA?\x00\x00\x00\xa0!\xd2\x93?\x00\x00\x00\xa0\xb0.x\xbf\x00\x00\x00 \x134\x8e\xbf\x00\x00\x00\xc0\xbe\x86u\xbf\x00\x00\x00\x80s\xd1\x9a?\x00\x00\x00@\xfeT\x95?\x00\x00\x00`\xf9}\x89\xbf\x00\x00\x00\x80\x13.\x86?\x00\x00\x00`\x18A\x80?\x00\x00\x00\xe0Z\xa1~?\x00\x00\x00@\x81VT?\x00\x00\x00 $\xfd\x8a?\x00\x00\x00\x00\xd3\xa8r?\x00\x00\x00\xc0j\x11\x9b?\x00\x00\x00@\xfc\x89\x81\xbf\x00\x00\x00\xa0\xdfHb\xbf\x00\x00\x00\xa0@-\x80\xbf\x00\x00\x00\xe0\xc8\xcfg?\x00\x00\x00\xc06\xbc\x92\xbf\x00\x00\x00\x007\xc2\x9a?\x00\x00\x00\xc0\x14\xf9g?\x00\x00\x00`\r\xa6\x91?\x00\x00\x00\xe0:!w?\x00\x00\x00\xc0\x16B\x92?\x00\x00\x00 \x87\x17\x82?\x00\x00\x00\x80\xc29\x8a\xbf\x00\x00\x00\x80\ro\x80?\x00\x00\x00\x80\xf9#\x88\xbf\x00\x00\x00\xa0 \'}?\x00\x00\x00\x80U\xc2t\xbf\x00\x00\x00\xe0,\xf7Y?\x00\x00\x00 qb\x8f\xbf\x00\x00\x00`\xa4K\x89\xbf\x00\x00\x00`\x9f\xfdz?\x00\x00\x00\xa0\xf4\x1f\x81\xbf\x00\x00\x00\xc0`\xeeq\xbf\x00\x00\x00\xa0=d\x80?\x00\x00\x00@^\xb7)\xbf\x00\x00\x00`\xe2\x96\x80?\x00\x00\x00`\rD\x92\xbf\x00\x00\x00\x00\x0c^\x83\xbf\x00\x00\x00@Y+v\xbf\x00\x00\x00\xc0A\xf3t\xbf\x00\x00\x00\x00\x14BL\xbf\x00\x00\x00@\xbe\xe6x?\x00\x00\x00@\xab\xb1\x80?\x00\x00\x00 \x8b\xacy?\x00\x00\x00\x80\x90I\x8b\xbf\x00\x00\x00\xc0\xc7,U\xbf\x00\x00\x00`\xb6cs?\x00\x00\x00\xc02\xd4\x88\xbf\x00\x00\x00\x00h\xc3f?\x00\x00\x00\xe0qV\x84\xbf\x00\x00\x00\xa0Ysp\xbf\x00\x00\x00 \xd8\x19T\xbf\x00\x00\x00``^k\xbf\x00\x00\x00 \xad4\x82\xbf\x00\x00\x00\xe0S\xfer?\x00\x00\x00@\xfe7\x88?\x00\x00\x00@\xf5\xdc\x93?\x00\x00\x00\x00\x9d\xba\x80?\x00\x00\x00@\x82\x1b`?\x00\x00\x00\x00\xf5\xc7x?\x00\x00\x00\xc0\xa0F\x8c?\x00\x00\x00\x00\x8dOw\xbf\x00\x00\x00\x80\np\x97\xbf\x00\x00\x00\xa0\xc9f\x8a?\x00\x00\x00\xa0o~\x85\xbf\x00\x00\x00\xe0>\xb9S?\x00\x00\x00@\xf7N\x7f?\x00\x00\x00@\xba`m\xbf\x00\x00\x00\xc0\xce3\x7f?\x00\x00\x00 \x19\xa0}\xbf\x00\x00\x00\xc0\xbb_d\xbf\x00\x00\x00\xa0%8s?\x00\x00\x00@\xd6\xf3\x85?\x00\x00\x00\xa0 3~\xbf\x00\x00\x00`J\'s\xbf\x00\x00\x00`%\xc9\x8c?\x00\x00\x00@^\xc8\x90\xbf\x00\x00\x00\xe0]\x02\x8d?\x00\x00\x00@\xf5\x9es\xbf\x00\x00\x00`\xae<y?\x00\x00\x00\x80nVy?\x00\x00\x00@\x1d\x18\x86?\x00\x00\x00`\xc4\x9cx\xbf\x00\x00\x00`\xcfqw?\x00\x00\x00@f\xba`?\x00\x00\x00`\xfd\x8fs\xbf\x00\x00\x00@\xa1\x9ay?\x00\x00\x00\x00vqi\xbf\x00\x00\x00 \xd5`]?\x00\x00\x00\x00\xca\n\x8b?\x00\x00\x00\xc0~5p?\x00\x00\x00 \x85\xba\x80?\x00\x00\x00\xe0\xe2\x1di?\x00\x00\x00\x00R\xf6q\xbf\x00\x00\x00\x80L\xc4e?\x00\x00\x00 }\xf2\x8f\xbf\x00\x00\x00`\xaa\xb5\x85\xbf\x00\x00\x00\xc07\x93i\xbf\x00\x00\x00\xc0\x11\xc0|?\x00\x00\x00\xc0\xee\xa5\x86\xbf\x00\x00\x00\xe0[\xdb\x81\xbf\x00\x00\x00@\xd8E\x9d?\x00\x00\x00 >v\x80\xbf\x00\x00\x00 \x8f\x0f\x85?\x00\x00\x00\x80\xca6v\xbf\x00\x00\x00\x00\xc3\xc1c\xbf\x00\x00\x00 \xcb\xadq\xbf\x00\x00\x00\x80\xa8\xb9x\xbf\x00\x00\x00\xa0\x9a\xbeN?\x00\x00\x00\xc0\x16\x12f?\x00\x00\x00\xa0\xc9\xf4I?\x00\x00\x00`\x91\x08\x80?\x00\x00\x00\xc0\xbb\x8f\x05?\x00\x00\x00\x80\x91^z\xbf\x00\x00\x00\xe0\xd0\xf1i?\x00\x00\x00\xa0"T5\xbf\x00\x00\x00\x80\xaf\x98\x95\xbf\x00\x00\x00 \x8a\x9d\x8f\xbf\x00\x00\x00@\xcfU~\xbf\x00\x00\x00 uiy?\x00\x00\x00\x80\x0e_\x92\xbf\x00\x00\x00\xa0\x91\x01y?\x00\x00\x00 \x90\x18\x87?\x00\x00\x00 \xc8>\x86\xbf\x00\x00\x00\xa0\xef(b\xbf\x00\x00\x00@\xa3\xff\x86\xbf\x00\x00\x00\xa0l\x0f\x82?\x00\x00\x00\xa0z\xf5l?\x00\x00\x00 z\xb7h\xbf\x00\x00\x00\xa0o\xd9E?\x00\x00\x00\x80\x96\xc1o\xbf\x00\x00\x00@+-\\?\x00\x00\x00 \xa2;r\xbf\x00\x00\x00 \xf5}\x80\xbf\x00\x00\x00\xc0\xf0\x7fm\xbf\x00\x00\x00\xa0\n\xd0^?\x00\x00\x00\xa0\xe3\xfa\x90?\x00\x00\x00\xc0\x08\x08g?\x00\x00\x00\xa0=&g\xbf\x00\x00\x00 \x84\x89\x87?\x00\x00\x00\x00\x08~\x85\xbf\x00\x00\x00 \xbajm\xbf\x00\x00\x00\xe0\x89[a\xbf\x00\x00\x00@\xe4yn?\x00\x00\x00\x00g>\x94\xbf\x00\x00\x00@*vx?\x00\x00\x00 \xeeB\x91\xbf\x00\x00\x00 \x98\xfcp\xbf\x00\x00\x00`\x1dp\x88?\x00\x00\x00@k\xad}?\x00\x00\x00\x80\x936\x88\xbf\x00\x00\x00\xe0\x03\x90\x90?\x00\x00\x00\x80\xc6\x8d\x84?\x00\x00\x00\x00\xa1\x8fl\xbf\x00\x00\x00`\x8c\x1at\xbf\x00\x00\x00\xa0I\xfc\x8a\xbf\x00\x00\x00\xc0k\x83\x93?\x00\x00\x00\x00\xe5Ka\xbf\x00\x00\x00\xa0y{n\xbf\x00\x00\x00\x80t\x05c?\x00\x00\x00\xa0\xc8\xb1e?\x00\x00\x00\xc0\x8c\xefX?\x00\x00\x00`\xd3\xa5f\xbf\x00\x00\x00\x80\xe96\x8c\xbf\x00\x00\x00\xa0\x15\xc4\x83\xbf\x00\x00\x00\x80\x08\xdc\x85?\x00\x00\x00`\xfd\x12\x90\xbf\x00\x00\x00 \x08\xbdz?\x00\x00\x00@\xac>N\xbf\x00\x00\x00@\x06\xcaF?\x00\x00\x00`t\xf4\x93?\x00\x00\x00 !Z\x85\xbf\x00\x00\x00\x00<m\x9b?\x00\x00\x00 \xd0|\x9a?\x00\x00\x00 \xe5\xd7t?\x00\x00\x00@\xfb\xfff\xbf\x00\x00\x00\xa0\x1a_\x85\xbf\x00\x00\x00\xe0\xa7\x18^?\x00\x00\x00\xc0\xdd\x8as?\x00\x00\x00\xe0\xbe\x97w\xbf\x00\x00\x00\x00\xb3\xb6}?\x00\x00\x00\x00\xd7;\x82\xbf\x00\x00\x00\xe0\x1e\x82g?\x00\x00\x00\xc0\x01\xbau\xbf\x00\x00\x00 \xa6\xc8\x8c\xbf\x00\x00\x00 d\x93q\xbf\x00\x00\x00`~%\x92\xbf\x00\x00\x00@\xb9\xb6\x8d\xbf\x00\x00\x00\xe0\xdcT \xbf\x00\x00\x00@-_r\xbf\x00\x00\x00\xc0x\xf9\x96?\x00\x00\x00\x80Y\x10\x8f\xbf\x00\x00\x00\xe0\x930;\xbf\x00\x00\x00\xc0\x1d\xcd@\xbf\x00\x00\x00\xe0\x83G\x8b?\x00\x00\x00\x00Z#\x80\xbf\x00\x00\x00\xa0\xdeV\x97\xbf\x00\x00\x00 \x92\xcaj\xbf\x00\x00\x00\x80\xb9\x04\x93\xbf\x00\x00\x00\xe0\xdbJ\x99\xbf\x00\x00\x00\x80\x7f\x1c\\\xbf\x00\x00\x00\xc0\xfc\xd4B\xbf\x00\x00\x00`\xe5\x1ep\xbf\x00\x00\x00\xa0\xacO\x82\xbf\x00\x00\x00\xa0K\xac\x8c?\x00\x00\x00 \x07\x18|?\x00\x00\x00 \xcf\x91\x94?\x00\x00\x00\xe0_\x0b\x80?\x00\x00\x00\x80\xae\xc1J?\x00\x00\x00@\xf1tx\xbf\x00\x00\x00 \x91\xd0t?\x00\x00\x00\xc0\x17\x83s?\x00\x00\x00@d \x81\xbf\x00\x00\x00\xc0\x12}\x97?\x00\x00\x00\xe0\x9e\xeey?\x00\x00\x00\x80U\xdcg?\x00\x00\x00@\x83\xba\x91?\x00\x00\x00\xe0m\xdc\x91\xbf\x00\x00\x00`\xaf\xde~\xbf\x00\x00\x00\x80l\x1c\x82\xbf\x00\x00\x00@\xbe\xa7d?\x00\x00\x00\x80\x1d\xbf<\xbf\x00\x00\x00 T\xb6\x86?\x00\x00\x00\xe0\xa7\xeay\xbf\x00\x00\x00`\xce@c\xbf\x00\x00\x00`2\x8f\x80?\x00\x00\x00\xc0K\xe3~?\x00\x00\x00\x80w\xad\x90\xbf\x00\x00\x00`\xe5\xe0\x82?\x00\x00\x00\xa0\xfb|\x8a?\x00\x00\x00@\x05\x9dA?\x00\x00\x00\xa0\x8e\x15d?\x00\x00\x00\xa0\x13\xe6p\xbf\x00\x00\x00\xc0-[l?\x00\x00\x00\x00I\xd6\x87\xbf\x00\x00\x00`\xccE\x99\xbf\x00\x00\x00\x00\x90+v?\x00\x00\x00\x00`CY?\x00\x00\x00\xe0\xfba\x81\xbf\x00\x00\x00 \x0f\xc8w\xbf\x00\x00\x00`\xf4\x7fz\xbf\x00\x00\x00@\xfb\xe7[?\x00\x00\x00\xe0\x98\x13n?\x00\x00\x00\x00\x84\x87q?\x00\x00\x00 :hb?\x00\x00\x00@Y^Q\xbf\x00\x00\x00\xc0\x97\xf6^?\x00\x00\x00 Upj\xbf\x00\x00\x00 \x13[|\xbf\x00\x00\x00\xc0_\x85K?\x00\x00\x00`1\xe0x?\x00\x00\x00\xe0\x17L<\xbf\x00\x00\x00 \x1b\xfb\x9d?\x00\x00\x00\xa0\x1a\x96L\xbf\x00\x00\x00\x00L\x9a\x8c?\x00\x00\x00\x80\xee\xdf\x8b\xbf\x00\x00\x00`\xcf/\x8f\xbf\x00\x00\x00\xe0\xed\x99/?\x00\x00\x00\xa0\xe1\x15g?\x00\x00\x00\xc0\x8c\xb3v?\x00\x00\x00@D\x9c_\xbf\x00\x00\x00\x00\x90\xddx?\x00\x00\x00\x00\x7f\xbdb?\x00\x00\x00@l9T\xbf\x00\x00\x00@\x17\x8fq\xbf\x00\x00\x00 \xf8jx\xbf\x00\x00\x00\xc0\x8b\x19\x85\xbf\x00\x00\x00\x00r7a\xbf\x00\x00\x00\xc0\x07=\x8a?\x00\x00\x00`\x16\xdbz?\x00\x00\x00`\xe5\xce\x8c\xbf\x00\x00\x00 \xd2@\x8b?\x00\x00\x00@\xc7\x9e\x97\xbf\x00\x00\x00@z\xfa\x81\xbf\x00\x00\x00\xc0\xe5\xcc\x8a\xbf\x00\x00\x00\x00\xb6q}?\x00\x00\x00\x00\x19C\x89?\x00\x00\x00\x00:\xa4\x80?\x00\x00\x00\xc0\x9aS_?\x00\x00\x00\x00\x130q\xbf\x00\x00\x00 B\xedK?\x00\x00\x00@\xb1yu?\x00\x00\x00\x00N\x08\x94\xbf\x00\x00\x00\x80\x94_\x94?\x00\x00\x00\xe0Pv\x86\xbf\x00\x00\x00\xe0\xec|f\xbf\x00\x00\x00`\\\xb1\x88?\x00\x00\x00\x00\xa1\x00q\xbf\x00\x00\x00\x80\x1bOz\xbf\x00\x00\x00\xe0\xc7^\x1e?\x00\x00\x00\x00}\x03\x92?\x00\x00\x00\xc0|\x02r\xbf\x00\x00\x00\x00\xb6;\x85\xbf\x00\x00\x00`XOv\xbf\x00\x00\x00\xa0\xe27p?\x00\x00\x00\xa0:M{\xbf\x00\x00\x00 \xb9\xc5T?\x00\x00\x00`\x835u\xbf\x00\x00\x00`\xaa\xf6\x85\xbf\x00\x00\x00\x00\xdf\xf3l?\x00\x00\x00\x80%N\x8b\xbf\x00\x00\x00`\xbf\xf5\x8f?\x00\x00\x00\x80\xac0\x84?\x00\x00\x00@\n\xcb\x86?\x00\x00\x00\xa0\xeb\xc2\x91\xbf\x00\x00\x00\xe0\xe7\xc4~?\x00\x00\x00\xa0\x9c\xbbf?\x00\x00\x00 \x7f+p?\x00\x00\x00\x80"\xe8y\xbf\x00\x00\x00\xc0\x0c\x14\x87?\x00\x00\x00`$7\x84?\x00\x00\x00\xc0\x17Dd\xbf\x00\x00\x00\xc0\xb8\x14Q?\x00\x00\x00\xe0}\x1eZ?\x00\x00\x00 \x11\xc5\x8c?\x00\x00\x00 \x9b\to?\x00\x00\x00`\xf2\x15j\xbf\x00\x00\x00@\xf85\x91?\x00\x00\x00\xe0\xce\xf5U\xbf\x00\x00\x00\x80\xb9\x08\x80?\x00\x00\x00\xc0\x9cRw?\x00\x00\x00`\xe9\xa5\x8e?\x00\x00\x00 -\x8es?\x00\x00\x00\xe0\xcf\xdb\x84?\x00\x00\x00 /\xe6"\xbf\x00\x00\x00\xe07m1?\x00\x00\x00\xe0\xfcz\x95?\x00\x00\x00@\x8bn\x81?\x00\x00\x00\xe0\xc7\xa8\x80?\x00\x00\x00\xc0\xca\x12g\xbf\x00\x00\x00\xc0\xc4\xf9\x83\xbf\x00\x00\x00\xe0\xf7\\\x82\xbf\x00\x00\x00\xa0\x9a\xdf\x8a\xbf\x00\x00\x00\x00\xd1\xe3W\xbf\x00\x00\x00 <$5?\x00\x00\x00\xe0[f\x0b\xbf\x00\x00\x00`\x18\x9b\x95\xbf\x00\x00\x00\xa0\xeeLF\xbf\x00\x00\x00\x80\xc5\xe3\x91\xbf\x00\x00\x00@\xb7*G\xbf\x00\x00\x00\xe0N\x0e\x88\xbf\x00\x00\x00 x\xb4s?\x00\x00\x00@I5b\xbf\x00\x00\x00\x00\xb2\x80e?\x00\x00\x00 \xa6\x83\x86\xbf\x00\x00\x00\xc0\xa0\xa2\x82\xbf\x00\x00\x00\x80\xc7`2?\x00\x00\x00\xe0\x80\x80v\xbf\x00\x00\x00\xe0\xc29\x87?\x00\x00\x00\xa0\xa4n\x91\xbf\x00\x00\x00\xe0K`\x80?\x00\x00\x00\xe0\xd0NW\xbf\x00\x00\x00\x00\x9f\x0ft\xbf\x00\x00\x00\xc0\xc5\\\x81?\x00\x00\x00\xe0Rth\xbf\x00\x00\x00@\x1f\xde\x81\xbf\x00\x00\x00@\x91YO?\x00\x00\x00\x80\xa8\xc3d\xbf\x00\x00\x00`\x99bs\xbf\x00\x00\x00\xe0A\xcd\x90?\x00\x00\x00 y\x03l\xbf\x00\x00\x00`\xc0X\x89\xbf\x00\x00\x00\xa0\x12\xd2\x85?\x00\x00\x00@\x18\xc6x?\x00\x00\x00 8\xa6\x9b\xbf\x00\x00\x00\x80t\x8a\x82\xbf\x00\x00\x00`\x7f~b\xbf\x00\x00\x00 {\x94t?\x00\x00\x00\x80\xd1\xc5\x94?\x00\x00\x00\xe0\xce\xc0G?\x00\x00\x00\xa0\x99\x9d\x92?\x00\x00\x00\xc0\xe2~\x87\xbf\x00\x00\x00`C\x08m\xbf\x00\x00\x00\xe0\xc3\x16\x8e\xbf\x00\x00\x00\xe0\x8e+\x94\xbf\x00\x00\x00\xe0\x9d\rX?\x00\x00\x00@-\xf7n\xbf\x00\x00\x00\x80t\x13\x95\xbf\x00\x00\x00\x00\xc9\xbbk\xbf\x00\x00\x00 \xab\x15s\xbf\x00\x00\x00@\xe0\xafv\xbf\x00\x00\x00@\xb7\xea`?\x00\x00\x00`\xfa,w?\x00\x00\x00\xe0<M\x9b?\x00\x00\x00\xe0\xcd\xbei\xbf\x00\x00\x00\xa0\x07\x8aj\xbf\x00\x00\x00 \x1b\x10\x95?\x00\x00\x00 \xcc\xc7S?\x00\x00\x00\x80\xa0\x92n?\x00\x00\x00\x80"q\x8e?\x00\x00\x00\x00.\x9f}\xbf\x00\x00\x00\xa0\xac\xc1\x8b?\x00\x00\x00\xe0\x7f\xbaq\xbf\x00\x00\x00@\xd0Z\x92?\x00\x00\x00\xc02\xe5x\xbf\x00\x00\x00@i\xb3\x80\xbf\x00\x00\x00@\xba@i?\x00\x00\x00 \xa6#u?\x00\x00\x00`\x0b\x9du?\x00\x00\x00\xe0\x8c\x04\x8a?\x00\x00\x00\xa0\x863-\xbf\x00\x00\x00\x00M"\x93?\x00\x00\x00`\x9cu\x80?\x00\x00\x00\xa0\x9f\xe2k\xbf\x00\x00\x00\x80>Ge\xbf\x00\x00\x00\xc0{\xa3Q?\x00\x00\x00\xe0R\xaa4?\x00\x00\x00\xe0BJY\xbf\x00\x00\x00\xe0F\x9e~\xbf\x00\x00\x00\xc0\xf8\x80\x84\xbf\x00\x00\x00\xe0\xe5\xc1\x85?\x00\x00\x00\xc0\x82\xc0\x82?\x00\x00\x00\xa0\x14_\x90?\x00\x00\x00`z\xaax?\x00\x00\x00 \x97\xdcy?\x00\x00\x00\x00w\xd9\x88?\x00\x00\x00\xa0\xf2\x17\x84?\x00\x00\x00`\x83\x85\x9e?\x00\x00\x00@\x99i\x8d?\x00\x00\x00\xe0\x9f\x1b\x92?\x00\x00\x00\x00y\x134\xbf\x00\x00\x00\xe0/\xce\x82?\x00\x00\x00`d\xb5k\xbf\x00\x00\x00\xc0.\x94f?\x00\x00\x00\xc0\xcb\x9c\x86\xbf\x00\x00\x00\xa0\x0c\x9e{?\x00\x00\x00\xe0\xcb\xcc}\xbf\x00\x00\x00\xe0\xb8y\x91?\x00\x00\x00\x00\xdf\x0cs\xbf\x00\x00\x00 \xca\xbc\x85\xbf\x00\x00\x00`>L\x89?\x00\x00\x00\xc0\x92Md?\x00\x00\x00\x80\xd7Hp\xbf\x00\x00\x00\x80\x9c\xf5v\xbf\x00\x00\x00\xc0\x9a\xcaq?\x00\x00\x00 \xcc\xac\x83\xbf\x00\x00\x00\xc0\x03\xe9\x93?\x00\x00\x00@\xbc\xa4]\xbf\x00\x00\x00 j\x87\x81?\x00\x00\x00\x00\'N\x8d\xbf\x00\x00\x00\xe0\xd1\x9dc?\x00\x00\x00`\xb9\xb2\x83\xbf\x00\x00\x00``\xa7k\xbf\x00\x00\x00\xe0\x1b\x17\x8b\xbf\x00\x00\x00\xe0\xb6\xbe\x87\xbf\x00\x00\x00\x00\x1d\xada\xbf\x00\x00\x00\xc0\x01\xb2\x80?\x00\x00\x00@\x8e\xffi\xbf\x00\x00\x00\xe0R\xe8\x92\xbf\x00\x00\x00 \xb4\xb7\x90\xbf\x00\x00\x00`\x87a\x82?\x00\x00\x00`\xc8.u\xbf\x00\x00\x00\x00T~n\xbf\x00\x00\x00\xc00\x19r?\x00\x00\x00\xe0\x1d\rY?\x00\x00\x00\x80\x08O\x91?\x00\x00\x00 \x12\xa4f\xbf\x00\x00\x00\xe0\x04\xb2Y?\x00\x00\x00\x80\xbc\x87\x8c?\x00\x00\x00\xa0ou\x88?\x00\x00\x00 \xe0\xc7\x91\xbf\x00\x00\x00\x00^:\x7f?\x00\x00\x00\xa0W\xacy\xbf\x00\x00\x00`}\xedV?\x00\x00\x00 P\xe5v?\x00\x00\x00`\xc0\xef\x8a?\x00\x00\x00\x00\xffL`\xbf\x00\x00\x00\x80\xce\x8de\xbf\x00\x00\x00@}-b\xbf\x00\x00\x00\xc0\xb7\xae\x84?\x00\x00\x00\xe0\xa7\x9c\x8e\xbf\x00\x00\x00\xa0q\xc9\x82\xbf\x00\x00\x00`4\xe1e\xbf\x00\x00\x00\x808\xaa\x96\xbf\x00\x00\x00 \xcfYd?\x00\x00\x00\x00p\x85\x8f\xbf\x00\x00\x00 g\x01}\xbf\x00\x00\x00\x00\x15\x16x\xbf\x00\x00\x00\xe0\x82\x07>?\x00\x00\x00\xc0\xc7)\x82\xbf\x00\x00\x00\x00\xae2\x85\xbf\x00\x00\x00@)HD\xbf\x00\x00\x00@0\xe5u\xbf\x00\x00\x00\x80\x16\x8c\x8d?\x00\x00\x00\xa0\x06\xd3m?\x00\x00\x00\xa0&\x9d}?\x00\x00\x00\x80 \xdb\x88\xbf\x00\x00\x00\xa0\x05\x8d\x92\xbf\x00\x00\x00\xa0U\xa8h\xbf\x00\x00\x00\xa0\x10\xb0v\xbf\x00\x00\x00 \xabq\x92?\x00\x00\x00\xe0\xfbJ~?\x00\x00\x00@\x83\xea\x83?\x00\x00\x00\xe0\x82\xaay\xbf\x00\x00\x00\xc0\xece}\xbf\x00\x00\x00\xe0\xc7Z\x8c\xbf\x00\x00\x00\x805\xb2\x82\xbf\x00\x00\x00\xe0g\xcdt?\x00\x00\x00`u2\x90?\x00\x00\x00 \xe1\x1fx?\x00\x00\x00@&\xcf\x9e\xbf\x00\x00\x00`\xa1@k\xbf\x00\x00\x00\x00\xf2\x07\x84?\x00\x00\x00@\xae\xacz?\x00\x00\x00@F\xc0^?\x00\x00\x00 M\x05\x89?\x00\x00\x00\xa0_\xbe}\xbf\x00\x00\x00 \x13e\x97\xbf\x00\x00\x00\xc0\\\x0c\x94?\x00\x00\x00\x00\xb3\r@?\x00\x00\x00\x00\x1b\x06\x81\xbf\x00\x00\x00\xc0{\x1f\x88\xbf\x00\x00\x00\x00\xe7\xb0x?\x00\x00\x00\x00{1\x85?\x00\x00\x00\xa0~\x16{\xbf\x00\x00\x00\xa0o\xffd?\x00\x00\x00\xc0\xb5\xffd?\x00\x00\x00 \xe9\x82k\xbf\x00\x00\x00`b\xbb\x92?\x00\x00\x00 I\xe3\x8f\xbf\x00\x00\x00\xe0\x1b-z\xbf\x00\x00\x00\xa0m\xc3q?\x00\x00\x00\x80\x01K]?\x00\x00\x00@\x18w|\xbf\x00\x00\x00 p\x10n?\x00\x00\x00\xe0\x1f\x82p?\x00\x00\x00@\xdf\xc4z\xbf\x00\x00\x00\x00\x86\xe0k?\x00\x00\x00\xe0\xdbK|?\x00\x00\x00\x00~\xb6m?\x00\x00\x00 \x9f\xca\x90?\x00\x00\x00\xa0]\x84n\xbf\x00\x00\x00\xe0\xb20\x8c\xbf\x00\x00\x00\xa0\xecAZ?\x00\x00\x00\xa0z\x99p\xbf\x00\x00\x00@g\xd3\x86\xbf\x00\x00\x00\x00\x03\x83\x8f?\x00\x00\x00\xa0S\'Z\xbf\x00\x00\x00\xa0\x05\xea\x83\xbf\x00\x00\x00`\r\x97j?\x00\x00\x00\x00\xaf\x85_\xbf\x00\x00\x00\x00\r\xd1\x85\xbf\x00\x00\x00`\x7f\x0fE\xbf\x00\x00\x00\x00\xbdQ\x1a?\x00\x00\x00 g_>\xbf\x00\x00\x00\x00\x12\xa3\x81\xbf\x00\x00\x00\xe0j\x8ay?\x00\x00\x00\x80\xb0Cf?\x00\x00\x00`\xc2\xfdZ\xbf\x00\x00\x00 azr\xbf\x00\x00\x00\xc0\xe7 O\xbf\x00\x00\x00\xa0\xbcu\x98\xbf\x00\x00\x00\xe0\xad\x84\x89?\x00\x00\x00@\x1c\ra\xbf\x00\x00\x00\xe0.Tk?\x00\x00\x00\x00\xf6\xeb\x8a\xbf\x00\x00\x00\xe0\x0bz\x82\xbf\x00\x00\x00\xe0\xdc\xa6\x80\xbf\x00\x00\x00\x00j\xady?\x00\x00\x00\xa0\xabai\xbf\x00\x00\x00@_\xc5\x8c?\x00\x00\x00\xa0>\xb1m\xbf\x00\x00\x00\x00\xff\xddU?\x00\x00\x00`\xe0\x80\x85\xbf\x00\x00\x00\xe0\xf0x\x90\xbf\x00\x00\x00\x80\xdd\x11\x80?\x00\x00\x00`Z\xa6\x85?\x00\x00\x00 \t1\x88?\x00\x00\x00`3\x11\x94\xbf\x00\x00\x00 \xd8S\x91?\x00\x00\x00\xa0ef\x82?\x00\x00\x00@\xc6\x95\x80?\x00\x00\x00 \x8b\xc4\xeb>\x00\x00\x00 \x96]\x92\xbf\x00\x00\x00\xe0h\xaf\x84\xbf\x00\x00\x00\xe0F\xdd\x8d?\x00\x00\x00\x00"He\xbf\x00\x00\x00 \xa6\x95\x9c?\x00\x00\x00\xa0\xab\xcfR\xbf\x00\x00\x00\xe0\x0cLr\xbf\x00\x00\x00\x80\xdf\'a\xbf\x00\x00\x00 V\xce\x8b?\x00\x00\x00`j\xd5~?\x00\x00\x00\xe0\x9e\x99n\xbf\x00\x00\x00\xe0\x91\xfeB\xbf\x00\x00\x00\x80\xb8\x0f\x81?\x00\x00\x00\xc0\xaak\x94\xbf\x00\x00\x00\xc0\xd3Ep\xbf\x00\x00\x00\x80E\x94f\xbf\x00\x00\x00`N\xe6~\xbf\x00\x00\x00\xc0\xc4\xacw\xbf\x00\x00\x00 JM7?\x00\x00\x00\xe0\xb8Cc?\x00\x00\x00\xa0\xed\xc3\x80\xbf\x00\x00\x00@\xcd\xe9\x8f?\x00\x00\x00\xc0bMl?\x00\x00\x00@\x13\x16\x89?\x00\x00\x00\xe0O\xf4\x85?\x00\x00\x00@S\x03d?\x00\x00\x00`\x84\x16w?\x00\x00\x00`\xc6\xfa\x8b\xbf\x00\x00\x00\xc0\xb5\xf2p?\x00\x00\x00`y\xa2\x7f\xbf\x00\x00\x00\x80k\x02\x80?\x00\x00\x00\xc0\xf6G}?\x00\x00\x00 \xb7\xd3u?\x00\x00\x00\x00%\x01\x90?\x00\x00\x00@\x03\x1b\x8b\xbf\x00\x00\x00\xe0u\xe9v\xbf\x00\x00\x00\xe0\xe5\xdd\x91\xbf\x00\x00\x00\x80\x8ej\x92\xbf\x00\x00\x00\xc0D\xc4\x82?\x00\x00\x00 \xdb\x92\x9f?\x00\x00\x00`\xee#~\xbf\x00\x00\x00\xc0q(W\xbf\x00\x00\x00`\xae{\x86\xbf\x00\x00\x00\x00@t\x95\xbf\x00\x00\x00\xe0\x1d)\x92?\x00\x00\x00\xa0\x041\x82\xbf\x00\x00\x00\xa0\xde\xf1~\xbf\x00\x00\x00\xe0\xbe\x11\x87?\x00\x00\x00\x80\x95W\x9b\xbf\x00\x00\x00\xc0\x18\xa3\x89?\x00\x00\x00\xe0\x97\xbey?\x00\x00\x00\xa0\xbe0\x95\xbf\x00\x00\x00\x80\x843@?\x00\x00\x00 \xfbS\x80?\x00\x00\x00\xe0\x81_s?\x00\x00\x00 \xda\xc0}\xbf\x00\x00\x00\xe0`\x9fg\xbf\x00\x00\x00\x00\x12Lv?\x00\x00\x00@\x8c*\x87?\x00\x00\x00\x00\x1c\xd8\x87\xbf\x00\x00\x00@\xbc\xcc\x83?\x00\x00\x00\xe0\xdaDp\xbf\x00\x00\x00\xe0\xfc\x11s\xbf\x00\x00\x00\xc0\xa1\xcfn\xbf\x00\x00\x00\xc0k_\x81\xbf\x00\x00\x00 v\x9d\x90?\x00\x00\x00`\x89\xf6\x89\xbf\x00\x00\x00\x80\x86&w\xbf\x00\x00\x00\x00ex{\xbf\x00\x00\x00\xe0X\x1d \xbf\x00\x00\x00@\xb0\xc0p\xbf\x00\x00\x00\xc0\xad\x1a|\xbf\x00\x00\x00\xa0[S\\?\x00\x00\x00\x80ki\x97?\x00\x00\x00\xe0@j\x84?\x00\x00\x00@\x8f\xc4\x80\xbf\x00\x00\x00\xc0Z\xac\x89\xbf\x00\x00\x00@\xc6\xe1U?\x00\x00\x00\xc0\xc1\x8c\x82\xbf\x00\x00\x00@I\x95H\xbf\x00\x00\x00\xe03\x86\x85?\x00\x00\x00`t\xa0\x81\xbf\x00\x00\x00`\xe8\x8c|\xbf\x00\x00\x00`NVT\xbf\x00\x00\x00\x00\xba\xd6\x90\xbf\x00\x00\x00\xe0H|)?\x00\x00\x00\xa0\x18It\xbf\x00\x00\x00\x000\xba\x90?\x00\x00\x00\xe0\xea{]\xbf\x00\x00\x00\xe0\xba\x8b\x90?\x00\x00\x00\xa0\xbdj\x8e?\x00\x00\x00 \xb6\xc0z\xbf\x00\x00\x00\x00\xf2\x01S?\x00\x00\x00\xa0\xe7(a?\x00\x00\x00\xa0\xef\x17\x87\xbf\x00\x00\x00\x80AY\x95\xbf\x00\x00\x00\xe0\xf4\x15\x9c?\x00\x00\x00\x00`F\x8d\xbf\x00\x00\x00\xc0\x1bbH?\x00\x00\x00 \x913U?\x00\x00\x00 \xa1tF?\x00\x00\x00 &\xe8t?\x00\x00\x00`\xc0\x15\x90\xbf\x00\x00\x00\x80\xef\xf0W\xbf\x00\x00\x00\x00\x8f3w?\x00\x00\x00\x80A\xa2s\xbf\x00\x00\x00\x00\x1e\x91D?\x00\x00\x00\xa0N,e?\x00\x00\x00\xc0h\xdb\xc9\xbe\x00\x00\x00\xc0D\x9dp\xbf\x00\x00\x00@\x9a\xf1z\xbf\x00\x00\x00\xc0b\xa3\x87?\x00\x00\x00 \xaa\xc6w\xbf\x00\x00\x00\xc0\x1b\x03\x90\xbf\x00\x00\x00@\xd1(\x85?\x00\x00\x00@\xe9\xeey?\x00\x00\x00\x00}\x12e?\x00\x00\x00\xc0O\xdeo\xbf\x00\x00\x00\xe0\x06-\x89\xbf\x00\x00\x00\xa0REX\xbf\x00\x00\x00\xe0+\x8ey?\x00\x00\x00\xc0[jy\xbf\x00\x00\x00\xe0\xe2D\x8b?\x00\x00\x00@\\\x0bx\xbf\x00\x00\x00@vX|\xbf\x00\x00\x00@M\xa5u?\x00\x00\x00`\xc0\xc7q\xbf\x00\x00\x00`\xdd\xa5\x8a\xbf\x00\x00\x00\xc0P\xde\x94\xbf\x00\x00\x00\x80sI\x8e?\x00\x00\x00\xa0K\x06\x8c\xbf\x00\x00\x00\x00\x1a\x1ey?\x00\x00\x00\x00\xe9a\x90?\x00\x00\x00\x80\t\x0bX?\x00\x00\x00 l\xb8\x9e\xbf\x00\x00\x00\xa0L(\x86?\x00\x00\x00`v @\xbf\x00\x00\x00@X\x8aq\xbf\x00\x00\x00 \xad\xb3:?\x00\x00\x00@\xdcC\x92?\x00\x00\x00\x800\xacb\xbf\x00\x00\x00\x80h&\x9a\xbf\x00\x00\x00@^\xbf\x81\xbf\x00\x00\x00`\xa4\xa7\x89?\x00\x00\x00\xc0)\x1fu\xbf\x00\x00\x00\x80\x96\xce\x8f?\x00\x00\x00 \x85?\x8a\xbf\x00\x00\x00\x80\xa9I\x97\xbf\x00\x00\x00\x00\xbd\xd52?\x00\x00\x00 N\xf9c\xbf\x00\x00\x00\xe0\xc6\x0fv?\x00\x00\x00\x80\xdaXl?\x00\x00\x00\xc0\xf0\xcfp?\x00\x00\x00\xc0\xd0\x1b\x87\xbf\x00\x00\x00 \xcb4\x7f?\x00\x00\x00\xe0\xcd\xdd\x8d?\x00\x00\x00\xe0\xd3M?\xbf\x00\x00\x00 \x9e\x8ea\xbf\x00\x00\x00\xc0\xd1\\I?\x00\x00\x00 \x95\xe2w?\x00\x00\x00\x80\x04\x89\x90\xbf\x00\x00\x00\xc0$-\x8d\xbf\x00\x00\x00\xa0\xd00\x81?\x00\x00\x00\xc0\xdf\xd4\x89?\x00\x00\x00 \xd9\xf6z\xbf\x00\x00\x00@`d\x86?\x00\x00\x00\xa00\xe8t?\x00\x00\x00\x005r}\xbf\x00\x00\x00\xe0v\xd5f\xbf\x00\x00\x00\xc0\xfeGu?\x00\x00\x00\xe0\x93W^\xbf\x00\x00\x00\xc0*G\x85?\x00\x00\x00 +\x8c}?\x00\x00\x00\x80\x02\x12_?\x00\x00\x00 \xb2-\x83?\x00\x00\x00 \xf6\xe2u\xbf\x00\x00\x00\x80\xa7\x12\x90?\x00\x00\x00`\\\xa1\x8b?\x00\x00\x00 \xd5\x04h\xbf\x00\x00\x00\xe0\x85\xb6Y\xbf\x00\x00\x00\xc0\xe5\xdcr?\x00\x00\x00\xc0b\xc2I?\x00\x00\x00`\xc98\x83?\x00\x00\x00\xe0\x99s[\xbf\x00\x00\x00\xc0C\x10\x89?\x00\x00\x00\xa0WX\x8a?\x00\x00\x00\x80\xf6\xc6s?\x00\x00\x00\xa06\xb4z\xbf\x00\x00\x00`r\xab\x85?\x00\x00\x00\xa02mj\xbf\x00\x00\x00\xc0\xbb\xa0|\xbf\x00\x00\x00@\x9b\x1c\x83\xbf\x00\x00\x00\xc0\xb6*p?\x00\x00\x00\xe0\xed&\x93\xbf\x00\x00\x00\xc0\xca\x9d\x89\xbf\x00\x00\x00\xe0m\xeb\x8a?\x00\x00\x00`\x831\x85?\x00\x00\x00@\xdc\xaa\x95?\x00\x00\x00\xe0\xcf\xff\x89?\x00\x00\x00@\xa5/\x7f\xbf\x00\x00\x00\x00\xbb\xbaJ?\x00\x00\x00\xe00/\x81\xbf\x00\x00\x00\x80\x08\xc4|\xbf\x00\x00\x00\xe03\x04\x84\xbf\x00\x00\x00 P\xd6\xf0>\x00\x00\x00@P/\x85?\x00\x00\x00`\xa4b\x83?\x00\x00\x00\xe0*\xb4\x91?\x00\x00\x00\xc0\x06N$?\x00\x00\x00\xc0\xd8\xf8\x81?\x00\x00\x00@\x88\xed\x82?\x00\x00\x00\x00\x06PF?\x00\x00\x00\xa0\xa8\xa6\x90\xbf\x00\x00\x00`d b?\x00\x00\x00\xe0\xc5\x93}\xbf\x00\x00\x00`_\x8d\x88?\x00\x00\x00\x80\xf9Ix\xbf\x00\x00\x00`\x8a\x95d?\x00\x00\x00 \xbe3\x86?\x00\x00\x00\x80i\xad\x81\xbf\x00\x00\x00\xa0\xe4\xb2m?\x00\x00\x00\x80\x89\xc4`\xbf\x00\x00\x00\x80\t\xf8\x8e\xbf\x00\x00\x00`q\xdc`\xbf\x00\x00\x00@eVd?\x00\x00\x00\xc0\xd5\xbex\xbf\x00\x00\x00@\xa6\'b?\x00\x00\x00\xe0\xe29l?\x00\x00\x00\x80\x86\x01\x84?\x00\x00\x00\xe0{\xfah?\x00\x00\x00\x00\xf8g\x93\xbf\x00\x00\x00`\x86\x08z?\x00\x00\x00\x80\xde\x8dH?\x00\x00\x00\x80J\xd0\x91\xbf\x00\x00\x00\xe0!\xfcO?\x00\x00\x00\xc0\xcd\xc3\x94?\x00\x00\x00@\x8c\xa3\x91?\x00\x00\x00@\r\xe5\x8d\xbf\x00\x00\x00\xa0*\xa3c\xbf\x00\x00\x00 "\xc9\x80\xbf\x00\x00\x00\xe06\xb3\x88?\x00\x00\x00 Gc\x91\xbf\x00\x00\x00\x00\xfd\x17\x90\xbf\x00\x00\x00\xe0\xd7d\x83\xbf\x00\x00\x00\xe03\xb5\x82\xbf\x00\x00\x00\xe0\xefW\x8b?\x00\x00\x00`\x03\xa0\x8c\xbf\x00\x00\x00\xc0\x00\xe8Q\xbf\x00\x00\x00@\xd6\xa6b?\x00\x00\x00\x00\xd5"{?\x00\x00\x00\x80\xb8\xc4{?\x00\x00\x00`\xe3\x88^\xbf\x00\x00\x00@B\xa1y\xbf\x00\x00\x00\xc0F_\x8d\xbf\x00\x00\x00\x00\xd6\xb5s\xbf\x00\x00\x00@\x8c\x96l\xbf\x00\x00\x00\xc0e\xa4\x88?\x00\x00\x00\xa0H\x16s\xbf\x00\x00\x00\xc0(\x7f\x83\xbf\x00\x00\x00`\xec@\x88\xbf\x00\x00\x00\xc0\xa4\xa7\x83\xbf\x00\x00\x00\xa0g\xcf`?\x00\x00\x00@\xa4\x86U?\x00\x00\x00\xe0c\x88\x83\xbf\x00\x00\x00`\xe7\xd77?\x00\x00\x00`@\x9b{\xbf\x00\x00\x00`\xfe\xa3q?\x00\x00\x00\xe0C\x91Q\xbf\x00\x00\x00\xa0\x8b\xa7]\xbf\x00\x00\x00@\xee1{\xbf\x00\x00\x00 5\xd5\x84\xbf\x00\x00\x00\xe0\xf5\x81a?\x00\x00\x00\x80\x89\x7f\x90\xbf\x00\x00\x00\xe0\xf4q\x81\xbf\x00\x00\x00\x80/uy\xbf\x00\x00\x00\xe0=y\x89?\x00\x00\x00@G\xf0x\xbf\x00\x00\x00@%+u?\x00\x00\x00\xc0\xe1\xb4z?\x00\x00\x00@\xd5Ud\xbf\x00\x00\x00\x00\x16_\x90\xbf\x00\x00\x00@\x82\xe5\x83\xbf\x00\x00\x00\xe0\xabvu?\x00\x00\x00@D\xa4z\xbf\x00\x00\x00`!g\x0f\xbf\x00\x00\x00\x00\xf4\x12p?\x00\x00\x00 f\xde\x96\xbf\x00\x00\x00\x80\x03\xc9.?\x00\x00\x00\xa0\xb1\xed\x81\xbf\x00\x00\x00\xc0\x1c\xacj\xbf\x00\x00\x00@\xf1\x87m\xbf\x00\x00\x00@\xb5\xad\x90\xbf\x00\x00\x00\x00\xc9\xe7\x82\xbf\x00\x00\x00\xe0\xbev<\xbf\x00\x00\x00\x80P\xc8|?\x00\x00\x00`\xab\x84.\xbf\x00\x00\x00\xa0\x0c\x90`?\x00\x00\x00\x80\x12t|\xbf\x00\x00\x00\xe0E\xcel\xbf\x00\x00\x00 \xe0\x87\x86\xbf\x00\x00\x00\xe0\x9a\'f?\x00\x00\x00 !h~?\x00\x00\x00@`\xd6\x89?\x00\x00\x00\x00\x1f\xb4Z\xbf\x00\x00\x00 \xe3\x83\x85\xbf\x00\x00\x00@\xdce\x85\xbf\x00\x00\x00\xe0#\x92q?\x00\x00\x00\xe0\x82Xd\xbf\x00\x00\x00\xa0\xe6Cv\xbf\x00\x00\x00\xe0\xcf\xbf\x8a\xbf\x00\x00\x00`(\xd0p?\x00\x00\x00@\x94V\x8a?\x00\x00\x00\x00\xc9\xd4c\xbf\x00\x00\x00@\x08\xc0\x8e\xbf\x00\x00\x00\xa0\xf70z\xbf\x00\x00\x00\xc0\xbb\x12\x91?\x00\x00\x00@\xf8\xfbv?\x00\x00\x00`\x12\xd9\xfb>\x00\x00\x00\x80p\xc4\x81?\x00\x00\x00\x80\x98\x0e\x88\xbf\x00\x00\x00\xe0\x8f-M?\x00\x00\x00`\xd1\xf4h\xbf\x00\x00\x00 \x0c\n{?\x00\x00\x00@\xc8\xab\x8b\xbf\x00\x00\x00\x00I\xf8\x7f?\x00\x00\x00`\xc9\xca\x8a\xbf\x00\x00\x00\x80\x87\xb6\x95\xbf\x00\x00\x00\x80"\x18\x89?\x00\x00\x00\xe0\x8cpx?\x00\x00\x00\xc0\xc3\xebu\xbf\x00\x00\x00`\xcdMd?\x00\x00\x00 \xd6\xc5h\xbf\x00\x00\x00\xa0\xd0,\x88?\x00\x00\x00@D\xb6\x90\xbf\x00\x00\x00\xa0\xdb\x9ax?\x00\x00\x00\x80/\xdau\xbf\x00\x00\x00 NK|\xbf\x00\x00\x00 \x07\xdaw\xbf\x00\x00\x00\x80\xb0\xf0\x92?\x00\x00\x00\xa0j\x19l\xbf\x00\x00\x00\xe0\xf2\xc2\x89\xbf\x00\x00\x00@x\xeb\x8e\xbf\x00\x00\x00\x80\xf4\x7f\x89?\x00\x00\x00@\xd1/\x83\xbf\x00\x00\x00\xa0@\x89p?\x00\x00\x00\x80\x94<|\xbf\x00\x00\x00\xa0\x9d\xc2\x93\xbf\x00\x00\x00\xa0\x84\x1at?\x00\x00\x00\x80e\xfcd?\x00\x00\x00 \xf0\'x?\x00\x00\x00`\x94\x95g?\x00\x00\x00@-?\x92?\x00\x00\x00 \x19\x99m\xbf\x00\x00\x00\x80YQu?\x00\x00\x00\x00\xcc\xe6\x96?\x00\x00\x00\xa0(\xfex?\x00\x00\x00`\x9f\x05N\xbf\x00\x00\x00\x80\xe9\xe2r\xbf\x00\x00\x00\x00X\x85|\xbf\x00\x00\x00\x80\xf8\x08x?\x00\x00\x00\x80\xfe8}\xbf\x00\x00\x00\xa0i\xcf\x99?\x00\x00\x00`\r\xf1q\xbf\x00\x00\x00@S\xdc\x86?\x00\x00\x00\x80\xe2e\x8a\xbf\x00\x00\x00@\xdd\xadv\xbf\x00\x00\x00\x00\xba\x80a\xbf\x00\x00\x00@oej\xbf\x00\x00\x00\xa0\x13\xd3|?\x00\x00\x00\x004\xa4\x85\xbf\x00\x00\x00`\x8cpy?\x00\x00\x00@\x0b\x83R?\x00\x00\x00@s\xe8p\xbf\x00\x00\x00@e\x16b?\x00\x00\x00\xa0\xff\xac\x88?\x00\x00\x00`|\xe6\x95?\x00\x00\x00`\x10\xbav\xbf\x00\x00\x00\xc0\x87\xc1v\xbf\x00\x00\x00\x00&\xdfk?\x00\x00\x00\x00^\xacH?\x00\x00\x00`\x8aG\x8b?\x00\x00\x00`~\x1ep\xbf\x00\x00\x00\xa0\xc3z\x90\xbf\x00\x00\x00\xe0\xf9#v\xbf\x00\x00\x00\x80T,}\xbf\x00\x00\x00`S\xf0T\xbf\x00\x00\x00\x00\xa1pb?\x00\x00\x00\xa0\xedG\x81?\x00\x00\x00\xa0\xb0\xa6y?\x00\x00\x00 c\xbey\xbf\x00\x00\x00 _\xb0E?\x00\x00\x00\xc0 \xb2k\xbf\x00\x00\x00\x00=\xb9p?\x00\x00\x00 \xa9\x0cv\xbf\x00\x00\x00 M\xae\x82\xbf\x00\x00\x00\xa0\xb9\xca\x7f\xbf\x00\x00\x00\x80&m\x84\xbf\x00\x00\x00\x00\x1c!\x8d\xbf\x00\x00\x00@\\h\x8d\xbf\x00\x00\x00`s/\x84?\x00\x00\x00\x00\xacOW?\x00\x00\x00\x004\x8d\x7f?\x00\x00\x00\x00\x89\xe1\x8d\xbf\x00\x00\x00\xa0\xfd\xe1V\xbf\x00\x00\x00\xc0\x8d\xdd[?\x00\x00\x00 J\x8aq?\x00\x00\x00\xe0\xae<b\xbf\x00\x00\x00`G\xa8y\xbf\x00\x00\x00@\x15\xb7\x86\xbf\x00\x00\x00\x80hO\x8c?\x00\x00\x00\x80\xf1_\x93\xbf\x00\x00\x00\xa0\x14\xe1U\xbf\x00\x00\x00@,\xcap?\x00\x00\x00 /\xc1"\xbf\x00\x00\x00\x80\xc3\ts?\x00\x00\x00\xc0\x8b\xab\x93\xbf\x00\x00\x00\x80_\x7fj?\x00\x00\x00\xa0\x0fk\x82?\x00\x00\x00@\xfaI\x8e?\x00\x00\x00\xe0\x9ew^?\x00\x00\x00\xe0\xea\xa7S?\x00\x00\x00\x00\x80\x04{\xbf\x00\x00\x00\xc0\xfa\x8f\x90\xbf\x00\x00\x00\xc0\xce\x05\x7f\xbf\x00\x00\x00\xc0o\xbc\x84\xbf\x00\x00\x00\xc0_\xc7\x8a?\x00\x00\x00@`;o?\x00\x00\x00\xe0B\xdfe\xbf\x00\x00\x00\x80\xe8\x9b\x8c\xbf\x00\x00\x00 \x92wv?\x00\x00\x00\x002~x?\x00\x00\x00\x80\xaa\xac[\xbf\x00\x00\x00 \'[v?\x00\x00\x00 /]t?\x00\x00\x00\xe0\xed=}?\x00\x00\x00 \xc5Jd\xbf\x00\x00\x00\xc0\xed\x00\x86\xbf\x00\x00\x00\xc0UP\x90?\x00\x00\x00\x00\xf2cl\xbf\x00\x00\x00\x00\xd0\x18j?\x00\x00\x00@\x13\x86v?\x00\x00\x00\x00\xe6[\x10?\x00\x00\x00\x80AM\x86\xbf\x00\x00\x00\xc0\x93\xa9\x90\xbf\x00\x00\x00\xa0\xda-c\xbf\x00\x00\x00\xc0\xf7\xf2\x82\xbf\x00\x00\x00\xe0O~j\xbf\x00\x00\x00`\x84IQ?\x00\x00\x00@PQ\x89\xbf\x00\x00\x00 `Y\\\xbf\x00\x00\x00@\xb2\x92\x8a?\x00\x00\x00\x80("\x83?\x00\x00\x00 fI\x87\xbf\x00\x00\x00\xa0\xcd/\x82?\x00\x00\x00 \xd0\xf4\x81?\x00\x00\x00\x80$\xe0\x81?\x00\x00\x00\xe0&\x84\x8a?\x00\x00\x00\xc0b\\s?\x00\x00\x00\xe0\x89\x9b\x82\xbf\x00\x00\x00\xa0_\x7f\x82\xbf\x00\x00\x00\x00\xff-\x93\xbf\x00\x00\x00\x80\xeeov\xbf\x00\x00\x00\x00Q\x85W\xbf\x00\x00\x00`\xb3\xfcu\xbf\x00\x00\x00\xc0\x05Zm\xbf\x00\x00\x00\xa0\xe1\x8a\x81\xbf\x00\x00\x00@\xcd#\x9f?\x00\x00\x00@m\xb3\x8c?\x00\x00\x00\x80i\'\x86\xbf\x00\x00\x00`\x9a4\x81?\x00\x00\x00\xe0\x06\xe6u\xbf\x00\x00\x00\xc0\x84Eo?\x00\x00\x00`q\xbbx?\x00\x00\x00`\x81\xfe\x84?\x00\x00\x00\x80w\x1d\x92?\x00\x00\x00\x80\xf4\xebm\xbf\x00\x00\x00 \x90Z\x86?\x00\x00\x00 \xa9\x82A?\x00\x00\x00\xa0\x9c\xe3\x83?\x00\x00\x00`\x82|y?\x00\x00\x00\x00\x87\xb2\x80?\x00\x00\x00\x00L\\q\xbf\x00\x00\x00\x80\x87\xf2\x80?\x00\x00\x00@\xd0as?\x00\x00\x00@\x18\x03\x91?\x00\x00\x00\xc0,\\\x88?\x00\x00\x00\xa0\tG\x8c\xbf\x00\x00\x00\xc0\xbc\xdd\x88\xbf\x00\x00\x00\xc0_\xd4\x89?\x00\x00\x00\xa0\xcd\x87\x81?\x00\x00\x00 \xbd\x18q?\x00\x00\x00@\xa0g}\xbf\x00\x00\x00\x00\x92=S\xbf\x00\x00\x00`\x12d\x85\xbf\x00\x00\x00\x00\xa0]\x90\xbf\x00\x00\x00\x80\xe4\xee`?\x00\x00\x00`\x90\xecz\xbf\x00\x00\x00@\xf4\x7fu?\x00\x00\x00 \xb0\'\x81\xbf\x00\x00\x00\x00]\xb3|\xbf\x00\x00\x00\xc0\x88\xc6q\xbf\x00\x00\x00\xe0\x95\xb3\x86\xbf\x00\x00\x00 U\xc9\x95?\x00\x00\x00\xe0\xd0l\x89\xbf\x00\x00\x00`\xb8\xc1}\xbf\x00\x00\x00\x80\x9e\xc0\x94\xbf\x00\x00\x00\xa0\\\xf2p\xbf\x00\x00\x00`O\xaen?\x00\x00\x00\x80\x03J\x84\xbf\x00\x00\x00\x00\x8cW@\xbf\x00\x00\x00\x80O\x14\x95\xbf\x00\x00\x00\xe0g\xcfB\xbf\x00\x00\x00\xe0\x9b\x88a\xbf\x00\x00\x00`\xd87\x87?\x00\x00\x00 s\xcf\x83\xbf\x00\x00\x00`\xf7\x1e\x85\xbf\x00\x00\x00\xc0\x8dl\x82\xbf\x00\x00\x00`\xf2\x88\x8c\xbf\x00\x00\x00`o6\x81\xbf\x00\x00\x00\xa0\t\xe8R?\x00\x00\x00\x80\x99\t\x90\xbf\x00\x00\x00\xe0%Bv?\x00\x00\x00\xe0\xd3\x03x?\x00\x00\x00\xa0\xf8v\x87\xbf\x00\x00\x00@?R\x86\xbf\x00\x00\x00\x80\xb2\x1e\x84\xbf\x00\x00\x00`\xa4\rx?\x00\x00\x00`\x97\xffs?\x00\x00\x00\x00RTm?\x00\x00\x00@\xa8\xb6y\xbf\x00\x00\x00@\xe5Is\xbf\x00\x00\x00\x80\xa2\x1et\xbf\x00\x00\x00\xe0\x02\nP?\x00\x00\x00 \x88\xdf\x90\xbf\x00\x00\x00\x00\xa8\xc0\x84?\x00\x00\x00\x80\xd6\x82p\xbf\x00\x00\x00 \xf4\x12\x87\xbf\x00\x00\x00@;\xdc\x84\xbf\x00\x00\x00\xe0\xf9\t\x91?\x00\x00\x00 \xc0)l?\x00\x00\x00 j\xe3E?\x00\x00\x00\x00\xa0=v\xbf\x00\x00\x00 dx\x86\xbf\x00\x00\x00 @\x8d]\xbf\x00\x00\x00`\x81\x95\x84\xbf\x00\x00\x00\xc0g\\\x85\xbf\x00\x00\x00\x00\x06\xcc\x95\xbf\x00\x00\x00`\xdc\xbdA?\x00\x00\x00`r\x9dt?\x00\x00\x00\xe0\xf3#\x81\xbf\x00\x00\x00 \xd2\x0e\x90\xbf\x00\x00\x00\xc0a\xf9Z?\x00\x00\x00@\xe0\x06G\xbf\x00\x00\x00@\xa1Z\x81\xbf\x00\x00\x00\xe0n\xd7q?\x00\x00\x00\xe0\xf8\xfbp?\x00\x00\x00\x80\x98#v\xbf\x00\x00\x00\xa0II\x83\xbf\x00\x00\x00@;\xe7\x91?\x00\x00\x00@e\x9fs?\x00\x00\x00@\xac\xdb]\xbf\x00\x00\x00@\xc0\x7f\x87?\x00\x00\x00\xe0\x12Zs?\x00\x00\x00 V\x9b}?\x00\x00\x00\x80\x8c\xcfB?\x00\x00\x00\xe0\x0e\x82w\xbf\x00\x00\x00\xc0H\xe9w\xbf\x00\x00\x00\x80\xfe;r?\x00\x00\x00\xc0Y\xbc\x91\xbf\x00\x00\x00\xc0\x98H\x7f\xbf\x00\x00\x00\xe0]\x90z?\x00\x00\x00\x00\xf1|a\xbf\x00\x00\x00 \xb1\xd6\x8f\xbf\x00\x00\x00`,\x18Y\xbf\x00\x00\x00\x802\xc5n?\x00\x00\x00@A6u?\x00\x00\x00@\x94\xd4d?\x00\x00\x00\xe0)\x1cr\xbf\x00\x00\x00  \xfeP?\x00\x00\x00\xa0\xc2\x0c\x86\xbf\x00\x00\x00\xa0\xd6\x99i?\x00\x00\x00\x806\xf6[?\x00\x00\x00\x804\xe0,?\x00\x00\x00\xc0\xe01W\xbf\x00\x00\x00\xe0\x83\xaeU\xbf\x00\x00\x00\x80g\xbe\x82\xbf\x00\x00\x00@\xc1\xa6}\xbf\x00\x00\x00@\xc2\x80v\xbf\x00\x00\x00\xc0m\x9d\x92\xbf\x00\x00\x00\xa0\x11{U?\x00\x00\x00\x80f\x97c?\x00\x00\x00\xa09!{?\x00\x00\x00 E\x9fu?\x00\x00\x00@`\xdd\x88\xbf\x00\x00\x00 \n\xe5\x8e\xbf\x00\x00\x00\xa0\x19\x8dW?\x00\x00\x00@\x13\xa5x?\x00\x00\x00\xc0\xe0\x8b{\xbf\x00\x00\x00\x80\x970\x81\xbf\x00\x00\x00`\xf8Fe\xbf\x00\x00\x00\x00\xa0\x01e?\x00\x00\x00\xa0\xd4%\x80\xbf\x00\x00\x00\xa0\x17+w\xbf\x00\x00\x00@\x19\x12\x85\xbf\x00\x00\x00\xc0\xf7\xdcw\xbf\x00\x00\x00\xe0\\\x86p\xbf\x00\x00\x00\xe0\xdb\xc7Z\xbf\x00\x00\x00\xa0{\xc6\x92?\x00\x00\x00\xc0\xa6E\x84?\x00\x00\x00\x808i\x8c?\x00\x00\x00@\xaf1t?\x00\x00\x00\xc0m1\x82\xbf\x00\x00\x00`\x93\xb5}\xbf\x00\x00\x00\xc0i\x8d~?\x00\x00\x00\xc0\xa8\xd8x\xbf\x00\x00\x00\x80\x1f\x03}?\x00\x00\x00`\xf0\xf1|?\x00\x00\x00\xc0\x01U\x8c?\x00\x00\x00\x80u\xbd\x94\xbf\x00\x00\x00 6Cm\xbf\x00\x00\x00\x80dUp?\x00\x00\x00\x00\x14\x8c\x87?\x00\x00\x00@\xc1\x97\x85\xbf\x00\x00\x00\x00\xd2\xe2\x97\xbf\x00\x00\x00`)\x04\x90?\x00\x00\x00\x00\x9c\xbb\x96?\x00\x00\x00`Kmm?\x00\x00\x00\x001\xb4\x84\xbf\x00\x00\x00\xa0\x07\xb5\x80?\x00\x00\x00@\xe5\x82\x83\xbf\x00\x00\x00\x80#qn?\x00\x00\x00@A\xa3y\xbf\x00\x00\x00\x80V\x0fr?\x00\x00\x00`\x0bz\x89\xbf\x00\x00\x00`\xd1\xe8\x80\xbf\x00\x00\x00\xc0\xfd\x1c\x85?\x00\x00\x00\x80j\x87\x7f\xbf\x00\x00\x00\x80\x98\xf1r\xbf\x00\x00\x00 \xaaK\x80\xbf\x00\x00\x00\x80c\x97x?\x00\x00\x00 6z\x88\xbf\x00\x00\x00\xe0H\xdfW?\x00\x00\x00\xc0\x9e\x11\x9a?\x00\x00\x00\x00J\x86g\xbf\x00\x00\x00@\x11C\x80\xbf\x00\x00\x00 \xcb\xa4\x85\xbf\x00\x00\x00`u\x12i?\x00\x00\x00@`\x88c?\x00\x00\x00@\xd4\xc9\xa3?\x00\x00\x00@C\x95H\xbf\x00\x00\x00\xa0\xcb\x89\x8d?\x00\x00\x00`"H\x8d?\x00\x00\x00@\x96\xf3\x83\xbf\x00\x00\x00 \x1cY\x8f?\x00\x00\x00 @\xeds\xbf\x00\x00\x00`\xfb\xcf`\xbf\x00\x00\x00@\xab\x9a\x8f?\x00\x00\x00\x80KSL?\x00\x00\x00\x009<\x81\xbf\x00\x00\x00 *+X\xbf\x00\x00\x00 \x8ad_?\x00\x00\x00 \xeb\x84Y?\x00\x00\x00`O\xdcA?\x00\x00\x00\xe0;\x06~\xbf\x00\x00\x00\x803\x9f}\xbf\x00\x00\x00 W\x9fh\xbf\x00\x00\x00\x80\xa4\xecz\xbf\x00\x00\x00\xc0\x8f?\x90\xbf\x00\x00\x00 \x1e\xed\x8e\xbf\x00\x00\x00@\x86E\x9c?\x00\x00\x00\x80&ib?\x00\x00\x00\x00\xf60]\xbf\x00\x00\x00`\x99\xba\x90\xbf\x00\x00\x00\xa0\x05\x82@\xbf\x00\x00\x00\xe0U\x00K\xbf\x00\x00\x00\xc0G\x00\x89\xbf\x00\x00\x00\xa0\xab\xffw?\x00\x00\x00`9\x91\x90?\x00\x00\x00`u\xd7\x8a?\x00\x00\x00\x00\xa4\x9e}?\x00\x00\x00`\xe5`\x14?\x00\x00\x00\xc0\xd1@\x85?\x00\x00\x00 \x1f:\x8c\xbf\x00\x00\x00`:\xdbM?\x00\x00\x00@\xcd\x99/\xbf\x00\x00\x00\xa0\xde\x8d\x83?\x00\x00\x00\xc0\x9f\xbc\x80?\x00\x00\x00\xe0\x967\x86?\x00\x00\x00\xe0\xe4r\x84?\x00\x00\x00\xc0\xc8\xb79\xbf\x00\x00\x00 \xe9\x12r\xbf\x00\x00\x00\x80\xfdSh?\x00\x00\x00 ~\x1c\x8b?\x00\x00\x00 \x13\x13\x86\xbf\x00\x00\x00\xe0\xb9\x8f~\xbf\x00\x00\x00@\xcc\x01\x8d?\x00\x00\x00\xe0\xd7\xfa\x81?\x00\x00\x00\x00P\xa5|?\x00\x00\x00\xa0\x82Gz\xbf\x00\x00\x00\x00\xa1\x13K?\x00\x00\x00@\xf9\x18\x87?\x00\x00\x00\x008\xd2\x93\xbf\x00\x00\x00`\xf0\x80\x84\xbf\x00\x00\x00@\xc4\xe9\x8e\xbf\x00\x00\x00 \x93.r\xbf\x00\x00\x00\x00\x11[\x91?\x00\x00\x00\x80\xcct\x8c\xbf\x00\x00\x00\xa0k\xc7s?\x00\x00\x00@iHa?\x00\x00\x00 \xa9\xb0u\xbf\x00\x00\x00\xe0\x83zz?\x00\x00\x00\xc0S}}\xbf\x00\x00\x00\xe0\xee\xe3\x91?\x00\x00\x00@\x8a\x1d\x91\xbf\x00\x00\x00\x00\xfc$\x94\xbf\x00\x00\x00\xe0\x81I`\xbf\x00\x00\x00\xc0u^\x89?\x00\x00\x00\xe0re\x9e?\x00\x00\x00@\xd5\xbei?\x00\x00\x00@@du\xbf\x00\x00\x00\x80\xa5\xe5^\xbf\x00\x00\x00 \xd2\n\x90?\x00\x00\x00\xc0S\x1av?\x00\x00\x00\xa0:\xa5u?\x00\x00\x00@\x81Es?\x00\x00\x00`Jv\x84?\x00\x00\x00\xa0@\x10t\xbf\x00\x00\x00`\x10[a?\x00\x00\x00\xa0\x89J\x8c\xbf\x00\x00\x00\x80[wy\xbf\x00\x00\x00\xa0t\x7f\x88?\x00\x00\x00`n`\x92?\x00\x00\x00\xe0\x85\x03z\xbf\x00\x00\x00`\xd2C`\xbf\x00\x00\x00\xe0t\x9bm?\x00\x00\x00 r\xfaq\xbf\x00\x00\x00 \xdf\xee{?\x00\x00\x00\x80.\xea\x7f?\x00\x00\x00\x80\x19\x89\x8e?\x00\x00\x00\xa0\x91\x90p\xbf\x00\x00\x00\xe0Ts\x86?\x00\x00\x00\x80\xfa \x89?\x00\x00\x00`"\xfew?\x00\x00\x00 8\x12\x81\xbf\x00\x00\x00\xa0\xa8G\x91\xbf\x00\x00\x00@\x1b\xc2\x82?\x00\x00\x00`7[q?\x00\x00\x00\x80Q\xda\x82?\x00\x00\x00\x80\xceD\x87?\x00\x00\x00\x00j@h\xbf\x00\x00\x00\x00\x9c%c?\x00\x00\x00\x00-\xb8f?\x00\x00\x00 L\xec\x8e?\x00\x00\x00\xc0\xec\x06\x7f?\x00\x00\x00\x00\x91Vu\xbf\x00\x00\x00\xa0X\xe7\x8e\xbf\x00\x00\x00`\xb5\x1aM\xbf\x00\x00\x00\xe0\x9c*`\xbf\x00\x00\x00\xe0\x85,p?\x00\x00\x00\x00U\xbc\x80\xbf\x00\x00\x00\xa0\x10\xefy\xbf\x00\x00\x00\xa0\xfd\xf1Q\xbf\x00\x00\x00@F[\x81?\x00\x00\x00\x00t\xdd\x8b\xbf\x00\x00\x00\xa0\x03\xce`?\x00\x00\x00@\x05\x11\x83?\x00\x00\x00`\x04\x92w?\x00\x00\x00`\xf5\x97A?\x00\x00\x00`;\xf7P?\x00\x00\x00\xa0\xa6R|?\x00\x00\x00 \xfbXP\xbf\x00\x00\x00 \x96+r\xbf\x00\x00\x00 -*\x92?\x00\x00\x00\xc0y\x07d?\x00\x00\x00\xa08\xbfi?\x00\x00\x00`\xbd\x08P?\x00\x00\x00\xe0\xcb~n\xbf\x00\x00\x00`\xc8\xce\x91\xbf\x00\x00\x00\xa0k\x16\x90?\x00\x00\x00 \xc0K~?\x00\x00\x00\xa0/\xe2t\xbf\x00\x00\x00@\x12l1?\x00\x00\x00`\xca\x93`?\x00\x00\x00\x00~\xe6g\xbf\x00\x00\x00 jU]?\x00\x00\x00\xc0K\xe6|?\x00\x00\x00\x00S\x91b?\x00\x00\x00\xe0*D\x97\xbf\x00\x00\x00\xa0\xe1\xb5U\xbf\x00\x00\x00`\xf9h\x82?\x00\x00\x00\xe0\x04*\x8e\xbf\x00\x00\x00@\x17E\x7f\xbf\x00\x00\x00\xe0\x9f\xb0\x82\xbf\x00\x00\x00\xe0\x00\xfdm?\x00\x00\x00\xe0\x8d}\x93\xbf\x00\x00\x00\xc0\xe5\xfc\x90?\x00\x00\x00`j\xfbq\xbf\x00\x00\x00\x80\x95\x14B\xbf\x00\x00\x00\x00\x1a\x86\x80\xbf\x00\x00\x00 \xe3N\x88\xbf\x00\x00\x00\xa0\xc9\xcd\x85?\x00\x00\x00@q\'k?\x00\x00\x00\x00\xacT\x91\xbf\x00\x00\x00\xe0\xcd\xe4\x8c?\x00\x00\x00@!\xdcq\xbf\x00\x00\x00\x80k\xf8/\xbf\x00\x00\x00 \xcepA\xbf\x00\x00\x00\xa0\'\x9eq?\x00\x00\x00@\xe9\xa9\x8b\xbf\x00\x00\x00\x00\xe5tr\xbf\x00\x00\x00\x80r\xfab?\x00\x00\x00@\x0e\x9a\x90?\x00\x00\x00`\x03\xe6\x80\xbf\x00\x00\x00\x80,\x84\x8a\xbf\x00\x00\x00\x00$\xbc\x82\xbf\x00\x00\x00 \xd9\xcev\xbf\x00\x00\x00\xc0\xce\x03u?\x00\x00\x00\x00\xe0\xbe\x7f?\x00\x00\x00@I\xd9r\xbf\x00\x00\x00@\xc0\xa9~\xbf\x00\x00\x00\xe0\x85\xe1\x8a\xbf\x00\x00\x00\x80f\x9e\x86?\x00\x00\x00\xe0\xd6\xd8\x8d?\x00\x00\x00\xe0\x8cM\x87?\x00\x00\x00`\xc4FD\xbf\x00\x00\x00\x80\x08\xb8\x98?\x00\x00\x00\x80/\x8e\x94\xbf\x00\x00\x00 \xa9\x86\x94?\x00\x00\x00\x00\x06\xdf\x8b?\x00\x00\x00\xa0\x00\xcb\x80?\x00\x00\x00\x80OP\x90?\x00\x00\x00`d\x07k?\x00\x00\x00`\ng}?\x00\x00\x00 \xd97y?\x00\x00\x00@An{?\x00\x00\x00 \xf8\x81\x91\xbf\x00\x00\x00@\xbd8|\xbf\x00\x00\x00\xc0\x19.i\xbf\x00\x00\x00\xc01\xfb^?\x00\x00\x00@\xdfT"?\x00\x00\x00@/\x9a\x80?\x00\x00\x00 x\xbe\x88?\x00\x00\x00`\x13Lh?\x00\x00\x00\xc0\x8e\x9fU?\x00\x00\x00 \xdf\xe7\x83\xbf\x00\x00\x00@\x19B\x87?\x00\x00\x00`\x18\x98t\xbf\x00\x00\x00\x80\x8dms?\x00\x00\x00\x803\x97\x91?\x00\x00\x00@\xa2\x18d?\x00\x00\x00`\x94{w?\x00\x00\x00\xa0\x9e\xb7^\xbf\x00\x00\x00\x00,yF\xbf\x00\x00\x00\xa05\x89v\xbf\x00\x00\x00`\x99\x1bm\xbf\x00\x00\x00@\xe2\x9b\x86?\x00\x00\x00\xa0p\xc3x?\x00\x00\x00 \xc0\x18h\xbf\x00\x00\x00 \x03\x92x\xbf\x00\x00\x00\xa0\xb9@r\xbf\x00\x00\x00\x80Af\x8f?\x00\x00\x00\x80\x976g\xbf\x00\x00\x00\x80)\x93\x13?\x00\x00\x00\xc0,\xe5t?\x00\x00\x00\x00\xb3\xf7w\xbf\x00\x00\x00\x80\x89K\x93?\x00\x00\x00`\xf2Ep?\x00\x00\x00\xc0\xa5\xa5\x93\xbf\x00\x00\x00\x00JLs?\x00\x00\x00 \x1e\x19\x91?\x00\x00\x00`|\xbbV?\x00\x00\x00\xe0\xeb`\x90?\x00\x00\x00`\xb2\x99B?\x00\x00\x00\xc07\xcbh\xbf\x00\x00\x00\x00\x85 u\xbf\x00\x00\x00\x00~\xaea?\x00\x00\x00\xa0>\xde\x80\xbf\x00\x00\x00@\x82\xf1\x83\xbf\x00\x00\x00\x00xk\x8f\xbf\x00\x00\x00\xc0I\x19y?\x00\x00\x00\xe0cY\x82?\x00\x00\x00\x00\xec\x15R\xbf\x00\x00\x00\xa0\x9a\xf3[?\x00\x00\x00`k\x9cc?\x00\x00\x00\xa0\x19Dp?\x00\x00\x00\xe0Z\xab\x88?\x00\x00\x00\xc0\xf9\xe2\x84?\x00\x00\x00 []]?\x00\x00\x00 J\x17v?\x00\x00\x00`\xb8\x8a\x92\xbf\x00\x00\x00\xc0\xd7 t?\x00\x00\x00@x!\x95\xbf\x00\x00\x00`[.\x8c\xbf\x00\x00\x00\xc0\t\x90\x8c?\x00\x00\x00@1\x1c\x91\xbf\x00\x00\x00\xa0{\x9fz\xbf\x00\x00\x00\x00\xc2\xc0\x89\xbf\x00\x00\x00\xe0\xb5\x9cp?\x00\x00\x00\x80-\x1c\x8c?\x00\x00\x00\xe0\xfa\xa6p\xbf\x00\x00\x00\x00\x0f~\x8e?\x00\x00\x00`\xdb\x81V\xbf\x00\x00\x00\xc0\xd47_?\x00\x00\x00\xa0\xf3\xa2\x81?\x00\x00\x00\x80\xe6\x88\x83\xbf\x00\x00\x00@\xe0ac?\x00\x00\x00\xc0\xb6e\x89?\x00\x00\x00\xc0"\x17\x97?\x00\x00\x00\xe0uGw\xbf\x00\x00\x00\xc0~\xbe\x8d\xbf\x00\x00\x00 \\/\x89\xbf\x00\x00\x00\x80,\x08c?\x00\x00\x00@A\x9d\x94?\x00\x00\x00\xa0\x87\xc8v\xbf\x00\x00\x00\x80C\x90\x83\xbf\x00\x00\x00\xc0\x08\x04\x98?\x00\x00\x00\xe0\xd2\xf4\x80\xbf\x00\x00\x00\x80\x95;j?\x00\x00\x00\xe0z\x86s\xbf\x00\x00\x00 \x81o~\xbf\x00\x00\x00 D\xd2f?\x00\x00\x00\x80E\xe3\x86?\x00\x00\x00\xa0\xa9\x92\x83?\x00\x00\x00\xe0f\x8c\x82?\x00\x00\x00\xa0\x1a\xb9\x96?\x00\x00\x00\xe0:\x96U\xbf\x00\x00\x00\xa0\x15R\x96?\x00\x00\x00\x00}\xa5\x98?\x00\x00\x00 \nQF?\x00\x00\x00 w\xaes\xbf\x00\x00\x00@\x12\xc8m\xbf\x00\x00\x00\xa0C\x04~?\x00\x00\x00\x80\x9c\xffY\xbf\x00\x00\x00@\x95\xb7[\xbf\x00\x00\x00\x00\x1a\r\x8d\xbf\x00\x00\x00\xa0\xad9j\xbf\x00\x00\x00\xe0WDv\xbf\x00\x00\x00\xc0\xbd\xa2\x8c\xbf\x00\x00\x00\xa0\x11\xee\x8f?\x00\x00\x00@\xd5\xe8\x91\xbf\x00\x00\x00@{\xcdx?\x00\x00\x00\xc0\x1a\xf1\x88\xbf\x00\x00\x00\xc0\x17\xb9\x91?\x00\x00\x00\xa0\x9e!w?\x00\x00\x00\x80\xb2ao?\x00\x00\x00\xa0C\xc8\x8d?\x00\x00\x00\x009\x18K\xbf\x00\x00\x00@\x9fR\x96?\x00\x00\x00`h\x01r?\x00\x00\x00\x80Y\x88\x84?\x00\x00\x00\x80\x880\x92?\x00\x00\x00\xc0\x1e\x0e~?\x00\x00\x00\xc0]-\x83?\x00\x00\x00\x80\xb2\x02t?\x00\x00\x00\x80\x03\xbb\x14?\x00\x00\x00\xc0c\xd86\xbf\x00\x00\x00\xc0\x97P\x80\xbf\x00\x00\x00\x80R\xcc#?\x00\x00\x00 \x07\x19\x81\xbf\x00\x00\x00\x80)\xa3i\xbf\x00\x00\x00\x80\xda\xb0\x80\xbf\x00\x00\x00\xe0n\xbf\x84?\x00\x00\x00\x804pf?\x00\x00\x00\xc0\xf4\xa1f?\x00\x00\x00\x80\t\xb9\x99?\x00\x00\x00\x00S\xbd\x8f\xbf\x00\x00\x00\x80\x87>z\xbf\x00\x00\x00`\xf9\xc3\x88?\x00\x00\x00\x80\n\xdfm?\x00\x00\x00`V\x80t?\x00\x00\x00 \xe3\xb6\x86?\x00\x00\x00`\xce\xa2\x83\xbf\x00\x00\x00\x00\xfb\x03u?\x00\x00\x00\xa0\xd0t\x9b\xbf\x00\x00\x00\x00\x93\xca\x8b?\x00\x00\x00\xa0l\xce\x94\xbf\x00\x00\x00\x80LFf?\x00\x00\x00\x00\xdb\xc9s?\x00\x00\x00`\xc2\x1dV\xbf\x00\x00\x00\xa0Z\xe6\x93\xbf\x00\x00\x00 \xb4^\x80\xbf\x00\x00\x00\xe0T\xec\x85?\x00\x00\x00\xc0\x7f\xdas?\x00\x00\x00`\xf3\x9fx?\x00\x00\x00@.yv?\x00\x00\x00\x80-\xcc{\xbf\x00\x00\x00\x80\x8c\xb4u\xbf\x00\x00\x00`]\xa7\x84\xbf\x00\x00\x00 \xdb5\x8b?\x00\x00\x00`\x89\xee\x85\xbf\x00\x00\x00`K\x1ar?\x00\x00\x00\x00dm~\xbf\x00\x00\x00\xe0\x9a{u\xbf\x00\x00\x00\x80BC\x92\xbf\x00\x00\x00`0\xfca\xbf\x00\x00\x00\xe0V\x8f\x7f\xbf\x00\x00\x00\x80\x0e\x17M\xbf\x00\x00\x00`\xe3A\x92\xbf\x00\x00\x00`U\xd0\x82?\x00\x00\x00\xc0/\x01l?\x00\x00\x00 t\xc1\x81?\x00\x00\x00\x00\xe1\xfc\x96\xbf\x00\x00\x00\xc0\xa7\xccK\xbf\x00\x00\x00\x00\xf1;r?\x00\x00\x00\xc0\x14\x18\x85\xbf\x00\x00\x00\xa0\xba\xe1\x83\xbf\x00\x00\x00\xa0Vs\x00\xbf\x00\x00\x00@\x0bx\x97?\x00\x00\x00\xc0\x90\xc3t?\x00\x00\x00 \xf6\xd6_\xbf\x00\x00\x00\xe0u\xb5\x83\xbf\x00\x00\x00\x80\xf0\xd0m?\x00\x00\x00\xe0\xd8!<?\x00\x00\x00\xe0g\xf7\x84?\x00\x00\x00\xe0sdT\xbf\x00\x00\x00\xc0|x\x88\xbf\x00\x00\x00\xe0(tv?\x00\x00\x00\x00\x956w\xbf\x00\x00\x00`\x97\xe7\x87?\x00\x00\x00`w7\x82?\x00\x00\x00\xc0\x054Y?\x00\x00\x00\xc0ynk\xbf\x00\x00\x00\xc0\xc7\xea\x8c\xbf\x00\x00\x00\xe0c1\x91?\x00\x00\x00\xa0\xdb\xb3\x87?\x00\x00\x00\xa0H\xee\x83\xbf\x00\x00\x00@\xede\x94?\x00\x00\x00\x80\x86\xf1{\xbf\x00\x00\x00 \x84\xf5t?\x00\x00\x00\xc0C\x9bn?\x00\x00\x00 p\x03q\xbf\x00\x00\x00\xe0i \x81?\x00\x00\x00\xa0\x03\xd3S\xbf\x00\x00\x00 .\xb2~?\x00\x00\x00\x00 \x8f\x86?\x00\x00\x00`6q\x7f\xbf\x00\x00\x00@\xe9\xc4`?\x00\x00\x00\x00`Cp?\x00\x00\x00\x00\xeb?w?\x00\x00\x00`\xc1\xa8\x8b?\x00\x00\x00 \xceGu?\x00\x00\x00@;\xabu\xbf\x00\x00\x00@\x97\x07\xa0\xbf\x00\x00\x00 \x9bPf\xbf\x00\x00\x00\xe0+k\x8b?\x00\x00\x00\xc0\xd5yv\xbf\x00\x00\x00 Y\xba\x91?\x00\x00\x00 \'\x88\x80\xbf\x00\x00\x00\xa0\xd2"\x80?\x00\x00\x00\xc0b\x15\x90?\x00\x00\x00\xa0U\xfau?\x00\x00\x00\xe0\\\x95\x8d?\x00\x00\x00`A\x9fo\xbf\x00\x00\x00\xe0c\x8d6?\x00\x00\x00\xa0\xc0\xb6q?\x00\x00\x00\xe0#\xae\x82?\x00\x00\x00\xa0\x04$\x8b?\x00\x00\x00\xe0>\x7f\x82?\x00\x00\x00\xe0\xd2\xb9\x19\xbf\x00\x00\x00\xc0I\xa2\x81\xbf\x00\x00\x00\xc0r\x81\x86?\x00\x00\x00 >/r\xbf\x00\x00\x00 \x1f\'q?\x00\x00\x00`V{\x8c?\x00\x00\x00\xc0\xa0$\x85?\x00\x00\x00\xa0]fS\xbf\x00\x00\x00\x80P\xcaf\xbf\x00\x00\x00 z\xf8\x86?\x00\x00\x00\x80c\x88\x82?\x00\x00\x00@\xf4Mq\xbf\x00\x00\x00\xc0\xfe\x03\x83\xbf\x00\x00\x00\xc0l\x03\x87\xbf\x00\x00\x00\xc0\xfa\x9co?\x00\x00\x00\xe0\x11\xaf\x87\xbf\x00\x00\x00@\x06\x8f\x88?\x00\x00\x00@Bu\x89?\x00\x00\x00\xc0:\x8cf?\x00\x00\x00`\x90\xa0e?\x00\x00\x00\x80\xf9\x99d?\x00\x00\x00\xc0\x83gu?\x00\x00\x00\xa0+\xc9\x7f?\x00\x00\x00\x00Yro?\x00\x00\x00\x80\x00\x8eT?\x00\x00\x00\xe0C9a\xbf\x00\x00\x00\x80\t\xac\x85\xbf\x00\x00\x00@4\xb7\x81\xbf\x00\x00\x00\x00f\xccU\xbf\x00\x00\x00\x00\x14s\x7f?\x00\x00\x00\x80h.a\xbf\x00\x00\x00@\x059\x91\xbf\x00\x00\x00@\x9c\xbe\x82?\x00\x00\x00\xe0\xc9\xcag\xbf\x00\x00\x00 e\x91q?\x00\x00\x00`Os\x99\xbf\x00\x00\x00`\x9aCq?\x00\x00\x00\xa0.\xa6n\xbf\x00\x00\x00`\xe4\xa6\x87?\x00\x00\x00\xe0\xa5B\x86?\x00\x00\x00\xa0S\xd5y\xbf\x00\x00\x00\xc0\x19Pp\xbf\x00\x00\x00\x00*I\x94?\x00\x00\x00\x80\xca\xe3s\xbf\x00\x00\x00\x00-\xbar?\x00\x00\x00 \xcf\x99h?\x00\x00\x00\x009\x1d\x8a\xbf\x00\x00\x00@n\xb4K?\x00\x00\x00 \xf1\xbb\x90\xbf\x00\x00\x00@\x0f\xddh?\x00\x00\x00\x80\x02\xe8\x8b?\x00\x00\x00 \x8e\xc1t\xbf\x00\x00\x00\xe0\x95\x95\x86?\x00\x00\x00@}J|\xbf\x00\x00\x00`\xd0)n?\x00\x00\x00\xe0x\x80w\xbf\x00\x00\x00\x80\xd8Tp\xbf\x00\x00\x00@\x06#N\xbf\x00\x00\x00\xc0n\xaa\x7f?\x00\x00\x00\xc0\xaac\x88\xbf\x00\x00\x00`\x1eIw\xbf\x00\x00\x00\xe0\xd5\'h\xbf\x00\x00\x00 7\x9dh\xbf\x00\x00\x00`\xe7\x9e\x81?\x00\x00\x00\xa0\xa4Hz?\x00\x00\x00 CJe\xbf\x00\x00\x00@)\xd6\x93?\x00\x00\x00\xc0\x12t\x8f\xbf\x00\x00\x00\x00\xb7\xces?\x00\x00\x00\x80\xc6X\x83\xbf\x00\x00\x00@w\x84r?\x00\x00\x00\xc0\x1eUu?\x00\x00\x00\x00\xad\x9dx?\x00\x00\x00\xe0/\x06~\xbf\x00\x00\x00\x80a\x9c\x84?\x00\x00\x00@M\xc1q\xbf\x00\x00\x00\xe0\xfe4\x7f?\x00\x00\x00\x00\xd2wu\xbf\x00\x00\x00\x00X\xfe{\xbf\x00\x00\x00\x00m\x86\x99\xbf\x00\x00\x00\x00zC\x81?\x00\x00\x00\x00Z\xcc6?\x00\x00\x00\xa0\'\x1f\x91\xbf\x00\x00\x00`QD\x92?\x00\x00\x00\xc0\xc6\xdd~\xbf\x00\x00\x00 \x0b\nv\xbf\x00\x00\x00\xe0b\x19~?\x00\x00\x00\x00\x81by\xbf\x00\x00\x00@\xff\x14v\xbf\x00\x00\x00\xe0|\xbc\x80?\x00\x00\x00@Gt_\xbf\x00\x00\x00\x809\xcc\x92?\x00\x00\x00\xa0\xfbMD?\x00\x00\x00 v\x1f\x90\xbf\x00\x00\x00\xa0\x15R;?\x00\x00\x00`+\x02\x98\xbf\x00\x00\x00`$-\x90\xbf\x00\x00\x00\xa0\xe6\x10|\xbf\x00\x00\x00\x80D\'q?\x00\x00\x00`\xd8\x15G\xbf\x00\x00\x00\xe0\xe2\xf1\x86?\x00\x00\x00@\xccCz?\x00\x00\x00\xa0\x1d\x83Q\xbf\x00\x00\x00\xa0\xfb\xa6}?\x00\x00\x00\xe0.\xd1c?\x00\x00\x00\x00\xf2\xff\x95\xbf\x00\x00\x00\x00\xb2.l?\x00\x00\x00\xe0\x7fT{?\x00\x00\x00`\x84@\x83?\x00\x00\x00\xc0\xf0zT?\x00\x00\x00\xc0\x12\xed\\\xbf\x00\x00\x00\xc0\xaa#}\xbf\x00\x00\x00\xe0a\xcfJ\xbf\x00\x00\x00\xa02T\x8c?\x00\x00\x00 \xa6~\x81?\x00\x00\x00 \xd6\x93\x9a?\x00\x00\x00\xe0\xdc\xaf}?\x00\x00\x00\x00\xd3@~\xbf\x00\x00\x00@bK{?\x00\x00\x00`\x9a\x9f\x80?\x00\x00\x00`0 t?\x00\x00\x00\x00K\x19L\xbf\x00\x00\x00@n\xd7P\xbf\x00\x00\x00\xa0\xef\xbdr\xbf\x00\x00\x00@\x9c\xc3;?\x00\x00\x00\x00p\xd1\x8d\xbf\x00\x00\x00`Xfo?\x00\x00\x00@\xd0S\x90\xbf\x00\x00\x00\x80\x02\x9em?\x00\x00\x00 \xe9Qs\xbf\x00\x00\x00 \xf7\x01\x86\xbf\x00\x00\x00\xc0X\x0eZ\xbf\x00\x00\x00\x80\xac\xe5d?\x00\x00\x00\x00\x93yz\xbf\x00\x00\x00@\x1f\x0ft?\x00\x00\x00\xe0A\x9d\x8e\xbf\x00\x00\x00\x00\xdc\xd8y\xbf\x00\x00\x00@\x8d0\x87\xbf\x00\x00\x00\xa0\x1d\xf1\x89\xbf\x00\x00\x00@\xcb2\x8c?\x00\x00\x00\x80\xdb\xea\x88?\x00\x00\x00\xe0\x0e\xcee?\x00\x00\x00 \xaf\xf1\x92?\x00\x00\x00`\xd7\xb8y\xbf\x00\x00\x00@\xb6Q\x96\xbf\x00\x00\x00\xc0\xb3Kt\xbf\x00\x00\x00\x00|\xaft?\x00\x00\x00 ~Q\x8d?\x00\x00\x00\xa0.m\x90?\x00\x00\x00`S\x80\x86?\x00\x00\x00\x00\r\x1e\x84\xbf\x00\x00\x00`Y\xae|?\x00\x00\x00\xc0\x12\xdeX\xbf\x00\x00\x00@\xbd\xc6v?\x00\x00\x00\xe0&\xbdl\xbf\x00\x00\x00 fn\x8b?\x00\x00\x00`Z\xaag?\x00\x00\x00`.\xf9M\xbf\x00\x00\x00`\x93\x05\x87\xbf\x00\x00\x00@\xa5\xea}?\x00\x00\x00\x80E>s\xbf\x00\x00\x00\xa0\xff\xfc\x8e\xbf\x00\x00\x00 9\xe8G\xbf\x00\x00\x00 gha?\x00\x00\x00\xc0\x96~|\xbf\x00\x00\x00@g\xf6\x91\xbf\x00\x00\x00@\x05\x81y?\x00\x00\x00\xe0\xd2\xadv\xbf\x00\x00\x00\x80)]\x93\xbf\x00\x00\x00\xe0\xc4\x85x?\x00\x00\x00 \xa2%\x80?\x00\x00\x00@:Lf?\x00\x00\x00\xa0\x16\x19q\xbf\x00\x00\x00 \x82Fr\xbf\x00\x00\x00\xe0$\xac\x8f\xbf\x00\x00\x00\xc0\xa5Fd?\x00\x00\x00@J|\x81\xbf\x00\x00\x00@d\x87p?\x00\x00\x00\xc0\xffI\x84\xbf\x00\x00\x00\xc0\xb6d\x93\xbf\x00\x00\x00\xa0\x8b\xe0%?\x00\x00\x00\xa0\xb5k\x91\xbf\x00\x00\x00`\x15\x82e?\x00\x00\x00\x803\x96\x81?\x00\x00\x00@\xed\ri?\x00\x00\x00@+\xc8w?\x00\x00\x00\xe05 .\xbf\x00\x00\x00\xe0\xf9(Y\xbf\x00\x00\x00 \xd7\xf8n\xbf\x00\x00\x00\x80>\x1c{\xbf\x00\x00\x00\xe0\xcdT\x92?\x00\x00\x00`\x99C\x83?\x00\x00\x00\x00:r]?\x00\x00\x00\xa0w\xd1\x84?\x00\x00\x00\x00F\xae]\xbf\x00\x00\x00 }0K?\x00\x00\x00\xc0\xdau|?\x00\x00\x00`s\x022\xbf\x00\x00\x00@/}q?\x00\x00\x00\xa0w\x95J\xbf\x00\x00\x00@\xa9\xa04?\x00\x00\x00\xa0L!\x7f\xbf\x00\x00\x00 \xccS\x86\xbf\x00\x00\x00\x80Yj4?\x00\x00\x00\x007\x94^\xbf\x00\x00\x00\xc0\r\xd7c\xbf\x00\x00\x00\x803\xde\x8b?\x00\x00\x00\x80\x96\x9c\x85\xbf\x00\x00\x00 \xbcO\x84\xbf\x00\x00\x00\x80\xdaXI?\x00\x00\x00@w\xf0\x7f\xbf\x00\x00\x00\xa0\xb1A\x8b?\x00\x00\x00\xe0!\xd3y?\x00\x00\x00\xc0\xb6f1?\x00\x00\x00`\xf8k\x91\xbf\x00\x00\x00 \x1d\x14\x82\xbf\x00\x00\x00\xe0\xfe\xef\x7f?\x00\x00\x00`\x06kz?\x00\x00\x00\x80\xcdZv?\x00\x00\x00\x80\x8aq\x7f?\x00\x00\x00\x00gJ\x84?\x00\x00\x00@u\xc1>\xbf\x00\x00\x00\xa0\x0e\\8\xbf\x00\x00\x00 \xc1\xb0\'?\x00\x00\x00\xe0\x1a\xa9\x83\xbf\x00\x00\x00@\xf3\xa4\x8e\xbf\x00\x00\x00`\\\xe1\x88?\x00\x00\x00@{$\x87?\x00\x00\x00\xe0S\xac\x82\xbf\x00\x00\x00 \x02\xedm\xbf\x00\x00\x00\xe0gwC?\x00\x00\x00@g\x05\x7f?\x00\x00\x00@\xa9\xd7Z\xbf\x00\x00\x00`\xa5\xae\x82\xbf\x00\x00\x00\xa0v\x89S?\x00\x00\x00\xe0p\x14\x82\xbf\x00\x00\x00 }e\x8d?\x00\x00\x00\xa0O6}\xbf\x00\x00\x00\x00\xbe\xbd\x95\xbf\x00\x00\x00 \xab\x18q?\x00\x00\x00\xc0\x8dnj?\x00\x00\x00\xc0\xaf{\x8a?\x00\x00\x00\xe0\x92u\x9a?\x00\x00\x00 eHx\xbf\x00\x00\x00\x00\x10@q?\x00\x00\x00@\x02\x9e\x81?\x00\x00\x00@\x92|Q\xbf\x00\x00\x00@\x86kq\xbf\x00\x00\x00 I^\x88\xbf\x00\x00\x00\x80\xab\x85e?\x00\x00\x00\xe0\xdfZ\x81?\x00\x00\x00 |Y5?\x00\x00\x00\xa0$\x83\x88?\x00\x00\x00\xc0\xb0\xe0\x90?\x00\x00\x00\x80\x11c\x83?\x00\x00\x00\x00T\xc5y?\x00\x00\x00@I\xf3\x82?\x00\x00\x00\xa0v\x8c\x82?\x00\x00\x00\xe0\xca<\x85?\x00\x00\x00 \xbf[\x8c\xbf\x00\x00\x00\xc0\xe9\xd6\x8c\xbf\x00\x00\x00@3\xc4E\xbf\x00\x00\x00\xc0\xb8iZ\xbf\x00\x00\x00 \xac\xdc\x7f?\x00\x00\x00\x80\xce\xad\x80\xbf\x00\x00\x00@\xadl,\xbf\x00\x00\x00\xc0\x023\x8c\xbf\x00\x00\x00\x00\x1a\xfd\x94?\x00\x00\x00 \xe8\xb3X\xbf\x00\x00\x00@\xa4\x85n\xbf\x00\x00\x00\xe0\x02\x97z?\x00\x00\x00\x80\xa2[=?\x00\x00\x00\x80\xc8\xc2z?\x00\x00\x00\xc0U\xe2{\xbf\x00\x00\x00 \xb52y\xbf\x00\x00\x00\x00%\xbay\xbf\x00\x00\x00`$\xb1J\xbf\x00\x00\x00\x80k\x85t?\x00\x00\x00\xa0\x87,\x7f\xbf\x00\x00\x00@\x1b\x8c\x87?\x00\x00\x00`\x14\x93U\xbf\x00\x00\x00 4\x81\x8a?\x00\x00\x00 CQx?\x00\x00\x00\xa0\xa4yz\xbf\x00\x00\x00@ \xeex\xbf\x00\x00\x00 \xe2dy?\x00\x00\x00`\xed\x86\x82?\x00\x00\x00@\x84\x1f\x86\xbf\x00\x00\x00 \x06\xa80?\x00\x00\x00\xa0\x0c\x03\x8e?\x00\x00\x00 w9\xd4>\x00\x00\x00\xe0\x06\x08n\xbf\x00\x00\x00\xa0Z\xb2\x91\xbf\x00\x00\x00\x80\xe2s-\xbf\x00\x00\x00`\xa2\x03C\xbf\x00\x00\x00 |\x00<\xbf\x00\x00\x00\xc02\x14\x80\xbf\x00\x00\x00\xa0\xb5\xbdv\xbf\x00\x00\x00\xa0\xc7\xfc9\xbf\x00\x00\x00@e\xe9a?\x00\x00\x00\x00\x84\x88\x90?\x00\x00\x00 \xd9\xd6m?\x00\x00\x00@<\xcbF\xbf\x00\x00\x00\xe0|\xb0v\xbf\x00\x00\x00\xe0\xd8\xee\x91?\x00\x00\x00\x80\xb3\x10|\xbf\x00\x00\x00`\x16m\x80?\x00\x00\x00@\xb8\xb3T?\x00\x00\x00\xe0\x8d\x1d\x82\xbf\x00\x00\x00\x80l\xfc\x8c?\x00\x00\x00\xc0H\x00\x83\xbf\x00\x00\x00\x00,G\x84?\x00\x00\x00\xc0-9^?\x00\x00\x00@\x96\xf3y?\x00\x00\x00@N\xcbz?\x00\x00\x00\xe0\xeb\x8f\x8a\xbf\x00\x00\x00`\xff]s\xbf\x00\x00\x00\xa0H\xf5x?\x00\x00\x00\x00\x01!\x82?\x00\x00\x00\x80\x8f\x13!?\x00\x00\x00\xc0E\xddu?\x00\x00\x00\x80W\xa5\x8a?\x00\x00\x00\xa0 \xbb\x86?\x00\x00\x00\xa0\x12\x86c?\x00\x00\x00`\x8f~\\\xbf\x00\x00\x00\xa06\xd9|?\x00\x00\x00\xa0".|\xbf\x00\x00\x00 p\xe0]\xbf\x00\x00\x00\x00\xda\x1f6\xbf\x00\x00\x00\x80\xe2Vc?\x00\x00\x00 ,\x95\x80?\x00\x00\x00 \x7fAt\xbf\x00\x00\x00@AkD\xbf\x00\x00\x00\x00\x82\x08\x8a\xbf\x00\x00\x00`\x1a\x13m\xbf\x00\x00\x00\x009\xf9e\xbf\x00\x00\x00\xe0\xdaL]?\x00\x00\x00\xe0I\x11\x86\xbf\x00\x00\x00\x00\n\xa8z\xbf\x00\x00\x00@l\x07e\xbf\x00\x00\x00 \x08\xcfx\xbf\x00\x00\x00\xa0\t\x8a\x7f\xbf\x00\x00\x00@1\xb0\x86?\x00\x00\x00\xc0\xb6\xa2[?\x00\x00\x00\x80\x06/L\xbf\x00\x00\x00\xc0>E#?\x00\x00\x00`\n\xe1v?\x00\x00\x00 \xd1\x07P\xbf\x00\x00\x00\xa0\x13\x99\x98?\x00\x00\x00\xc0\xcd.u\xbf\x00\x00\x00\xe09WC\xbf\x00\x00\x00\x80\x93\xbb\x88\xbf\x00\x00\x00\xa0\x94\x1b\x93\xbf\x00\x00\x00 {ei\xbf\x00\x00\x00`e;c\xbf\x00\x00\x00\xe0\xdf\x8e\x83\xbf\x00\x00\x00\xc0\xa1=p\xbf\x00\x00\x00 \xfa"\x82\xbf\x00\x00\x00\x00\xa5\xf6\x84?\x00\x00\x00 t7s\xbf\x00\x00\x00@%Z\x90?\x00\x00\x00`\x95\xac\x87\xbf\x00\x00\x00@G\xa9H\xbf\x00\x00\x00\x80\xb1\xa8\x8f\xbf\x00\x00\x00`\x1c\xa6t?\x00\x00\x00\xc0\xc84\x89?\x00\x00\x00\x00\x8du~?\x00\x00\x00\xc03yx?\x00\x00\x00 \x0fQi?\x00\x00\x00@\xda\xd1\x92\xbf\x00\x00\x00\xe0_\x99u?\x00\x00\x00 \x1c\x82u\xbf\x00\x00\x00 z\x9b\x89?\x00\x00\x00\xa0\x02\xb5\x80?\x00\x00\x00\xc0\x8d\xad}\xbf\x00\x00\x00\xe0\x152\x90\xbf\x00\x00\x00\xa0\x1ad}\xbf\x00\x00\x00\xe06E\x8a?\x00\x00\x00\x80\x9a\x89t\xbf\x00\x00\x00\x00\xec-n?\x00\x00\x00\xa0]\xb6c?\x00\x00\x00\xc0\x9fP\x84?\x00\x00\x00\x80\xd3\xc1\x81?\x00\x00\x00\xa0\x85\xb7\x90\xbf\x00\x00\x00\xc0:\x8ew\xbf\x00\x00\x00\xc0k\x88q?\x00\x00\x00\xc0\xd7\x95y\xbf\x00\x00\x00\x801\x97\x81?\x00\x00\x00\xe0}>\x85?\x00\x00\x00\xe02+\x82\xbf\x00\x00\x00\xc02\x1e\x84?\x00\x00\x00\x80m\xb9\x95?\x00\x00\x00@\xd5\xafr\xbf\x00\x00\x00\x00\x95Zs?\x00\x00\x00\xe0\x81\x88\x8f?\x00\x00\x00\xc0\t\xadh?\x00\x00\x00\x00\xe1\xc8\x8f?\x00\x00\x00`f\xf6r\xbf\x00\x00\x00\xa0@<\x81\xbf\x00\x00\x00\x80{L\x84?\x00\x00\x00\xa0\x96\xed|\xbf\x00\x00\x00\x80\xd7\xc5\x83?\x00\x00\x00\x00\xbb\xb9`\xbf\x00\x00\x00\xa0H\xb9\x92\xbf\x00\x00\x00\xc0\xca\xda\x90\xbf\x00\x00\x00 \xbe\xe9:?\x00\x00\x00\xe0\x16\xe0\x8a\xbf\x00\x00\x00 \xd8\xf0\x8b\xbf\x00\x00\x00@}\xa55\xbf\x00\x00\x00@\xc7\xee~\xbf\x00\x00\x00\xa0B\xc5Z?\x00\x00\x00@\xad0\x8a?\x00\x00\x00\xe0I\xbd\x0e\xbf\x00\x00\x00\xe0;T\x84\xbf\x00\x00\x00@\x1bd\x86\xbf\x00\x00\x00@S\xa4\x9a\xbf\x00\x00\x00`zIo\xbf\x00\x00\x00\xa0j\xf5\x87\xbf\x00\x00\x00 \xcdMm\xbf\x00\x00\x00@A\x9fw?\x00\x00\x00\x00\x07k\x7f\xbf\x00\x00\x00\xa0Nj\x85?\x00\x00\x00 \xa3\xbaS\xbf\x00\x00\x00\xe0\xc8\xe6a?\x00\x00\x00\xc0\xb0\x96\x88?\x00\x00\x00 \x01Xp?\x00\x00\x00\x00h0\x90\xbf\x00\x00\x00\x80>\xd9a\xbf\x00\x00\x00@`\x00\x8f\xbf\x00\x00\x00 \x7fH\x85\xbf\x00\x00\x00 \x9c\x00\x85\xbf\x00\x00\x00`\xc9\x99t\xbf\x00\x00\x00\xa0j\xc4_\xbf\x00\x00\x00\xa0\xa0q\x80\xbf\x00\x00\x00\xa0\xca>_?\x00\x00\x00\xc0\xab\xfbt?\x00\x00\x00\xa0j\xbew?\x00\x00\x00 \xe2\xa3b\xbf\x00\x00\x00\xa0u=\x84\xbf\x00\x00\x00@3\xb6\x13?\x00\x00\x00`\xf0\x10w\xbf\x00\x00\x00 \x91\xe2\x86?\x00\x00\x00\xc0k\x8b\x87\xbf\x00\x00\x00 \xea\xc4o?\x00\x00\x00\xc0Z\xf3U?\x00\x00\x00@2&~?\x00\x00\x00\xe0\xdd4\x8b?\x00\x00\x00\x80\xf1\xb9v?\x00\x00\x00 \x83\xcfq\xbf\x00\x00\x00\xa0m\x83d\xbf\x00\x00\x00@\x80^U\xbf\x00\x00\x00\x00\xb9K}\xbf\x00\x00\x00\xe0\xad\xe1$\xbf\x00\x00\x00\x00\x95pY?\x00\x00\x00 \xa7\xc6\x8b\xbf\x00\x00\x00@\xb0\x93\x86\xbf\x00\x00\x00\xe0\xc8\x9cX\xbf\x00\x00\x00\x00K3`?\x00\x00\x00\xc0\x8d\xd1e\xbf\x00\x00\x00\xe0\x9b\xefT?\x00\x00\x00\xe0\xdb\x8e\x88\xbf\x00\x00\x00@\x8e\x98\x8e\xbf\x00\x00\x00\xc0\x81\xd7\x86\xbf\x00\x00\x00\xc0\xfd\x8a\x85?\x00\x00\x00\xe0\xe8\x0f\x82\xbf\x00\x00\x00\xe0\x00\xb5\x90\xbf\x00\x00\x00\xc0P\xd3s?\x00\x00\x00 \xba:W\xbf\x00\x00\x00\xa0:\xdft\xbf\x00\x00\x00@Ie\x8d\xbf\x00\x00\x00@O5\x83\xbf\x00\x00\x00 \x9cT_?\x00\x00\x00\xe0P0t?\x00\x00\x00@&\xc9p?\x00\x00\x00\x00\xdd\xb5y\xbf\x00\x00\x00\xa0\xa7\xa5j?\x00\x00\x00@\xcd\x04u?\x00\x00\x00\xc0\xfdg\x7f\xbf\x00\x00\x00 \x9f<`\xbf\x00\x00\x00\xc0V\x0c\x8f?\x00\x00\x00@\xd3&u\xbf\x00\x00\x00\xc0\xaf\xaa\x82\xbf\x00\x00\x00\x80\xd2\xda\x8e?\x00\x00\x00\x00\xf5\xa4s\xbf\x00\x00\x00\xc0:/l?\x00\x00\x00`\x04\x13\x87\xbf\x00\x00\x00\x80\xae\xcc>\xbf\x00\x00\x00@[\x02\x89?\x00\x00\x00\xa0oNw\xbf\x00\x00\x00\x00<\xc3\x86?\x00\x00\x00\x00\x91&s\xbf\x00\x00\x00\xe0\xa4\xdbu?\x00\x00\x00\xe0Whq?\x00\x00\x00`\x84\xec{\xbf\x00\x00\x00\x00~&L\xbf\x00\x00\x00\x80\xc9)u\xbf\x00\x00\x00\x00\x16){\xbf\x00\x00\x00\xe0v\xb9*\xbf\x00\x00\x00@\x1a\x86c?\x00\x00\x00\xa0$\x15x?\x00\x00\x00\x80\xe61\x8e?\x00\x00\x00\xc0-\x92K\xbf\x00\x00\x00`\x1d\x9dW\xbf\x00\x00\x00\x00\xfd\xec\x93?\x00\x00\x00 g\xb3\x81\xbf\x00\x00\x00`9K\x82?\x00\x00\x00\x80\xe8{\x83\xbf\x00\x00\x00\x80\x03R{?\x00\x00\x00\xa0_0\x84\xbf\x00\x00\x00\x80\x05Cl\xbf\x00\x00\x00\x00B\xfbv\xbf\x00\x00\x00\xe0\xdc^\x93?\x00\x00\x00@\x83\xbf\x92\xbf\x00\x00\x00\xa07_\x81?\x00\x00\x00\x00 \xc0}\xbf\x00\x00\x00@*\x0fp\xbf\x00\x00\x00`&:{?\x00\x00\x00\x80\x06\x1f\x83\xbf\x00\x00\x00`\x9f\xa8s\xbf\x00\x00\x00\xa0\xe7n|\xbf\x00\x00\x00\x00\xba%q?\x00\x00\x00 \\\xa8\x8e?\x00\x00\x00`1L}?\x00\x00\x00\xa0\xcb\xb0k\xbf\x00\x00\x00`n \x91?\x00\x00\x00\xa0\xcc\xc8h?\x00\x00\x00\x00Z~\x80\xbf\x00\x00\x00\xe0\xfcT\x88?\x00\x00\x00\xe0d\x8ee\xbf\x00\x00\x00\xe0T\x03\x8b\xbf\x00\x00\x00`KEa\xbf\x00\x00\x00\xa0\xc5\xf3\x83?\x00\x00\x00 \x95\xa4E\xbf\x00\x00\x00\xe0DV\x92\xbf\x00\x00\x00\x00\xd1\x8bs?\x00\x00\x00\xe0y\x91|\xbf\x00\x00\x00\xe0\xb4\xedd?\x00\x00\x00\xe0\xd1\xbb\x8f\xbf\x00\x00\x00`\xdf\x87v\xbf\x00\x00\x00\x00\xd6d\x84?\x00\x00\x00\xa0#5\x84?\x00\x00\x00\xc0\x96\x13\x91?\x00\x00\x00\x00i\xbd\x95?\x00\x00\x00\x00\xde\xd8b?\x00\x00\x00\xc0\'\xa2\x85\xbf\x00\x00\x00\xc0>\x0f\x80?\x00\x00\x00\xe0\x0c\x0c\x92?\x00\x00\x00\x80n\xd1\x94?\x00\x00\x00@\xd6\x87\x90\xbf\x00\x00\x00\xa0$\xa4\x81\xbf\x00\x00\x00@Q\x06z?\x00\x00\x00\x80\xc3^b?\x00\x00\x00\x80\x1a\x88a\xbf\x00\x00\x00\x00\x1d0s\xbf\x00\x00\x00`}:\\?\x00\x00\x00\xe0\x06\x02X?\x00\x00\x00\xa0j\x0b~\xbf\x00\x00\x00\xe0b\xfc\x84\xbf\x00\x00\x00\xa0\xe3\xa4\x84?\x00\x00\x00\xa0bs\x86\xbf\x00\x00\x00\x80GCz?\x00\x00\x00\x00\x9cxm?\x00\x00\x00\xe0.\x00\x86\xbf\x00\x00\x00\x80\xb4\x05\x84?\x00\x00\x00\x00\xff*\x84?\x00\x00\x00 \x83\x8e\x82\xbf\x00\x00\x00\x80\xbb\x84f\xbf\x00\x00\x00\xa0\xa5j\x83?\x00\x00\x00\xa0\x0e(\x85?\x00\x00\x00\x001Cw?\x00\x00\x00\x80d0c?\x00\x00\x00`\'\xc4\x85?\x00\x00\x00\x80j \x7f\xbf\x00\x00\x00@xW\x80\xbf\x00\x00\x00 \xc8\xd6\x8f\xbf\x00\x00\x00 b6\x8c?\x00\x00\x00\x80\xb4\x87o\xbf\x00\x00\x00\x80\xede\x81?\x00\x00\x00\x00=V\x88?\x00\x00\x00\x00v\xa0\x97?\x00\x00\x00\xa0\xc8/\x91\xbf\x00\x00\x00`\xe4qw?\x00\x00\x00@\x9fNO?\x00\x00\x00 \xb9\x86\x87?\x00\x00\x00 \xeb\xd2v?\x00\x00\x00\x00d\xa7y\xbf\x00\x00\x00\xe0\xdb]\x98\xbf\x00\x00\x00\xc09\xc4}?\x00\x00\x00\xc0\xe9\xccf\xbf\x00\x00\x00\x80\xaf\xdb\x80\xbf\x00\x00\x00@\xef\x81\x99?\x00\x00\x00\x80(\xcdn?\x00\x00\x00\xe0R\x0cp?\x00\x00\x00\x80\xd5\x01\x89?\x00\x00\x00\x00\xfd\x17)\xbf\x00\x00\x00 \x00Q\x8c\xbf\x00\x00\x00\xe0\xab\xd9o?\x00\x00\x00\x00*\x9b`?\x00\x00\x00 ,\xd4t?\x00\x00\x00\x00w\x7f\x8c\xbf\x00\x00\x00\xc0\xe4Xy?\x00\x00\x00\xe0_\xa6w?\x00\x00\x00`\x12\xab\x8f?\x00\x00\x00\xa0\xdf\xd2\x89?\x00\x00\x00\xc0\x18\xfa\x87\xbf\x00\x00\x00\xe0\\\x80i?\x00\x00\x00@P\x83\x81?\x00\x00\x00\x802\x14\x88?\x00\x00\x00\x80w\x8a\x8e\xbf\x00\x00\x00\x80\xeb\x1d\x9b\xbf\x00\x00\x00\xe0\x9f\xcd\x8a?\x00\x00\x00\xe0\xf0\xfc\x89\xbf\x00\x00\x00`\xc3\xfec\xbf\x00\x00\x00 \xf0&\x7f?\x00\x00\x00\x80\x9c\xc4_\xbf\x00\x00\x00\x00\xe4v\x8d\xbf\x00\x00\x00 L\x92r?\x00\x00\x00`\xdc\x03s?\x00\x00\x00\xe0\xeb\x81\x90?\x00\x00\x00 \xb3\r\x96\xbf\x00\x00\x00\xa0\x9b[r\xbf\x00\x00\x00 \xa9o\x93?\x00\x00\x00\xe0\xcd\x8bG\xbf\x00\x00\x00@-\x93`\xbf\x00\x00\x00\xe0\x87e\x9a\xbf\x00\x00\x00\xa0\x804x?\x00\x00\x00\xa0xXz\xbf\x00\x00\x00\x00:\xd6\x8e\xbf\x00\x00\x00\xe0\xab4\x82\xbf\x00\x00\x00@+XV\xbf\x00\x00\x00\xa0$mp?\x00\x00\x00\xa0Q\xb8\x84?\x00\x00\x00\x80~\xe5q\xbf\x00\x00\x00\x00+e\x8e?\x00\x00\x00\xc0~\x0fz\xbf\x00\x00\x00 "\x93\x92\xbf\x00\x00\x00 \xaf\x01g?\x00\x00\x00 \xa6>s?\x00\x00\x00\xc0\x16\x0c\x95?\x00\x00\x00@K\xa4\x88?\x00\x00\x00\xa09\xb8T\xbf\x00\x00\x00 \x02\n\x80\xbf\x00\x00\x00\x80\x99\x1a|\xbf\x00\x00\x00\x00\xf4\x85\x8c\xbf\x00\x00\x00\x80.\x7f\x91?\x00\x00\x00\xa04\x84S\xbf\x00\x00\x00`\xccq\x83?\x00\x00\x00\x00\xa4Dz?\x00\x00\x00\xe0]\x98?\xbf\x00\x00\x00\xa0aY\x7f?\x00\x00\x00`\x83\xf5\x83?\x00\x00\x00\x00)\x1c\x88?\x00\x00\x00\xc0\xc4\x83r\xbf\x00\x00\x00\x80\xc4;}?\x00\x00\x00\x00v\xe0q?\x00\x00\x00\xa0\xe7\xc6W\xbf\x00\x00\x00\xc0\x8bvz\xbf\x00\x00\x00\xc0sE\x84?\x00\x00\x00@\xa7\xe9\x82?\x00\x00\x00 \xbb3\x80\xbf\x00\x00\x00\xe0\xe4\x85\x85\xbf\x00\x00\x00 \xbeNz\xbf\x00\x00\x00 \xf45\x80\xbf\x00\x00\x00\xe0\xfc\xc5x?\x00\x00\x00\xe0\x89Jh\xbf\x00\x00\x00\x80\x17\x91\x97?\x00\x00\x00\x00\xf0\xe2:?\x00\x00\x00 \xc9\xcf\x8d?\x00\x00\x00\x00n3\x83?\x00\x00\x00\xc0m{\x80?\x00\x00\x00\xc0\xd8\xdd\x90\xbf\x00\x00\x00\x00\x9a\xf6]?\x00\x00\x00\xc0\xd1Xm\xbf\x00\x00\x00\x80\xc6_\x8f?\x00\x00\x00\xe0\xf0d\x87?\x00\x00\x00\xe0\xb2\xd6\x87\xbf\x00\x00\x00\xe0\xbcyl?\x00\x00\x00 \x0c\x1er?\x00\x00\x00 \xa1\x87\x85?\x00\x00\x00`\x83\x1d\x83\xbf\x00\x00\x00`\x82\xdax?\x00\x00\x00\x00\xc4\x9d\x91\xbf\x00\x00\x00\xe0\x89\x90\x96?\x00\x00\x00@\xa1wk?\x00\x00\x00\x00\x08\xfa\x89?\x00\x00\x00`\xc1L}?\x00\x00\x00\xc0\xa7g0?\x00\x00\x00\x00]\xa7\x95?\x00\x00\x00 \xa6my\xbf\x00\x00\x00\xc0]\xb9[?\x00\x00\x00 }\xf3s\xbf\x00\x00\x00\xa0Q\xec|\xbf\x00\x00\x00\xc0\xce\x10\x84\xbf\x00\x00\x00@\x0e\x8et?\x00\x00\x00\x00p\xddk?\x00\x00\x00\xa0\x93\x1b|\xbf\x00\x00\x00@\xaa@b\xbf\x00\x00\x00\x80\x12\xd7\x93\xbf\x00\x00\x00\xa0\xa4~\x83\xbf\x00\x00\x00\x00\xee$\x86\xbf\x00\x00\x00\x80\xa5Dv\xbf\x00\x00\x00@\xf4\x84\x83?\x00\x00\x00\xe0\xdcLw?\x00\x00\x00\xe0\xfb\xa5s?\x00\x00\x00\xa0\xdej\x95\xbf\x00\x00\x00`\xd0\x14U\xbf\x00\x00\x00\x80d\xcfU?\x00\x00\x00 \xf2ej\xbf\x00\x00\x00\x00L|\x8e?\x00\x00\x00\xe0\xfd\xcc[\xbf\x00\x00\x00\xc0\x02eh?\x00\x00\x00\xa0\xbba\x86?\x00\x00\x00@\x84{~?\x00\x00\x00\xe0\xbeM\x9b\xbf\x00\x00\x00\xa0\xddWx\xbf\x00\x00\x00\xe0)\xe7j?\x00\x00\x00 {\x05l\xbf\x00\x00\x00\x80=Zt?\x00\x00\x00\xa0M\xfe\x8c\xbf\x00\x00\x00@\xc5\x13\x8b?\x00\x00\x00\xe0U\xa3\x88?\x00\x00\x00\x00\xdb\x8e\x96\xbf\x00\x00\x00\x00\x89\xa2\x93?\x00\x00\x00\xe0Vw\x83?\x00\x00\x00\xc0\xa3]\x87?\x00\x00\x00\xa0\xa8\x00\x88?\x00\x00\x00\xe0\xdco\x84?\x00\x00\x00@t\xccv?\x00\x00\x00@:}\x8c\xbf\x00\x00\x00\xc09\xef~\xbf\x00\x00\x00@\xf5h\x81\xbf\x00\x00\x00\xc0\xc5\'s\xbf\x00\x00\x00\xa0\'\xf4\x80\xbf\x00\x00\x00\xc0\xe4`e\xbf\x00\x00\x00`\x13}\x82\xbf\x00\x00\x00\xc0\x0c\xdc|?\x00\x00\x00\xa0\x96\'\x8d?\x00\x00\x00@\x16<\x7f\xbf\x00\x00\x00\x00Q\ne\xbf\x00\x00\x00`N!\x7f?\x00\x00\x00 \x1d\x1e\x81\xbf\x00\x00\x00\x00\x92o\x80?\x00\x00\x00`\xb2\xee\x94?\x00\x00\x00\xa0a\x08{?\x00\x00\x00\xe0\xcd\x99.\xbf\x00\x00\x00\x00\xa5{^?\x00\x00\x00\x00\xfc\x8eu?\x00\x00\x00\xa0\xc0e\x92?\x00\x00\x00\xe0\xd2[}\xbf\x00\x00\x00\x80N\x96w?\x00\x00\x00@\xa9\x9br\xbf\x00\x00\x00\xe0I\xfe\x91\xbf\x00\x00\x00 Xu\x92\xbf\x00\x00\x00 q\xb8\x81?\x00\x00\x00\xc0\x85\x81q\xbf\x00\x00\x00@\x10\xe3\x8b?\x00\x00\x00\x00\x95\x82\x83\xbf\x00\x00\x00\xc0\xed}T?\x00\x00\x00@\x9b\x1ap\xbf\x00\x00\x00 \xe1\x7f\x85\xbf\x00\x00\x00\x80Dp|\xbf\x00\x00\x00`46\x80\xbf\x00\x00\x00`\xd0\xf5g?\x00\x00\x00\xa0f|\x9e\xbf\x00\x00\x00\xe0\x8b<p?\x00\x00\x00\xe0=\xba\x87\xbf\x00\x00\x00\x00\x0c ?\xbf\x00\x00\x00@\x8b\x8be\xbf\x00\x00\x00\x80\x89\x02c\xbf\x00\x00\x00@\xd8*y?\x00\x00\x00\xc0*~\x82\xbf\x00\x00\x00\xa0=v[?\x00\x00\x00@)\x9aa?\x00\x00\x00\xe0]6i\xbf\x00\x00\x00\xa0\xa4\xe6}\xbf\x00\x00\x00\xa0\xeb\xce\x82?\x00\x00\x00\x00\xefMc\xbf\x00\x00\x00`j\x10\x92\xbf\x00\x00\x00\xe0\x1b"v?\x00\x00\x00 \x9a%{?\x00\x00\x00\x00zQ\x84?\x00\x00\x00`\x08}\x85\xbf\x00\x00\x00\xc0f_\x83\xbf\x00\x00\x00\x80f\x9bS\xbf\x00\x00\x00\xe0\xc8\x91\x95?\x00\x00\x00\x00C\xe1h?\x00\x00\x00\xa0\xb6\xdf\x89?\x00\x00\x00\xe0mA`\xbf\x00\x00\x00\xe0q\x80j?\x00\x00\x00\xc0\xbb\xc9\x83\xbf\x00\x00\x00\x00\xcdK\x8a\xbf\x00\x00\x00\x80\xf1/o\xbf\x00\x00\x00`\x93\xe9\x82\xbf\x00\x00\x00`ky\x84\xbf\x00\x00\x00\xc0\xceRu?\x00\x00\x00 \xe9\xc6Y\xbf\x00\x00\x00\xc0\x9cco?\x00\x00\x00\x80\xdb:|?\x00\x00\x00@w?\x92\xbf\x00\x00\x00\xe0"p\x80?\x00\x00\x00\xe0`\xb7\x91?\x00\x00\x00\x00\xe6\x93v\xbf\x00\x00\x00\x80m\xb0r\xbf\x00\x00\x00`\x1e\x95\\?\x00\x00\x00\x80\x86\x9cz?\x00\x00\x00\xe0\xda\xddy?\x00\x00\x00\xc0\x88\xef@\xbf\x00\x00\x00@&\xa5\x8e\xbf\x00\x00\x00\xe0X\x95n\xbf\x00\x00\x00\xc0U\xd8m?\x00\x00\x00\x80O\xd1x?\x00\x00\x00`\xa2\xbf\x82?\x00\x00\x00 \xfa\x07P?\x00\x00\x00\xc0\x848\x82?\x00\x00\x00@|An?\x00\x00\x00@\xeb\xa7T?\x00\x00\x00\x00\xf6\xae>?\x00\x00\x00`H\xace?\x00\x00\x00\xc0E\tu\xbf\x00\x00\x00 2=\x94?\x00\x00\x00\xa0\xe4e\x85\xbf\x00\x00\x00\xe0\x04c\x93\xbf\x00\x00\x00`\xdb;\x84?\x00\x00\x00 \xd3\x8dM?\x00\x00\x00\xc0\xaaf\x82?\x00\x00\x00\xa0\x15\xcc\x84\xbf\x00\x00\x00 \xa0h\x95\xbf\x00\x00\x00\xe0\xef\xf2\x88?\x00\x00\x00\x80\xcd\x83\x81?\x00\x00\x00\xa0\x18!P\xbf\x00\x00\x00`\x0b\x04\x95\xbf\x00\x00\x00@\xd0:c?\x00\x00\x00\xc0\x84\xa3\x81\xbf\x00\x00\x00\xe0\x80\xc4\x93\xbf\x00\x00\x00\x80\xe2\xa2i\xbf\x00\x00\x00\xe0"\xb9\x84?\x00\x00\x00\xa0\xe1/\x91?\x00\x00\x00\xe0\x0bHi\xbf\x00\x00\x00 }\xf4y\xbf\x00\x00\x00\x00\xbd+I\xbf\x00\x00\x00\xe0\xec\xfe\x86?\x00\x00\x00\xe0\xa6\xa0\x87?\x00\x00\x00\xc0\xddLp?\x00\x00\x00\x00\xffy^?\x00\x00\x00 N\xa3\x95?\x00\x00\x00\xa0\xd2(V?\x00\x00\x00\x00n\xdd\x94?\x00\x00\x00 ^a\x83?\x00\x00\x00\xc0\x17!]\xbf\x00\x00\x00\xc0\xcc\xf2i\xbf\x00\x00\x00\xc0J\xa8t?\x00\x00\x00@e\xe2[?\x00\x00\x00\x80:D\x91\xbf\x00\x00\x00\xa0@\xb1r\xbf\x00\x00\x00\xe0\xfcR[?\x00\x00\x00\x80J\xdc\x83?\x00\x00\x00\x80\xaf\x7f\x82?\x00\x00\x00\xe05nw?\x00\x00\x00\xa0Lh\x8a\xbf\x00\x00\x00 @\x17\x97\xbf\x00\x00\x00 \xe3\xb3r\xbf\x00\x00\x00\xe0\xadni\xbf\x00\x00\x00\xa0S\xcb\x93\xbf\x00\x00\x00\xa0\xb2\xe3b?\x00\x00\x00`\x1bDF\xbf\x00\x00\x00`\x89r\x92?\x00\x00\x00`CF{\xbf\x00\x00\x00\xe0}f4\xbf\x00\x00\x00\x80\x04 `\xbf\x00\x00\x00\x80G\xcej\xbf\x00\x00\x00@\xd9\x01\x8c?\x00\x00\x00@\xce\x9eb?\x00\x00\x00\x80C\xf8Y?\x00\x00\x00\x00n\x95h\xbf\x00\x00\x00@(\x9df\xbf\x00\x00\x00@\x11\xb6^?\x00\x00\x00 \x161}\xbf\x00\x00\x00 \xf3\xb2s\xbf\x00\x00\x00\xc0\xd5\x0cu\xbf\x00\x00\x00@\xca\x01Y\xbf\x00\x00\x00@\xc2U\x82?\x00\x00\x00`\x96\n\x92\xbf\x00\x00\x00@<\xdd|\xbf\x00\x00\x00\xc0\xcf\xee^\xbf\x00\x00\x00@&\xdbX?\x00\x00\x00\xa0_}L\xbf\x00\x00\x00\x80\xe9\x93\x9a\xbf\x00\x00\x00@p\xbc\x92\xbf\x00\x00\x00`\xf1>\x81\xbf\x00\x00\x00\x009\xb2[?\x00\x00\x00\x00\xa2\xdd`\xbf\x00\x00\x00 \x9d\x99~\xbf\x00\x00\x00\xe0x\xedR?\x00\x00\x00 Z\xf3\x8f?\x00\x00\x00\xc08\xf2W\xbf\x00\x00\x00\xe03\xe6h\xbf\x00\x00\x00\xc0\xde8\x80?\x00\x00\x00`\xc2\xb5~?\x00\x00\x00\xc0w\xdbo?\x00\x00\x00\xe0\xc9&w?\x00\x00\x00\x80!\x90\x83\xbf\x00\x00\x00 \xed\xc7\x87\xbf\x00\x00\x00`\xaf\x9b\x80?\x00\x00\x00\x00\xb2Q\x8c\xbf\x00\x00\x00 \x0b\x0c\x82?\x00\x00\x00`\xa4\x1cd?\x00\x00\x00`\xa3\xf5l\xbf\x00\x00\x00\x00\xb2Mz\xbf\x00\x00\x00 R\x12x?\x00\x00\x00\xa0\xe2aR?\x00\x00\x00@\xa5\x1fn?\x00\x00\x00 \xc3\xc8:\xbf\x00\x00\x00\x00\x94\x18\x86\xbf\x00\x00\x00\x80\xa8\xd6q?\x00\x00\x00\x00c_I\xbf\x00\x00\x00\xe0!\xd2\x80?\x00\x00\x00\x80\x12\xce\x82?\x00\x00\x00`4\x89\x9b\xbf\x00\x00\x00\xc0c-\x7f?\x00\x00\x00\xc0vgz\xbf\x00\x00\x00\x00\xb9]`?\x00\x00\x00 \xc9\xccy?\x00\x00\x00\x00[\t\'?\x00\x00\x00\x80\xa6-\x83?\x00\x00\x00 \xaa\r~\xbf\x00\x00\x00\x80}\xa6\x8b?\x00\x00\x00\xe0mO\x84\xbf\x00\x00\x00\xc0\x94\xddq\xbf\x00\x00\x00\x80l"p\xbf\x00\x00\x00\x00\x83\x18h?\x00\x00\x00 \x9c\xb4Z?\x00\x00\x00\xe0\xe7\x13\x86\xbf\x00\x00\x00\xa0Q\x1a\x85\xbf\x00\x00\x00\xc0\xb7\xe1t\xbf\x00\x00\x00\x80\xdc{\x86?\x00\x00\x00\xe0\x7f\xcf\x87?\x00\x00\x00\x80s\xd3~?\x00\x00\x00\xa0\x9b1g\xbf\x00\x00\x00\xa0\xca1~?\x00\x00\x00\x80}\xc2t\xbf\x00\x00\x00\x80\xcd\xa0\x87\xbf\x00\x00\x00@\x99\x9aa?\x00\x00\x00@\x1fGD\xbf\x00\x00\x00\xa01\x06\x86?\x00\x00\x00 E\xcf\x80\xbf\x00\x00\x00@\x90\xa0Z\xbf\x00\x00\x00 \xb2\x9c2?\x00\x00\x00`\xb3]\x85?\x00\x00\x00\xc0\xc8>\x1c\xbf\x00\x00\x00\x00-I\x89?\x00\x00\x00\xa0\x87*\x89?\x00\x00\x00@%\xf0q?\x00\x00\x00@P-\x92?\x00\x00\x00\xe0\xf0\xccd?\x00\x00\x00 \x89/}?\x00\x00\x00\xe0Q\x87w\xbf\x00\x00\x00\x00*\x99W\xbf\x00\x00\x00 \xce\xaav?\x00\x00\x00@d5\x90?\x00\x00\x00`\xe5,k?\x00\x00\x00\x00Q!\x96?\x00\x00\x00 I$v?\x00\x00\x00`\xa9gD?\x00\x00\x00\xc0T\xb3a?\x00\x00\x00\xa0\x8d\x9aq\xbf\x00\x00\x00`\xd5\t\x7f?\x00\x00\x00`\xd2\x97b?\x00\x00\x00@\xb5Pk?\x00\x00\x00`\nK\x87?\x00\x00\x00 #\xcct\xbf\x00\x00\x00 ;\xd7\x81?\x00\x00\x00 \xda\xbc\x81?\x00\x00\x00\xe0\xf7E\x9d\xbf\x00\x00\x00\xc0aMi?\x00\x00\x00`#\x07[?\x00\x00\x00\xe0\xfa\xa6\x84\xbf\x00\x00\x00\xe0\xaa\x0f\x84\xbf\x00\x00\x00\x80a\xafF?\x00\x00\x00`\'nj\xbf\x00\x00\x00 \x86b\x80\xbf\x00\x00\x00\x80\x7f;\x99\xbf\x00\x00\x00@\x00\xaf\x94?\x00\x00\x00`xw\x8a?\x00\x00\x00\xa0\xa6[\\?\x00\x00\x00 5\x1fi?\x00\x00\x00\xe0\xc3zw?\x00\x00\x00\xc0\xf9\xedy?\x00\x00\x00@\x9d\x95y\xbf\x00\x00\x00\xe0\x1d\x16k\xbf\x00\x00\x00`\xd0\xca7\xbf\x00\x00\x00 \xa3g\x85?\x00\x00\x00\xa0\x8a@\x94\xbf\x00\x00\x00\xc0\xb2\xe5\x90?\x00\x00\x00\xa0\xe2\xc2z?\x00\x00\x00\xc0\x1a\x00\x7f\xbf\x00\x00\x00\x80\xdcB\x85?\x00\x00\x00@N\xb0S?\x00\x00\x00\x00\x1fyK\xbf\x00\x00\x00\xa0\xc1\xf3\x85\xbf\x00\x00\x00\xe0\x18:h?\x00\x00\x00 \xff\xf4[?\x00\x00\x00@\xf8\xc5\x93\xbf\x00\x00\x00\xc0aap?\x00\x00\x00`a\xebx?\x00\x00\x00`,\x98\x88\xbf\x00\x00\x00\xe0\x90{\x8f?\x00\x00\x00@\xe4\xcb~\xbf\x00\x00\x00\xa0\x931a?\x00\x00\x00`\x84\x06\x93\xbf\x00\x00\x00`\xed\xbd\x82?\x00\x00\x00\xe0\r\xa8s?\x00\x00\x00`\xfb~]?\x00\x00\x00\x80\xad\xf1e\xbf\x00\x00\x00\xe0\x16\x96v?\x00\x00\x00\x00\xa1u\x94\xbf\x00\x00\x00\xe0\x91K\x8e?\x00\x00\x00\x00\x00\n\x93\xbf\x00\x00\x00\x80\xfa\x96\x84\xbf\x00\x00\x00\xa0\xe4\xebO?\x00\x00\x00\xe0\xdd\xf9Y\xbf\x00\x00\x00\x80n\x01g\xbf\x00\x00\x00 \x0e\xact\xbf\x00\x00\x00\xa0/!\x85\xbf\x00\x00\x00`\xf6\xe1M?\x00\x00\x00\xa0|\xba\x90?\x00\x00\x00`\xa7\x99\x8a?\x00\x00\x00\xe0Y\x82\x87\xbf\x00\x00\x00\xa0\x98\xcf\x90?\x00\x00\x00`\xf5\x8c\x86?\x00\x00\x00\xe0\xfbe\x91?\x00\x00\x00\x80e\xdf\x92?\x00\x00\x00`\xe4Wv?\x00\x00\x00@\x136{?\x00\x00\x00\xa0\xc7\xad\x8d\xbf\x00\x00\x00 Y}\x8d?\x00\x00\x00\x80\xcd\xa2\x88\xbf\x00\x00\x00\x00\x12\x94~?\x00\x00\x00 %\xc9\x80\xbf\x00\x00\x00\x00\xc5h\x93\xbf\x00\x00\x00\xa02\x16\x92?\x00\x00\x00\xe0\xe8\x1av?\x00\x00\x00\x80\n\t\x81\xbf\x00\x00\x00\x00\x04\xcf\x97\xbf\x00\x00\x00\xc02Jx\xbf\x00\x00\x00\xc0\xf1\xb7\x93\xbf\x00\x00\x00\xa0\x8fA}?\x00\x00\x00\x80\x85\xfb\x8b?\x00\x00\x00\xc0nsw\xbf\x00\x00\x00\xc0\xe7N\x8a\xbf\x00\x00\x00\x00\xe7\xfc\x94\xbf\x00\x00\x00`\n\xa3}\xbf\x00\x00\x00\xa0\x18\x02.\xbf\x00\x00\x00\xe0\xe6\x9b\x95\xbf\x00\x00\x00\x00,5\x92?\x00\x00\x00\xe0Qa\x8a?\x00\x00\x00\xe0-9j?\x00\x00\x00 \xc8g\x80?\x00\x00\x00\x80\xdfT\x8d\xbf\x00\x00\x00`\xc9\xb2\x82?\x00\x00\x00\xe0k\x9a\x1a\xbf\x00\x00\x00\x00\x9e\x7f\x8a\xbf\x00\x00\x00\xe0\xe4\x0ct\xbf\x00\x00\x00 {\xbb\x80?\x00\x00\x00`\xd1x\x91?\x00\x00\x00`\xa9Y\x81?\x00\x00\x00\x00\xde\x84c?\x00\x00\x00\xa0E\\p?\x00\x00\x00\x00\x9dS\x85\xbf\x00\x00\x00`_DW?\x00\x00\x00\x00\x95\xc3\x8b\xbf\x00\x00\x00\xa0\x18\x9eN?\x00\x00\x00\xc0\x03\x0e\x81?\x00\x00\x00@\x0fUD?\x00\x00\x00\xc0\xed\x15k\xbf\x00\x00\x00\x80\x92\xef[\xbf\x00\x00\x00\xe0\xb2\x00J?\x00\x00\x00\x00\x8717?\x00\x00\x00@\x88\x97s\xbf\x00\x00\x00\xc0lHm?\x00\x00\x00\x00\x8c\x9c\x89\xbf\x00\x00\x00\x00\x00\xb2l\xbf\x00\x00\x00@\x18\xbc\x8d\xbf\x00\x00\x00\xe0\xfb\xfeG?\x00\x00\x00\xa0,gr?\x00\x00\x00\xc0\xdft\x8b?\x00\x00\x00\xc0H|J\xbf\x00\x00\x00@\xc5\xaf\x90?\x00\x00\x00\xa0\x1b\xf7\x96?\x00\x00\x00\x80\xb9\x82\x90?\x00\x00\x00`\x03L\\?\x00\x00\x00\xa0\x89d\x99?\x00\x00\x00\x00(\x14\x83?\x00\x00\x00\xe0!\x8a\x8c\xbf\x00\x00\x00\x807\x9ci\xbf\x00\x00\x00\x00\xb5`q\xbf\x00\x00\x00 \xd1Sf?\x00\x00\x00\x00ED\x7f\xbf\x00\x00\x00 \x12\xcb\x88\xbf\x00\x00\x00 \xb9\xc1Z?\x00\x00\x00@\xc3\t\x94\xbf\x00\x00\x00\x80s*s?\x00\x00\x00\xe0\xce\xd2\x86?\x00\x00\x00\xa0\x0cGs?\x00\x00\x00\xa0\xa7zx?\x00\x00\x00\xa0\x03\x0fb?\x00\x00\x00\xa0k\xae\x97?\x00\x00\x00 ?\xe1\x90\xbf\x00\x00\x00`\x9coi\xbf\x00\x00\x00\xe0[\xf9\x80\xbf\x00\x00\x00\xe0\x02kn\xbf\x00\x00\x00\x00H\x05s?\x00\x00\x00\x80U\x08\x86?\x00\x00\x00\xc0=~\x1e?\x00\x00\x00\x800Ws?\x00\x00\x00`K\x8b\x86\xbf\x00\x00\x00`L\x9b\x93?\x00\x00\x00\xe0\xbc\xf6N?\x00\x00\x00\x80\x03\xd6V\xbf\x00\x00\x00\x00A\xb5\x88\xbf\x00\x00\x00\x80\x95\xb9x\xbf\x00\x00\x00\xa0\x99ap?\x00\x00\x00@\xc0\xa6a?\x00\x00\x00\xe0\x198m\xbf\x00\x00\x00\xe0 \x9fy?\x00\x00\x00 \x95\xc5w\xbf\x00\x00\x00\x80\\r\x95\xbf\x00\x00\x00\x80\xf4x\x91?\x00\x00\x00\xc0mSd\xbf\x00\x00\x00 z\xbd\x81\xbf\x00\x00\x00\x00\xc6\xc8K\xbf\x00\x00\x00\xa0Go_?\x00\x00\x00@65@?\x00\x00\x00`\xbf\xd8\x8e?\x00\x00\x00\x80?\x9f\x12\xbf\x00\x00\x00\x803\x87\x80\xbf\x00\x00\x00`\xd9\xf9q\xbf\x00\x00\x00@\xf0\xff\x84\xbf\x00\x00\x00\x00\x1a\xdc\x80?\x00\x00\x00\xe0`\x94~?\x00\x00\x00\xe0\xe4\xc0X?\x00\x00\x00@s\x19`\xbf\x00\x00\x00\x80\x98\xcc\x87\xbf\x00\x00\x00@\xd8XJ?\x00\x00\x00\xa0\xa9\x08o\xbf\x00\x00\x00\x80\xa7\x1aq?\x00\x00\x00 \xcc\xe7]?\x00\x00\x00\xe0\xa8\x89y?\x00\x00\x00`g\x0f\x82?\x00\x00\x00\xc0\x81\x8c}?\x00\x00\x00\x80\xb03d\xbf\x00\x00\x00`"\xdbS?\x00\x00\x00@\x84\x91^\xbf\x00\x00\x00 3]\x80\xbf\x00\x00\x00\xa0\x0f\xc6P\xbf\x00\x00\x00\x00\xee\x0e\x81?\x00\x00\x00\xc0s1n\xbf\x00\x00\x00\xc04\x0ee?\x00\x00\x00\xc0c8\x88?\x00\x00\x00\xe0\xdeU\x90\xbf\x00\x00\x00\xa09\xe0\x81\xbf\x00\x00\x00\xe0k\xd3`\xbf\x00\x00\x00\x00M\xad\x96?\x00\x00\x00\xe0\x85\xae\x80\xbf\x00\x00\x00\x00\xd3\x99\x8d?\x00\x00\x00\x00\xa2.v\xbf\x00\x00\x00\xa0>8\x8d\xbf\x00\x00\x00@\x06J+\xbf\x00\x00\x00`\xf80\x85?\x00\x00\x00@\xd5O\x8b\xbf\x00\x00\x00\xe0\xbc\x1e|\xbf\x00\x00\x00\xe0\xaa\xa5r\xbf\x00\x00\x00`?\xd9\x81?\x00\x00\x00 \x1e[w?\x00\x00\x00\x801\xe2x\xbf\x00\x00\x00 \xa8\xf4\x8e?\x00\x00\x00\xe0\x0f\x80\x80\xbf\x00\x00\x00@\x82\x98\x89?\x00\x00\x00@\x9f\x8f\x85\xbf\x00\x00\x00\x00\\\x84\x8a\xbf\x00\x00\x00`\xc4\x8a\x94?\x00\x00\x00\xe0\x83\xa6\x9f?\x00\x00\x00`jS\x82?\x00\x00\x00\xc0J\xb6s\xbf\x00\x00\x00@(\x1et\xbf\x00\x00\x00\x80,hq?\x00\x00\x00\x80*2S?\x00\x00\x00\x00g\x9e\x95?\x00\x00\x00\xc0\xa0\xf5\x8f?\x00\x00\x00 \xeb\x94\x81\xbf\x00\x00\x00\x80\xe2cs?\x00\x00\x00\xc0\xd6\xea\x80?\x00\x00\x00\xa0\x97\xbb\x90\xbf\x00\x00\x00 \xb0\xb3t\xbf\x00\x00\x00\xe0:-\x8f?\x00\x00\x00@\x8c\xff\x89\xbf\x00\x00\x00\xa0z\xd8\x86?\x00\x00\x00\xa0\x92`G?\x00\x00\x00\x00\x0fOc?\x00\x00\x00\x80\xd6\xd1\x8e?\x00\x00\x00@\x06)w\xbf\x00\x00\x00\xa0\x12\x81\x81\xbf\x00\x00\x00\xe0\xb7\x15n?\x00\x00\x00\xe0Y\xc9|\xbf\x00\x00\x00\x00\xc9\x8fz\xbf\x00\x00\x00\xc0[<i\xbf\x00\x00\x00\xc0(\x19o?\x00\x00\x00\xc0\x12\xf1\x8a?\x00\x00\x00\x80W%\x89?\x00\x00\x00\xe0\x0c\x0f\x8a\xbf\x00\x00\x00\x80\xb5\x07z\xbf\x00\x00\x00\x00z^T?\x00\x00\x00\x00\xd4C}\xbf\x00\x00\x00\xa0\xb8\xd1z\xbf\x00\x00\x00\xa0\xb61C?\x00\x00\x00@r\xb7\x91?\x00\x00\x00\xa0q\x01\x8a\xbf\x00\x00\x00\xc0*0\x83?\x00\x00\x00\xa0%p\x92\xbf\x00\x00\x00\xc0c\xe0i?\x00\x00\x00\x00\xa8\x88\x9f\xbf\x00\x00\x00`\xc2\xa5\x84\xbf\x00\x00\x00\xe0T\x88\x90?\x00\x00\x00\x80\xd2\x90S?\x00\x00\x00\x802\x88r\xbf\x00\x00\x00@\xfa3\x89\xbf\x00\x00\x00@.}\x94?\x00\x00\x00\xa0\xc9\xff|?\x00\x00\x00\xa0\xd4\xa1\x92?\x00\x00\x00\xe00\xfc\x97\xbf\x00\x00\x00\xc0\x08a\x7f?\x00\x00\x00\x00SEg?\x00\x00\x00\xc0\x08\xa7R?\x00\x00\x00\xe0\xed\xe1`\xbf\x00\x00\x00\x80\xba\x15h?\x00\x00\x00 \x18\x1b|\xbf\x00\x00\x00\xa0T\xd5\x80?\x00\x00\x00\x80\xd9\xe2\x82?\x00\x00\x00\x80\xaf?p\xbf\x00\x00\x00\xc0\x07"v\xbf\x00\x00\x00 \\/W\xbf\x00\x00\x00 ?\xcb\x92?\x00\x00\x00\xa0\xd3\xa7p?\x00\x00\x00@\xfcB}\xbf\x00\x00\x00\xe0\xe6xw?\x00\x00\x00`dKr?\x00\x00\x00 \x81\xdeD\xbf\x00\x00\x00\xc0r\xff\x8c?\x00\x00\x00\x80\x95\xf3\x82?\x00\x00\x00\x802_b\xbf\x00\x00\x00 \xc6=\x90\xbf\x00\x00\x00 \xfez\x8b?\x00\x00\x00\xe0\x858i?\x00\x00\x00 \xfb\xa7|\xbf\x00\x00\x00\xa0\x85\xedl?\x00\x00\x00`y\x15=?\x00\x00\x00\xa0\xe5~^\xbf\x00\x00\x00@\x86Mb\xbf\x00\x00\x00\x80\x8a\x1f]\xbf\x00\x00\x00@D\xd0Z\xbf\x00\x00\x00\xe0\x84\xa4\x99?\x00\x00\x00\xa0rW|?\x00\x00\x00 \x07\x9b`?\x00\x00\x00\x00\xd5uW?\x00\x00\x00\xa0\xe4\x1a\x8a\xbf\x00\x00\x00 ?K[\xbf\x00\x00\x00\xe0\xc5\'\x7f\xbf\x00\x00\x00\x80\x95%|?\x00\x00\x00`\xf2\xa0V?\x00\x00\x00\x00\x7f~t?\x00\x00\x00\x009\xfd\x84?\x00\x00\x00 \xc6\x85z?\x00\x00\x00\x80Wzq\xbf\x00\x00\x00`r\xcdy\xbf\x00\x00\x00\xe0`\xb6\x93?\x00\x00\x00\xe0\x96\x04v\xbf\x00\x00\x00\xc0\xc2sV\xbf\x00\x00\x00@\xec\x83D\xbf\x00\x00\x00\xe0g\xb8\x83?\x00\x00\x00\xa0\xbc\xcaf\xbf\x00\x00\x00`\xe4el\xbf\x00\x00\x00\xe0\x13\x1bH\xbf\x00\x00\x00\xa0\x07\xc7\x87\xbf\x00\x00\x00\x00@\xb5,\xbf\x00\x00\x00\xe0\xae\x9eZ?\x00\x00\x00\xc0\x0fj\x81?\x00\x00\x00\x80\xb2\xb4\x88\xbf\x00\x00\x00\xc0\x18\x82{\xbf\x00\x00\x00 \xeb\x0b@?\x00\x00\x00\xa0`}g\xbf\x00\x00\x00`\xa6\x89\x84?\x00\x00\x00 \xc6\xcdz?\x00\x00\x00\xc0Iw\x90?\x00\x00\x00 N\x96\x88\xbf\x00\x00\x00\xc0\xe2\xcd\x94\xbf\x00\x00\x00\xa0uc\x89\xbf\x00\x00\x00@\xb9v\x8e\xbf\x00\x00\x00@?\xf4\x91?\x00\x00\x00\xa0\xbb9\x8b?\x00\x00\x00 \x8b\xcd\x8d\xbf\x00\x00\x00\x80\xb8\x1a\x80?\x00\x00\x00`\xf49\x89\xbf\x00\x00\x00 \x8eM\x8d?\x00\x00\x00\x80\x8c\x86\x90?\x00\x00\x00@\x1f\xbds?\x00\x00\x00 \xbc$g?\x00\x00\x00`Z$\x83?\x00\x00\x00\xc0\xf4\x8aK\xbf\x00\x00\x00@\xb6\x08\x90?\x00\x00\x00\xa0<i\x82\xbf\x00\x00\x00\xa0] c?\x00\x00\x00@6\x8fG?\x00\x00\x00 C\x8f\x97\xbf\x00\x00\x00 B\xf3r?\x00\x00\x00\xa0\xc9W\x80\xbf\x00\x00\x00\xa0H+\x8b\xbf\x00\x00\x00\x00$m`?\x00\x00\x00\xe0/9a\xbf\x00\x00\x00\x00f8\x83?\x00\x00\x00\xc0\xb2\xb1s?\x00\x00\x00\x00d/j?\x00\x00\x00\x00\xa7\x8b\x85?\x00\x00\x00\xe0\x9d\\r?\x00\x00\x00\xc0\x9a4\x85\xbf\x00\x00\x00@\xa3\xb2}?\x00\x00\x00\xe0k\x8c{?\x00\x00\x00 \xd46q\xbf\x00\x00\x00\xc0\xa8{\x89\xbf\x00\x00\x00\xe0\x8a\x97\x92?\x00\x00\x00\xe0\x9aHw?\x00\x00\x00\x00\x8c;\x88?\x00\x00\x00`\xf0\xf6\x87?\x00\x00\x00`@Yr?\x00\x00\x00@`\x8d\x82\xbf\x00\x00\x00 \x8e}&?\x00\x00\x00\xe0\x9fe\x90?\x00\x00\x00 \x04\xb0`\xbf\x00\x00\x00\x00\x9d\xe5|?\x00\x00\x00\x00\xd8\xe8i?\x00\x00\x00@\x88\xcb\x81?\x00\x00\x00\x80\xa8\'\x82?\x00\x00\x00 p\xc1\\\xbf\x00\x00\x00\xe0\xd4&\xa5\xbf\x00\x00\x00\xc0\xfaZX\xbf\x00\x00\x00\xc0\x193\x8a?\x00\x00\x00`/\xa0r\xbf\x00\x00\x00\xc0\x96\xc2t\xbf\x00\x00\x00@=\xa2p\xbf\x00\x00\x00\x00\xacY\x88?\x00\x00\x00\x80.\x08t?\x00\x00\x00\x00\x8e#\x95\xbf\x00\x00\x00`\xa8\x87\x81\xbf\x00\x00\x00@\x86H\x96?\x00\x00\x00 \x85\xf3M\xbf\x00\x00\x00 \xc2\xe9\x92\xbf\x00\x00\x00\xe02\x14S?\x00\x00\x00\xc0\x0fE\x88?\x00\x00\x00 (ne?\x00\x00\x00` d\x81\xbf\x00\x00\x00@,\xbar\xbf\x00\x00\x00\xa0\xc1(w\xbf\x00\x00\x00 \xed\xfd\x8c?\x00\x00\x00 =\x96x\xbf\x00\x00\x00 \xef\xd6\x80?\x00\x00\x00\xa0\x83-\x85?\x00\x00\x00\xc0\x12\x00`?\x00\x00\x00\x80<\rQ?\x00\x00\x00 /\xf4\x8d\xbf\x00\x00\x00\x80\x1d\xee\x84\xbf\x00\x00\x00\x80\x9f\xc8k\xbf\x00\x00\x00 ]\x9d\x01?\x00\x00\x00\xe0\xbb\x1an?\x00\x00\x00`\xa6\x95a\xbf\x00\x00\x00\x00\xd4\x97}?\x00\x00\x00\xc0Mah?\x00\x00\x00\xc04G\x8a?\x00\x00\x00\x80\x00M\x83?\x00\x00\x00\x80\x99\xadd?\x00\x00\x00\x80>]\x88?\x00\x00\x00@\xaaq\x91?\x00\x00\x00\xa04\xba\x82?\x00\x00\x00\x00Qg\x8d?\x00\x00\x00`#c\x98\xbf\x00\x00\x00 \xf8\xf8\x85?\x00\x00\x00 P7\x82?\x00\x00\x00\xa0c\xdcp\xbf\x00\x00\x00\xc0\xd2\xa12\xbf\x00\x00\x00\xc0c\x8bo?\x00\x00\x00\xe0|\xa2\x80\xbf\x00\x00\x00\x00Ni\x86\xbf\x00\x00\x00 \xe1\xc6C\xbf\x00\x00\x00@yG#?\x00\x00\x00\x805Ar\xbf\x00\x00\x00 \xcb\x06q?\x00\x00\x00\x80\x84p7?\x00\x00\x00`Y\x94\x8c\xbf\x00\x00\x00\x00\xbb\xd8o?\x00\x00\x00 tm\x8b\xbf\x00\x00\x00@\x90sX\xbf\x00\x00\x00`\x18\xc6x?\x00\x00\x00\x80X\x17d?\x00\x00\x00@z\x0fz\xbf\x00\x00\x00 \xf4\xbcx\xbf\x00\x00\x00`&\xdfr?\x00\x00\x00\x00I\x87\x89\xbf\x00\x00\x00\xc0\n\xd5\x96?\x00\x00\x00\xc0\\\xb1w\xbf\x00\x00\x00@S\xe4q\xbf\x00\x00\x00\x80\xf2\xafr\xbf\x00\x00\x00`\xd3~\xf7\xbe\x00\x00\x00\x80:p]\xbf\x00\x00\x00`.\x10\x82\xbf\x00\x00\x00\x00\xf5ev?\x00\x00\x00\xa0\xab\xab\x84?\x00\x00\x00\x00\xa6\xdfd?\x00\x00\x00`&\x98\x83\xbf\x00\x00\x00@$ac?\x00\x00\x00@\xc3\x917\xbf\x00\x00\x00\xc0\xe8?u\xbf\x00\x00\x00\x00\x8faR\xbf\x00\x00\x00 n\xb7U\xbf\x00\x00\x00 (\x94p?\x00\x00\x00@\xfb\x08\x87\xbf\x00\x00\x00\xe0\xfa\x9a\x98?\x00\x00\x00\x80\xf3!\x99?\x00\x00\x00\x80\x91AZ?\x00\x00\x00\xa0\x10Nx\xbf\x00\x00\x00\xc0\xc4\x015?\x00\x00\x00\x00<g|\xbf\x00\x00\x00\xc0^{\x8b\xbf\x00\x00\x00\xe0\xc9\xcd\x8f?\x00\x00\x00\x80\xb8\x93\x8c\xbf\x00\x00\x00\x00jG\x87\xbf\x00\x00\x00\xe0\x1c Q?\x00\x00\x00\xe0^\xcei?\x00\x00\x00\xe0\xde*j\xbf\x00\x00\x00\xe0)\xce\x80?\x00\x00\x00@\xcbCu?\x00\x00\x00`w(\x8d\xbf\x00\x00\x00\xc0\x0e\xc7\\\xbf\x00\x00\x00\xa0\xd3l\x87\xbf\x00\x00\x00@\xcf\xf2\x87\xbf\x00\x00\x00\x80\x04\xd4d?\x00\x00\x00\xc0\x01\x07\x81\xbf\x00\x00\x00 \xa0\x06q?\x00\x00\x00 \xdb\x0c\x84\xbf\x00\x00\x00 R5\x89?\x00\x00\x00`{Q\x8e?\x00\x00\x00\xc0\x10Wf?\x00\x00\x00\xa0w\xa1s\xbf\x00\x00\x00\x80T\x07\x8a?\x00\x00\x00\xe0\xb5DZ\xbf\x00\x00\x00`!\x90\x8c\xbf\x00\x00\x00`\xbb\xf1\x7f\xbf\x00\x00\x00`\xec\x17}?\x00\x00\x00`\xb9\xeb2\xbf\x00\x00\x00\x00A\x90!\xbf\x00\x00\x00\xe0\xe5\xde~\xbf\x00\x00\x00\xe0\xe3\xb9\x93\xbf\x00\x00\x00\xc0\xbc\x00V\xbf\x00\x00\x00\x80\xb4\xbb\x8f?\x00\x00\x00\x80\xd5Sb\xbf\x00\x00\x00\x80\x1c\xa8\x84?\x00\x00\x00 \x9d\x01R\xbf\x00\x00\x00\x80\xf1\x07\x96?\x00\x00\x00`\xfe\x0e\x80?\x00\x00\x00@\x1a\x16\x8e\xbf\x00\x00\x00\x80\x13\x98\x93\xbf\x00\x00\x00@RM2?\x00\x00\x00\xe0\xbd\xb7s?\x00\x00\x00\xa0\x05\r]?\x00\x00\x00 +\xdf\x97?\x00\x00\x00\x80\xc02\x8b?\x00\x00\x00 \x04\xb1\x7f?\x00\x00\x00\xa0\x83\xed\x8b?\x00\x00\x00`\xd2zk\xbf\x00\x00\x00\x80\x80\x8b|?\x00\x00\x00\xa0\xba\x03y\xbf\x00\x00\x00@D\x0fl\xbf\x00\x00\x00@g\rp?\x00\x00\x00\x80M\x93\x80\xbf\x00\x00\x00`a\xc3\x97?\x00\x00\x00`@\x1am\xbf\x00\x00\x00\x80\xb9\x0er\xbf\x00\x00\x00`\x1c\xdaG\xbf\x00\x00\x00\x80\x9a\xfe\x83?\x00\x00\x00\xc0+Y~\xbf\x00\x00\x00`\x7f\x8e~?\x00\x00\x00\xe0\x1f\x9d\x88?\x00\x00\x00\xa0\xaaqw\xbf\x00\x00\x00`-/g?\x00\x00\x00@\xb6\x06\x8c\xbf\x00\x00\x00\x80\xba\x06p\xbf\x00\x00\x00\xc0(\x9f\x91\xbf\x00\x00\x00@\xddps?\x00\x00\x00\xa0\xa3\x1c{\xbf\x00\x00\x00\xe0\xdc-\x8d?\x00\x00\x00`\x00\xc4v\xbf\x00\x00\x00\xa0\x99\x17c?\x00\x00\x00\x80\x84\xda\x14?\x00\x00\x00 \x0c\xe6\x86\xbf\x00\x00\x00\xe0K4\x88\xbf\x00\x00\x00`\x9b\x05\x80\xbf\x00\x00\x00\x80\xc41e?\x00\x00\x00@\x80\xc5|\xbf\x00\x00\x00@\x17\x89\x85?\x00\x00\x00\xc0\x94\x07Q\xbf\x00\x00\x00 11a?\x00\x00\x00\xe0\xb8oR\xbf\x00\x00\x00\xa0G1p?\x00\x00\x00\xe0\xe4\x9e]?\x00\x00\x00\xc0\xe7e\x80\xbf\x00\x00\x00\x00T#\x82?\x00\x00\x00\xa0\x19~t\xbf\x00\x00\x00`\xe0\xbd\x85?\x00\x00\x00 P]\x82?\x00\x00\x00\xa0Y${\xbf\x00\x00\x00\xa0S>z?\x00\x00\x00\x00\xb5\x16`?\x00\x00\x00@l\xfey?\x00\x00\x00\xc0)u\x8a\xbf\x00\x00\x00\xe0?\x80R\xbf\x00\x00\x00`\xb2S\x88\xbf\x00\x00\x00 D\nU\xbf\x00\x00\x00\xc0\xd1q\x8a\xbf\x00\x00\x00`\xf9\x9fq?\x00\x00\x00\xe0N,n?\x00\x00\x00`\xb58\x85?\x00\x00\x00\xc0\x9c\xb9v\xbf\x00\x00\x00@S\xb8\x83\xbf\x00\x00\x00\xc0\xf3\xc2\x95\xbf\x00\x00\x00\x009X\x93?\x00\x00\x00`G\x13}?\x00\x00\x00`hCD\xbf\x00\x00\x00@!2\x85?\x00\x00\x00\x80\xd8\xaf\x86\xbf\x00\x00\x00\x00xav\xbf\x00\x00\x00\xe0\xc8]D\xbf\x00\x00\x00\xe0:Q\x83?\x00\x00\x00\x80X\x0f\x90\xbf\x00\x00\x00\x00\xd9\xfa\x95?\x00\x00\x00\x00\x07\x9bD?\x00\x00\x00 a\x9aj?\x00\x00\x00\xe0\xdb\x97\x9b\xbf\x00\x00\x00`\xd8\x19w?\x00\x00\x00`T$r?\x00\x00\x00`S\x97m?\x00\x00\x00\xa0/\x8d#\xbf\x00\x00\x00\x80\xcb\x05\x90?\x00\x00\x00\xe0)\xe7\x81?\x00\x00\x00`\xd48g?\x00\x00\x00\x80\xdf{\x99\xbf\x00\x00\x00\x80\xf3\xaep?\x00\x00\x00\x00iB\x82?\x00\x00\x00\x80(c\x85\xbf\x00\x00\x00@\x81\xafI?\x00\x00\x00@&\\>\xbf\x00\x00\x00\x80/\x9cw?\x00\x00\x00`\x13e|\xbf\x00\x00\x00\xa0-\x1dr?\x00\x00\x00\x80\xc0\xb6\x8c?\x00\x00\x00`L\xe1z\xbf\x00\x00\x00\xc0d\xa1\x81\xbf\x00\x00\x00 \x87\xadS\xbf\x00\x00\x00\x00\xc8\x1c\x90?\x00\x00\x00\xa0-N\x87?\x00\x00\x00`\x98v\x8a\xbf\x00\x00\x00\x80\xe6\xf3s?\x00\x00\x00  \xa4q\xbf\x00\x00\x00@\xa3!W?\x00\x00\x00 \xda-p\xbf\x00\x00\x00@\xefG\x86\xbf\x00\x00\x00\xc0\xa0\x0f\x98?\x00\x00\x00\x00[\x16Z?\x00\x00\x00\x80\xa6\x05v?\x00\x00\x00\xe0\x15\x83\x86?\x00\x00\x00\x00\xff_\x7f\xbf\x00\x00\x00 \x10hz?\x00\x00\x00\x00@\x1b\x89?\x00\x00\x00\xc0\\\x8b1?\x00\x00\x00 \xe8\xe3\x81\xbf\x00\x00\x00\xe0j\x9as\xbf\x00\x00\x00@\xd4\xcd\\?\x00\x00\x00\x00\xd3WV\xbf\x00\x00\x00\x80-\x86Y\xbf\x00\x00\x00\xa0\xbe\xa6g?\x00\x00\x00@\xeeG"\xbf\x00\x00\x00\x80\x81\xc4\x8c\xbf\x00\x00\x00\x00\x87D@\xbf\x00\x00\x00\xe0\xab\x1ax?\x00\x00\x00\x80\xf1\x14\x8a\xbf\x00\x00\x00`:\x90g\xbf\x00\x00\x00\x80R\xa5\x85\xbf\x00\x00\x00\xe0?oS\xbf\x00\x00\x00\x001\x0bu\xbf\x00\x00\x00 \xa8b\x8f?\x00\x00\x00\xc0\xd1\x15H\xbf\x00\x00\x00 \xc2fy?\x00\x00\x00\xe0B\xd8\x81\xbf\x00\x00\x00\xe0\xe1\xefH?\x00\x00\x00\xe03\xf5g?\x00\x00\x00\x80\xcc7\x82?\x00\x00\x00@\n\xbb\x84?\x00\x00\x00\x80l7\x92?\x00\x00\x00\x80\xa8TQ\xbf\x00\x00\x00\xe0\x86h\x92\xbf\x00\x00\x00 \xf7)w\xbf\x00\x00\x00\xe0msw?\x00\x00\x00\xe0\xc6\xc3|?\x00\x00\x00\x80\x12\xea\x82?\x00\x00\x00\x80\x82\x8ci\xbf\x00\x00\x00\xa0\x19\xc3c\xbf\x00\x00\x00\xe0\x88|E\xbf\x00\x00\x00\xc0\x04.v\xbf\x00\x00\x00@J\xea\x86\xbf\x00\x00\x00\x80\xa1\x88s?\x00\x00\x00\xa0\x05\x18\x8a\xbf\x00\x00\x00\xc0\xce\xffe\xbf\x00\x00\x00\x80J\x8dh?\x00\x00\x00\x00Xma?\x00\x00\x00\xe0\x9f>r\xbf\x00\x00\x00\x007,\x91?\x00\x00\x00\x80]$h\xbf\x00\x00\x00\xe0\xac\x99z\xbf\x00\x00\x00@\xb1\x9aG\xbf\x00\x00\x00\x80-\x02r?\x00\x00\x00\x00\xcb6j\xbf\x00\x00\x00 -x\x9a\xbf\x00\x00\x00\x80Q\xa2x\xbf\x00\x00\x00\x00 ,\x89?\x00\x00\x00\x00\xa2\xd8p\xbf\x00\x00\x00\xa0MY\x92\xbf\x00\x00\x00\xa0\x1c\x0f|?\x00\x00\x00\xc0V:\x94?\x00\x00\x00\x80\x9c\x0f\x83\xbf\x00\x00\x00\xa0\x1a\no?\x00\x00\x00\xa0\x89\xd8\x81\xbf\x00\x00\x00\xe0!\xe3r\xbf\x00\x00\x00@\xf89}?\x00\x00\x00`b;\x8e?\x00\x00\x00`Z\xb2T\xbf\x00\x00\x00\xc0*Mn?\x00\x00\x00\x002\x8e[\xbf\x00\x00\x00 \xf0<L\xbf\x00\x00\x00\x00jk\x81\xbf\x00\x00\x00`\xe3!\x92\xbf\x00\x00\x00`\xb0\xa6u\xbf\x00\x00\x00@\xb5\'o\xbf\x00\x00\x00\x80^Y\x86\xbf\x00\x00\x00@\xd8>a\xbf\x00\x00\x00\x80\x9b\x91\x7f\xbf\x00\x00\x00\x00A\xa9\x8f?\x00\x00\x00`Y?\x82\xbf\x00\x00\x00 \xaa\x0ci\xbf\x00\x00\x00\xc0\x85c\x89\xbf\x00\x00\x00@\xee-l?\x00\x00\x00\xe07\xba\x84?\x00\x00\x00\xc0\xd1 o\xbf\x00\x00\x00 \xfc~k?\x00\x00\x00\x80\x9e\xb1\x80?\x00\x00\x00\x00\xe31N?\x00\x00\x00\x00h\xefh\xbf\x00\x00\x00\xc0%\xe0\x91?\x00\x00\x00\x00A[k?\x00\x00\x00\xc0\xa5\xb8\'?\x00\x00\x00\xc0|\x8cp?\x00\x00\x00`\xa5\x9d\x89?\x00\x00\x00\x00\xc5$\x83\xbf\x00\x00\x00\x00\xbc\x80y\xbf\x00\x00\x00`n\x16`?\x00\x00\x00 \'\xba\x91\xbf\x00\x00\x00`\xc6\x85\x89\xbf\x00\x00\x00`aAr\xbf\x00\x00\x00\x002\x0co\xbf\x00\x00\x00\xa0X\x10l?\x00\x00\x00`Y\xf5k\xbf\x00\x00\x00\x00e\x92t\xbf\x00\x00\x00\x80\xabvr\xbf\x00\x00\x00\x00S\xcd|\xbf\x00\x00\x00\xa0DaJ?\x00\x00\x00\x80\xfc\nu\xbf\x00\x00\x00\xe0\xdckf\xbf\x00\x00\x00\x00\xe4\x1e\x91\xbf\x00\x00\x00\xe0\x8c\xb4\x97?\x00\x00\x00\xa0\x17.\x80?\x00\x00\x00\xa0\xb9N\x86?\x00\x00\x00\xc0\xae\xe9s\xbf\x00\x00\x00\x00\xa9.\x83\xbf\x00\x00\x00\x00Y\x90\x81\xbf\x00\x00\x00\x80\xa5\xe4\x86\xbf\x00\x00\x00\xe0\x8a\x84w?\x00\x00\x00 \xe8\xb9G?\x00\x00\x00\xa0\xb8\xdfi?\x00\x00\x00 R:\x81?\x00\x00\x00`)\xd7H?\x00\x00\x00\x80j\xadr?\x00\x00\x00 \xfes\x84?\x00\x00\x00\xe0(\x8fx\xbf\x00\x00\x00 I\x90\x89?\x00\x00\x00\x00\x98\x1cw\xbf\x00\x00\x00\xe0\xc5\x81\x84\xbf\x00\x00\x00`\x92=f?\x00\x00\x00\xe0M\xbe\x92\xbf\x00\x00\x00\xe0\xaf$j\xbf\x00\x00\x00\xa0d4~?\x00\x00\x00\xc0N:\x7f?\x00\x00\x00\x80\xb5s\x85?\x00\x00\x00\xe00\xd1e\xbf\x00\x00\x00`\'bC\xbf\x00\x00\x00\xa0ZZ\x96?\x00\x00\x00\xa0U\x85}?\x00\x00\x00 k\x91o\xbf\x00\x00\x00`_\xb3\x90\xbf\x00\x00\x00\x80\xb3\xa0u?\x00\x00\x00\xe0bmP?\x00\x00\x00\x00\x96\xd8\x83?\x00\x00\x00\x80LJ\x8a\xbf\x00\x00\x00\x80\xf6:\x87?\x00\x00\x00\x00T\r"\xbf\x00\x00\x00\xa07\xee\x91?\x00\x00\x00\xe0i\xe4}?\x00\x00\x00@\x1eJt?\x00\x00\x00@$Dx?\x00\x00\x00\xa0f\x04h\xbf\x00\x00\x00\xe0d\xda}\xbf\x00\x00\x00\x00\x1b\x12\x96\xbf\x00\x00\x00\x00\xc2?\x89\xbf\x00\x00\x00 |\xe5&\xbf\x00\x00\x00\xe0\xedc\x7f\xbf\x00\x00\x00 F.\x80?\x00\x00\x00\xc0j\x84`\xbf\x00\x00\x00`\xbe.g?\x00\x00\x00 \x10<\x8c?\x00\x00\x00\x00a\x8dl\xbf\x00\x00\x00\xc0\xbbo\x82?\x00\x00\x00`\xba\xd3Z\xbf\x00\x00\x00 \x8e\xbd\x92?\x00\x00\x00 \x9feB?\x00\x00\x00\xc0\x15{y?\x00\x00\x00\x00\xcc\xd0\x8e\xbf\x00\x00\x00\xc0U\xafu?\x00\x00\x00\xa0\xb5\x96\x8d?\x00\x00\x00\xc0$w{?\x00\x00\x00\x80\xb4\x89w\xbf\x00\x00\x00\x80\x1b\x8f\x80\xbf\x00\x00\x00\x00\xb2\xedi\xbf\x00\x00\x00\xa0s\xb2`?\x00\x00\x00@dc\x88\xbf\x00\x00\x00\x00tj`?\x00\x00\x00@$\xdd\x80\xbf\x00\x00\x00\xe0\xae\xa3\x84\xbf\x00\x00\x00\x00\xaa\xd7y?\x00\x00\x00\x80/\xdav?\x00\x00\x00`\xef\xdaM\xbf\x00\x00\x00 \xfc\xe6\x94\xbf\x00\x00\x00\x80\xff\xea\x82\xbf\x00\x00\x00\x00\xf8\x87\x8d\xbf\x00\x00\x00`\xd3\xf5\x83\xbf\x00\x00\x00\x80\xef\n\x86\xbf\x00\x00\x00@r\x01x?\x00\x00\x00@\xed\xd5k?\x00\x00\x00\xe0\x0bV\x90\xbf\x00\x00\x00 #\xb9x?\x00\x00\x00`x\xff]\xbf\x00\x00\x00\xa0\xab\xd5y\xbf\x00\x00\x00\x80\x18\xa4\x88\xbf\x00\x00\x00\x80\xba&{\xbf\x00\x00\x00\x00\x82\xa3I\xbf\x00\x00\x00`coy\xbf\x00\x00\x00\x80\x9e\xcf\x8a?\x00\x00\x00 ncr?\x00\x00\x00\xc0K\xaba\xbf\x00\x00\x00\xa0\x8b\xf9\x85\xbf\x00\x00\x00\xc0.\n\x91\xbf\x00\x00\x00`\xed\xdbk?\x00\x00\x00\xa0\xf1#v?\x00\x00\x00\xa0\xe1\xa8\x83?\x00\x00\x00\xe0\xc6KY\xbf\x00\x00\x00 \x80\x05\x81?\x00\x00\x00@\xba\x7fr\xbf\x00\x00\x00@\x80\xc8~?\x00\x00\x00\xe0h\xe9\x80?\x00\x00\x00`\x04.t\xbf\x00\x00\x00@\x84\xa9\x88?\x00\x00\x00\xa0b\x06p\xbf\x00\x00\x00@,\x89\x90\xbf\x00\x00\x00 _\xf6\x87?\x00\x00\x00\xc0\xf5+~\xbf\x00\x00\x00`xos\xbf\x00\x00\x00\x80)\x16C\xbf\x00\x00\x00\xe0~\xef\x7f\xbf\x00\x00\x00@\x9b\x82t\xbf\x00\x00\x00\x80+\x81\x8e?\x00\x00\x00\xa0\x9e\x1dw?\x00\x00\x00 h\xd8\x94?\x00\x00\x00 w\xc8\x8d\xbf\x00\x00\x00\xe0\xe0\x19\x8b\xbf\x00\x00\x00\x80\xf5\xf0s\xbf\x00\x00\x00 \xf0\xb9\x8d?\x00\x00\x00 e\xafx\xbf\x00\x00\x00@\x13\xc4[\xbf\x00\x00\x00\xe0\x04\xa7c?\x00\x00\x00\xc0\x01\x17[\xbf\x00\x00\x00\xe0\xc3\xa5@\xbf\x00\x00\x00\xc06Iu\xbf\x00\x00\x00 &V~?\x00\x00\x00 ,\xd5\x9e\xbf\x00\x00\x00@\xe0\xaeO?\x00\x00\x00\xc0\xd6Z|?\x00\x00\x00`\r\x8cb?\x00\x00\x00@\xd6\x01`?\x00\x00\x00 \x18\xbe\x96?\x00\x00\x00@\r\xaap?\x00\x00\x00\xe00\xd7&\xbf\x00\x00\x00\xa0\xf1\xac\x87\xbf\x00\x00\x00\xe0\xdb\n*?\x00\x00\x00\xc0\xe6F~?\x00\x00\x00`\xc6\x8c\x81\xbf\x00\x00\x00`\xcd~\x94?\x00\x00\x00\x80\x81g\x92\xbf\x00\x00\x00@@{\x83\xbf\x00\x00\x00\x80JxI\xbf\x00\x00\x00 p\xd1V?\x00\x00\x00\x80\x08\xf3\x8a\xbf\x00\x00\x00@\x13\xbfS?\x00\x00\x00\x00\xc9|u\xbf\x00\x00\x00\xe0\xad\xee\x91?\x00\x00\x00\x80\xab\xc8\x8c\xbf\x00\x00\x00\xa0\x82\xab\x91\xbf\x00\x00\x00\xe0\xde\xe9t\xbf\x00\x00\x00\xe0\xdb\xffr?\x00\x00\x00`?]R\xbf\x00\x00\x00\xc0/\x18p\xbf\x00\x00\x00\x00\xfc1\x83\xbf\x00\x00\x00\xe0R\x87~\xbf\x00\x00\x00@\xde\x05\x91\xbf\x00\x00\x00\x80\x89Kb?\x00\x00\x00 /\xf9\x8d\xbf\x00\x00\x00\x00+U\x83?\x00\x00\x00\xe0\x1cP\x7f\xbf\x00\x00\x00\x80\xe9"c\xbf\x00\x00\x00`\xd8\xbd}?\x00\x00\x00 \xb3\xf8\x82\xbf\x00\x00\x00\xe0\xa4k\x82\xbf\x00\x00\x00`L\xcaI\xbf\x00\x00\x00@\xe5\xdfk\xbf\x00\x00\x00\xc0<\xf5\x8a\xbf\x00\x00\x00 \x8c\x8d\x90\xbf\x00\x00\x00 \xaf\xdfs?\x00\x00\x00\xc0VB\x91\xbf\x00\x00\x00\x80f\n{\xbf\x00\x00\x00\x805n\x87\xbf\x00\x00\x00\xc0\x02\x8c\x93?\x00\x00\x00\xa0j \x88?\x00\x00\x00@\xbd\xc9\x98\xbf\x00\x00\x00\xe0Jbf\xbf\x00\x00\x00\x80\x98\xfa\x8e?\x00\x00\x00\xe0{\x07l\xbf\x00\x00\x00\xe0\xdc\x9e\x85\xbf\x00\x00\x00\xc0~\xebV\xbf\x00\x00\x00\x00V\xee\x82?\x00\x00\x00@\x7f\x99\x89\xbf\x00\x00\x00\xc0\xc5\xfae\xbf\x00\x00\x00\xe0\xb1|c?\x00\x00\x00\xe0\xfe\x08\x83?\x00\x00\x00 FMl?\x00\x00\x00\xc0\'\xec\x82?\x00\x00\x00 \x17\xede\xbf\x00\x00\x00\x80\xc6\xfc\x87?\x00\x00\x00@\xb7_\x89?\x00\x00\x00\xa0lY\x8d\xbf\x00\x00\x00 _M\x9b\xbf\x00\x00\x00 \x0f\x08\x95?\x00\x00\x00`\xc5\xfaI?\x00\x00\x00\xc0L&\x81?\x00\x00\x00 "\x03\x17?\x00\x00\x00`K\xe0\x96?\x00\x00\x00\xc0\xae<r?\x00\x00\x00\x00\x8d\xf3g?\x00\x00\x00\xe0!\xb4\x82?\x00\x00\x00\xe0\x13\x08\x8f\xbf\x00\x00\x00\xc0]\x1e\x91?\x00\x00\x00\xc0\xbd\xa6o?\x00\x00\x00\x80\xc6\x1d\x85\xbf\x00\x00\x00 \xda\x15T\xbf\x00\x00\x00\xc0\xa7\x98\x95?\x00\x00\x00\xe0\xce\x163\xbf\x00\x00\x00`qhN\xbf\x00\x00\x00\xa0\x93Ki?\x00\x00\x00@b\x87o?\x00\x00\x00\xa0\xab.S\xbf\x00\x00\x00@\x7f\xb9T\xbf\x00\x00\x00 \xcauT\xbf\x00\x00\x00\xc0\xcd#y?\x00\x00\x00\x80,Ki?\x00\x00\x00@1\xe0q\xbf\x00\x00\x00 \xa0\x7f{?\x00\x00\x00 S\xb5\x90\xbf\x00\x00\x00\x80xN\x89?\x00\x00\x00`<\x97\x91\xbf\x00\x00\x00\x00\xdbP|\xbf\x00\x00\x00\xc0\x91b|\xbf\x00\x00\x00\xe0~Z\x91?\x00\x00\x00@_\xedW\xbf\x00\x00\x00 \xb8Pr?\x00\x00\x00\xa05\x10b\xbf\x00\x00\x00\x80\xc6\xfau?\x00\x00\x00`g4\x93\xbf\x00\x00\x00\x80\x91\x9f\x85?\x00\x00\x00\x00\xb1\x8a\x8b\xbf\x00\x00\x00\xe0\x97\xbe\x80?\x00\x00\x00`C\n\x87?\x00\x00\x00\xe0\xaa\xda\x91?\x00\x00\x00\x80\x99\x02\x84\xbf\x00\x00\x00\x80\xafD\x8b?\x00\x00\x00@\xaa\x04d\xbf\x00\x00\x00\x80w\xb7\x91?\x00\x00\x00`\xe2\td\xbf\x00\x00\x00\x80\xaa\xb9\x83?\x00\x00\x00\x00AH]\xbf\x00\x00\x00\x80\xd2\r\x99?\x00\x00\x00\x00O)R\xbf\x00\x00\x00 \x04s\x7f?\x00\x00\x00\x00A]y\xbf\x00\x00\x00\x80(\x95\x8a?\x00\x00\x00\x80OW\xf0\xbe\x00\x00\x00\x00\xc5b\x89?\x00\x00\x00`/FO?\x00\x00\x00@\x98\x92k?\x00\x00\x00\xa0\x14\x8co\xbf\x00\x00\x00\x80\x92av\xbf\x00\x00\x00`\xb1|d\xbf\x00\x00\x00\xe0O\xaa\x81\xbf\x00\x00\x00`\xaf6\x80?\x00\x00\x00`\x84\xd7\\\xbf\x00\x00\x00@\xcd\xc0y?\x00\x00\x00@%On\xbf\x00\x00\x00\xe0\x08\x89r\xbf\x00\x00\x00\x80YD\x84?\x00\x00\x00\x00KoE?\x00\x00\x00\xa0\xf5zq?\x00\x00\x00\xc0\xe3\xa5}\xbf\x00\x00\x00@\xaf\xab\x82?\x00\x00\x00\xa0xFK\xbf\x00\x00\x00\xe0P^a?\x00\x00\x00\xe0\x84\xb8\x1e\xbf\x00\x00\x00\x00\xf4\xc1d?\x00\x00\x00\x80\x85\xf2w?\x00\x00\x00\xa0}\xda\x7f\xbf\x00\x00\x00\xa0\xff\xfam?\x00\x00\x00\xc0i\xb1\x8b?\x00\x00\x00\xc0\xef9m\xbf\x00\x00\x00 >i|\xbf\x00\x00\x00\xe0@b^\xbf\x00\x00\x00@7\x88E?\x00\x00\x00`\xd9\xe7h\xbf\x00\x00\x00\xe0\x9faw\xbf\x00\x00\x00\xa0\xd6\xabY?\x00\x00\x00 \xb0\xb8\x81?\x00\x00\x00\xc0\x83\xa7\x82\xbf\x00\x00\x00@\x16\xd3\x84?\x00\x00\x00 8\xb3|\xbf\x00\x00\x00 \xab\x9bR?\x00\x00\x00\x00z\xf8z\xbf\x00\x00\x00@s\xd4q?\x00\x00\x00@,m}\xbf\x00\x00\x00`\x973\x92?\x00\x00\x00@\xa0/t?\x00\x00\x00@\xe1l`?\x00\x00\x00\xa0O\xd5c?\x00\x00\x00\xc0\x10\xe4\x80?\x00\x00\x00\x00\xa3\x97S?\x00\x00\x00\x00Zji\xbf\x00\x00\x00\xe0\x9c\x96\x8c\xbf\x00\x00\x00\xa0/\x16{?\x00\x00\x00@OH\x8c\xbf\x00\x00\x00\xc0\xa2\xca\x8b?\x00\x00\x00@\x9d{^?\x00\x00\x00\xc0+\xca\x82?\x00\x00\x00\x80\xf0\r\x87\xbf\x00\x00\x00\xe0\xeb\x0e\x91?\x00\x00\x00\xc0N%|?\x00\x00\x00\xe0\xd4Hr?\x00\x00\x00\xe0p~u\xbf\x00\x00\x00 y!\x89\xbf\x00\x00\x00\xe0\xdf\x91\x80\xbf\x00\x00\x00@\xdcYp?\x00\x00\x00@\x1fT^?\x00\x00\x00\xc0M*\x92\xbf\x00\x00\x00@\x9f\xe5m?\x00\x00\x00\x00\x8aA^\xbf\x00\x00\x00\x00\xe4c\x8f?\x00\x00\x00 j\xdcf?\x00\x00\x00\xe0\xd8\rx?\x00\x00\x00\xa0\xe2\xe5N\xbf\x00\x00\x00\xc0\xde\x9fg\xbf\x00\x00\x00\xe0\x9e\xf5q\xbf\x00\x00\x00`\xfd\xb9g?\x00\x00\x00@\xd1\x04\x84\xbf\x00\x00\x00\xa0\xe3\x0fx\xbf\x00\x00\x00`\xe2c\x89?\x00\x00\x00`\xa3G\x87?\x00\x00\x00\xe0\x9a\xd7\x86\xbf\x00\x00\x00 .\xff\xc5>\x00\x00\x00\x80\xae,\x91?\x00\x00\x00`\x87l\x81\xbf\x00\x00\x00`1i\x80?\x00\x00\x00@6\x1fS?\x00\x00\x00\xe0CH\x80?\x00\x00\x00\xe0m\x861\xbf\x00\x00\x00@\x01\xfcb?\x00\x00\x00\xc0\x0f\xb2\x80\xbf\x00\x00\x00\xc0)\x8fj?\x00\x00\x00@C\x15F?\x00\x00\x00\xe0!*\x90\xbf\x00\x00\x00 \xceGh\xbf\x00\x00\x00\xa0\x84\xd5z?\x00\x00\x00@\x7f0\x81\xbf\x00\x00\x00\xe0\x15\xa1\x96?\x00\x00\x00\xc0"6\x84?\x00\x00\x00 8ww?\x00\x00\x00\xe0\xcb\xefk?\x00\x00\x00\x80\xd4\x1d\x85\xbf\x00\x00\x00\xa0\x95\x8et?\x00\x00\x00\x80\xf3<k?\x00\x00\x00\xe0W\x9d\x91\xbf\x00\x00\x00\xe0\x0e\xfes?\x00\x00\x00 S\xa9\x80?\x00\x00\x00\x80\xde\xa7\x8c\xbf\x00\x00\x00\x00\xd7\'\x92\xbf\x00\x00\x00@\x15\x13\x83\xbf\x00\x00\x00@\xdf1\x8d\xbf\x00\x00\x00\xc0\x08\xe3~\xbf\x00\x00\x00\xa0.\xbai?\x00\x00\x00\x80pv~\xbf\x00\x00\x00\xc0\xfc\xa1\x80\xbf\x00\x00\x00\xe0NHj\xbf\x00\x00\x00\xc0\x82fn\xbf\x00\x00\x00 \x05\x8c\x91\xbf\x00\x00\x00`\x10lr\xbf\x00\x00\x00 \xdb|\x87\xbf\x00\x00\x00\xc0\x84[\x8c?\x00\x00\x00\xc0C\xbf\x93?\x00\x00\x00\x00:\xe5~?\x00\x00\x00\x00\x89\x15\x8b?\x00\x00\x00\xe0}w\x81?\x00\x00\x00`\xfd\x96I?\x00\x00\x00\xc0Q\xa8Z?\x00\x00\x00@\xdb^\x90\xbf\x00\x00\x00 B\xcc\x82\xbf\x00\x00\x00@\xc8NP\xbf\x00\x00\x00\xe0\x92Y#?\x00\x00\x00\x80\xec/\x87\xbf\x00\x00\x00\xe0n\xe8\x99?\x00\x00\x00\xa0K3W\xbf\x00\x00\x00@DZ]?\x00\x00\x00@9)f\xbf\x00\x00\x00\x007\xe5\x84\xbf\x00\x00\x00\x80\xf0\xb8W\xbf\x00\x00\x00\xe0\x93\xb8@\xbf\x00\x00\x00\xa0o\xe6}\xbf\x00\x00\x00\xa0\xfa\xe9\x8b?\x00\x00\x00\xe0I;}?\x00\x00\x00@C\x13l?\x00\x00\x00`\x8d\xd9\x90?\x00\x00\x00\x00X\xd0I\xbf\x00\x00\x00\x006\x82\x84\xbf\x00\x00\x00\xc0\xc6\x0b~?\x00\x00\x00`\xa3C\x82?\x00\x00\x00\xa0\xb5\x1b\x82\xbf\x00\x00\x00\xe0P\xbc.\xbf\x00\x00\x00\x00c\xde\x7f?\x00\x00\x00\xe0\xde\xe8p?\x00\x00\x00\xc0\xb7z\x86\xbf\x00\x00\x00 \xb4\xe7\x83?\x00\x00\x00`\xab\x07p?\x00\x00\x00\x00\x16?h\xbf\x00\x00\x00\xe0R\x98z\xbf\x00\x00\x00\xa0\xa11\x91?\x00\x00\x00\xc03\xa2\x86?\x00\x00\x00\xe0\x9a\x98H?\x00\x00\x00\xc0\xb1\xd4t?\x00\x00\x00\x00M\xebu?\x00\x00\x00\xa0PRY?\x00\x00\x00\xe0G\xdej\xbf\x00\x00\x00@\xbe\x97\x85?\x00\x00\x00\xa0\xaa\xe61\xbf\x00\x00\x00\x00\xd3\xe4\x81?\x00\x00\x00\xc0~\x01\x92\xbf\x00\x00\x00`\xa3\xf0e?\x00\x00\x00 #\x0ca\xbf\x00\x00\x00\xa0.|\x86?\x00\x00\x00\xe0"@w\xbf\x00\x00\x00@\x982`?\x00\x00\x00`\xe3\x83b\xbf\x00\x00\x00@\xd8\xca\x8e?\x00\x00\x00`\xb2my?\x00\x00\x00@NHt?\x00\x00\x00 \xdfm\x82?\x00\x00\x00`\xbd\xaa\x85?\x00\x00\x00\xc0\x10\xe3O\xbf\x00\x00\x00\xe0\xd6\x8c~?\x00\x00\x00\xc0\x01\xe3\x8e?\x00\x00\x00\xe0\xf5\xfd\x92?\x00\x00\x00\x00\x0c\xb8\x89\xbf\x00\x00\x00\xe0\xfd\xc5x\xbf\x00\x00\x00@;\x93p?\x00\x00\x00 ^Y\x94?\x00\x00\x00\x00\xf3\x0f\x83?\x00\x00\x00\xe0]^\x84\xbf\x00\x00\x00\x80\xd4bp?\x00\x00\x00\x00\xb6\x1f\x92?\x00\x00\x00\xc0\xaf\x88u\xbf\x00\x00\x00\x80\x081A\xbf\x00\x00\x00\xe0X\x90\x90?\x00\x00\x00\xe0>qk\xbf\x00\x00\x00 \x87\t~?\x00\x00\x00\x00"6~?\x00\x00\x00`\xc8\x17\x8e\xbf\x00\x00\x00\x80Z\xe7r?\x00\x00\x00\x00\xfe j\xbf\x00\x00\x00 \x1b\xf3D\xbf\x00\x00\x00\xa02\xbe\x85?\x00\x00\x00`\xb6\xd7\x87?\x00\x00\x00`\xb5<\x8e?\x00\x00\x00\x00_\xd9\x8d\xbf\x00\x00\x00`\x14Fo\xbf\x00\x00\x00\xc0\xc5K|?\x00\x00\x00`\xf6\x1aY\xbf\x00\x00\x00\x00\x1e>\x84?\x00\x00\x00\xc0\xfd\x11.\xbf\x00\x00\x00\xe0\xe0\xf3\x88\xbf\x00\x00\x00\xc0\xc3\x1f\x84?\x00\x00\x00@\x82\x9e\x7f\xbf\x00\x00\x00\xe0\xafF\x9a?\x00\x00\x00\x00z\x17|?\x00\x00\x00@oi\x81\xbf\x00\x00\x00\xa0l\x87\\?\x00\x00\x00\xc0f\x83{\xbf\x00\x00\x00 t\xaf?\xbf\x00\x00\x00\xe0\xcakJ\xbf\x00\x00\x00\xe0\x07Jw?\x00\x00\x00\xa0!\xe4\x8e?\x00\x00\x00\x00\t\x02h\xbf\x00\x00\x00 \xc2\x1c\x80?\x00\x00\x00 Q\xc1x?\x00\x00\x00\xe0\xde1|\xbf\x00\x00\x00\xc0\xfb\x89\x90\xbf\x00\x00\x00\xe0v\x17{?\x00\x00\x00@\x92\xa4q?\x00\x00\x00@g\x84t?\x00\x00\x00@\xf6\xd2\x95\xbf\x00\x00\x00\xc0\xcd\xce\x8c\xbf\x00\x00\x00@\xd9\xd2k?\x00\x00\x00 \x9b[\x93?\x00\x00\x00\xc0\xe3qy?\x00\x00\x00`!\xe8o?\x00\x00\x00\x00\x13\xaao?\x00\x00\x00\x00}\x95\x85\xbf\x00\x00\x00 CD\x82\xbf\x00\x00\x00\xc0\xe5\x93x\xbf\x00\x00\x00\xe0\xbaH\x7f?\x00\x00\x00\xa0\xd0i\x0b?\x00\x00\x00\x00H\x8ck\xbf\x00\x00\x00\xe0\x86\xdc\x91?\x00\x00\x00`\xa0\\Z\xbf\x00\x00\x00\xc0b\xb6n?\x00\x00\x00 \xbe\'q\xbf\x00\x00\x00\xc0\xe6u\x80?\x00\x00\x00`\xc9R\x7f?\x00\x00\x00 7\\\x80?\x00\x00\x00\xc0\xa9$f\xbf\x00\x00\x00\x00\x806P\xbf\x00\x00\x00@|\x1bp?\x00\x00\x00\x00\xab$\x91?\x00\x00\x00\xa02\xa2a?\x00\x00\x00\x00H\xe8s?\x00\x00\x00@1\xefG\xbf\x00\x00\x00`\xc4<\\\xbf\x00\x00\x00`-"\x84\xbf\x00\x00\x00 #\xb72?\x00\x00\x00\xe0T\xa5j?\x00\x00\x00\xa0\xe4\x1fa?\x00\x00\x00`\x807\x80?\x00\x00\x00\xc0\x1ct,\xbf\x00\x00\x00\xe0\xed\x1bf\xbf\x00\x00\x00`\xceu\x91?\x00\x00\x00 \xba,j\xbf\x00\x00\x00\xc0\x01\xd9D\xbf\x00\x00\x00\xe0\x8b\xb0z?\x00\x00\x00`\xb8\x12~?\x00\x00\x00\xc0\x93h\x82\xbf\x00\x00\x00\x80\xbc<V?\x00\x00\x00\xc0\xae\xc7\x8a?\x00\x00\x00\xa06\xfe\x86?\x00\x00\x00\xc09\xf6\x81?\x00\x00\x00\xc0\x1b\x08a?\x00\x00\x00\x80a\xcbn?\x00\x00\x00@\x1eL\x85?\x00\x00\x00\x80\xae\\y\xbf\x00\x00\x00\x80)c\x80\xbf\x00\x00\x00 )Wq?\x00\x00\x00`\xa6Cp\xbf\x00\x00\x00\xe0g\xf7p\xbf\x00\x00\x00\xa0\xd9\xf0\x82\xbf\x00\x00\x00\x00~pG\xbf\x00\x00\x00@\x9a6d?\x00\x00\x00`\xd9\tx\xbf\x00\x00\x00\xa0N\xd4w\xbf\x00\x00\x00\x80}wp?\x00\x00\x00 \xbeE\x85\xbf\x00\x00\x00\xe0z\x9b\x90\xbf\x00\x00\x00\xa0(\xe0\x8e\xbf\x00\x00\x00@K\xd0v\xbf\x00\x00\x00 v\xf3{\xbf\x00\x00\x00 j\x16^?\x00\x00\x00 \xc6fM?\x00\x00\x00 \xaa\x9a\x96\xbf\x00\x00\x00\xe0\x96\x83\x8e?\x00\x00\x00\x00P\xc8c\xbf\x00\x00\x00`\xda(`\xbf\x00\x00\x00\x002\x08u?\x00\x00\x00\x80\x97\xdeB\xbf\x00\x00\x00@`\xe2d\xbf\x00\x00\x00@\xedaj?\x00\x00\x00 \xe4 \x8c\xbf\x00\x00\x00@D!r\xbf\x00\x00\x00`\xcdF\x81\xbf\x00\x00\x00\xa0\xf5}k?\x00\x00\x00\x80\xc6\x96}\xbf\x00\x00\x00 \xfdLz\xbf\x00\x00\x00`\x07\x1d\x80?\x00\x00\x00\xa0\x0f\xa7h\xbf\x00\x00\x00\x00\\)x?\x00\x00\x00\xe0\x91\xebn\xbf\x00\x00\x00\x00C\xf5\x89\xbf\x00\x00\x00\xc0\xdf\xa0\x81?\x00\x00\x00\x00\xbd\x03}?\x00\x00\x00 7\xd1r?\x00\x00\x00 y,\x80\xbf\x00\x00\x00@S\xb5x\xbf\x00\x00\x00\xc0\xcb\x10i?\x00\x00\x00@\xcc\xa2R?\x00\x00\x00\xa0\xef?U?\x00\x00\x00\x00\xc3\x9d\x83?\x00\x00\x00\x00X\'\x80\xbf\x00\x00\x00\xe0\xbfsq\xbf\x00\x00\x00\x80\xa0\x08\x82?\x00\x00\x00\xe0\x82\xa5\x83\xbf\x00\x00\x00\xa0\xff\xdcw\xbf\x00\x00\x00\x80K\xe6\x88\xbf\x00\x00\x00\xc0@&\x85\xbf\x00\x00\x00`\xfcto\xbf\x00\x00\x00\x80\xa8\xb9\x88\xbf\x00\x00\x00\xa0\x16`\x8a?\x00\x00\x00\xa0\xb3c\x80?\x00\x00\x00@\x00\xd9\x7f?\x00\x00\x00\xe0\xdcl\x88?\x00\x00\x00\xe0\x8dy\x85?\x00\x00\x00\xc0\x03@q?\x00\x00\x00\xc0c\x1fF?\x00\x00\x00\x00\xa7\xf3t\xbf\x00\x00\x00\x80x\xe9b\xbf\x00\x00\x00@\x86\x0e\x81?\x00\x00\x00\xc0\x0b\x8e\x96\xbf\x00\x00\x00\xc0\xc3uC?\x00\x00\x00\x80Q#\x83?\x00\x00\x00@(\x15l\xbf\x00\x00\x00`\x11\xe8\x93\xbf\x00\x00\x00\xc0\x02\xbc\x84\xbf\x00\x00\x00 :\xfbs?\x00\x00\x00 \xb5\xc5\x7f\xbf\x00\x00\x00\x80`\t]?\x00\x00\x00\x80:\xf2\x87?\x00\x00\x00\xe0\xa5\x81\x84?\x00\x00\x00 "\xa9-\xbf\x00\x00\x00\x00\xf0{\x8a?\x00\x00\x00\xe0j \x8d\xbf\x00\x00\x00 \xd4\xa8\x87\xbf\x00\x00\x00\xe07)\x8d?\x00\x00\x00\xa0\xd9^x\xbf\x00\x00\x00\xe0\xf7\xd8\x8c\xbf\x00\x00\x00\xc0v-S\xbf\x00\x00\x00 \x91pD\xbf\x00\x00\x00\x80\xaeW3?\x00\x00\x00\xe0\xebv\x97?\x00\x00\x00\xe0\xab\x1dx\xbf\x00\x00\x00\xa0uU\x83\xbf\x00\x00\x00\xe0\x18\xbd\x80?\x00\x00\x00\xa0\x8b\x92x\xbf\x00\x00\x00@P2\x95\xbf\x00\x00\x00\x00\xce/v?\x00\x00\x00\xe0=E\x81\xbf\x00\x00\x00\xc0Q\x1f\x95?\x00\x00\x00\x00\x08\x05\x84\xbf\x00\x00\x00@\xf0\x01P\xbf\x00\x00\x00\xa0\xe5\xf0~?\x00\x00\x00\xe0\xf2\x88z\xbf\x00\x00\x00\xe07\xdfY?\x00\x00\x00\xa0!0\x88\xbf\x00\x00\x00\xc0\x8d\xd8\x84?\x00\x00\x00@\xf1\xf3f?\x00\x00\x00\xe0\xc5 w?\x00\x00\x00\x00 \x92B\xbf\x00\x00\x00 \x88\xfd\x99\xbf\x00\x00\x00\x80\x1cQ\x84\xbf\x00\x00\x00@2\xcam?\x00\x00\x00 \xaeE\x93\xbf\x00\x00\x00\xc0\x8c\n\x86\xbf\x00\x00\x00@O4\x90\xbf\x00\x00\x00\x00<\xa0\x85\xbf\x00\x00\x00\x00\x18wu\xbf\x00\x00\x00\xe0\xcd1o?\x00\x00\x00\x00\xe6j[\xbf\x00\x00\x00\x80\xc8xY?\x00\x00\x00\xe0\xfc\xe8`?\x00\x00\x00 \x131Q\xbf\x00\x00\x00\x00@\xe1\x84\xbf\x00\x00\x00`Y\x0e|?\x00\x00\x00\x00\xbd\xb6z\xbf\x00\x00\x00\xc0G|\x91?\x00\x00\x00 otk?\x00\x00\x00 \xd5\xcfz?\x00\x00\x00\xa0\xdb>\x87\xbf\x00\x00\x00\xe0\xa6\x86\x81?\x00\x00\x00\xc0p\xbb\x8a\xbf\x00\x00\x00\xe0\x8a\xb1z?\x00\x00\x00\xe0A\xedG\xbf\x00\x00\x00`\x81\xd0\x8c?\x00\x00\x00\xc0*v\x82?\x00\x00\x00\x00\xc9P\x85?\x00\x00\x00\xc0n^\x89\xbf\x00\x00\x00\xa0\x8a\xfa}?\x00\x00\x00\xe0\x1c0j\xbf\x00\x00\x00@\xca\xfc\x80\xbf\x00\x00\x00@\x8e>\x85\xbf\x00\x00\x00 \xf2\xb3\x95?\x00\x00\x00`\xa4-|?\x00\x00\x00\x00\x08\x81a\xbf\x00\x00\x00\xa0#\xe5d\xbf\x00\x00\x00\x80\x07tR\xbf\x00\x00\x00\xe0d\xc6t\xbf\x00\x00\x00\xa0idl?\x00\x00\x00@\x01\xb8\x81?\x00\x00\x00@A\xc2s\xbf\x00\x00\x00\x80v\xb8\x88?\x00\x00\x00\xe0\x11\t]?\x00\x00\x00\x80f\x93r?\x00\x00\x00\x00\xc3H^?\x00\x00\x00`6jx?\x00\x00\x00 \xb7\xd1y\xbf\x00\x00\x00\x00pI\x83?\x00\x00\x00\xc0\x19;\x8f\xbf\x00\x00\x00\x00g7k?\x00\x00\x00\xc0O\xa2\x80\xbf\x00\x00\x00\x80\xd6\x02J\xbf\x00\x00\x00\xc0\xe7\xa2\x83?\x00\x00\x00`nD\\\xbf\x00\x00\x00\x80\xec p?\x00\x00\x00\xa0\r`\x93\xbf\x00\x00\x00\x80\xc4\x1c\x8c\xbf\x00\x00\x00`o5\x81\xbf\x00\x00\x00\xc0\xd8\xaes?\x00\x00\x00\xc0\x8b"t\xbf\x00\x00\x00\xc0i\xcd\x90?\x00\x00\x00\xc0\xf8\x1e\x84\xbf\x00\x00\x00\x80\xfc;[?\x00\x00\x00\xe0\xca\xa5\x86?\x00\x00\x00\x80\xfa\xab\x8a\xbf\x00\x00\x00 +\xb7\x7f\xbf\x00\x00\x00\x00\xe4\xa0\x84?\x00\x00\x00\xe0>\x98s?\x00\x00\x00\xc0\xfego\xbf\x00\x00\x00\xe0\x16Dq?\x00\x00\x00 &pk?\x00\x00\x00@Y\xb6j?\x00\x00\x00\xa0\xebr\xa0\xbf\x00\x00\x00`\xf3\xd7\x92?\x00\x00\x00 \xe2`\x7f\xbf\x00\x00\x00 \xfbr~?\x00\x00\x00\x00\x02\xdbm?\x00\x00\x00`\x9c\x1f\x81?\x00\x00\x00@\xc5+k\xbf\x00\x00\x00 \x85\x14A\xbf\x00\x00\x00 \xd2\xa9}?\x00\x00\x00\xe0\xef\xd0\x92?\x00\x00\x00\xc0\xb2\xd6\x96?\x00\x00\x00\xe07\xe1\x81?\x00\x00\x00\x80C\x0e\x87\xbf\x00\x00\x00 \x89\x91v?\x00\x00\x00 \x1f\x86f?\x00\x00\x00\xa0O\xa7\x85?\x00\x00\x00@@a\x83\xbf\x00\x00\x00\x80\xbf\x93\x90\xbf\x00\x00\x00\x008\x84n?\x00\x00\x00\xa0.6\x93\xbf\x00\x00\x00\xa0QwC\xbf\x00\x00\x00\x00\xf4G\x86?\x00\x00\x00\xa0\xf2\x8e\x88?\x00\x00\x00\xe0\x13\xabX?\x00\x00\x00\x80\x15Ys\xbf\x00\x00\x00`:\x12\x87\xbf\x00\x00\x00 \xabsZ?\x00\x00\x00\x80}\xf6\x82\xbf\x00\x00\x00 \xae\xaf\x84?\x00\x00\x00 \x80\x0b\x8b\xbf\x00\x00\x00\x00\x98E\\\xbf\x00\x00\x00`F\x16h\xbf\x00\x00\x00\x00>\xcb\x82\xbf\x00\x00\x00 \xb8\x84V?\x00\x00\x00@x\x1fh\xbf\x00\x00\x00\xe0\x04k\x8b\xbf\x00\x00\x00\x80\x92\x9fj?\x00\x00\x00\xc0\xcf\xa2}\xbf\x00\x00\x00 \x8b@s?\x00\x00\x00\xc0l<\x8c?\x00\x00\x00`\x9aY\x84?\x00\x00\x00\x80tg\x97\xbf\x00\x00\x00\x80\xf6\xf5x\xbf\x00\x00\x00@\xf7b\x82\xbf\x00\x00\x00@\xed\xe7k?\x00\x00\x00`\t\xecO\xbf\x00\x00\x00`\xb7~z\xbf\x00\x00\x00\xe0\xf1\xb3\x94?\x00\x00\x00 7\t~\xbf\x00\x00\x00`\x96\x1bj\xbf\x00\x00\x00\xa0,\x0b\x97?\x00\x00\x00\xa0\xea\xb1\x82\xbf\x00\x00\x00\xc0\xe0:u?\x00\x00\x00`\x0e\xad\x8e\xbf\x00\x00\x00 \xd9s\x90?\x00\x00\x00@X\xd5\x88\xbf\x00\x00\x00\xa0~\x07\x8e\xbf\x00\x00\x00 \xa1\x16\x84\xbf\x00\x00\x00`\xa9\xe0h\xbf\x00\x00\x00`\x89\x1cz?\x00\x00\x00\x00\xa2\xec\x80?\x00\x00\x00\xe01\xe0\x82\xbf\x00\x00\x00\xc05.P?\x00\x00\x00 \xca\xc5\x89\xbf\x00\x00\x00\xa0:\xc9\x90\xbf\x00\x00\x00\xa0\xa9\x94\x8e?\x00\x00\x00\xe0\x05\x92\x84?\x00\x00\x00\x00\xbc\xab~?\x00\x00\x00\x80w\nc\xbf\x00\x00\x00\xa0B\x16\x80\xbf\x00\x00\x00`W\xf7D\xbf\x00\x00\x00 WNr?\x00\x00\x00\xa0\xe8hK?\x00\x00\x00 \xec\xb2\x88\xbf\x00\x00\x00\xc0;\xde]?\x00\x00\x00\xc0E\xa6\x82\xbf\x00\x00\x00@\xa8\xa5]?\x00\x00\x00 \x93\xbee\xbf\x00\x00\x00@GVB?\x00\x00\x00@3\xf8e?\x00\x00\x00 \x10s\x99?\x00\x00\x00\xe0\x05<\x84?\x00\x00\x00\xe0\xa8\x9al\xbf\x00\x00\x00\xe0\xe3\xbc{\xbf\x00\x00\x00\xc0s\xcc\x16\xbf\x00\x00\x00\xa0\xf1%d?\x00\x00\x00`Xwa\xbf\x00\x00\x00`>\x12u?\x00\x00\x00\x00\xeay\x86?\x00\x00\x00`\xb9J\x8b?\x00\x00\x00\x80\x928T\xbf\x00\x00\x00\xa0^\xc0}?\x00\x00\x00\xe0\xaf\x16\x89\xbf\x00\x00\x00 N\xbex\xbf\x00\x00\x00 \x1d\rv\xbf\x00\x00\x00\xc0\'\xcbS?\x00\x00\x00@\x85\x0bf?\x00\x00\x00@\x11Z\x8a\xbf\x00\x00\x00\x009\xca\x8b\xbf\x00\x00\x00@\xd3\xe0\x86\xbf\x00\x00\x00\xe0\x9f\xfaj?\x00\x00\x00\xc0h+\x81?\x00\x00\x00\x80\xf2T\x8f\xbf\x00\x00\x00\xe0\xa7\xf0\x9b\xbf\x00\x00\x00\x00\x1d\xd2f?\x00\x00\x00@\xa0\xd4q?\x00\x00\x00\x80I\xa6\x89\xbf\x00\x00\x00\x80-\x8a\x84?\x00\x00\x00\x00\xdd\x85m?\x00\x00\x00\x80\x9a\xa2\x80?\x00\x00\x00\xc0i\xb1p\xbf\x00\x00\x00\xe0\x07<\x92\xbf\x00\x00\x00\x80\xfe\x9d\x87?\x00\x00\x00 \xaaOk\xbf\x00\x00\x00`O\xc8w\xbf\x00\x00\x00\xe0\xc7~a\xbf\x00\x00\x00 M-X?\x00\x00\x00\x80x\xd1`?\x00\x00\x00\xc0\x1b4e?\x00\x00\x00 \xe2,\x81\xbf\x00\x00\x00`\xc5n\x90\xbf\x00\x00\x00@JR\x90\xbf\x00\x00\x00\xc0\xa5\xfe`?\x00\x00\x00\xe0j\x8fb\xbf\x00\x00\x00 \x95\x1dy\xbf\x00\x00\x00\xc0\xda\x0ck?\x00\x00\x00`\xbd\x94q\xbf\x00\x00\x00\xe0\xaa\x8c|\xbf\x00\x00\x00 UF`?\x00\x00\x00\xe0V\xe9\x95\xbf\x00\x00\x00@/\x90\x95?\x00\x00\x00@\x7f\x9a|\xbf\x00\x00\x00\xc0\x83\x0bQ?\x00\x00\x00@\x13"n?\x00\x00\x00`\xd6t7\xbf\x00\x00\x00\x80\x83\xf1\x87?\x00\x00\x00\xc0\x9e\xffn?\x00\x00\x00\xc0@eP?\x00\x00\x00\x80\x9c<h?\x00\x00\x00\x00\x92\x06\x88?\x00\x00\x00\xe0\xc2wq\xbf\x00\x00\x00@\xeeL\x8e\xbf\x00\x00\x00\x80\xe8\xb6\x91\xbf\x00\x00\x00@\x051c\xbf\x00\x00\x00@;\x95y\xbf\x00\x00\x00\xa0\x8a\x10%\xbf\x00\x00\x00\xe0\xc4_p?\x00\x00\x00@N={?\x00\x00\x00\x80\x08\x07Z?\x00\x00\x00 \xd5E\x8a\xbf\x00\x00\x00@2m~\xbf\x00\x00\x00\xa0B\xd1\x92\xbf\x00\x00\x00\xc0\x91\xa7\x91?\x00\x00\x00`\xcdU|\xbf\x00\x00\x00\xa0)\x88r\xbf\x00\x00\x00\xc0\x89{X?\x00\x00\x00\xc0\xc7w\x91?\x00\x00\x00`\xa6\xc7}\xbf\x00\x00\x00\x00\xa5\xe8r\xbf\x00\x00\x00`\xde\x0f\x87\xbf\x00\x00\x00@%\xb7y?\x00\x00\x00\x00E!\x90?\x00\x00\x00\x00\xc7\xb2\x8e?\x00\x00\x00\xa0\x9b\x17t\xbf\x00\x00\x00@(\xa1\x84\xbf\x00\x00\x00\xc0X\xe4z\xbf\x00\x00\x00\x00o\x18|\xbf\x00\x00\x00 l\x87}\xbf\x00\x00\x00\x80\x818\x82\xbf\x00\x00\x00\x80h\xc5\x93?\x00\x00\x00\xc0\x10\x07\x97?\x00\x00\x00\xc0$\x1e\x86?\x00\x00\x00\xe0F\xc8\x98\xbf\x00\x00\x00\xa0%\x17e?\x00\x00\x00\x80\xcerq\xbf\x00\x00\x00\xc09\x16b?\x00\x00\x00 )\xebl\xbf\x00\x00\x00\xa0\xb2By\xbf\x00\x00\x00\xa0i/\x84?\x00\x00\x00\x00\xe41\x82?\x00\x00\x00\xa0\xbf\xb0y?\x00\x00\x00 %\x99\x81\xbf\x00\x00\x00\x00\xa6\xd9\x8c\xbf\x00\x00\x00\x004\x07z?\x00\x00\x00\x00\xd8\xc0}?\x00\x00\x00 \xd46\x85?\x00\x00\x00@ZzP?\x00\x00\x00@\xf5\x0f\x81?\x00\x00\x00`8\xce\x88?\x00\x00\x00\xa0R\xa1\x84?\x00\x00\x00\xc0\xc3\x1a\x80\xbf\x00\x00\x00\xe0M\xfbf\xbf\x00\x00\x00\xe0\x9a\x13x?\x00\x00\x00 \x12Oy?\x00\x00\x00\xc0\x96H]?\x00\x00\x00\x00Wkz?\x00\x00\x00\x00\x93\x9d}?\x00\x00\x00@Okl\xbf\x00\x00\x00\x00c\xadu\xbf\x00\x00\x00\xe0\x14\xea>\xbf\x00\x00\x00\xa0,\xdat\xbf\x00\x00\x00 (\x1fW\xbf\x00\x00\x00\xa0\x9b\xfc\x86\xbf\x00\x00\x00\xe0\x1d\xf9\x8b?\x00\x00\x00\xa0[\xc0[?\x00\x00\x00 ~\x16l\xbf\x00\x00\x00`\x82\xe5\x84?\x00\x00\x00\x800\x8e\x1c\xbf\x00\x00\x00\xc0r\x81z?\x00\x00\x00 ]\xcet\xbf\x00\x00\x00 \xc9{i\xbf\x00\x00\x00\xe0\xfa\x11f?\x00\x00\x00`\x91\xd9\x80?\x00\x00\x00@\xe4_w\xbf\x00\x00\x00 \xc3\x07q\xbf\x00\x00\x00\xa0\x8d+\x98\xbf\x00\x00\x00\xe0\xf0\xfcr?\x00\x00\x00\xe0S @\xbf\x00\x00\x00`O\x8b\x82?\x00\x00\x00\x00n=\x80\xbf\x00\x00\x00\xa0V\x04\x86?\x00\x00\x00@\xcd\x91\x90\xbf\x00\x00\x00\x80Er|\xbf\x00\x00\x00@\xe1\ng?\x00\x00\x00\xe0\x9ayj\xbf\x00\x00\x00\xa0\xb9\xc4}?\x00\x00\x00@\xa9\xc0y\xbf\x00\x00\x00`v\xbdu\xbf\x00\x00\x00\xc0\n\xf8D\xbf\x00\x00\x00@WA??\x00\x00\x00\x80\xf7\xbf\x84\xbf\x00\x00\x00@q\xf9S\xbf\x00\x00\x00\xa0/\x19u?\x00\x00\x00\xe0D\xe2\x8b?\x00\x00\x00@F\x84\x86\xbf\x00\x00\x00@\x15\xa9{\xbf\x00\x00\x00\xe0\xaf=S?\x00\x00\x00\xe0g\xf2r?\x00\x00\x00\xa0^\xbe~\xbf\x00\x00\x00\xc0\xe3j[?\x00\x00\x00\xa0\x99\xe8{?\x00\x00\x00\x00\xe9\x0b\x89?\x00\x00\x00@\xab\xbaX\xbf\x00\x00\x00\x00\x10w\x98?\x00\x00\x00\xe0\xca#\x8b?\x00\x00\x00\xa0\x02\x9e\x8a\xbf\x00\x00\x00\xc0\xde \xe9\xbe\x00\x00\x00@5\xca\x97?\x00\x00\x00\xa0=\x00\x8c?\x00\x00\x00\x80ymo?\x00\x00\x00`\x9f\xcfy?\x00\x00\x00@2\xd5q\xbf\x00\x00\x00\xa0\xc1}v\xbf\x00\x00\x00 ]G\x89?\x00\x00\x00\x00\xf9G|\xbf\x00\x00\x00\xe0\xe8kf\xbf\x00\x00\x00\x00PPD\xbf\x00\x00\x00\xc0]\x16i\xbf\x00\x00\x00 \xbbLz\xbf\x00\x00\x00\x80^\xa5\x99\xbf\x00\x00\x00\x80Ed\x90?\x00\x00\x00\xc0d\xcb\x90\xbf\x00\x00\x00\xc0G\xcfx\xbf\x00\x00\x00\xa04\xc1i\xbf\x00\x00\x00\x80/`\x92?\x00\x00\x00\xe0_\xd4P?\x00\x00\x00\xc0\x87\x86\x87?\x00\x00\x00\xe0\xe6\xcb\x83?\x00\x00\x00\xc0\xf8\xf5\x92?\x00\x00\x00\xa0W\x86\x91\xbf\x00\x00\x00\x80\xc2\xde\x94?\x00\x00\x00\xc0\x1dL1?\x00\x00\x00@\t\xc3t?\x00\x00\x00 \xcb\xde^?\x00\x00\x00`\xe7#s?\x00\x00\x00\x80\x1drt?\x00\x00\x00 M\xb7|\xbf\x00\x00\x00\x80Hp\x84\xbf\x00\x00\x00\xc0`\'\x83?\x00\x00\x00 \xfb\xa0\x87\xbf\x00\x00\x00@\xb7\xe2s\xbf\x00\x00\x00@\xe1\x04\x84?\x00\x00\x00\x80b\xb1\x8c\xbf\x00\x00\x00 \x84)o?\x00\x00\x00\xc0\xaezy\xbf\x00\x00\x00 \xae\xdf\x8d?\x00\x00\x00\xc0X\x02\x85\xbf\x00\x00\x00 \xeaB~?\x00\x00\x00`\xcf#\\\xbf\x00\x00\x00\x80t\xe0\x94?\x00\x00\x00\xc0\xc6\xd1m?\x00\x00\x00@\xecr\x7f?\x00\x00\x00\xc0\xcb\xa2\x85\xbf\x00\x00\x00@O\xde\x8a\xbf\x00\x00\x00\xe0\x81\xbb\x95\xbf\x00\x00\x00\xa0\xd7\x03\x8a\xbf\x00\x00\x00 WOv?\x00\x00\x00 \xd7R\x95\xbf\x00\x00\x00\xa0\x8c\n\x88?\x00\x00\x00`IK\x85\xbf\x00\x00\x00\xe0\xa9\xd3\x82\xbf\x00\x00\x00`\xfb\xde\x87\xbf\x00\x00\x00`\x95i1?\x00\x00\x00 \xea\xbct?\x00\x00\x00`:\x02\x87?\x00\x00\x00 \xb1-\x84?\x00\x00\x00@\xf0T\x8b?\x00\x00\x00\xe0\xf4\xa7o\xbf\x00\x00\x00\xa0\xa3Fy?\x00\x00\x00 \xefwL\xbf\x00\x00\x00`R_\x81\xbf\x00\x00\x00\xc0\x92@\x8f\xbf\x00\x00\x00\xa0\x06H9?\x00\x00\x00@\x00\x8be?\x00\x00\x00\x80\xeb\x17Q\xbf\x00\x00\x00@:K\x91?\x00\x00\x00\x00\x01*\x88?\x00\x00\x00`(e\x85?\x00\x00\x00\x80\xc5\xb0e?\x00\x00\x00\x80\xe8j\x9b?\x00\x00\x00\x80\x05D\x90?\x00\x00\x00\xa0\xc1!\x91?\x00\x00\x00\xa0\r\x84r?\x00\x00\x00\xc0#\x1ez?\x00\x00\x00\xe0\x87\n\x81?\x00\x00\x00\xe0\xdb\x8el?\x00\x00\x00@V\xe5"\xbf\x00\x00\x00@\xee\xf6\x85?\x00\x00\x00@\xa9\xaf\x8d?\x00\x00\x00\xa0{\xd27?\x00\x00\x00@o\xe9\x98\xbf\x00\x00\x00\xc0\x17\x14}\xbf\x00\x00\x00 ^5\x88\xbf\x00\x00\x00`s\xbe\x86?\x00\x00\x00\x00\x10S}?\x00\x00\x00\x80\xa7\x16\x82\xbf\x00\x00\x00\xe0H\x14O?\x00\x00\x00\xa0\xd2\xb0~\xbf\x00\x00\x00\xa0_\x86x\xbf\x00\x00\x00\x00\xf6br\xbf\x00\x00\x00\xa0\xf8\xff\x84\xbf\x00\x00\x00\x00I\xd6`\xbf\x00\x00\x00 \xd6\xa6x\xbf\x00\x00\x00@\xd1D>?\x00\x00\x00 \x0b\xa7\x87?\x00\x00\x00\x00^\xa4[?\x00\x00\x00\xc0P\xd7K?\x00\x00\x00\xc0\xb7\x82~?\x00\x00\x00@\xb8Gq\xbf\x00\x00\x00\xc0\x1b7\x85\xbf\x00\x00\x00\xa0\xb2\xf7b\xbf\x00\x00\x00\x00\xd2\xe4}\xbf\x00\x00\x00\xc0\x06&\x8f\xbf\x00\x00\x00\xa0\x05\x96A?\x00\x00\x00\x80\xe8\xd9\x83?\x00\x00\x00\xc0\xeb\x1cg\xbf\x00\x00\x00\x00\x1b.b\xbf\x00\x00\x00\xa0{;\x8b\xbf\x00\x00\x00@G\xa6v\xbf\x00\x00\x00\x80\xa6\xf3\x81?\x00\x00\x00\x00\x18\xfbz?\x00\x00\x00@,&\x82?\x00\x00\x00\xc0t\xe1\x91?\x00\x00\x00`\xf4\xd8U\xbf\x00\x00\x00\x80\xd5\xb8\x8b\xbf\x00\x00\x00`!nw\xbf\x00\x00\x00\xc0\x83\x08{?\x00\x00\x00\xe0_\xf8Y?\x00\x00\x00 X\xc7\x85\xbf\x00\x00\x00 \\\xc3v\xbf\x00\x00\x00`\xfb"\x88\xbf\x00\x00\x00@\x0e\xb2\x92?\x00\x00\x00\xa0\xbb\xa2\x9a?\x00\x00\x00 \xd9\xdbx?\x00\x00\x00 \x9d>|\xbf\x00\x00\x00\xe0;\x03\x96\xbf\x00\x00\x00\x80a\xc9\x90?\x00\x00\x00@\x84R\x90\xbf\x00\x00\x00\xe0\xfe\xf7\x8c\xbf\x00\x00\x00 \x9aYz\xbf\x00\x00\x00@\xb3\xc9\x88\xbf\x00\x00\x00@S4\x84\xbf\x00\x00\x00\x80\x07\xbb[?\x00\x00\x00\xa0m\xdd\x99\xbf\x00\x00\x00\xe0Q\xe8\x97\xbf\x00\x00\x00\xc0\x8d\x9fv\xbf\x00\x00\x00\xa0\xea\x0c\x90?\x00\x00\x00 \x95\xe4\x85\xbf\x00\x00\x00\xa0\xad#v?\x00\x00\x00`\xd3\xf6\x8c?\x00\x00\x00\x00\xa4H\x8a\xbf\x00\x00\x00`T\x12h?\x00\x00\x00\x80\xcfjt?\x00\x00\x00\x00\x83\x14\x88?\x00\x00\x00\xa0nlv\xbf\x00\x00\x00\x80\xdb-\x91?\x00\x00\x00\xe0\x88\t~?\x00\x00\x00`\xaa\x8bY\xbf\x00\x00\x00\x00b*\x83?\x00\x00\x00\x80\x0c\xc1{\xbf\x00\x00\x00`5\x05\x93\xbf\x00\x00\x00\xe0\xda[\x92\xbf\x00\x00\x00\xa0\xd3\x9cv?\x00\x00\x00\xc0\xa5x\x80?\x00\x00\x00@\x12\xff\x83?\x00\x00\x00@\xc1\xac3?\x00\x00\x00\xc0\xd0\xedq?\x00\x00\x00\x80\xa7\xd7\x88?\x00\x00\x00\xa0${w\xbf\x00\x00\x00\x80+$z?\x00\x00\x00\x80\xcaA\x81\xbf\x00\x00\x00\x80\n\xe1V\xbf\x00\x00\x00\xe0I\r`\xbf\x00\x00\x00\x00\x97 \x84\xbf\x00\x00\x00\x80\xd1-\x80\xbf\x00\x00\x00\x00\xc9\xb3\x82?\x00\x00\x00`)\xc6c\xbf\x00\x00\x00\xe0\\\x00\x81?\x00\x00\x00@2\xbfh?\x00\x00\x00\xe0\xa8\xb0$?\x00\x00\x00@P\xf4}\xbf\x00\x00\x00\xc0\x9f\x0bs?\x00\x00\x00`\x01w\x92\xbf\x00\x00\x00`\xed\xe0`\xbf\x00\x00\x00\xe0\xecXr\xbf\x00\x00\x00\xa0\x81\xe2p\xbf\x00\x00\x00\xc0Q\xf96\xbf\x00\x00\x00@h\xff\x82?\x00\x00\x00\x00\x04\x93\x90?\x00\x00\x00\xa0Z\xdet?\x00\x00\x00@\xea\x1bl\xbf\x00\x00\x00 \xfa\xebv\xbf\x00\x00\x00@)3\x10\xbf\x00\x00\x00\x80\nf\x80\xbf\x00\x00\x00@[x\x8e\xbf\x00\x00\x00@S\x19^?\x00\x00\x00@W2Q\xbf\x00\x00\x00\x80\xc7qz?\x00\x00\x00 \x17\x97R?\x00\x00\x00\xc0\xea\xc8\x83?\x00\x00\x00\xc0\x1cV\x91?\x00\x00\x00@\xb3\xeae?\x00\x00\x00\xa0h\xb79\xbf\x00\x00\x00`\xdc\xea\x86?\x00\x00\x00 \x81[j\xbf\x00\x00\x00\xa0\xb9\x00\x88?\x00\x00\x00 T8p?\x00\x00\x00 t\x08G?\x00\x00\x00\x80\x82r\x85\xbf\x00\x00\x00\xc0\x96\xa8~?\x00\x00\x00\xe0\xee\x8e\x90?\x00\x00\x00\xe0\xff\xdee?\x00\x00\x00\xc0)Ui\xbf\x00\x00\x00 U,P\xbf\x00\x00\x00\xe0\xc8^w?\x00\x00\x00\xc0G\xbdM?\x00\x00\x00\x80\xa4\xbew?\x00\x00\x00\x00\xd9\x84\x8d\xbf\x00\x00\x00 \x05\xffd\xbf\x00\x00\x00@\x14\x089\xbf\x00\x00\x00\x80i\xe5v\xbf\x00\x00\x00\xe0Y\'b\xbf\x00\x00\x00`\x92\xffd?\x00\x00\x00 o\xa1j\xbf\x00\x00\x00\xa0:\xd6`\xbf\x00\x00\x00\xc0\xba\xe0k?\x00\x00\x00@\xec\xe3{?\x00\x00\x00\xe0\xffNb?\x00\x00\x00 bE{?\x00\x00\x00`\x04\x08\x8c?\x00\x00\x00\xc0\xd9\x94h?\x00\x00\x00\x00g`\x8b?\x00\x00\x00\xe0\xc4\xa5\x96\xbf\x00\x00\x00`\x16\x95x?\x00\x00\x00 8\x13\x85\xbf\x00\x00\x00\xe0Ef\x97\xbf\x00\x00\x00`\x0b\xc7\x82\xbf\x00\x00\x00\x00U\x88t?\x00\x00\x00`\x95G}\xbf\x00\x00\x00\xe0\xa6\xce\x8a\xbf\x00\x00\x00\xe0\xbc<\x92?\x00\x00\x00\xc0\xa3#\x92?\x00\x00\x00`\x0f\x81\x85\xbf\x00\x00\x00 \x8a\xc9?\xbf\x00\x00\x00\xa0\rT\x93?\x00\x00\x00`\\\xd5\x82?\x00\x00\x00\xe0t9\x96?\x00\x00\x00 xDp?\x00\x00\x00\x80-\xa9k?\x00\x00\x00 \x86\xadL\xbf\x00\x00\x00\xe0\xa6sj\xbf\x00\x00\x00\x800\xd7{?\x00\x00\x00@\xb2\xae\x85?\x00\x00\x00\x80\xba\xe6\x90\xbf\x00\x00\x00\x80\x17"p?\x00\x00\x00\xe0\x86Lx\xbf\x00\x00\x00 W\xd2x?\x00\x00\x00 \x05\xc5W\xbf\x00\x00\x00\x00\xbd\xb6\x85?\x00\x00\x00\x80\xed\xb0\x80\xbf\x00\x00\x00`\x13d\x8b\xbf\x00\x00\x00\xc0psp?\x00\x00\x00\xa0\xfeng?\x00\x00\x00`\xfe\x83}?\x00\x00\x00\xc0\x9a\xed\x81\xbf\x00\x00\x00\x80\xcf\x8d\x7f\xbf\x00\x00\x00`\xd0\x8d{\xbf\x00\x00\x00 \x95\xd3{\xbf\x00\x00\x00@\x01\xa7\x9e?\x00\x00\x00\xc0\x83\x96c\xbf\x00\x00\x00\x00\xffej\xbf\x00\x00\x00\x80\xd2\xfeu?\x00\x00\x00\x00\x0cju?\x00\x00\x00\xc0#\xac??\x00\x00\x00\xc0K\xd8\x82?\x00\x00\x00 \xe6\xc0\x84?\x00\x00\x00\xc0yDa?\x00\x00\x00@@\xccz?\x00\x00\x00\x80\xdd\x8b\x8d?\x00\x00\x00\x80[\x93x?\x00\x00\x00\x80/\x16\x81?\x00\x00\x00\xe0\xd4\x85\x94?\x00\x00\x00\x00\xb5\x87\x90\xbf\x00\x00\x00\xc0\xcb\x90\x99\xbf\x00\x00\x00 \xeeqX?\x00\x00\x00\xc04\xa8\x95\xbf\x00\x00\x00\xa0\xd0\x88l?\x00\x00\x00\x00\x18e\xd9\xbe\x00\x00\x00\x80u\nm\xbf\x00\x00\x00\x00 \xe7t\xbf\x00\x00\x00@\xc5i\x8a\xbf\x00\x00\x00\xa0\xd0(\x94?\x00\x00\x00\xc0\xacp}\xbf\x00\x00\x00\xa0\xf8\r}?\x00\x00\x00\x00\xe6(`?\x00\x00\x00\xa0\xdcW\x90?\x00\x00\x00\x80s:\x14\xbf\x00\x00\x00`\x8f\xa3\x80?\x00\x00\x00\xe0\xe2\xa0b?\x00\x00\x00\xa0\x07\xc2c\xbf\x00\x00\x00 \x08`\x92?\x00\x00\x00\xa0Ozq\xbf\x00\x00\x00 \xf94|?\x00\x00\x00`\x8cH\x82\xbf\x00\x00\x00@\xfd\xd0\x8f?\x00\x00\x00@\xad>\x8c?\x00\x00\x00\xe0m\xbf\x80\xbf\x00\x00\x00`\x0e\xc5P?\x00\x00\x00@\x00t\x90\xbf\x00\x00\x00\xa0\xdb\xa7i?\x00\x00\x00 om|?\x00\x00\x00\xa0\xbc\xdc{\xbf\x00\x00\x00@\x87\xefy\xbf\x00\x00\x00\xe0y\xe97\xbf\x00\x00\x00`S\xcbv?\x00\x00\x00\x80\xc2^y\xbf\x00\x00\x00\xc0/\xf4\x84\xbf\x00\x00\x00 \xf1m\x99\xbf\x00\x00\x00@\xd1Bg?\x00\x00\x00@\xa96q\xbf\x00\x00\x00\x00&;o\xbf\x00\x00\x00\x00\xce\xea\x85?\x00\x00\x00@\xea\x1e\x95?\x00\x00\x00\x80\xf3\x10F?\x00\x00\x00\xe0\x0b$\x92?\x00\x00\x00`\xe1\x03\x94\xbf\x00\x00\x00@2?\x81\xbf\x00\x00\x00\x80\xb6\xe0\x86?\x00\x00\x00 (OX\xbf\x00\x00\x00\xe0\xb6\xcc\x8c\xbf\x00\x00\x00 \x82\xd4^\xbf\x00\x00\x00\xe0X\\a?\x00\x00\x00\xe0\xc0\x03\x97\xbf\x00\x00\x00\xa0\x94\x7f~\xbf\x00\x00\x00 \xb2\x9ds?\x00\x00\x00\x00\x8eKa?\x00\x00\x00\xe0k\x03g\xbf\x00\x00\x00\xa0\xa2\x06\x89\xbf\x00\x00\x00@\xf2\xe1\x82\xbf\x00\x00\x00\xe00$\x7f\xbf\x00\x00\x00\x808\x84c?\x00\x00\x00\xc0\xaf\xf6S\xbf\x00\x00\x00\xe0\xdc]\x82\xbf\x00\x00\x00\xa0V\xc1y?\x00\x00\x00\xc0\xdb\xb2\x85?\x00\x00\x00\x80\x7fZ\x8a\xbf\x00\x00\x00 +\x86\x92\xbf\x00\x00\x00\x80\x08\x12\x88\xbf\x00\x00\x00@X\xe6\x80?\x00\x00\x00\xe0\xcdY\x80?\x00\x00\x00@\xbc\xa7\x80\xbf\x00\x00\x00\xa0\xffF}\xbf\x00\x00\x00\xe0\x8f\xc5\x88?\x00\x00\x00\xc0\x1co|\xbf\x00\x00\x00\x80\x92\xa5\x96?\x00\x00\x00\xc0\x0c\xb7|?\x00\x00\x00@l\xcaS?\x00\x00\x00@\xbfgR\xbf\x00\x00\x00\xa06\xc4S\xbf\x00\x00\x00 \xe5\x98\x83?\x00\x00\x00\xe0\xf7\xe7o\xbf\x00\x00\x00`\x0c\xfdu?\x00\x00\x00\xe0\x96$b\xbf\x00\x00\x00`\xe7\x8bd\xbf\x00\x00\x00 \xb6b\x89\xbf\x00\x00\x00\xa0c\xe3\x96\xbf\x00\x00\x00`|\x00g\xbf\x00\x00\x00 \xc3$O?\x00\x00\x00\xc0o3U?\x00\x00\x00\xe0\xb0&e\xbf\x00\x00\x00\xc0\xeaN\x89\xbf\x00\x00\x00\x008\xb7e\xbf\x00\x00\x00\x00U\xd0\x9b\xbf\x00\x00\x00\xa0\xdc\x05\x96\xbf\x00\x00\x00 \xc4\x82t\xbf\x00\x00\x00 -\x98\x87\xbf\x00\x00\x00\x80\x0b5\x8e\xbf\x00\x00\x00\xc0\xa0yu\xbf\x00\x00\x00\x00\x80\xe8\x81?\x00\x00\x00`\x98K\x91\xbf\x00\x00\x00\xc0\xba\xe4\x8a?\x00\x00\x00 \xbfm{?\x00\x00\x00`\nrf\xbf\x00\x00\x00`\x80\xb9\x90?\x00\x00\x00\x00\xf3F\x85?\x00\x00\x00`y!\x89?\x00\x00\x00 \x08\x17\x92?\x00\x00\x00\xc0\x82\x95x\xbf\x00\x00\x00`\xbe\x0c\x86\xbf\x00\x00\x00@-U\x80?\x00\x00\x00 c\x88\x91\xbf\x00\x00\x00 \xca\x11f\xbf\x00\x00\x00`\xb4\xbe\x81?\x00\x00\x00\xa0\xad]\x90?\x00\x00\x00\xc0C$\x8a\xbf\x00\x00\x00\xa0\x8fvb\xbf\x00\x00\x00\xa0}-\x88\xbf\x00\x00\x00\xa0\x08G\x89?\x00\x00\x00\xc0(\xdfb\xbf\x00\x00\x00\xa0\xbf\xd0\x8b\xbf\x00\x00\x00\xe0\xcde4?\x00\x00\x00\xe0\x83tx?\x00\x00\x00\x00(\x85\x85?\x00\x00\x00`P\x93]?\x00\x00\x00@&.\x8c\xbf\x00\x00\x00\x80X\xcbp?\x00\x00\x00 \xfc\xf1\x83\xbf\x00\x00\x00\xc01\x9aM\xbf\x00\x00\x00\xa0y\x80\x8a\xbf\x00\x00\x00\xe0D\xe9\x8e\xbf\x00\x00\x00\xa0}\xe8t?\x00\x00\x00`+J`\xbf\x00\x00\x00\x80\xd3\xa6[\xbf\x00\x00\x00@\xe4\x87]?\x00\x00\x00\xe0f\xa9.?\x00\x00\x00\xc0r\xa4|?\x00\x00\x00\xe0\xe3\x12f?\x00\x00\x00\x00\x84\xcaN\xbf\x00\x00\x00\xe0\x07\rr?\x00\x00\x00 \xb0\x10\x89\xbf\x00\x00\x00@M6\x85\xbf\x00\x00\x00@\xb7q\x96\xbf\x00\x00\x00\xa0\x13Cq?\x00\x00\x00@"\xb0n\xbf\x00\x00\x00\xa0\xfb\xed[?\x00\x00\x00`a}\x8f?\x00\x00\x00 Wug\xbf\x00\x00\x00`Y\x1fn\xbf\x00\x00\x00\xa0/e\x85?\x00\x00\x00\xe0\xda\xe8\x87?\x00\x00\x00\xa0\xaf\x05\x7f?\x00\x00\x00\xc0+0Y\xbf\x00\x00\x00`\xe4\x17`?\x00\x00\x00@\xf2,v\xbf\x00\x00\x00 \x14\x0c\x7f\xbf\x00\x00\x00 \xa4hv?\x00\x00\x00\x80\xff\xb6\x8a\xbf\x00\x00\x00\xa0\xa6\xc6p?\x00\x00\x00`P-T?\x00\x00\x00\x00\xbb\x12q?\x00\x00\x00\xe0\xb2\x9dm?\x00\x00\x00\x00\xb1/s\xbf\x00\x00\x00\xc0\xaf\xb7|\xbf\x00\x00\x00\x80R\xdby?\x00\x00\x00\x80\x18n]?\x00\x00\x00 a\xf3\x7f\xbf\x00\x00\x00\xa0\x92\xe9z?\x00\x00\x00 \x07\xce\x89?\x00\x00\x00`\x83\xa9t?\x00\x00\x00 <\x8c\x90?\x00\x00\x00\x00\xd1\xe3\x90?\x00\x00\x00\xe0\x0b\x15a\xbf\x00\x00\x00`o\x00\x93\xbf\x00\x00\x00\xa0!T`\xbf\x00\x00\x00\xa0\x11O\x80?\x00\x00\x00\xc0\xd2\xd6`?\x00\x00\x00\x00\x1fpA?\x00\x00\x00\xa0z^r\xbf\x00\x00\x00\xa0\x08\xbe\x89\xbf\x00\x00\x00\xc0\x84Nc\xbf\x00\x00\x00\x80O\r_\xbf\x00\x00\x00\xe05I\x89?\x00\x00\x00\xe0\x80\xf7\x8f\xbf\x00\x00\x00\xe0\xd7\xe7Z\xbf\x00\x00\x00 \x93\xa1^?\x00\x00\x00 !\xa0\x87\xbf\x00\x00\x00\x80\'-\x8a?\x00\x00\x00\xe0\xe7\x8d\x98?\x00\x00\x00\xc0L~\x89\xbf\x00\x00\x00\xe0\xa6\xd7}?\x00\x00\x00\xa0l\x1cv\xbf\x00\x00\x00\xc0\xbb\xe1\x85\xbf\x00\x00\x00\xa0)!\x81?\x00\x00\x00 @$)\xbf\x00\x00\x00`\xb4\x13r?\x00\x00\x00\xe0\x11\x04l?\x00\x00\x00@\xe6\xc8c?\x00\x00\x00`@>\x9a\xbf\x00\x00\x00\x80\xca\xe1`?\x00\x00\x00\xe0_\x12\x85?\x00\x00\x00\x00]$v?\x00\x00\x00@\x95\xe0\x83\xbf\x00\x00\x00\xc0\x01\xe3l?\x00\x00\x00\xc0\x12\xe9z\xbf\x00\x00\x00\x80\x0f\xf7y?\x00\x00\x00`\xd8\xa1\x83?\x00\x00\x00\xa0\x05b{\xbf\x00\x00\x00`W\xa9o?\x00\x00\x00\xe0\xa4Q\x8a?\x00\x00\x00\xa0l>s\xbf\x00\x00\x00\xe0\x1a9\x80\xbf\x00\x00\x00\xc08\xd5\x82?\x00\x00\x00\xe0\xb1#\x87\xbf\x00\x00\x00\x80^\x81\x87\xbf\x00\x00\x00\xe0\x02\xb3q\xbf\x00\x00\x00\xa0\xc2\x9eY?\x00\x00\x00`\xdc\xee\x8c\xbf\x00\x00\x00\xe0\x82\x19\x86?\x00\x00\x00\x00|h\x8d?\x00\x00\x00\x00w\x10/?\x00\x00\x00\xa0\xe6\x1f\x8d\xbf\x00\x00\x00\x80\x04\xd5\x81?\x00\x00\x00\x00SK\x8a?\x00\x00\x00\xa0\xcb\x01\x92?\x00\x00\x00\x00\x91\x12\x7f?\x00\x00\x00\xe0\xba;\x81?\x00\x00\x00\xe0\xa4\xf9\x8c\xbf\x00\x00\x00`h\x1ec\xbf\x00\x00\x00\x80\x86O\x7f\xbf\x00\x00\x00@1\x7f\x83?\x00\x00\x00\xa0>d\x85\xbf\x00\x00\x00\xa0w\x97}\xbf\x00\x00\x00\xa0\x12\x0f\x8b\xbf\x00\x00\x00\xc0\xb7\xd2\x88?\x00\x00\x00 \x1b%s?\x00\x00\x00 d\x8do\xbf\x00\x00\x00\x80,\xc4\x91\xbf\x00\x00\x00\xa0\x19\xccj\xbf\x00\x00\x00\x00\x19\x16l?\x00\x00\x00`\xbc\x0eu?\x00\x00\x00\xc0\x03@c?\x00\x00\x00\xc0g\x9ce\xbf\x00\x00\x00@NJ\x83?\x00\x00\x00\x80\x12!\x80?\x00\x00\x00\x80\xb9\n\x89?\x00\x00\x00\xc0\xeb\x1c\x88\xbf\x00\x00\x00 <\xbb\x81\xbf\x00\x00\x00\xa0\xdd\xb2g\xbf\x00\x00\x00\xe0\x96\xaam\xbf\x00\x00\x00\xc0\x05\x98\x82\xbf\x00\x00\x00 \xcd\x81\x8c\xbf\x00\x00\x00\xc0\x1c\xe3\x8d?\x00\x00\x00\xa0(\xb6\x82\xbf\x00\x00\x00\x00\xd1\x1bw\xbf\x00\x00\x00\xe0\x83\xffe\xbf\x00\x00\x00`\x04\xf4\x8d?\x00\x00\x00@\xb0\xcb\x8a\xbf\x00\x00\x00\xc0\x9d\xd8\x82\xbf\x00\x00\x00\xc0\x01\xf5\x7f?\x00\x00\x00\xe0\xcd\xecn\xbf\x00\x00\x00\x80\xbfVo?\x00\x00\x00`y\xa7d?\x00\x00\x00 \xb1\x03D\xbf\x00\x00\x00\x80r\x97|\xbf\x00\x00\x00@\xfe\x8b\x84?\x00\x00\x00\xc0\xc2\xb08\xbf\x00\x00\x00`\x98~Q\xbf\x00\x00\x00`z\x15i\xbf\x00\x00\x00@\xcd\x05u\xbf\x00\x00\x00@\x9e\x1ep?\x00\x00\x00 \xeb\'u?\x00\x00\x00@\xe3\xa7^?\x00\x00\x00\xe0m\x12~\xbf\x00\x00\x00\xe0\xd5\xb4o?\x00\x00\x00\xc0\x97(\x81\xbf\x00\x00\x00 \xd7H\x82?\x00\x00\x00\xe0\x03\xf3\x9f?\x00\x00\x00`\xea\xae\x82?\x00\x00\x00 \x96\xabW\xbf\x00\x00\x00 \x11%7?\x00\x00\x00\xc0 \xe0}\xbf\x00\x00\x00\x00\xecT\x90\xbf\x00\x00\x00\xa0\xb0`q\xbf\x00\x00\x00@\xa8\xf7u?\x00\x00\x00`K\n9\xbf\x00\x00\x00`B\xd4[?\x00\x00\x00@\x00\xe4G?\x00\x00\x00@@F\x90\xbf\x00\x00\x00\xa0\xed\x10\x83\xbf\x00\x00\x00@\xfdx\x8c?\x00\x00\x00 ~\xa7\x9a\xbf\x00\x00\x00 \xf9\xfdy?\x00\x00\x00\xe0)\xad{\xbf\x00\x00\x00`\xc5(f\xbf\x00\x00\x00\x80\xc1Xx\xbf\x00\x00\x00`\xa1\xd5X\xbf\x00\x00\x00\xc0\xfcB\x87\xbf\x00\x00\x00\x00\xb5\xc0i?\x00\x00\x00\xa0,\xec\x8f?\x00\x00\x00`!\x9db?\x00\x00\x00\xe0\x95\xf2{\xbf\x00\x00\x00\xa0B\xa2i\xbf\x00\x00\x00\xa02M\x91\xbf\x00\x00\x00\xe0:Bb?\x00\x00\x00\xa0\xa3\xe3z\xbf\x00\x00\x00\x00\xa5p[?\x00\x00\x00\xa0%cq\xbf\x00\x00\x00\x80`\x04C?\x00\x00\x00@\x0f%d\xbf\x00\x00\x00\x80yE\x8e?\x00\x00\x00\xc0(Hz?\x00\x00\x00@Q\xf9d?\x00\x00\x00`X\xbct?\x00\x00\x00\xe0,\xdf]\xbf\x00\x00\x00\xa0ZJm\xbf\x00\x00\x00 3\x93p?\x00\x00\x00\x00\xdd\xaeo?\x00\x00\x00\xa0\x15\xf9\x93\xbf\x00\x00\x00\xa0\xd2\xf2=?\x00\x00\x00 \xe2\xdeB?\x00\x00\x00\x00e\xa2D?\x00\x00\x00@\x8f\xf8o?\x00\x00\x00\xe0l\xd8v\xbf\x00\x00\x00\xe0\xea\xd5\x85?\x00\x00\x00@\xae:\x86?\x00\x00\x00\x80\xb5\xdd\xa0\xbf\x00\x00\x00\x00\x92\x1c;\xbf\x00\x00\x00\xa0G\xa3\x88?\x00\x00\x00 E\xc3u?\x00\x00\x00`qbD?\x00\x00\x00 9\x88s?\x00\x00\x00\xe0\x89\xe3a?\x00\x00\x00@\x13C\x8a\xbf\x00\x00\x00\x80dYy\xbf\x00\x00\x00\xc0\x9fO\x84\xbf\x00\x00\x00\xe0\t{m\xbf\x00\x00\x00\x00<\x8c\x97\xbf\x00\x00\x00\xc0\xbcZ\x88?\x00\x00\x00\xa0\x18op\xbf\x00\x00\x00\x00\xcd\t\x91\xbf\x00\x00\x00\xa0\x1f\x01t\xbf\x00\x00\x00\xa0\xb1\x14 ?\x00\x00\x00\x80\xd5\xda~\xbf\x00\x00\x00\xc0\x1aOt\xbf\x00\x00\x00\x00\xab\x8e\x93?\x00\x00\x00@ \x8fm\xbf\x00\x00\x00\xa0\xbd\xc3v\xbf\x00\x00\x00\xa0qme\xbf\x00\x00\x00 \x86>\x8e?\x00\x00\x00`\xa4$s\xbf\x00\x00\x00\xc0\x8f\x8b\x82?\x00\x00\x00\x00\xd0\n|?\x00\x00\x00\xe0\xb6\xbc\x81\xbf\x00\x00\x00\xc0\xd6\x19\x89\xbf\x00\x00\x00`c2\x84\xbf\x00\x00\x00\xc0\x88G\x8c\xbf\x00\x00\x00@\x8fV\x85\xbf\x00\x00\x00\x00\n}\x82\xbf\x00\x00\x00\xc03\xa5\x87?\x00\x00\x00\xc0\xd3\xb9i?\x00\x00\x00\xc0_0\x81?\x00\x00\x00\xc0\xe5\xad\x84?\x00\x00\x00\xe0Y\xf3c?\x00\x00\x00\xe0S2$\xbf\x00\x00\x00\x80\xa3\xf6;?\x00\x00\x00\xa0~\xda\x90\xbf\x00\x00\x00\x80i\xaeV?\x00\x00\x00\xe0\x8f\x06\x83?\x00\x00\x00\x00\xf3~\x92?\x00\x00\x00\x00\xcb\x19I?\x00\x00\x00@{_{\xbf\x00\x00\x00@\x1f\\\x81?\x00\x00\x00\x00YJ{\xbf\x00\x00\x00\xc0(4s\xbf\x00\x00\x00@\xa3\xdeO?\x00\x00\x00@:\x9cS?\x00\x00\x00\xe0\xb7\xed\x88?\x00\x00\x00\xa0\xd9\xc0K?\x00\x00\x00\xc0\xa9\x82K?\x00\x00\x00\x80\xc2ap?\x00\x00\x00\xe0<\xc7h\xbf\x00\x00\x00\x005\xacb?\x00\x00\x00 \x80q\x8b?\x00\x00\x00\xa0\x7f\xa9\x8e?\x00\x00\x00\x00\xe4\ry?\x00\x00\x00@\xb5\x96{\xbf\x00\x00\x00\xa0}Dj\xbf\x00\x00\x00`\x05y\x80?\x00\x00\x00@f\x19\x82\xbf\x00\x00\x00\xa0\xcc\xb6\x86?\x00\x00\x00 \xbeC\x8b\xbf\x00\x00\x00 ;\xfex\xbf\x00\x00\x00\x00\x93>s?\x00\x00\x00\xc0\xca3j?\x00\x00\x00 \xb4@x?\x00\x00\x00\xc0\x18\xbd|\xbf\x00\x00\x00\xa0I\xb9d?\x00\x00\x00\x80(\x10\x81\xbf\x00\x00\x00 \xba\xf4~?\x00\x00\x00\xa0b2v?\x00\x00\x00@\xaf\xdb\x8f?\x00\x00\x00\xe08\xe6s?\x00\x00\x00\x80\xb1\x0cr?\x00\x00\x00@\x0c\x80\x8b\xbf\x00\x00\x00@\xd6\xdaB?\x00\x00\x00\xe0b\xed{?\x00\x00\x00`\x037m\xbf\x00\x00\x00 I\xbbm\xbf\x00\x00\x00\xe0\xd6\x0ct?\x00\x00\x00\xe0\xedC\x94?\x00\x00\x00\xc0\x18\xb2d?\x00\x00\x00 \x18rv\xbf\x00\x00\x00\x00\xfe|y\xbf\x00\x00\x00 \r\xedg\xbf\x00\x00\x00\x00\xe3.\x80\xbf\x00\x00\x00\xc0\x14\x1eu?\x00\x00\x00@E\xe0\x8d\xbf\x00\x00\x00@j\xdd}\xbf\x00\x00\x00`\x90\xf4\x8c\xbf\x00\x00\x00`\x05\x0b\x8c?\x00\x00\x00\xe0\x08\xd1\x8d\xbf\x00\x00\x00\x00J[h\xbf\x00\x00\x00\xa0\xc2tm\xbf\x00\x00\x00\xc0j\xa6\x81\xbf\x00\x00\x00\x00\xbf\xc5\x96?\x00\x00\x00\xa0\x9f\xf2R\xbf\x00\x00\x00\x80\n\xaa\x93\xbf\x00\x00\x00\xa0!\x88~\xbf\x00\x00\x00 \x7fUq\xbf\x00\x00\x00`\xfb\x1e\x80?\x00\x00\x00@\x85\x0c\x83\xbf\x00\x00\x00\xa0\xd8f\x81\xbf\x00\x00\x00 \x7f\xa3p?\x00\x00\x00\x80\xddM\x8a?\x00\x00\x00@A\xe3\x83?\x00\x00\x00\x00D\xb3\x85?\x00\x00\x00\xc0\xed\xaf\x87\xbf\x00\x00\x00 r\xa4\x92?\x00\x00\x00\xe0\x9e\x00\x8b?\x00\x00\x00\xa0NI\x80\xbf\x00\x00\x00 \xf36\x90\xbf\x00\x00\x00`\x85\x84\x80?\x00\x00\x00\xc0\xa9\xdfl?\x00\x00\x00\xa0\x8d\xaaW?\x00\x00\x00\xc0\x87\xf6h?\x00\x00\x00\xe0\xcc\xaeg\xbf\x00\x00\x00\xe0\xb6\xac\x84\xbf\x00\x00\x00\x00P\x8ed?\x00\x00\x00@\'\xd8\x8a\xbf\x00\x00\x00 4\xf1}\xbf\x00\x00\x00 \xe0\x11\x85?\x00\x00\x00\xa0\xa3\x11\x80?\x00\x00\x00\x00\xa4\xf7\x90?\x00\x00\x00`\xdc#\x97\xbf\x00\x00\x00\xe0\xca.s?\x00\x00\x00\xa0\x13\\n?\x00\x00\x00`\t\\\x8e?\x00\x00\x00@:\xc3w\xbf\x00\x00\x00\xc0=\x19\x7f\xbf\x00\x00\x00\x00\xfc\xb8{\xbf\x00\x00\x00\xa0D\x17p\xbf\x00\x00\x00`\xde\xb2W\xbf\x00\x00\x00@`p\x85?\x00\x00\x00 \t\xd9\x81?\x00\x00\x00\x00\xb3jw?\x00\x00\x00\xa0\xf6\xd5\x86\xbf\x00\x00\x00\xe0\x13\nb\xbf\x00\x00\x00`\'\xfec?\x00\x00\x00\x80\x16\xf2y?\x00\x00\x00@Nb\x80\xbf\x00\x00\x00@\xb8@p\xbf\x00\x00\x00\xa0(\x94~\xbf\x00\x00\x00\xc0\x88\x1c\x92?\x00\x00\x00\x00\xaa\xd9\x90\xbf\x00\x00\x00\xc0\x9bY\x81\xbf\x00\x00\x00\xc0g\xc1\x86?\x00\x00\x00\x80\xcb\xf3u?\x00\x00\x00\xe0\xb2~4?\x00\x00\x00\xc0\x06\x83u\xbf\x00\x00\x00@\xc1.\x92?\x00\x00\x00\x00\xe0\xa1v\xbf\x00\x00\x00@\xc6\xeep?\x00\x00\x00 \x9bRk\xbf\x00\x00\x00\xc0\xf7!\x90?\x00\x00\x00\xe0\xc6[x?\x00\x00\x00@Y\xa9f?\x00\x00\x00@h\x97m\xbf\x00\x00\x00 \xca\xf2u?\x00\x00\x00\xc0q\x04\x88\xbf\x00\x00\x00`\x12\xbcF?\x00\x00\x00\xc0\xefXq?\x00\x00\x00 \xc3\x05_\xbf\x00\x00\x00\xc0\xe4"8\xbf\x00\x00\x00\x00\xb5\xb7\x91?\x00\x00\x00\xa0+X\x7f?\x00\x00\x00\x00r\xady?\x00\x00\x00\xa0\x89<\x8f\xbf\x00\x00\x00\x80b\x18\x85\xbf\x00\x00\x00\xa0#\x17h?\x00\x00\x00\xa0\x10\xee|?\x00\x00\x00\x00\x07\xb8c?\x00\x00\x00\xc0\x17\x08\x81\xbf\x00\x00\x00\xc0\xc0\xaa\x80?\x00\x00\x00 \xaa\x14x?\x00\x00\x00\x80~\xa7\x87?\x00\x00\x00`\x01\xda\x88\xbf\x00\x00\x00`\xfd\xdb\x80?\x00\x00\x00\xe0\xad\xdd\x86\xbf\x00\x00\x00@K\x8bt\xbf\x00\x00\x00\xa0Li\x8f\xbf\x00\x00\x00\x80\x02(\x8f\xbf\x00\x00\x00\xc0E_q\xbf\x00\x00\x00\x00\x8b\xf6g\xbf\x00\x00\x00`k\xe3Q\xbf\x00\x00\x00\x80\xb80v\xbf\x00\x00\x00@\x80\x12\x8f?\x00\x00\x00`\xf6X\x88?\x00\x00\x00\xc0`\x14\x95\xbf\x00\x00\x00`>L\x97\xbf\x00\x00\x00\x004\x8e\x94\xbf\x00\x00\x00\x00\x07Ga?\x00\x00\x00\xe0>d\x82?\x00\x00\x00@\x81T\x82?\x00\x00\x00@W\xe0\x84?\x00\x00\x00@\xd0\x06[?\x00\x00\x00\x80a\xe2p\xbf\x00\x00\x00 \x16\xa5d\xbf\x00\x00\x00@\xb5\xa3}\xbf\x00\x00\x00\xc0\x11Q\x88\xbf\x00\x00\x00\x00%v\x87\xbf\x00\x00\x00\x00(\x05c?\x00\x00\x00\xa09 \x80\xbf\x00\x00\x00@)P\x8d\xbf\x00\x00\x00@\x1d\x84Y\xbf\x00\x00\x00\x80\xd1zQ?\x00\x00\x00\xc0\x9c\x97\x83?\x00\x00\x00`T\xef\x8c\xbf\x00\x00\x00\x00K+g\xbf\x00\x00\x00\xc0\xc4\x02\x89\xbf\x00\x00\x00`\xc2f\x8d\xbf\x00\x00\x00 \xaa!u?\x00\x00\x00\x00z<\x93?\x00\x00\x00\xa0\xcf\xde\x9c\xbf\x00\x00\x00 \x85J\x86?\x00\x00\x00 |\xa2\x95\xbf\x00\x00\x00 ^\x91\x83\xbf\x00\x00\x00\x00\x7f?s\xbf\x00\x00\x00\x00\xe0\xfbe?\x00\x00\x00\x00\x89pp\xbf\x00\x00\x00\x80\x18\x1fu?\x00\x00\x00\xe0\xacZk?\x00\x00\x00`\xc3\x1b\x86?\x00\x00\x00\xe0\x8cKy\xbf\x00\x00\x00`\x07\xcde?\x00\x00\x00\xa0\xd9.\x8a\xbf\x00\x00\x00\xa01+:?\x00\x00\x00\x80\xf0\xa2\x92?\x00\x00\x00`\x17aw\xbf\x00\x00\x00\xa0\xc7_d\xbf\x00\x00\x00\x80\xf8{\x80\xbf\x00\x00\x00@\xd0lv?\x00\x00\x00\x80$8\x81\xbf\x00\x00\x00@\xda\xd4]\xbf\x00\x00\x00\xc0\xc7\xc6o\xbf\x00\x00\x00@\x82\x1eq\xbf\x00\x00\x00\xa0\x10XQ\xbf\x00\x00\x00\x80b\xbfe\xbf\x00\x00\x00\xa0\x98\xdd\x82\xbf\x00\x00\x00\xc0\xcb\xa4\x8e\xbf\x00\x00\x00\xc0\x9byT?\x00\x00\x00\xe0\x90;\x90\xbf\x00\x00\x00``\x01\x85\xbf\x00\x00\x00\x80*S\x94\xbf\x00\x00\x00@\x04\xfcg?\x00\x00\x00\x80\x8f\x1b\x80\xbf\x00\x00\x00\xc0\xd8/k\xbf\x00\x00\x00\xe0lCh\xbf\x00\x00\x00\xc0\xa9\xb2\x96\xbf\x00\x00\x00 \xc3\x8c\x9d?\x00\x00\x00\xe0F,=?\x00\x00\x00@\xea\x8dp\xbf\x00\x00\x00 `\xf5W\xbf\x00\x00\x00\x00r\xd3r\xbf\x00\x00\x00\x00#\xd2\x8e\xbf\x00\x00\x00\xc0\xabLb\xbf\x00\x00\x00 \xf4Zu?\x00\x00\x00`\x96\x94\x89\xbf\x00\x00\x00`\x05\xd7\x8e?\x00\x00\x00 \xfb\xe1\x86?\x00\x00\x00\x80\xe2\xf2}?\x00\x00\x00\xc0\x1b\xcbu\xbf\x00\x00\x00\x80\x85\xa1\x80\xbf\x00\x00\x00`\x1b\xfd\x85\xbf\x00\x00\x00\xc0\xa4\x9a\x84?\x00\x00\x00\xa0o\xaf\x92\xbf\x00\x00\x00`d\xa9Q?\x00\x00\x00\xa0\tn\x8c?\x00\x00\x00\x00u6\x89\xbf\x00\x00\x00\xe0\xf0L\x84?\x00\x00\x00\xe0\x1fn*\xbf\x00\x00\x00\xc0\xedL\x92\xbf\x00\x00\x00\x80\x01\xc4j\xbf\x00\x00\x00\x809\xc0r\xbf\x00\x00\x00\xc0\xd2G~\xbf\x00\x00\x00\xe0\xa6$}?\x00\x00\x00 \x808r\xbf\x00\x00\x00\xc0R\xd7Z?\x00\x00\x00\xa0\\\x19\x87\xbf\x00\x00\x00\x80\x1bkw?\x00\x00\x00\xe0C\x99\x94?\x00\x00\x00@\xdd\xc9\x96?\x00\x00\x00@UV\x81\xbf\x00\x00\x00\xa0\x9bv}\xbf\x00\x00\x00\x80(+\x82\xbf\x00\x00\x00\xe0\xc9;\x8a\xbf\x00\x00\x00 \xcfds?\x00\x00\x00`L\x17|\xbf\x00\x00\x00\x80=~@?\x00\x00\x00\xc0\xfb\xd4l?\x00\x00\x00\x80N\xd0v\xbf\x00\x00\x00\xa0\x05\xdf\x91\xbf\x00\x00\x00\xa0\xf8_`?\x00\x00\x00\xc0\xfa\xdbQ\xbf\x00\x00\x00 \xf9\xf7\x8d\xbf\x00\x00\x00\xa0\xbe:x\xbf\x00\x00\x00\xe0=KI?\x00\x00\x00\x00\xb4qr?\x00\x00\x00\xa0\xe0\xd3\x8d?\x00\x00\x00\x00\xf4\xc7\x89?\x00\x00\x00\xa0~\xbed?\x00\x00\x00\x00\x9e\x10P?\x00\x00\x00`\xc2\xc1W?\x00\x00\x00`\x93\xa9\x96?\x00\x00\x00 \x93F\x80?\x00\x00\x00\xc0ysn?\x00\x00\x00\xe0z\x94\x87?\x00\x00\x00`\xacs\x93\xbf\x00\x00\x00\x00\x17\xd7Q\xbf\x00\x00\x00\xc0@h\x82\xbf\x00\x00\x00`a\xab\x9b\xbf\x00\x00\x00`\xbdw\x8a?\x00\x00\x00\xa0c\xafq\xbf\x00\x00\x00 \x0eXr?\x00\x00\x00 \xf3%\x8c?\x00\x00\x00\xe0\x05\x84\x91\xbf\x00\x00\x00@\xb24j?\x00\x00\x00`\'\xdaq\xbf\x00\x00\x00 =\xa0|?\x00\x00\x00\xa0\xa4\xba\x82\xbf\x00\x00\x00\xa0M\x14~?\x00\x00\x00\x80\x7f#\x8a\xbf\x00\x00\x00@\x0e\xe9\x7f?\x00\x00\x00\x80\xb17\x89?\x00\x00\x00\x00h\xda\x9c?\x00\x00\x00\x808\x14\x96\xbf\x00\x00\x00\x80W\xabu?\x00\x00\x00\x80\x96\x82\x87?\x00\x00\x00\xe0\xfd\xc2\x86?\x00\x00\x00\x00J0m\xbf\x00\x00\x00\x80\xc3\xb8y?\x00\x00\x00\x00\xcbB\x85\xbf\x00\x00\x00@HrP?\x00\x00\x00`\xdf\x87\x94?\x00\x00\x00`\xd7\xefh\xbf\x00\x00\x00\xc0|\x1cY\xbf\x00\x00\x00\xa0\xca\x80o\xbf\x00\x00\x00\xc0\x9a\xddW?\x00\x00\x00\xc0\xb1\xc8n\xbf\x00\x00\x00\xa0\x8e\xfa~\xbf\x00\x00\x00 \x04\xc0\x7f?\x00\x00\x00`}\xe3.\xbf\x00\x00\x00\xe0j\xa8\x87?\x00\x00\x00 \xaa8{\xbf\x00\x00\x00\x00|Z~?\x00\x00\x00\xa0\x8bEz?\x00\x00\x00\x00IXq\xbf\x00\x00\x00`\xcf\x8a\x80?\x00\x00\x00\xa0\xe2\xc3\x85\xbf\x00\x00\x00\xa0S\xffP\xbf\x00\x00\x00\xa0\xc6~i?\x00\x00\x00\xa09\xad\x80?\x00\x00\x00\xe0>\x94y?\x00\x00\x00 \xa9\n}\xbf\x00\x00\x00\x80\xfa\x05v\xbf\x00\x00\x00@4\xbb\x89?\x00\x00\x00@\x0b\xa2x\xbf\x00\x00\x00\xc0\x85\x8b\x90?\x00\x00\x00\x80u\xe4\x93\xbf\x00\x00\x00`W\xc7\x8c?\x00\x00\x00\xe0\x19\xca\x90?\x00\x00\x00@\\\xa6\x97?\x00\x00\x00`\xab\x98w\xbf\x00\x00\x00\x807f\x85\xbf\x00\x00\x00\xc0,\xd1r?\x00\x00\x00@u\x1b\x84\xbf\x00\x00\x00 \xc5\x1c\x90?\x00\x00\x00\xa0<\x15{\xbf\x00\x00\x00\xa0\xf6YS?\x00\x00\x00\xe0\xd2\xe6\x87\xbf\x00\x00\x00@t\xab\x87?\x00\x00\x00\xe0t\x87y\xbf\x00\x00\x00 \xa8\x1f}?\x00\x00\x00@h\xf4\x7f\xbf\x00\x00\x00\xe0\xe8\x97\x82?\x00\x00\x00 ^\xe0d\xbf\x00\x00\x00\xa0\xd3\x0f\x8c?\x00\x00\x00\x80\x08\xba|\xbf\x00\x00\x00\x80\xf2\xdb\x85?\x00\x00\x00\xc0iI\x94\xbf\x00\x00\x00\x00-\xa8b?\x00\x00\x00\xa0`\x11l?\x00\x00\x00\x00\x9ac\x8b\xbf\x00\x00\x00 J\xa8\x84\xbf\x00\x00\x00`\xf7\x00\x87?\x00\x00\x00\x80o\xc8[?\x00\x00\x00\xa0\x04\x81s\xbf\x00\x00\x00\x80M=|?\x00\x00\x00\xe0\x94\x8f\x8e\xbf\x00\x00\x00 \xde\x9d`?\x00\x00\x00\xe0L\xady\xbf\x00\x00\x00\xc0\xb6\xd5\x84\xbf\x00\x00\x00\x00x\xa6~\xbf\x00\x00\x00@\xe1\xf6C?\x00\x00\x00 \xe4\x90z?\x00\x00\x00\xe0\xd2wj\xbf\x00\x00\x00\xe0\xf6Qw\xbf\x00\x00\x00\xa08\xc4\x90\xbf\x00\x00\x00@{\xbek?\x00\x00\x00 \xf9\xbc\x80?\x00\x00\x00\xc0\xe9w\x9c?\x00\x00\x00\x80CL\x83?\x00\x00\x00\xc0\xd7\xdfl?\x00\x00\x00 g0\x95\xbf\x00\x00\x00\xe0c\xa0\x81\xbf\x00\x00\x00\x80Zd\x85?\x00\x00\x00`\x91%v?\x00\x00\x00\x809\xc4\x84?\x00\x00\x00 \xe0\xdb{\xbf\x00\x00\x00\xe0\x1f\xe5}\xbf\x00\x00\x00 g\x10s?\x00\x00\x00\x00A\x9ey\xbf\x00\x00\x00\xe0y$\x8b\xbf\x00\x00\x00\xe0\x97\xca\\?\x00\x00\x00\x80\x87\x9as?\x00\x00\x00 \x8d\xae\x90\xbf\x00\x00\x00 ;)q?\x00\x00\x00 J0N\xbf\x00\x00\x00\x80.\x8d`?\x00\x00\x00\x80\xc3\x9b}?\x00\x00\x00\xc0\xb7\x98\x82?\x00\x00\x00\x80\xafX}?\x00\x00\x00\xc0\xfa\xa5\x90?\x00\x00\x00@\x0b\x9c\x86\xbf\x00\x00\x00 \xc6\xab\x87\xbf\x00\x00\x00@Oh\x92?\x00\x00\x00 ,\x1aq\xbf\x00\x00\x00\x00\xf9H\\\xbf\x00\x00\x00\xa0\xbb\xd4~?\x00\x00\x00@>\xc6\x91\xbf\x00\x00\x00`b\x1a\x83?\x00\x00\x00\xa0\xf6j~\xbf\x00\x00\x00\xe0[\x1c{?\x00\x00\x00 u\rD\xbf\x00\x00\x00\xc0n\x0c\x96?\x00\x00\x00\xa0\x1a*\x90?\x00\x00\x00\xc0"\x8a\x80?\x00\x00\x00@\x1d_v\xbf\x00\x00\x00 \x1fW\x88?\x00\x00\x00\xc0\x99\x86\x90\xbf\x00\x00\x00\xe0A\x8f`?\x00\x00\x00@j\x80\x88?\x00\x00\x00\xc0\x03o\x8b\xbf\x00\x00\x00\x00\x8dB]\xbf\x00\x00\x00`\x0c\x0bs?\x00\x00\x00\x00w\x90b\xbf\x00\x00\x00@7\x1e{?\x00\x00\x00\xe0\xd2\x9e\x8d\xbf\x00\x00\x00\xa0\xb4\x1dz?\x00\x00\x00`+\\{?\x00\x00\x00\xa0_)\x82\xbf\x00\x00\x00\xe0\xa1\\u\xbf\x00\x00\x00`\xf8\x9a\x81?\x00\x00\x00\xc0\xa3\xccX?\x00\x00\x00\xa0\x1ek\\\xbf\x00\x00\x00\x80\xc5K{?\x00\x00\x00\xe0\x91\xbe\x80?\x00\x00\x00\xa0\xb4\xa5q?\x00\x00\x00\x00\xa0\xf6\x8a?\x00\x00\x00\xc0z\xf6v\xbf\x00\x00\x00\xc0\x82\xa7\x84\xbf\x00\x00\x00\xa0\x16\x86\x8d\xbf\x00\x00\x00\xe0\xcaHR?\x00\x00\x00@\xcf\xd3g\xbf\x00\x00\x00\x80\x82\xd9\x80\xbf\x00\x00\x00`L\xeay\xbf\x00\x00\x00\xa0F\xffl\xbf\x00\x00\x00`\xb4\x9a\x81?\x00\x00\x00 K\xc5d?\x00\x00\x00\x80\xfd\xae`\xbf\x00\x00\x00\x00\xdd\x8b\x80\xbf\x00\x00\x00\xc07\xb3~?\x00\x00\x00@p?\x8e\xbf\x00\x00\x00@\x00\xf6h\xbf\x00\x00\x00\xc0\xf2m\x8c\xbf\x00\x00\x00\x00S\x11\x83\xbf\x00\x00\x00 \xd6\x05y\xbf\x00\x00\x00 \x84\xd4o\xbf\x00\x00\x00`8\xb8>?\x00\x00\x00\xc0\xd4\x91x?\x00\x00\x00@\xa6\x00\x9d\xbf\x00\x00\x00@\x94\xc5q\xbf\x00\x00\x00\x80~\xda\x8f?\x00\x00\x00\x80\xb0$\x90?\x00\x00\x00`#\xa1\xfd>\x00\x00\x00\xe0(\x97\x83\xbf\x00\x00\x00\xe0\x06?\x86\xbf\x00\x00\x00\xa0\x84\xc0|\xbf\x00\x00\x00 \xd2\x1e\\\xbf\x00\x00\x00`#\x0ev\xbf\x00\x00\x00\xc0~|\x94\xbf\x00\x00\x00\xc0b\x03s?\x00\x00\x00 \xf5\xac\x05\xbf\x00\x00\x00\xa0\x1a\xbb\x96\xbf\x00\x00\x00 \x8aZ{\xbf\x00\x00\x00\xe0\xd1\xd6\x96?\x00\x00\x00@\xb6W\x87\xbf\x00\x00\x00\x005kZ\xbf\x00\x00\x00\xa0\x90G{\xbf\x00\x00\x00\x00@\xdag?\x00\x00\x00\x00\xb5\xf5D?\x00\x00\x00@^n@?\x00\x00\x00\xc0\x12&\x96\xbf\x00\x00\x00`wC`\xbf\x00\x00\x00`\xd7p\x89\xbf\x00\x00\x00\xe0^\xfb}?\x00\x00\x00 \x9f\xb3x?\x00\x00\x00\xc0\xbd\xcfw\xbf\x00\x00\x00\xe0\x90\x92\x80?\x00\x00\x00@\xf4\x81\x95?\x00\x00\x00\xe0\x93\xf0e?\x00\x00\x00\x80H\xec|?\x00\x00\x00\xc0s\x9e\x8e?\x00\x00\x00 d\xf0\x82\xbf\x00\x00\x00`\x13\x89\x87\xbf\x00\x00\x00 \xcfS\x83?\x00\x00\x00\xc0\x07\xfe\x96\xbf\x00\x00\x00`\xa8\xcdt?\x00\x00\x00\xa0\xa2\x19n\xbf\x00\x00\x00`UK\x84?\x00\x00\x00\x00\xbf\x90t\xbf\x00\x00\x00\xe0\x91M\x83?\x00\x00\x00 Cs\x87\xbf\x00\x00\x00\xe0\xcf\x1fW\xbf\x00\x00\x00\xc0\\\xe6\x8a?\x00\x00\x00\xc0\\g8?\x00\x00\x00\xc0/\xf6\x94?\x00\x00\x00@@5\x8c?\x00\x00\x00\xa0I\xbff\xbf\x00\x00\x00 \x9cFk?\x00\x00\x00\xe0\xe0Kw?\x00\x00\x00\xc0O\xb9m\xbf\x00\x00\x00\x00\xe7\xc4\x8d\xbf\x00\x00\x00\xa0\xc0\x86\x82\xbf\x00\x00\x00\xa0\x07\x9f\x8c\xbf\x00\x00\x00\x80\x80\x89W\xbf\x00\x00\x00\xe0\n\x87\x89?\x00\x00\x00\xe0H7\x93?\x00\x00\x00\xa0WHg\xbf\x00\x00\x00\xc0\x88{\x94?\x00\x00\x00@\x89Z~?\x00\x00\x00\xe0-\xcft\xbf\x00\x00\x00\x00\x97\xe5\x8f\xbf\x00\x00\x00@\'(\x89?\x00\x00\x00\x00\x0c\xc7T?\x00\x00\x00`\xaf^\x83\xbf\x00\x00\x00\x80\xd7xl?\x00\x00\x00`<M\x89?\x00\x00\x00\xe0\xb2\xbdd?\x00\x00\x00\xc0\xa2\xfa\x86?\x00\x00\x00\x80\xc4\x9b"\xbf\x00\x00\x00\x00a1v\xbf\x00\x00\x00\x00U\xfe\x92\xbf\x00\x00\x00\x80\x83\x02-?\x00\x00\x00\x80T\x9fT\xbf\x00\x00\x00@.\x18y?\x00\x00\x00`\xbemc\xbf\x00\x00\x00@\'\x87\x87\xbf\x00\x00\x00\x80UV\x87?\x00\x00\x00\xe0\xaa\x91\x86\xbf\x00\x00\x00\x00\xfd\x10z\xbf\x00\x00\x00\xa0B\xa9u\xbf\x00\x00\x00\x00(\xb0x\xbf\x00\x00\x00\xc0\xbb-}\xbf\x00\x00\x00\xe0e\xeav\xbf\x00\x00\x00\x00\xc0\xc9{\xbf\x00\x00\x00\x80;\x91f\xbf\x00\x00\x00\xc0\x1cr\x89\xbf\x00\x00\x00@\x9d\x8f\x7f\xbf\x00\x00\x00@\xf43k\xbf\x00\x00\x00\xa0\xa6$_\xbf\x00\x00\x00\x00\xb9%\x98\xbf\x00\x00\x00\xc0FWv?\x00\x00\x00\x80\x17\xf2d?\x00\x00\x00\x00\x05\xa8s?\x00\x00\x00`\x13\xc7\x1c\xbf\x00\x00\x00\xa0^\x1b|\xbf\x00\x00\x00\xe0\xa2\xd5w?\x00\x00\x00@r\x93c?\x00\x00\x00\xa0\xaa\xe5\xf0>\x00\x00\x00@|\xc0{?\x00\x00\x00\xc0\xe4cQ\xbf\x00\x00\x00`u\xf0\x86?\x00\x00\x00\x80\xac\x92q\xbf\x00\x00\x00 g\xefl\xbf\x00\x00\x00 J\xd4r\xbf\x00\x00\x00\xa0\x0f\xd2\x8a?\x00\x00\x00\xc0,\tp?\x00\x00\x00 \xea\x8ci\xbf\x00\x00\x00@\xa3\xc2\x84?\x00\x00\x00\x00H\x98w\xbf\x00\x00\x00 \xc6\x91g?\x00\x00\x00@~\xaeN?\x00\x00\x00\xa0\xbe\xa7\x88?\x00\x00\x00\x00\x92\x8f|\xbf\x00\x00\x00\x80\x96#y\xbf\x00\x00\x00 b\xd4\x95?\x00\x00\x00\x80\xa4\xa2l\xbf\x00\x00\x00`\xd4\xf6\x7f\xbf\x00\x00\x00\xc0 \x19g\xbf\x00\x00\x00 X\xf0a\xbf\x00\x00\x00\xc0\xc4$\x81\xbf\x00\x00\x00\x80]\x90\x82?\x00\x00\x00\x80@[q\xbf\x00\x00\x00@9,s\xbf\x00\x00\x00\x80sM\x95?\x00\x00\x00\x80\x96GX?\x00\x00\x00\xc0}\rd?\x00\x00\x00@\x9f\x0f\x80\xbf\x00\x00\x00\x80\xf7}i\xbf\x00\x00\x00`2#R\xbf\x00\x00\x00\xc0\xb9(d\xbf\x00\x00\x00\xc0\x13^\x8c?\x00\x00\x00\xe0\xac\xa2\x90\xbf\x00\x00\x00@i\xbfh\xbf\x00\x00\x00`\xf4Y\x8f\xbf\x00\x00\x00\xc0eK0\xbf\x00\x00\x00\xa0\x03qh?\x00\x00\x00\xa0\x87\x8f\x83?\x00\x00\x00\x000\xb6q?\x00\x00\x00@\xd2\x88w?\x00\x00\x00@\x85\xd3c?\x00\x00\x00\x00\xd7!d\xbf\x00\x00\x00\xc0\x80\xc7\xa2?\x00\x00\x00@\x9e\xe9s\xbf\x00\x00\x00 [\xc6\x93\xbf\x00\x00\x00@\x84\xfa\x87?\x00\x00\x00\xc0\x19d>?\x00\x00\x00\x00Fw}?\x00\x00\x00`r\x03y?\x00\x00\x00 .^\x7f?\x00\x00\x00@gf\x82\xbf\x00\x00\x00\x80+8{?\x00\x00\x00\x80LKq?\x00\x00\x00\xc0\xe7\xe3\x81?\x00\x00\x00`}\xd7z?\x00\x00\x00\xa0Td\x88\xbf\x00\x00\x00 \xa8Jh\xbf\x00\x00\x00 O\xc2j\xbf\x00\x00\x00\xe0C\xcd\x81?\x00\x00\x00\xa0\x8e\xe6t\xbf\x00\x00\x00\xa0_\xa7\x80\xbf\x00\x00\x00\x80\xa1\x83\x88\xbf\x00\x00\x00 \xed\x9ds?\x00\x00\x00\xc0\'\x11\x88\xbf\x00\x00\x00\xa0\x05\xcdQ\xbf\x00\x00\x00\x00M\x84\x8c\xbf\x00\x00\x00\xe0J\xbf\x98?\x00\x00\x00\x00/\xebw?\x00\x00\x00\xe0\x88\x18Y\xbf\x00\x00\x00\xc08X\x83?\x00\x00\x00\x00k\xc5\x90?\x00\x00\x00\xc0\x9a\xeeq?\x00\x00\x00\x80\x8c\x05\x91\xbf\x00\x00\x00`\xb1\xce\x94?\x00\x00\x00\x00\xc7\xb0~?\x00\x00\x00\xc0\x86\xf7\x84\xbf\x00\x00\x00`}\xb1e\xbf\x00\x00\x00`w"l\xbf\x00\x00\x00\xe0\x18\x80g\xbf\x00\x00\x00\xe0\xd7/\x84\xbf\x00\x00\x00\xc0]9`\xbf\x00\x00\x00 \xcb\x03x?\x00\x00\x00 b\x04K?\x00\x00\x00\x00\xa4&\x9e\xbf\x00\x00\x00\xc0T4\x83?\x00\x00\x00\xc0\x1a\x94\x80?\x00\x00\x00\x80(\xfeU\xbf\x00\x00\x00@\xc2\x91q\xbf\x00\x00\x00 \x02\xc7n\xbf\x00\x00\x00\xe0\x94\xa5\xa1?\x00\x00\x00 c\x18D?\x00\x00\x00 \xc0B\x7f?\x00\x00\x00 p\x9a3?\x00\x00\x00\xa0\x07\xd6^\xbf\x00\x00\x00\xe0J\xadN?\x00\x00\x00\xe0\x1d\xd2\xf8>\x00\x00\x00 \xc7\x9c\x86?\x00\x00\x00\xc0V\xe5m?\x00\x00\x00\x80\xdc\xe5t?\x00\x00\x00@\x9f\xf7\\?\x00\x00\x00\xa0a~\x8c?\x00\x00\x00\x00\x1b\x95\x82\xbf\x00\x00\x00`*\xaay\xbf\x00\x00\x00@\x9f/\x89\xbf\x00\x00\x00\x80\x07\x0ff\xbf\x00\x00\x00\xa0N\x9e\x84\xbf\x00\x00\x00\x80\xe0>\x94?\x00\x00\x00 \x0e\x18\x86\xbf\x00\x00\x00`ik\x91?\x00\x00\x00\xa0W\x8c\x93?\x00\x00\x00\xc0\xb9\xdb\x90\xbf\x00\x00\x00 aRz\xbf\x00\x00\x00`\xa9Z\x89?\x00\x00\x00 \xce?b\xbf\x00\x00\x00\xe0M\xed\x87\xbf\x00\x00\x00`\x8a\xc0\x83\xbf\x00\x00\x00@\xacG\x94\xbf\x00\x00\x00\xc0\x97\x13}?\x00\x00\x00@-pk?\x00\x00\x00@\x9d\x1fp?\x00\x00\x00\xc0\xf5\xbf\x88\xbf\x00\x00\x00\xa0\xcc\\s\xbf\x00\x00\x00\x80\x98/s?\x00\x00\x00\xc0\xf5\'t\xbf\x00\x00\x00\xa04\xec\x8d\xbf\x00\x00\x00\xc0\xe1T\x87?\x00\x00\x00\xc0\xa4?k?\x00\x00\x00\x00\xc9+\x82?\x00\x00\x00@\xc0\'\x92\xbf\x00\x00\x00\x00\x16\x82\x8c?\x00\x00\x00@\x03U\x84?\x00\x00\x00\x00\x82\xa5|\xbf\x00\x00\x00`\xbd[\x80?\x00\x00\x00`a[b?\x00\x00\x00`\xd4\xf8]?\x00\x00\x00\xc0Y\xa6r?\x00\x00\x00 9\xd2x?\x00\x00\x00 \xed4\x8c\xbf\x00\x00\x00\x00\x9d\x9bu?\x00\x00\x00\xe0!\xfa\x96?\x00\x00\x00`;2\x84\xbf\x00\x00\x00\x80h\xea\x83?\x00\x00\x00 \xe3\xb3|\xbf\x00\x00\x00 \x18\xa2\x7f?\x00\x00\x00@\x02\xc4\x89\xbf\x00\x00\x00\xc09U\x8b?\x00\x00\x00\x80.tt\xbf\x00\x00\x00 \x98^P?\x00\x00\x00\xc0\xc2\xfc\x8c\xbf\x00\x00\x00\xc0B,\x86\xbf\x00\x00\x00\xc0\x8c\x05\x8a?\x00\x00\x00@<\xb9\x7f?\x00\x00\x00 \x01\x9c\x90?\x00\x00\x00\xc0\xd1\xcc\x91?\x00\x00\x00@\xe7[\x94\xbf\x00\x00\x00 \x01\xbco?\x00\x00\x00@\xaa2\x8d?\x00\x00\x00\xe00\xd3\x84?\x00\x00\x00\x80\x10\xcfR\xbf\x00\x00\x00`\xe0\x0bq\xbf\x00\x00\x00\x80\xf59\x8d\xbf\x00\x00\x00\xa0\xf3\xe2\x8a\xbf\x00\x00\x00\x80\xc9O\x8e\xbf\x00\x00\x00 }0E\xbf\x00\x00\x00\xa0\xe9`G\xbf\x00\x00\x00\xc0:\x7fu\xbf\x00\x00\x00\x80\xc1\xb1m\xbf\x00\x00\x00\xc0z}\x80\xbf\x00\x00\x00\x00\x94&i?\x00\x00\x00\xe0\xcc\x1e\x84?\x00\x00\x00 (^\x91?\x00\x00\x00\xe0\xf2\x1cz?\x00\x00\x00`\x91\x91~?\x00\x00\x00\x80^b\x82?\x00\x00\x00\xe0\xdc\xc0|\xbf\x00\x00\x00\xa0\xca\xd7\x92\xbf\x00\x00\x00\x80\xd5J(?\x00\x00\x00`\xed1}\xbf\x00\x00\x00\xa0\t@t?\x00\x00\x00@U\xff\x85\xbf\x00\x00\x00@\xbb\xb3}?\x00\x00\x00 \x06D\x8c\xbf\x00\x00\x00\x00&NY\xbf\x00\x00\x00`-\x9ee\xbf\x00\x00\x00\xe0\xb4[\x86?\x00\x00\x00`\xeb\x84m\xbf\x00\x00\x00\x80\x08\tP\xbf\x00\x00\x00@\x12\n\x85?\x00\x00\x00@b\x92q\xbf\x00\x00\x00\x80h;w\xbf\x00\x00\x00\xe0=\x08P?\x00\x00\x00\x80\x15\xd3\x8a\xbf\x00\x00\x00\x80:\xd2q\xbf\x00\x00\x00\x00t\xd7C\xbf\x00\x00\x00`\x7fF\x81\xbf\x00\x00\x00`\xca\x9b\x85\xbf\x00\x00\x00\x80X2\x88?\x00\x00\x00\xe0\xe74u?\x00\x00\x00\xa0\xf9Uy?\x00\x00\x00\xe0\xe0fs\xbf\x00\x00\x00`\x9eh\x92?\x00\x00\x00\xc0\xd5\xbfx?\x00\x00\x00\xc0M\xe4\x90\xbf\x00\x00\x00\x80\x90\x8d\x8e?\x00\x00\x00 \xc9\xfez?\x00\x00\x00\x80bG\x85?\x00\x00\x00\xa08\x12\x84?\x00\x00\x00\x00N\xae1\xbf\x00\x00\x00\xe0\xdf\xa7A\xbf\x00\x00\x00\xe0G\xe2\x8b?\x00\x00\x00@\x8c\xd3o?\x00\x00\x00\xc0\xf8\xa5Y\xbf\x00\x00\x00 $Ei\xbf\x00\x00\x00\xe0XgW?\x00\x00\x00`\x07@u?\x00\x00\x00@R\xca|?\x00\x00\x00\xc0n%q?\x00\x00\x00\xe0\xd0[\x9c?\x00\x00\x00\xe0\xa2\x0ea\xbf\x00\x00\x00\xe0\xc5`\x8b?\x00\x00\x00\xa0\xaa05\xbf\x00\x00\x00\x80\xe3\xfci\xbf\x00\x00\x00\x00\x02\xac\x82\xbf\x00\x00\x00\x80\x96]\x89\xbf\x00\x00\x00`\xfe\x9c\x9e?\x00\x00\x00 \x90V\x94\xbf\x00\x00\x00 \xd8qW?\x00\x00\x00\xa0\xc3pV?\x00\x00\x00\x80,\x06{?\x00\x00\x00@\xed\xfa\x8e?\x00\x00\x00 \x10\x16{\xbf\x00\x00\x00@\xa1\x0b\x8d?\x00\x00\x00\x80\x8fX\x85?\x00\x00\x00\xc0\xe0\xfcn?\x00\x00\x00\x00\x06\xebk?\x00\x00\x00\xe0\x89fI\xbf\x00\x00\x00\xa0\xd6F\x89\xbf\x00\x00\x00\xa0\xa9\tF?\x00\x00\x00\x00\x18\x1ff\xbf\x00\x00\x00\xa0\xd1&j?\x00\x00\x00@~vx\xbf\x00\x00\x00\xa0\xa1\x81\\?\x00\x00\x00\x80G\x11^\xbf\x00\x00\x00\x00\\\xbb~\xbf\x00\x00\x00\x80\xb1\xda\x8f?\x00\x00\x00`\xf3\x07{?\x00\x00\x00`\xc4\x12\x84?\x00\x00\x00@Q\'\x88?\x00\x00\x00@$\xd1B?\x00\x00\x00\x00 \xc1\x88\xbf\x00\x00\x00\xe0\xad\x90\x81?\x00\x00\x00 \x05r\x90\xbf\x00\x00\x00@\xec\xf2\x80\xbf\x00\x00\x00\xe0%\x1e\x95\xbf\x00\x00\x00@\x92\xf1q?\x00\x00\x00\xa00\xb5m\xbf\x00\x00\x00@Oz}\xbf\x00\x00\x00\xc0\xa5\x03\x93?\x00\x00\x00\x80\x02\x8dh?\x00\x00\x00\xa0\xde\xb8{?\x00\x00\x00\x00X!\x8f?\x00\x00\x00@\xe2\x8cr?\x00\x00\x00\x80g\x1cR?\x00\x00\x00\x80\xd6\x8f\x83\xbf\x00\x00\x00\xa0\xaa:v?\x00\x00\x00\xc0(Z\x8f?\x00\x00\x00\xe0 t\x80\xbf\x00\x00\x00\x80\x1f=O?\x00\x00\x00\xe0\xb8y\x8a?\x00\x00\x00\x80\\\xca\x91?\x00\x00\x00@RY`\xbf\x00\x00\x00 9\xf9k?\x00\x00\x00\xa0M\xd5\x8d?\x00\x00\x00\x00\xcb@\x8a\xbf\x00\x00\x00\xe0m\xb1\x82\xbf\x00\x00\x00\x80X\xb5z\xbf\x00\x00\x00\xc0,\x8ft?\x00\x00\x00 u4u?\x00\x00\x00\xe0\x89\x19j?\x00\x00\x00\xc0V\x98H?\x00\x00\x00\x80x"\x8f?\x00\x00\x00 q\x8dr\xbf\x00\x00\x00`\x92Af?\x00\x00\x00\xc0`~\x91\xbf\x00\x00\x00\x00\x19\xa0\x86\xbf\x00\x00\x00 8\xd8\x8f?\x00\x00\x00@\xc9\xc6\x92?\x00\x00\x00\xc0\n\xb7\x87?\x00\x00\x00\xe0\xb1\xf9c?\x00\x00\x00\xa0J\xc1\x8c?\x00\x00\x00\x80j\xcf\x93?\x00\x00\x00\xa0\x12\xc6A\xbf\x00\x00\x00 4q\x97?\x00\x00\x00\x80V\x8a\x90\xbf\x00\x00\x00@@~{?\x00\x00\x00 \x04\xc1u?\x00\x00\x00`\x997~?\x00\x00\x00@\x8f\x18z?\x00\x00\x00\xa0\x94\x08r?\x00\x00\x00\xc0\'\xb7f?\x00\x00\x00\xe0(_\x7f?\x00\x00\x00\xc0\xdb\x8eg\xbf\x00\x00\x00\x80I\x8eq\xbf\x00\x00\x00\xa0\xd1\xdfF?\x00\x00\x00`\xde\xf6_\xbf\x00\x00\x00\xe0\xaf\x94y\xbf\x00\x00\x00\xe0\xd1\xeb\x8d?\x00\x00\x00\xc0\xb9H\x80\xbf\x00\x00\x00`\xddL\x8d?\x00\x00\x00\x00\x8d\xd2\x81?\x00\x00\x00\x00M\x9c7?\x00\x00\x00\x80o\x7f\x80?\x00\x00\x00\xa0\xc6H\x8b\xbf\x00\x00\x00\x80\xf9y\x80\xbf\x00\x00\x00\xe0\x15\xb7O\xbf\x00\x00\x00\xa0/\xaf\x92\xbf\x00\x00\x00\x00l\xc7i\xbf\x00\x00\x00 \xfe\x08\x93\xbf\x00\x00\x00`\xb8\xfb\x87?\x00\x00\x00\xa0\n\xd3\x90?\x00\x00\x00\x00\x84\x80`?\x00\x00\x00\xa0\x993\x87\xbf\x00\x00\x00 \xad\xb5\x82?\x00\x00\x00 \x94\xf5a\xbf\x00\x00\x00\x80\x88\x94}?\x00\x00\x00\x80J\xd9s?\x00\x00\x00\xa0p\xab\x84?\x00\x00\x00`\xedH\x94?\x00\x00\x00\x80\xc15b\xbf\x00\x00\x00@J\x98\x80\xbf\x00\x00\x00\x00\xa3\x0c\x82?\x00\x00\x00@\xdf\x96\x91?\x00\x00\x00@\x7f\x9b\x84?\x00\x00\x00\x00V\xfeq?\x00\x00\x00\x00\xd8\xe0\x93?\x00\x00\x00 \x10ky\xbf\x00\x00\x00\xa0 \xa3\x7f?\x00\x00\x00\xe0@!\x84?\x00\x00\x00\xa0\xd8\x04\x89\xbf\x00\x00\x00\xa0\xe5\xfev?\x00\x00\x00\xc0d&3?\x00\x00\x00 \xfbX\x88?\x00\x00\x00\xe0\x16\xc7{\xbf\x00\x00\x00\xc0Z\xf5\x81?\x00\x00\x00\xa0\x8a[k\xbf\x00\x00\x00\xc0\xc6\xc4x\xbf\x00\x00\x00\xa0E\x10\x83\xbf\x00\x00\x00`\x93m\x83\xbf\x00\x00\x00\xc0pE\x90?\x00\x00\x00\xe0\x895x\xbf\x00\x00\x00@\xa8\xd1\x81\xbf\x00\x00\x00\x80\x9b\xefu?\x00\x00\x00\xa0\xd1}{\xbf\x00\x00\x00\xa0jQm?\x00\x00\x00\xe0\xe8I\x83?\x00\x00\x00@\xe0\xe5\x80?\x00\x00\x00 \x9a}\x85?\x00\x00\x00\x801-d?\x00\x00\x00\xe0\xba\\a\xbf\x00\x00\x00\x00R8\x04?\x00\x00\x00\x80\x0e\xa5b?\x00\x00\x00\xc0\x8bqP\xbf\x00\x00\x00\xe0O6\x98?\x00\x00\x00\x00x\xb2[\xbf\x00\x00\x00\xc0\x8c\xcfh\xbf\x00\x00\x00`\x8f\x19a?\x00\x00\x00\x00ih\x85?\x00\x00\x00\xa0*\xd9\x85\xbf\x00\x00\x00\x80\x94/U\xbf\x00\x00\x00 \'\xecs\xbf\x00\x00\x00\x80E\xbb[?\x00\x00\x00\xc0%\xf2}?\x00\x00\x00\xe0@T\x90\xbf\x00\x00\x00\xe0v\xd4d?\x00\x00\x00 \x9e{\x87\xbf\x00\x00\x00\xe0\xa4\xfak?\x00\x00\x00 \x15o\x84\xbf\x00\x00\x00`\xe1Of\xbf\x00\x00\x00\xe0M\xd5|\xbf\x00\x00\x00\x00\x02\xa8`?\x00\x00\x00\x80\x07/\x8a?\x00\x00\x00@v\xf0\x80?\x00\x00\x00\xe0\x94V\x97?\x00\x00\x00\xe0\xb2\x80|\xbf\x00\x00\x00 |\xfe\x83?\x00\x00\x00\x80\xd1\xa5g?\x00\x00\x00\xe0\x13\xc7{?\x00\x00\x00\xe0\xa0\x8fm\xbf\x00\x00\x00`\x06\xdbz?\x00\x00\x00\x00\x8c\xe7y\xbf\x00\x00\x00\xe0\xec{\x8a?\x00\x00\x00@\xe6Qy\xbf\x00\x00\x00\xe0,\xadc\xbf\x00\x00\x00 1\x96\x80?\x00\x00\x00@\x0c#u\xbf\x00\x00\x00`\xdeu\x8c?\x00\x00\x00\xa0\xf9\x00~\xbf\x00\x00\x00 m\xe4\x8e?\x00\x00\x00@\x01\xcdw\xbf\x00\x00\x00`w\xfc\x80\xbf\x00\x00\x00\x00U>\x97?\x00\x00\x00\x00\x8f!\x7f\xbf\x00\x00\x00`\xaf\xee\x8d\xbf\x00\x00\x00\x00\x8d\xb7\x81\xbf\x00\x00\x00\xa0k\xd4\x88\xbf\x00\x00\x00\xc0\x9d\x8b{\xbf\x00\x00\x00`@\x98o?\x00\x00\x00\x80\xce\x0bu?\x00\x00\x00\xa0/\x15q\xbf\x00\x00\x00 NP\x80?\x00\x00\x00\xe0\xc18:?\x00\x00\x00\xa0\xe5\xdf]?\x00\x00\x00\xc0\x7f\x01\x83?\x00\x00\x00\xe0^\x9e\x83\xbf\x00\x00\x00@?E\x93\xbf\x00\x00\x00 \xf2\x98E\xbf\x00\x00\x00 \x8d0u\xbf\x00\x00\x00@\xad\x9d0\xbf\x00\x00\x00\xa0\xad\x1bq?\x00\x00\x00`>\x96\x88?\x00\x00\x00 ~.w\xbf\x00\x00\x00`\xca*T?\x00\x00\x00\xc0\xa1l\x9a\xbf\x00\x00\x00\x00\xeb\x13x?\x00\x00\x00\x00\xa5\xb3\x92?\x00\x00\x00\xc0\x07\xfdz\xbf\x00\x00\x00\x80Vl\x87\xbf\x00\x00\x00\x80z\xfd\x85?\x00\x00\x00\x00\xb4*\x8c?\x00\x00\x00@\xf7\xa0o?\x00\x00\x00@\xc5\xa4{?\x00\x00\x00 \xbb\xe5\x80?\x00\x00\x00\xc0~pg?\x00\x00\x00 \x95-s\xbf\x00\x00\x00\xa0EVp\xbf\x00\x00\x00\xc09O\x81?\x00\x00\x00\x80\xd0ZG\xbf\x00\x00\x00\x00%\xabn?\x00\x00\x00\xc08\xa2\x88?\x00\x00\x00\xe0\xb8\r\x8b?\x00\x00\x00\xc0\xc4\xe1V\xbf\x00\x00\x00\xa0\xca\xf1}?\x00\x00\x00\x00\x07\x89\x81?\x00\x00\x00\x80\xbe\xc2`\xbf\x00\x00\x00 \x1a,r?\x00\x00\x00\x00eI\x95?\x00\x00\x00 g\xec|?\x00\x00\x00\xa0\n}p?\x00\x00\x00\xa0\xc5%T?\x00\x00\x00@\x95\xc0\x80\xbf\x00\x00\x00 :\xd7B\xbf\x00\x00\x00\xa0\x96\t\x95?\x00\x00\x00 \x9ev\x82\xbf\x00\x00\x00\xe0\xe8)r?\x00\x00\x00\x00\\Ro\xbf\x00\x00\x00\xa0\\\xe6p\xbf\x00\x00\x00 \x87\xcft\xbf\x00\x00\x00\x80\xe7 \x89?\x00\x00\x00`A\xa8o?\x00\x00\x00@\xae)\x8c?\x00\x00\x00\xa0\xcf\x86p?\x00\x00\x00 v\xb4U?\x00\x00\x00 -"z\xbf\x00\x00\x00\x80\x0c\x1e]\xbf\x00\x00\x00\xe0b\x17S\xbf\x00\x00\x00 \x10\tZ\xbf\x00\x00\x00@%O\x90?\x00\x00\x00`6\x1f\x93\xbf\x00\x00\x00 \x89\\U\xbf\x00\x00\x00\x00k\x01G?\x00\x00\x00\x00Uv\x81\xbf\x00\x00\x00`\xe3\xfc\x81\xbf\x00\x00\x00\xc0\xc1\xc6\x83?\x00\x00\x00`\xed\xd8b?\x00\x00\x00`\x8f=P?\x00\x00\x00\xe0\xcb"\x85\xbf\x00\x00\x00\xc0\xc2\xb2w\xbf\x00\x00\x00 ;\xbek?\x00\x00\x00 \xe95}?\x00\x00\x00@\xe6\xc1y\xbf\x00\x00\x00\xc0Zku\xbf\x00\x00\x00@2\xc7y?\x00\x00\x00@\xc0\xc8\x90\xbf\x00\x00\x00\x80\xd2\xf2\x81\xbf\x00\x00\x00`\xea\xbbj\xbf\x00\x00\x00\x00\xb1\xd82?\x00\x00\x00`\xd3r\x90?\x00\x00\x00`\xc9\xab\x93\xbf\x00\x00\x00\x80\xcb\xf4\x87\xbf\x00\x00\x00`t\x1eD\xbf\x00\x00\x00\x80_\x8e@?\x00\x00\x00\x80\xd9\xa4q?\x00\x00\x00@\xce,g\xbf\x00\x00\x00\x80\xbf\x19\x85?\x00\x00\x00\xe0-\xd6}?\x00\x00\x00 \x05F\x8f?\x00\x00\x00\x00Ou\x95?\x00\x00\x00`\xfb\xed\x87?\x00\x00\x00 \xb1\xaa\x1a?\x00\x00\x00\x00\x1f\xdb\x80\xbf\x00\x00\x00\x00\xa0\xcb}?\x00\x00\x00\x00\xa2g\x87?\x00\x00\x00@\x08\xde|?\x00\x00\x00\xe0X\x8ay?\x00\x00\x00\x80:\xed\x91?\x00\x00\x00\x00\x90\xc5\x8f?\x00\x00\x00\x80f\x06W?\x00\x00\x00\x80\x8a\xc3o\xbf\x00\x00\x00\xc0r=b?\x00\x00\x00`@\x9be?\x00\x00\x00@\xce\x8cx?\x00\x00\x00`;\xacd\xbf\x00\x00\x00\xa0I\xeeu\xbf\x00\x00\x00`\xf0\x89\x8d\xbf\x00\x00\x00\xe0\xecE\x83\xbf\x00\x00\x00 \xe8xq\xbf\x00\x00\x00\x00\xa7\x17\x94?\x00\x00\x00\xa0\x97\xa4y?\x00\x00\x00\x00\xe6.\x84\xbf\x00\x00\x00`\xf6\x03\x81?\x00\x00\x00@m]\x7f?\x00\x00\x00\x00\xea\xa9\x90\xbf\x00\x00\x00\x00\xa7\xaco\xbf\x00\x00\x00@<aq?\x00\x00\x00\xa0\xe6\xc4\x85\xbf\x00\x00\x00\xa0\x8cO\x92?\x00\x00\x00\xe0vDf?\x00\x00\x00\xc0\x94\x8dw?\x00\x00\x00\xe0\xea\xbc\x80?\x00\x00\x00\xe0\x05\xab\x94?\x00\x00\x00\xc0\x06\x8b{\xbf\x00\x00\x00\x80\xf2I\xa0?\x00\x00\x00\xc0\x9c\xfe\x85?\x00\x00\x00\xc0!\xee\x8a?\x00\x00\x00\xa0w3\x06?\x00\x00\x00 \x10\xf5L?\x00\x00\x00\xa0\x018\x87?\x00\x00\x00\xe0\xdc\xf9n\xbf\x00\x00\x00\xa0\x17&f\xbf\x00\x00\x00 \x82>\x89?\x00\x00\x00`a\xf7\x86?\x00\x00\x00\x00\x86\xd8h?\x00\x00\x00@^\xd4m\xbf\x00\x00\x00`\xf8\x11p\xbf\x00\x00\x00 \x9e;s?\x00\x00\x00`\xff\xb0\x8d?\x00\x00\x00\xe0@\t\x9a\xbf\x00\x00\x00\x80h\xaet?\x00\x00\x00`\n\xaa\x81?\x00\x00\x00\x00%l|\xbf\x00\x00\x00 D\xf5f\xbf\x00\x00\x00@2vm?\x00\x00\x00\xe0\xd9f}?\x00\x00\x00\x00\xd0\xb1u\xbf\x00\x00\x00 t\xf7\x8e\xbf\x00\x00\x00 \x18#\x86?\x00\x00\x00\xc0\n\xe5\x88?\x00\x00\x00\xa09\x88s\xbf\x00\x00\x00@\xf0\xc4\x80\xbf\x00\x00\x00@\xbd,v?\x00\x00\x00\x00x\xd3W?\x00\x00\x00\xc0\x87\x0ey\xbf\x00\x00\x00@\x05\x1cO?\x00\x00\x00\xa0\xb6\xe2\x81\xbf\x00\x00\x00\x80\xa1Y\x87?\x00\x00\x00 \x93h\x80?\x00\x00\x00 0\xe5\x9c?\x00\x00\x00\xe00\x1d\x82\xbf\x00\x00\x00@\xd4\x0b\x8f\xbf\x00\x00\x00\xc0\xd0_Q\xbf\x00\x00\x00\xe0Q\xb6\x7f?\x00\x00\x00\x80\xc8\xa3p?\x00\x00\x00`KJ\x84\xbf\x00\x00\x00@_\xe2l?\x00\x00\x00\xa0\xc7\x9a{?\x00\x00\x00\xe0_\\s?\x00\x00\x00\xe0\x08\x93E?\x00\x00\x00\xe0ZBx\xbf\x00\x00\x00\xe0\xa8\\R\xbf\x00\x00\x00\x00\x87\x91\x82?\x00\x00\x00\xe0\xd7\x00\x85\xbf\x00\x00\x00\x00\x8aI\x90\xbf\x00\x00\x00 \x0c\x9c\x8c?\x00\x00\x00 4{x\xbf\x00\x00\x00\xc0\x0f\xa7l?\x00\x00\x00`q\x83s\xbf\x00\x00\x00\xe0\x8c\xbb}\xbf\x00\x00\x00\xc0,\xf9\x82?\x00\x00\x00\xe0\x15N\x87\xbf\x00\x00\x00`\xaaVF\xbf\x00\x00\x00\x00\xe7\xab\x85?\x00\x00\x00\xc0\x11m\x93?\x00\x00\x00\xe0\xd5\x01\x82\xbf\x00\x00\x00@\x84\n\x95\xbf\x00\x00\x00\xa0L.~\xbf\x00\x00\x00`\xed\xb5\x95\xbf\x00\x00\x00`{j9?\x00\x00\x00`\x8f\xd5T?\x00\x00\x00\x00\xb1\\`\xbf\x00\x00\x00`M\xd0\x81\xbf\x00\x00\x00 s\xae\x84?\x00\x00\x00\x80jOp\xbf\x00\x00\x00`,m\x94\xbf\x00\x00\x00 \xfd\x13\x84\xbf\x00\x00\x00\x80\xc41\x90?\x00\x00\x00\xa0\xcf\xbd\x84\xbf\x00\x00\x00\xc0P\x98_?\x00\x00\x00\x80I$\x91\xbf\x00\x00\x00\xc0\xa7\xae\x92\xbf\x00\x00\x00`\xd8\xc9y?\x00\x00\x00\x80\x14*\x81?\x00\x00\x00@@\xac\x85?\x00\x00\x00\xa0\xd3tu?\x00\x00\x00\xc0\x13\x9b\x82\xbf\x00\x00\x00\x00\xf3\xf7t?\x00\x00\x00\xe0\xe6\xce\x89\xbf\x00\x00\x00\xe050v?\x00\x00\x00`\xa1\xcb\x83\xbf\x00\x00\x00\xc0\x9a\x83\x90\xbf\x00\x00\x00@\xc5\xe3\x9b\xbf\x00\x00\x00 \xdd\x87\x81\xbf\x00\x00\x00`\xd1\xddZ\xbf\x00\x00\x00\x00o\xd5j\xbf\x00\x00\x00\xc0-)|?\x00\x00\x00\xa0\xfc!z?\x00\x00\x00`\x92\xc9t\xbf\x00\x00\x00 \xef_}\xbf\x00\x00\x00\xc0\xba\xed\x86?\x00\x00\x00\xe0\xad\x19$?\x00\x00\x00\xc0}\xb4O\xbf\x00\x00\x00\xa0\xde\xb2u?\x00\x00\x00\x80JLz\xbf\x00\x00\x00@\x00?\x80?\x00\x00\x00\xa0\x100m\xbf\x00\x00\x00@G\x85}?\x00\x00\x00\xc0Q\x8dp?\x00\x00\x00 L\xfet?\x00\x00\x00\x00\xcf\x8d\x83\xbf\x00\x00\x00`+\x03c\xbf\x00\x00\x00 \xdf\x8e\x82?\x00\x00\x00\xa0=\x92H\xbf\x00\x00\x00\xc0y\xcb\x8e?\x00\x00\x00 \x1b\x9f\x81?\x00\x00\x00 \xad\x90\x86?\x00\x00\x00\xe0\xe3~\x91?\x00\x00\x00\xe0\xa6\x97~\xbf\x00\x00\x00\xe09\x98x?\x00\x00\x00\xa0z\xc2\\\xbf\x00\x00\x00\xa0\x91\xd8\x81?\x00\x00\x00\xc0\x00\xc7j\xbf\x00\x00\x00\xe0\x9b,p?\x00\x00\x00\xc0\xbe\xdd\x94\xbf\x00\x00\x00\xe0?>c\xbf\x00\x00\x00@\x83\xb6\x83?\x00\x00\x00\xe0>qG?\x00\x00\x00@\xd5\x8eT\xbf\x00\x00\x00\x00\x95I}\xbf\x00\x00\x00\xe0\xda\xc8g?\x00\x00\x00`\tft?\x00\x00\x00\x80\x84r\x86\xbf\x00\x00\x00`\n\xd0z\xbf\x00\x00\x00\x80\xa9\xcdB?\x00\x00\x00`\xda\x91i\xbf\x00\x00\x00`\xb2dx\xbf\x00\x00\x00\xc0E\xa4&\xbf\x00\x00\x00\x00r>r?\x00\x00\x00\x00\xe96\x82\xbf\x00\x00\x00\x00\xb8\xdfp?\x00\x00\x00 p\rx?\x00\x00\x00\xe0\x9f\x05X\xbf\x00\x00\x00\x80\x04\xf6w\xbf\x00\x00\x00\x00U\xcc\x9c?\x00\x00\x00\xe0\xd8Y\x9b?\x00\x00\x00\x80\x98Ky?\x00\x00\x00\xa0\x7f\x03\x84?\x00\x00\x00\x80\xed\xbc\x80?\x00\x00\x00\x00[\xdaO\xbf\x00\x00\x00\x00\xed\x8ar\xbf\x00\x00\x00\x00\xb5\x15j\xbf\x00\x00\x00\xe0(||?\x00\x00\x00@P\xec\x90?\x00\x00\x00 \xe6Mz?\x00\x00\x00 d\x06q?\x00\x00\x00 \xb6\x92|?\x00\x00\x00`\xb6N\x84?\x00\x00\x00\x80/fX?\x00\x00\x00@M?2\xbf\x00\x00\x00@X\xd8\x81\xbf\x00\x00\x00\x00\x1cqT?\x00\x00\x00\xe0\xb8\xdd\x7f\xbf\x00\x00\x00\x00cZ\x87\xbf\x00\x00\x00`~$F\xbf\x00\x00\x00 \xb2Z{\xbf\x00\x00\x00`\xeb\x02\x86?\x00\x00\x00\x807D{\xbf\x00\x00\x00 \xa5\x14y\xbf\x00\x00\x00`\xf1\x92p?\x00\x00\x00\xc0/\xd2\x80?\x00\x00\x00\xe0\x16\x15\x87?\x00\x00\x00@ \x18\x8b\xbf\x00\x00\x00@$!\x86?\x00\x00\x00\x00\x8a\xbav\xbf\x00\x00\x00`/,d?\x00\x00\x00\xa0\x8aP\x88?\x00\x00\x00 \x04\xe6\x83?\x00\x00\x00\x80\x94S~?\x00\x00\x00`\x93\x914\xbf\x00\x00\x00\xe0\x8f\x91|?\x00\x00\x00\xe0ac\x85\xbf\x00\x00\x00\x00\xb2\x06\x95\xbf\x00\x00\x00`\xc5\xbf\x8f\xbf\x00\x00\x00\xa0s$\x98?\x00\x00\x00\xa0\x1e\xce\x81\xbf\x00\x00\x00\xa0\xd1\xd61?\x00\x00\x00\xa0\x8fV\x80\xbf\x00\x00\x00\xe00\xda\x82?\x00\x00\x00\xe0\x1e\xe5W\xbf\x00\x00\x00\x80\x04\xee\x90?\x00\x00\x00`H\xdd\x85?\x00\x00\x00\x00(\xa6$\xbf\x00\x00\x00@\x9e\xc6{?\x00\x00\x00`\xb7cd?\x00\x00\x00\x80\xd8\x81Z\xbf\x00\x00\x00\x00\xff\xbc\x94\xbf\x00\x00\x00\xc08\x9b|\xbf\x00\x00\x00`c\xb3\x9b\xbf\x00\x00\x00`\xe1\xa4\x8d\xbf\x00\x00\x00`\x97\xdc\x9a\xbf\x00\x00\x00@\xf4n\x85\xbf\x00\x00\x00\x80q\x91S\xbf\x00\x00\x00\x00f\x11\x93?\x00\x00\x00\x00\xc1\xf1\x80\xbf\x00\x00\x00\xc0\xb7k\x90\xbf\x00\x00\x00\xa0\xfbEO?\x00\x00\x00@ \x07\x84?\x00\x00\x00\xc0P\x9dq?\x00\x00\x00\x80\xfdh\x82\xbf\x00\x00\x00\x00\xa3c\x19\xbf\x00\x00\x00\x0050\x8a?\x00\x00\x00\xa0\xda5\x82\xbf\x00\x00\x00\xc0\xa4\x9bx?\x00\x00\x00@3\xc8W\xbf\x00\x00\x00`\x197t\xbf\x00\x00\x00\x00\x94\xd7\x85\xbf\x00\x00\x00\x80\x11\x05F?\x00\x00\x00\xa0OE\x92\xbf\x00\x00\x00 \xfd7S\xbf\x00\x00\x00\x00~v\x88?\x00\x00\x00\x80\xdc\x0c\x93?\x00\x00\x00@\xaag\x92?\x00\x00\x00\xc0\x8f\\\\\xbf\x00\x00\x00\xc0H\xb1X\xbf\x00\x00\x00\xa01\x9f\x96\xbf\x00\x00\x00`\x16\xbb\x88?\x00\x00\x00\xe0\x0cu\x88\xbf\x00\x00\x00 \x95\xd0j?\x00\x00\x00\xc0#\xd8a?\x00\x00\x00\x00\xd8\xc9\x88\xbf\x00\x00\x00\x80\xaa\xd3\x8c?\x00\x00\x00`\xf7\xed\x84\xbf\x00\x00\x00 \x8b\xd2\x84?\x00\x00\x00\xa0\xddx\x90\xbf\x00\x00\x00\x00\x9b \x82\xbf\x00\x00\x00\x00\x9c\x06\x8e\xbf\x00\x00\x00`W\xf9\x88\xbf\x00\x00\x00\xe0\xf5\x84}?\x00\x00\x00@|\x15\x8e?\x00\x00\x00@\x14\xe6\x82?\x00\x00\x00`\xa2\xa9\x8e\xbf\x00\x00\x00\xa0\xfe\xd8p?\x00\x00\x00 \x1a8M\xbf\x00\x00\x00\xa0\x19\xa7\x95?\x00\x00\x00\x00\xfd\xf7\x92\xbf\x00\x00\x00`4\x9e\x92?\x00\x00\x00\xa0\xf2R`\xbf\x00\x00\x00\x003\xca~?\x00\x00\x00\x80\xa1\x15\x83?\x00\x00\x00\xc0T\xd6y\xbf\x00\x00\x00\x006N|?\x00\x00\x00\xe05L\x84?\x00\x00\x00\xc0\x1c\x1cx\xbf\x00\x00\x00\xe0\xf3!t\xbf\x00\x00\x00\x00c\xdfx?\x00\x00\x00`?\xe3#?\x00\x00\x00@%K_?\x00\x00\x00\xa0\x8dC{?\x00\x00\x00\xc0\xecf\x90\xbf\x00\x00\x00 \xda.E?\x00\x00\x00@s\xf2\x8a?\x00\x00\x00 \xf7\xf1\x80?\x00\x00\x00 \x81\xfb\x7f\xbf\x00\x00\x00@\xf4\x84\x96?\x00\x00\x00\x80kJ\x91\xbf\x00\x00\x00 \x97%\x91\xbf\x00\x00\x00\xa0)6\x8e\xbf\x00\x00\x00\x80\xe6U\x8b\xbf\x00\x00\x00 \x9a\xb2h?\x00\x00\x00@:.\x92?\x00\x00\x00\x00S\xec\x80\xbf\x00\x00\x00\xe0\xd4\x89q?\x00\x00\x00 u6\x89\xbf\x00\x00\x00@K\xd6e\xbf\x00\x00\x00\xa0j$\x80?\x00\x00\x00 {\xbed\xbf\x00\x00\x00`\x9f\xaak\xbf\x00\x00\x00\x80\xa8\xacu?\x00\x00\x00\xa0+\x82w?\x00\x00\x00 x\xb6r\xbf\x00\x00\x00\x80VZ\x84\xbf\x00\x00\x00\xa0~\x15^\xbf\x00\x00\x00@5\xe1y?\x00\x00\x00`z(W\xbf\x00\x00\x00\xe0Exw?\x00\x00\x00\xa0B\x06A?\x00\x00\x00\x00\xebXf\xbf\x00\x00\x00@>\\a\xbf\x00\x00\x00\xa0\xcd\x1a\x98\xbf\x00\x00\x00\xa0\xe5#U?\x00\x00\x00 S\x06\x95?\x00\x00\x00\x00\x1a\x02\x87?\x00\x00\x00\x00"!~\xbf\x00\x00\x00\xa0n\x08@\xbf\x00\x00\x00\xc0\xad\xefk?\x00\x00\x00\xa0\xa8\x12d\xbf\x00\x00\x00\x80l\xf9t?\x00\x00\x00`p8\x82?\x00\x00\x00 }\xab\x88?\x00\x00\x00\xc0\xfd\xb3r?\x00\x00\x00\x80\xde\x03|?\x00\x00\x00 \x8b0\x8a?\x00\x00\x00\x80\x06\\r?\x00\x00\x00\xa0C\x94}\xbf\x00\x00\x00\x00Y5\x91?\x00\x00\x00\x80\x8a\x00f?\x00\x00\x00`\x08bv\xbf\x00\x00\x00\xa0\\\x0cR?\x00\x00\x00 \xc4e\x8d\xbf\x00\x00\x00\xe0\xd5\x9a%\xbf\x00\x00\x00\x00h\xf2\x8a?\x00\x00\x00\xa0W\\Q?\x00\x00\x00\xc0\x9a\xc8z\xbf\x00\x00\x00\x80r\x9ap?\x00\x00\x00`\xdbA\x91?\x00\x00\x00\xa03\x13\x96\xbf\x00\x00\x00\xc0\x8d\x14h?\x00\x00\x00\xa0t2q\xbf\x00\x00\x00\x00\x98\xcd\x84?\x00\x00\x00\xe0\xfa!Z?\x00\x00\x00 \xe2\xb1\x80\xbf\x00\x00\x00`\x85\x07\x82?\x00\x00\x00 \xa0\x10\x8f\xbf\x00\x00\x00\xe0\xdf\x1b\x8b\xbf\x00\x00\x00\x80\xa9\x19\x84\xbf\x00\x00\x00\xc0\xadz\x87?\x00\x00\x00\x00#\xf3d?\x00\x00\x00@\xcd\x12L\xbf\x00\x00\x00 \xea)q\xbf\x00\x00\x00\x00\xd2=z\xbf\x00\x00\x00\x00q4\x80\xbf\x00\x00\x00\xc0\x99\xdf|?\x00\x00\x00`\x80\x87\x83?\x00\x00\x00\x80MC~?\x00\x00\x00\xc0\xc0}\x81\xbf\x00\x00\x00`[jN\xbf\x00\x00\x00\xc0<\x7fg?\x00\x00\x00\xa0e\xaf\x8a?\x00\x00\x00`H\xd7<\xbf\x00\x00\x00\x80[\x82a\xbf\x00\x00\x00\xa0\x8a\xa1Q?\x00\x00\x00 \x99m\x89?\x00\x00\x00\xa0\x12\xdd\x92?\x00\x00\x00\xc0eX\x8d\xbf\x00\x00\x00\xa0\x9c\x12\x95\xbf\x00\x00\x00\xa0\xd47\x8a?\x00\x00\x00`,\xd2s\xbf\x00\x00\x00\xc0+]\x88?\x00\x00\x00`5x\x98?\x00\x00\x00\xc0\x0f\xee\x88\xbf\x00\x00\x00\x00\x19#e?\x00\x00\x00@\xeb\xa7P?\x00\x00\x00\x00\xed/\x88\xbf\x00\x00\x00@)\x8c\x82?\x00\x00\x00\x00\xd5\x11-\xbf\x00\x00\x00 \x03=\x84?\x00\x00\x00\x80\xc4j\x84?\x00\x00\x00\xc0%7\x88?\x00\x00\x00\x00]\xeaq?\x00\x00\x00\x80$*x\xbf\x00\x00\x00\xc0M\xb1\x80?\x00\x00\x00\x00m\xa0\x8b?\x00\x00\x00\xa0T3|\xbf\x00\x00\x00\xa0\xf9?r?\x00\x00\x00`\x8c\xc8|\xbf\x00\x00\x00@+\xd2u?\x00\x00\x00\xe0\xd3\xb5t\xbf\x00\x00\x00\xa0\x00\xf7\x87\xbf\x00\x00\x00@\xe4\xf4\x82\xbf\x00\x00\x00\x00\xd0Hy?\x00\x00\x00\xa0\x06)\x80\xbf\x00\x00\x00\xc0PA\x8b\xbf\x00\x00\x00\xc0I\x7f\x90?\x00\x00\x00\xa0\xab0t?\x00\x00\x00 ]\x9aq\xbf\x00\x00\x00\xe0<pi?\x00\x00\x00\xa0+\xbd\x9a?\x00\x00\x00\x80e\x82{?\x00\x00\x00\xe0Z\x02\x8e?\x00\x00\x00@v\xd8\x8a?\x00\x00\x00\xc0\x9e\x16\x9a\xbf\x00\x00\x00\xa0\x19\xd7\x90?\x00\x00\x00\x80\x85\x8dz\xbf\x00\x00\x00\x80\x02\xb7\x96?\x00\x00\x00\xc0\x90\xb7x?\x00\x00\x00\xe0e\xf9s\xbf\x00\x00\x00\x80\x96\xee~\xbf\x00\x00\x00@\'\xb8x\xbf\x00\x00\x00\xa0\x91\x84\x95?\x00\x00\x00@-y\x8d\xbf\x00\x00\x00\x80\xfbN\x80?\x00\x00\x00@w\xa5\x93\xbf\x00\x00\x00\x80W\xc7S?\x00\x00\x00 \xba\x89\x92\xbf\x00\x00\x00@\xc6\xf1s\xbf\x00\x00\x00\xc0\x10\xeba?\x00\x00\x00@\xfa\xbdY?\x00\x00\x00 #\x8fu\xbf\x00\x00\x00 \xb31N\xbf\x00\x00\x00`FK\x86\xbf\x00\x00\x00@\xa0\x87Y?\x00\x00\x00\xe0\xc8\x81\x82?\x00\x00\x00\x00\x8f\xdae\xbf\x00\x00\x00\xc0\xdd\xaf\x83?\x00\x00\x00\xe0O5e?\x00\x00\x00` \xc4N\xbf\x00\x00\x00\x00%\xb1~?\x00\x00\x00\xc0N\xd3t\xbf\x00\x00\x00\xc0$\xfa\x80?\x00\x00\x00\x80\x82U[?\x00\x00\x00 #(\x9b\xbf\x00\x00\x00\xa0pO\x85?\x00\x00\x00\xc0\x91\x12m\xbf\x00\x00\x00`\xaaN\x86?\x00\x00\x00\x80 \xab\x86\xbf\x00\x00\x00\x80\x8c\xb4T?\x00\x00\x00\x80\xf7\x0e{?\x00\x00\x00 X\xff\x88?\x00\x00\x00`\x8a\xe9\x8d?\x00\x00\x00 c\xe7\x87\xbf\x00\x00\x00`\xca;{?\x00\x00\x00\xa0b\xbdo\xbf\x00\x00\x00\xc0\x8c\xa7D\xbf\x00\x00\x00\x80\xd6\xffz\xbf\x00\x00\x00\x00\x9c\xe3\x87?\x00\x00\x00\xa0\xf2\x1b\x91?\x00\x00\x00\x00\xb1\x9e\n\xbf\x00\x00\x00 \x14\xc4a?\x00\x00\x00`\xa4\xa9O\xbf\x00\x00\x00\xc0\xf1\xc6Q?\x00\x00\x00\xc0\x18\x88\x85?\x00\x00\x00 \xd3\xe2\x96\xbf\x00\x00\x00\xa0\xae:??\x00\x00\x00\xe0\x85\xf0\x9b?\x00\x00\x00\xe0\n\xe5V\xbf\x00\x00\x00\xe0}\x94c?\x00\x00\x00\xc0\xed\xbee?\x00\x00\x00\xc0\xd9\x04\x89?\x00\x00\x00\x00\xd1\x17\x81?\x00\x00\x00\x00\x18\xbfP\xbf\x00\x00\x00 \xe3\xd2]?\x00\x00\x00\x00\xbb\x14p\xbf\x00\x00\x00`>d\x82\xbf\x00\x00\x00\xe0_\xc2\\\xbf\x00\x00\x00\xa0\xabzv\xbf\x00\x00\x00\xc0a\x00M?\x00\x00\x00\xe0\xc7\x00\x80\xbf\x00\x00\x00\x00\x1b\x95r?\x00\x00\x00\x80\x9c/q?\x00\x00\x00\xa0\x8a\xcd\x84\xbf\x00\x00\x00\xe0\xa7\xb3\x84?\x00\x00\x00 \xfe\x98~?\x00\x00\x00\x00\x95h\x84?\x00\x00\x00\x80\xf3\xf6w\xbf\x00\x00\x00\x80\x0b<C\xbf\x00\x00\x00\xc0\xf3\xf8\x82\xbf\x00\x00\x00@\xee\x90T\xbf\x00\x00\x00\x00\xa0\xe5\x82?\x00\x00\x00\xa0+6\x8b?\x00\x00\x00 $\x92\x92\xbf\x00\x00\x00\xe0\x17n\x88?\x00\x00\x00\xc06\xedc\xbf\x00\x00\x00\xc0\xdb\t\x99?\x00\x00\x00 \xf7)T\xbf\x00\x00\x00 \xe5\x96\x8e?\x00\x00\x00\xa0\xfc\x1ds?\x00\x00\x00 \x8ceV\xbf\x00\x00\x00@\xd8\xbbw\xbf\x00\x00\x00 ic~\xbf\x00\x00\x00\x80w(\x8d?\x00\x00\x00\x00c\xab>\xbf\x00\x00\x00`\xebb\x8d\xbf\x00\x00\x00\xc0\xc2\xb0y\xbf\x00\x00\x00\x80E\xbd\x94?\x00\x00\x00\x00J\x81\x9b\xbf\x00\x00\x00\xe0\x1d\x06\x86\xbf\x00\x00\x00 \xddOd\xbf\x00\x00\x00\xc01\'r?\x00\x00\x00 \xaf\x10\x8c\xbf\x00\x00\x00@\xcf\xa0s\xbf\x00\x00\x00@\xda\x87\x87\xbf\x00\x00\x00 \xbf\xee\x83\xbf\x00\x00\x00 w\xe8\x83\xbf\x00\x00\x00\xa0\x13\xfd\x88\xbf\x00\x00\x00`Q|N\xbf\x00\x00\x00\x80\x00\xe0\x98\xbf\x00\x00\x00\xc0\x9d=\x8c\xbf\x00\x00\x00@\x03\xf8u\xbf\x00\x00\x00`S\xe6\x90?\x00\x00\x00\xa0~y\x89\xbf\x00\x00\x00\xa0\xf0\xdf\x90?\x00\x00\x00\xa0\x04\x0eS\xbf\x00\x00\x00`\xa4\x8d\x85?\x00\x00\x00`7m\x87?\x00\x00\x00\xc0P\xd3\x93\xbf\x00\x00\x00\xc0\xac\xafs?\x00\x00\x00@a\xf9\x89?\x00\x00\x00\x80-%}\xbf\x00\x00\x00\xa0\xb6\xd8\x87\xbf\x00\x00\x00@!\xc5u\xbf\x00\x00\x00\x80\xc0\x8f?\xbf\x00\x00\x00\xe0\xee\xd0a?\x00\x00\x00\x80D\xcby\xbf\x00\x00\x00`\x89\xb1Z?\x00\x00\x00\xc0\x84\'\x92\xbf\x00\x00\x00`\x80\xedY\xbf\x00\x00\x00\x80e,d?\x00\x00\x00 RT\x8d?\x00\x00\x00`\xe3R\x90\xbf\x00\x00\x00 >\xc0_\xbf\x00\x00\x00\xe0\xe7\x12k?\x00\x00\x00\x80\xcdb\x88?\x00\x00\x00\x00\x88)\x8c\xbf\x00\x00\x00\xc0(\xa0\x86\xbf\x00\x00\x00@\xf9\xf3t?\x00\x00\x00\xa0aXc\xbf\x00\x00\x00\xa0\xb4\xf7s\xbf\x00\x00\x00 S\xa4\x83?\x00\x00\x00@\xa4\xe1\x80\xbf\x00\x00\x00 L\xcbp\xbf\x00\x00\x00\xc0\x07\xc0\x85?\x00\x00\x00\x80^\xe9\x98?\x00\x00\x00\xe0\x81\xdf\x87?\x00\x00\x00@\x9c}b\xbf\x00\x00\x00\x80:T~?\x00\x00\x00\xc0\xb2\x1ek\xbf\x00\x00\x00\x80\x04oj\xbf\x00\x00\x00\xc0\x89\xddt\xbf\x00\x00\x00`\xfb\x93\x89?\x00\x00\x00@U%w\xbf\x00\x00\x00 \xe2\xa7h?\x00\x00\x00\x80\xe8\xe6\x80?\x00\x00\x00@k\xac\x8a\xbf'
p538
tp539
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp540
Rp541
(dp542
g78
(I00
I00
I00
tp543
sg80
S'float64'
p544
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg53
g435
sg85
Nsg73
g541
sbsS'compiled_mask_logdensity_estimator'
p545
ctheano.compile.function_module
_constructor_Function
p546
(g0
(ctheano.compile.function_module
FunctionMaker
p547
g5
Ntp548
Rp549
(dp550
S'profile'
p551
NsS'inputs'
p552
(lp553
g0
(ctheano.compile.io
In
p554
g5
Ntp555
Rp556
(dp557
g53
g270
sS'update'
p558
Nsg261
NsS'borrow'
p559
Nsg71
I00
sS'implicit'
p560
I00
sS'mutable'
p561
I00
sS'variable'
p562
g0
(ctheano.tensor.var
TensorVariable
p563
g5
Ntp564
Rp565
(dp566
g14
S'auto_14129'
p567
sg16
Nsg17
g0
(g18
g5
Ntp568
Rp569
(dp570
g22
(lp571
(lp572
(g25
I306
g26
S'nade_train( * args[1:] )'
p573
tp574
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p575
tp576
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p577
tp578
a(g37
I36
g38
S'self.recompile()'
p579
tp580
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/NADE/OrderlessMoGNADE.py'
p581
I123
S'recompile'
p582
S"x = T.matrix('x', dtype=floatX)"
p583
tp584
aasbsg53
g270
sg85
Nsg73
g0
(g74
g5
Ntp585
Rp586
(dp587
g78
(I00
I00
tp588
sg80
g251
sg82
g66
sg83
I00
sg53
NsbsbsS'shared'
p589
I00
sg84
I01
sbag0
(g554
g5
Ntp590
Rp591
(dp592
g53
S'm'
p593
sg558
Nsg261
Nsg559
Nsg71
I00
sg560
I00
sg561
I00
sg562
g0
(g563
g5
Ntp594
Rp595
(dp596
g14
S'auto_14130'
p597
sg16
Nsg17
g0
(g18
g5
Ntp598
Rp599
(dp600
g22
(lp601
(lp602
(g25
I306
g26
S'nade_train( * args[1:] )'
p603
tp604
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p605
tp606
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p607
tp608
a(g37
I36
g38
S'self.recompile()'
p609
tp610
a(g581
I124
g582
S"m = T.matrix('m', dtype=floatX)"
p611
tp612
aasbsg53
g593
sg85
Nsg73
g0
(g74
g5
Ntp613
Rp614
(dp615
g78
(I00
I00
tp616
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbsg589
I00
sg84
I01
sbag0
(g554
g5
Ntp617
Rp618
(dp619
g53
g444
sg558
Nsg261
g0
(g49
g5
Ntp620
Rp621
(dp622
g53
g444
sg54
(lp623
g56
(g57
(I0
tp624
g59
tp625
Rp626
(I1
(I21
I100
tp627
g66
I00
S'\x1f\x9e\xcc\xc5\x18cr\xbf\xc85\x9bag\xed\xa8\xbf\x88"~/\x99\x0e\x95?\xa0\r\xc9\xcb\xb1F\x87\xbf\x84\xe4\xf7Q\xe8_\xd3\xbf|\x14:\xa5\xa0g\x90?\x04_\xeb\xb6%\x92\xaa\xbf\xe3\xf5N\xb5\x97`\x87\xbf(=\x9b\xa0\x85`\xac\xbf\xa2u}\x97\xce\x88\xb0\xbf\xdc\x8b\xff \xa9\xa9\x7f\xbf\xfa\x9d\x10R\xc0\x10\xd7\xbf\xf0\xea\x18G\xd6\xb5\xa4\xbf (\xff\xea\x82W\xc3?\xc1\xef\xe6E\\\xc9\x91\xbf\x08\xc0\xd1p_\xf3\xc0\xbf\xafv\x8a\xa8\xe83\x91?\x02\xb1Ih\xa6\x8f\xa8?\xfd%\xc4\xde\x96q\x87\xbf\x9d)\xcb/\x84t\x90?\xe8\xca~\xf8\xd6\xb7\x8a?\x9dW5~\xdbuA\xbfj\x90\xce\x8f\xc6\xba\xb6?\xd7\xa8\x8d\x83\xf1\xe5\xdd?\xaf\xa3\x81]\xfb\xa4\xb8\xbf\x91\xc4\xa8\xe1\x05\xcd\x98\xbf\xb0Z\xff\x12\x12\xde\xd0?\xca.SlD\xf1\xa7?\r\x1a\x8aj\x83t\xa5?\x8f\xa4XCh\x0c\xad\xbf\xd4\xab\xf0\xfe\xe4\x04\x9b\xbfL\xa3\x9elD\x9b\x83?\xc2\xc2\xc9c\x84\x8b\xa2?t\xd7\x97\xfb\xb5\xca\x9b?\x8a\xf1\xc9\xb4\xd6\xffa\xbf\x84\xb6@\xf5\xd4\x8c\x9a\xbf/l\x11\x98Ur\xd7?\xf6\xc9:z\x14\x05\xa8?\x7fq\xd0\xd7\x9cmu?2Zy\x9ed\xef\x81\xbf/\x8d\xff}\xe7\x13\x99?\xb9\xd3(\x19\x88(\x99\xbf\xd9\xf1\x13n\x1bS\xbd?\xfc\xf0\x11@\xaa]\xc7\xbf\x8e\xd1\xc8\xac\xd4 \xcd?\xbbQW)\x956\xa4?\x94*\xc9\xc8\xc9\xb9\xd0\xbf\xf7\x9e\xa1\xb3\xd5\xdd\xa0?\x07\x95\xc4P1B\xaa?\xdeN\x07\xea\xc3{\xcc\xbf{?"\x7f\xa2\x19\xeb?DGH\xbf\x8do\xc6?\x04f6\x86jm\xd8\xbf\x98\x7f\xf5@\xcf4\x82\xbfB\xb5\xe7Y\xcc\xcfp\xbf\xcc=]\x00\xa3\xdf\xd1\xbf\xb1\x91\xc3\x18\x1be\xbb\xbfL81\'\xde\xef\xc1\xbf\x82\x83\xda\xce\xaa\x93\xa0\xbf\x16\x99\xf7\xe8p[\x98?\x80a\xe2\xd6C\xfc\x95?\xbf\xeb,n\xb7\xbb\xd2\xbf\x13r\xe0\x18\xecY\xb5\xbf\xa8e\x08\xca\xa6(\x9b?N#\xc8\x11\x9c\xbf\xb2\xbf\xbe`\xf8SAM\xe6?\xc5t-&bl\x94\xbf\xba{\xa3$\xeaD\xb6\xbf\xb1\xbbn\xeb\xd3I\x94\xbf\xe3\xc5F\xa0Zs\x98\xbf\x98\xf3\xd4S\xef\xe7\xaa?\xd2\x10\x0e\x1b\x84\x97\xad?\xad L\xb7\xe2(\xba\xbf\x86\xe5uI\x0bJ\xbd\xbf\xae\x15\xcd4\xa2U\xc1\xbfrW\x14=\n*\x92\xbf\xa1\xdb\xec\xb8D\x0e\xdd?:wS\x8c\xdaY\xb8\xbf\x0fgc\x8f\x13(\xc7?#\t\x9ch\xb5\x12\xb5\xbf\xc1\x0f\xe9\xe9\r^\xc1?Q\x87\xd3\xcc\x0c\xa0\xae?}\xd1\x18{\x11\x9c\xb2?\xc7\x1b\x88}\xacj\xbe?\xf7U\x8c\x99\xcf\x1ck?\x05h\x9b\xbc\xc1q\xa2\xbf\xbch`\x13jF\xc7\xbf#\xcb\x10a\xcf\xd5D?=\'\x1e\xac|\x86\xa1?\xc9\xaa#\xb9+\xd3\xbd?w\xdf\x1e\x98\xa6\x8e\x94\xbfx5E<\x89r\xb0?\xfc\x86\xacS\xc1\x98\x90\xbf|\xb4\x94\xca\xf7\x98\xbc?L\x91\xd3\x05\x9d\xb2\xc3\xbf\x02\xafn\x14HT\xc7\xbf\xf1Ms\x91\x0c\x07\xb5?roj\xa3\x8d\xb1\xc7?\xc8\xda\xefj\x85Cp?\xc9\xfe0b$\xd3\xc6?\x8f\x80\x00\xfb\xe2\xd8y\xbf\x19\xf1\x0f\x87\xf4\xees?`\xea\xffF\xa1\xb0U\xbft\x91\xe7\x12\x84\x8e}?.y\x08\\\xabz\x87?\xca\nblZW\xa0\xbf\xe1#\x92\x9e34\xa9?@]vT\x88\xca|?tNF\x05\xe32\xa2\xbf\x11*7\x91 \x07\xb0\xbfrrp\xeaZRO\xbf\xe2\xb1dk\xb9:y\xbf\xcecV\xfb\xed9\xa7\xbft\x8f@\xa5\xf4"g\xbf\xe8P\xc0\xd1\xbf\x0c\xa0\xbf\xa4j<\x14\xf69\xb3\xbf\xe6\x8eh\xad\xbe\x83\xa1\xbf\xc0\xf1\xbe\xdf\x8c\x08|\xbf\x88\x9eE9m\x81m\xbfh\xb8\xb7\xfd\n\x83\x86?l\xd1x\x93\x9a\xbfv?\xbc\xaf:\xc0t\xb9\x88\xbfA\xe1\x16\xf0w\x19\x98\xbf\x1b7\x89\x9a\xb6@\x98\xbfw\x19\x85\xd9i\xa4(?\xc3DIT}\x9b\xb1\xbf 7\xde-7\xde\x8b\xbfd\xeb\x12\x0e\xb5\xed\x84?\x1f--\x1c\xf2\xa7\x8c\xbf\x95i}\x06\xd2"\xa0?\x99>\x17O\xadWp?<\x16\x87\x9f\x9dSh?b\xedQe\xcf\xdb\x98\xbf\x1ej\xf3+\xd7&l?FN\xc0\xbd\xc4\xaf\x91?\xd8\xa1\x01\x00\x19\x98\x88?N\x9c\x1d\xa0\xe1\x03\xa8\xbf\xc2p\xa8\x8b\x90Ts?\x01\x80\xcc\xaa\xfc]\x82?\x897\x10\xd7\xe4A\x91?!\xf3\xdd\xf2\x94\xf9\x91\xbf*\x08\x9e^S\xa5g\xbf\xab}n\x0c\xf1\xf5o\xbf\xf1~F \xf0Pn?\xe9L\xb4\x85\x89p\xe8\xbf\x8a\x1d\xd9\x8f\xc8s\xc1?uM,\x9c\xe41\xb9\xbf\xdb\x1fNT\x86,o\xbf`D\x1dd\xbc#\x89?\x87\x10\x8a\xa0\xacr\x7f\xbf\x18EA\xa3@\x17\x80?})?\x8aW\x1c\x7f?0\xe5\xd3\x8f;\x96\xb4?U_\xba4\xe7\xe9\x91\xbf\x9f\xe0\x96\xa9F\x95f?5\xc0\xbb\x97\x05\xd5\x93\xbfL\xde\xaax\xb3\xf9u\xbfbF\xe3\x0f\x82\xb5\x82\xbfXvY\x00q\x17v\xbf\xd8\xc0c\xab7\xca\xe1?\x11\x9e\x10\xe7F\xb6y\xbf\x1b\x9dn\xa6\xa3\x96\x81?"\xe8+~i\xd1e\xbf^\xb9\x7f\x8f\xadJI\xbf\xc8\xcc[f>L^\xbf\xe5\xa9\x80\xaaW7\xb0?\xde\x1f!\xa4;\n\x9d\xbfa\x14\xa3?\xc4!|?\x82nvEJ\xfb9?\xd4\x9a\x84\x15-}~?\x8a\xa3C\xbb\xd0\x94\xb4?\xb2\xed\xe7\xcc{\x13\x93\xbfR\xf0DW\\\xc1\xab\xbf\xd1\x12\x0e<\xa2\xe3|\xbf\x01\xa9?U-\x1f\xa4\xbf\xf4\x82\x95D\xf2\n\x9b?P=\xe9\xe3\xb8\xa0\x88\xbfh\xd7H\xde>yt\xbf\xaf\xc6\xff\xc3MG\x87\xbf\xca\xb9\xfc\x94 4\x9b\xbf\xb7\xd1\x12VG\x8ct\xbf\xa4\x99\xec\xc6[\x19\x88\xbf\xa2\xa4\xc5\x15~t\xd8?V\xbd\x99\xb1^7\xa7?\xc2\x14\xdd\x06\x1a\xe2\x87\xbfKH,\xf4)\xf9\x89?\x98J\xec\x1f\x04\x1e\x9e\xbf\xb1\x8a\xe9\x1f]\xd6s?\xb5\xd2\x89"v0m\xbf\x89\x878\xb1\xf1\x9c~?\xefT\xe9\xcd\xef\xc2t\xbf;L\xcc,f\xe5w?\x80CsG5v\x9b?\x1c\xfd\xb9\x95\xb2ik\xbfZ.]P\xbb\xec\xe1\xbfFz\xf9\xa0Q(V\xbf\x8e\x04u\x83\x9bQ\xa0?D\xfd\x88\xff\xceO\x8c\xbf\xe1\x08\xfc}\xe5t\xdd\xbfG\x86X\xf8\x89@\x85\xbf3\x1c\x00\x83\x12\xb0p?(Ve\x04\xcd\x9ai\xbfx\xcb\xd1\xe8\x06r\x93\xbf\x11<\x88\t\xd4\x95\x91\xbf\xb9??as\xcb\xd2\xbf\xc6\xc3%eBfl\xbf\x18Yl\xdd\xed>\xad?t\x8e\x96a\xa9\x10C\xbf\xbf\xb3\xfb\x1a\rLW?k\x05\x7f3\xd21w\xbf\xb8N\xac\xfe\x9f\xa2w?\x0e=C\xb4\x90\x9a\x97?"w\x95M\x08\xe8\x7f?\xca\xaf*\xdc\xca2\xf4\xbfF\xea\x11\x8c1Tn\xbf\xc7\x9aW\xdb~6\xb3?.\x06\xeeXC\xe7\x9b\xbf-\xe4E<\xb4\x1f\xf1\xbfSA$4\x0btI?E\xc5\xec\x17?\x1bf?\x98UC\xa06\xf9\x98\xbf\xac\xb7\xe6\xbf\xf7\xd8\x88?\x81\xfd\xb2/\xaa3n\xbfo\xbe\x88)z\x9d\xc4\xbf\xe4\x81\xa4\n\xad=o\xbf\xc9\x1f\x0b\\c}u\xbfZK,\xa3\xfa\x97\xab\xbf[M\xa8\xb7\xa7\x80x?\x8ep\xa5\xb7\xc0\xfeO\xbf\x01\xf9Y\x1bXk\x8c\xbf~\xa8\xcd}\x83\xa3\xe7\xbf\xc5\xffY\xc7\xb5"|?-y\xc8\x91\'\xb3u?L\xc1\x9f\xc1\xc3\xc6\x8b\xbf:\xe8\x98\x91\xec\x93\x93\xbfv\xaf\x10\x8ar)\x97\xbfl\xf0p\x9f\xd6tB?\xbf\x1d\xf2E\xa3<\xe7\xbf\xa4;\x04<\xbf\xfbT?\xaa\x0c\x1f\x11\xf9\x06\x90\xbf\xb6\xbf\xbb\xcd\xb7\xb5\xb2\xbfK\x0cI\x84\xedR\x80?\x8f\x9a\x80\x07\n7\xb2\xbf\xc4\xfb\xd8\x19\xc9\xf7\xdc?\xc5>\xfd\x85\x83\xf8k?#\xaf\x90\x8e\x9b\xe0Q?\x15\xa3T\x85\x14\xf3\x8c?\x0e\r\xc1C\xaa\x90\xc4\xbfu\xc5\xc7\xc3\x87\x7fr\xbf\xee\xe3z\xaehe\xcd?\x9a\x11\xbbK\xdc+z\xbf\x9f\x0f(\x1d\x19\xb2w\xbf\x8c\xab%\xa5t\x12\xa5\xbf\x8fy\xc0\x88\xc4\xb3\xc9?\xf2`\xe6\xf6d\xa6\x93?6=\xb0\xaf\x01\x92\xba\xbfN\x88\x03<C\x05\xeb?\n\x9c(\xa9\x95px?\xbc(\t\xeb\x99\x87\x90?\x9f\x815\x80$\xbfx\xbf\x85\x88\x15\xbc\xbe\xcb\xbd?\x01\x88\xb4]\x13\xb8\x9a\xbf,3&\x06\xeek\xc5\xbf\x9b\xb0\xc8\xc0\xb6\xe9\x99?\xb8\'\xc6\xed\xd3\xcc\xcc\xbf\xfc\xc6PY\x98\x99d?Y\x8fVK\x8b\x9e\x90\xbf\xb1\xd9\xc9\xf5\x1e\x9d\xa0?\x85C\x9c4\x02\x0e\xc5\xbfvx\x11\x9e\x91\xa6\xd7?\xc1\x8b\xb77\xcb\xf5\x8b\xbf\xb6\xaf\xc4\xa5b\xebL\xbf.\x04\xb9RIgv?\xa0\x08k(n\xa5\x83\xbf1\xb0\x99\xac\xf0\xf8\x8f\xbf$\x9e\xe7\x93\x04\xd9\x93?\xd5\x95\xb8@\xc4\xf0\x83\xbfq\x9e.e\x8aeu?\xc3q\xc9=\x10\xac\xe4?\xbaz\xd58\xce\xb6\x8c\xbfe\x9e\x08\x18|\xc2\xe3\xbf\xfc\xf9\x07\x9dN \x9b?\xde\x08\x10\xe7(d\x83?%\x9aT\x1f\xb56\x98\xbfo\xbf.\xc0\xb4\xb5\x90\xbf1\x0co\x1b\xae\x08{\xbf\xe6\xd0\x0f=lrs?\xc6\x03k\xae\x90o`\xbf\x00\xbd\xf7:X\xd6x?<`\xa0\x8c\x8fK\xe3?T\xf26\xcct\xb4\x97?\x05\x03\x85\xb3x\xa4\x84?NW\x81\'w4\x91\xbf3\x0f\xce&h\x9c\xe8\xbf\x95\xbfB\xb6/\'o\xbf\xbfl\xf8tX\xbea?\xf7B\xaeo$\x0cR?#fq?\xe2z\x94?g\x949\x0f\xa7\x17n\xbf\x91$Y\x01\xa6\xf3\xf2?|^\x91\xf7q\xa1\x8a?\xd27\t\x1c5)i\xbf\xe8F\x1dp\x00\x10\xb0\xbfU\x92`s\x0c\x8ee?\x06Y\xef{\xa01\xc5?\x14x\xbe\xbd\x1b!\xa7?$h\x89\xfbv(\xa0\xbf\x13\xa7\x14\x8c%jf\xbfc\xef6dA\x1a\xc1\xbf1`\xf2o\x0b\xc9\x9a\xbf\xf5>i\xd2\xb6?g?\x16\xb5,\xbb\x11\xf0\xdc\xbf\xe9\xe0\xa44\xaa\xa2\xad\xbf@k\x17%0\n\xb4\xbf\xe6\xfa\x96\xcf\xfeZ\x8b?\xa9wGE\x88\n\xc0\xbf\xff\x88u\x08\x86\x82}?\x11A\xc8\x89&\x8c\xbf\xbft\x08\xc0K,w\x81?Q\x9e\x0f\xe7\t\n^\xbf\xbb\xe3\x14\xb9a{\x81\xbf\x91{_r\x9e\xb0\x82?\x08\xbcz\xb2\xbd\x99\xc5\xbf\x16\x15KU\x04.\xd7\xbf%\xfcMu\x84#\xa6\xbf8\xad\x1c\xfc<\xd9\xa7\xbf\x9f\xa9D\xdabF\xd5\xbfTf\xc9\xdd\x9c\xc1\xa0?\x05\xeb\xba\xfa\xf1#\x8e?\xfe\x8f\x98\xe6\x1a\xe4\x96\xbf"\xa1\x05aW\xbc\x91\xbfnn\x1b\x80\xc6C\x7f?u\xf8\x84\x1a\x8dz\x86\xbf\xe9\x00\xdd\x07g+\x91?\xa4+\xb1\xcf\x02_\x85\xbf\xa42C\x98\x9c\x15\x82?\xfa-\xc6@\xaa\xd6\xd2?\xb9\xac\xc9\xb7"Y\xbe?\x98~\xdb<HO\x80\xbf\x9f\xc4O\xdc\xcf<m?\xee\x0c\x04\xcdN\xab\xa4?d^\xec\x87\xb66\x8c\xbf\xa1\xfe\xf8\x8dZ\xdf\xb7?\xf3\xc7y5\xcb\xcb\xcb?\xfc\xe8\x03\x87\xe95\xb8?\xc8\xc0\x8d\xe9\x1bBj?I 0\x1a\xd1"\xbd\xbf\xf0y1\x89\xca\\q?\xec\x84\xb3\xff3G\xa4?`\xda\x19a\x04\x16\xc1\xbf\x17\x19\xd75\xb7\x88\xc6\xbf\xc4\x84\x10\xf6\xb1\x05\xc4?\xdb\x1e~\x84\x97\xa6\xd9\xbf\xe4\xbb\x06\x06\xaf\x18\x95\xbf\xe3\xfeQ\xb4\xaa\x89\x9a\xbf\xc1\xf3\x16Y\x19{\xd5\xbf\x8a\xe9\xb2\x8a\xd0\xfe\xbe\xbf\x0bH;\xa6\x96y\xd5\xbf\x80C\xc0zy\xc4\xa1\xbf|e\x80\x18y\xcef\xbf \xb6\xbd0<.f\xbf\xd8\xa8\xcau\xfe\xec\xf0?\xe9\x90m\x05\xa2\x1c\xb5\xbf\xbb\x0b\x11\xd9\x84\xe0\x8d?\xc5\x89.!0_\xbe\xbfc\xaf,\x12\xbc\x05\xd4?\xefB\xce\xd8\xab\x8cq\xbf\xca\x1d\x99\xe7\x0b\xff\xaa\xbf\xee\xfd\xa5m\t\xe5\x97\xbf+:\x00\xe5)x\xc2?\x1d\x9b\xcf\x9fh\x05\x9d?q\xed\x1b\xd0\x08\x9eI\xbfJ\x8a\xc9\xf9D\x9c\xae\xbfv\xb5\x07D\xebfM\xbf\xd6|;?9s\xac\xbft\x9dO\x87|\xe3\xa1\xbf\xcc#\x8b\x9c\x84\xa8\xdf?s\x8a\x83\x87@\xef\xbe\xbfZ \xcf\xed\x9fy\x83?+;\xfc\xc2[\xf3\xbd\xbf\xd5\x10\xe1\xeb7*\xc2?\xfa8\x0c5\xf5T\xb4?\xa3\xf5\x8d\x8d\xe6e\xaf?\n\xf3\xd19\xd4\x83\xa7?\x93\x1f9\x15\xbcgw?\x0f\xbfN\xf1E[w\xbf\xc9v\xf5\xaa\xaf\x90\xcb\xbfq\xb5o[\xed\xe19?\n \xa7\xb3v\x91\x95?\xf1 \xaf\xb4t\xa1\xcb?\xb0\x0f\xa1\xe8\xc6\x8ai\xbf,`\x8a\xd0w\xe1c?\x15!\x1bat\xdav\xbf\xb6\xd0+\xde\x98@\xc4?f\xfa\xb4:\x9b\x9a\xb3\xbfB\xeb\xcf\xf5\x8e\xbc\xdb\xbf\x9c^\x890M\x11\x82?W%\xf2-\x01\x8b\xbb?\xf6$\x83\x16\xbc\xfcz\xbf\xdb\xed\x87(4O\xcb\xbf\x7f\xffXM`\xd7a?\x08S\xad\xd3c\x8e\x84\xbf\'{yt4\xd5\xb3\xbf\xa0\x97\xb4\xe4\xa1\xcc\x89\xbf\x92)\xefc\xae\xba\xc1?\xa2\xf9F\xa1\x87\x8f\x86\xbf\x9e\xf3\xb80AD\xc4\xbf\xd0\xf7\xda\x8e#\xbe\x86\xbf\x84d\xb4\xec\xb9\xa7u\xbf\xc9\x84\xbf\xd07\xae\x89\xbf\xd7\xce}\xb8\xcali?\xdf \xac+)5\xa9\xbfu\xda\xc1A\xe3Ej\xbf\xee\xc0\xa7\xe3*\xf5\xf4?N\x9a\xfd\xc6\x0c\xa6x\xbf\xb9cF\xfe\x97/\xc5??\xd5\xbc\x04*\x89\x85\xbf\x84\x0fGdv\xf0\xd0?\x95_\xc2\xd7\xfa\x0f\x8a?\xe1\xdd3\x85\xee8\x86\xbf"\x7fH\x89zG\x90\xbf2\xbb\xf9\x89~\x05\x8b\xbfI\xc2P\t\rT\x98\xbf\xeb(\x80\xd6@+\xad?\x94n\x81(.\xcbC\xbf\xa2\x91\x8e\x7f\x9b\x95\xa8\xbf\xe1:B\xc9\x901\xa3\xbf\xa1\xa9[,\xc3\x08p\xbf\xe3E\x97\x0c\x030\x8f\xbfH\xe1MK\xc4&\x82\xbf\xb9\'1\xb1\x9b\xa1\xea\xbf\x0eX\x96\xf1\x899_\xbf\xab\xed(k\x0f\xf4\x82\xbfnb\x0f\xb7\xcb\x06P\xbf\x1d\xe0K\xe4\xd1>\x8b\xbf\x8e\x05\x9c~kc\x96?!\xa3\xedly0\xa5?<\xe4\xae\xb7K\xb7\xef\xbf\x15~\xfax\x0f\xf2\x85?\xca\x82\xfb%c\xba<\xbf\x82q\rbx\x07\xb9\xbfH\x05\xc1\x8c\x02|\x87\xbf\x84m\xb4av(\xbc\xbf\xa02\x8f\xd78\xb1\xee\xbf\xd8\x02\x9a\\\xb5vq\xbfk\x1e\x81\x88\x05^|?4\x1br>\x93\xfa\xa4\xbf\xce\xfa\x85\xc8\xc9\xc4\xb0\xbf]\xd0\xe9B[\x8fy?\xfe\xbd\x1fo:\xa4\xb9?\xc3\xe9z\x94\x1f\xbdr?d\xe2v&\x0c\xd9\x90?c\xa1C\x05\xf9b\xaa\xbfN\xca\t\xc4/\x07\xca?\xf1\xcbI\xe9\x85C\x9b?\xef\x0c\xb9\xebt\t\xbf\xbf\xf4\x1bhI+\xa4\xe5?\xaa@4\x0e\x870\xb1\xbfEeo\x03A\x1b\x86\xbf\x1dN\xc8\x90u-\x81\xbf\xd5(\xbc\xd8\\\xe5\xbf?F\x07\xf2I\x0f\xcb\x94?\x98W\x0e^:W\xb8\xbfD\xb3 `\x91-\x93?\xe7]bK\xd2\xa2\xc8\xbfKC\xb1\xe0\xaae\xb0\xbf!\xce\xea\x13\x0c\xee\xc0\xbf\x052U7n\x06\x86?\xf8\xa2\x80"kj\xb8\xbf^U\xd61\x15\x80\xe9?\x9a?\xc2\xcc\x01\x0f\x8b?\xed#\xbco\xa4\x8d\x94\xbfh\x9dp&70\x82\xbf6\xcb\x02\xe7\xd1\xad4?4l\xdc\xc9M\xdd\xa1\xbf!+8\xbb\xea\x0en?\x1a\x04\xa3\xb8\x03$\xa5?4\xe5\xbe\xc3\x9dH\x96?\x0c8\xffC4\xfe\xd0?5\xf5\xd7\xb8\xfe`\x97\xbf\x19\x9e\xa5ie)\xe9\xbf\x95%\xfaE\xa3\xbe\x9e?\'-\xca\x92\xcd\xc4\x82?$\xb5|VV\xc2\x8d\xbf\xf1L\xbc\xc7@\x95\x91?`\xd6\xd6\x1e\x13L\x89\xbf;*\xd1\x1b\x8f\x16d\xbf\x1c:\x12w\xdaR\x8c?\xc7\x8ac\xe0\xad\xf3\x87?\xc8\x10\xe9\xe5\x14c\xf5?\x1b\x88Y\t\xb8\x87y?\xdfp\x130\xcdz3\xbfdP\xe6\xa8\x8e\xc9>?\x12\xe5\x12\xd5c\x07\xec\xbfq\xf1\xfb\xaf\xcf\x90G?C\x02_\xbf8R\xa2\xbf\xe4\xa7~\xaf\xfb]\xa4?\xa0\\\xe0i\x95\xc4\x86?\xbc\xea\xa4\xb7\xef\xc2\x7f?\x9e|\x1bk{d\xf2\xbf\xb8\\\xde`s\xa2{?\xe9\xdf\xdea\xd7\x90\xba?\x02\\\xad"\xfc"\xc3?\x8a\xf5:%Qo\x82?\x7f]\xc8\xc7r\x07\x9a\xbf\x92\xd6\x8dn\x9d@\xd3?\x9b\x16/\x82Dq\xbd?\xa5_\x85\xe8Y\x8et\xbfV\x93D2\x04e\xd2\xbfO\x0c\x04\r\xf3`\x9e?\xc6\xbcC\xe8\x94a\x8a?\xb7\xfb\xe2\x1d\x8a\x02\xd2?x\xa7\xb8\xceu\x03\x91\xbfq\x87c1\xd55j\xbf>"\x8cM\x12\xf5\x9b?\xdex\x7f8 \x0b\xb3?\xfa\x80\xe1\xaa\xdcl\xb0\xbf\xbf6\xff\xe92\xe2\x9f\xbf\xcc\xc7\x91<\xaf\xe8w?\xf3\xe2\xf0!F\xa1h\xbf\xb5\x921\xff\xe6|\xd5\xbf/\xd9\xd3Z=\xa2\xc3\xbf\x07\xefp:\x85\xa7\xce\xbf4wu\xa3\xe7\xfb\x9e?k\xf8\x1d\xd1\x0c\x04\xed?{\xc7\xd4\xc3V8\xa6\xbf\x8a\xf5:{\xbf\xcf\xae\xbfy\xa2\x80N\t\xbd\xb9\xbf%3\xd1\xaeN\xd9\x9b?6!\x86KP\xf8\xcb?\x91\xa6\x15\x04\xac\xb3\xa8\xbf\xfa\xf8\x87u\x86B\x86?\x1d\xf532\xeb\xa4S\xbf\xe5\xe5d\xfb\x0e:\xa2\xbf\x7f\x15\xf5\xd4\xe6\xbf\x93\xbf\x01\n\xe5\x80\xef\xe8\xbc?\xc8\xc1\xe6\x18\xf1\xc4\xe0?q\xac\xb8\xcd\x93C\x95?\x1c\xc3\xaf\x8b/\xcep\xbf\xe9\xbbb{\xb1\xca\x86?4.P\x16\xd41\xc4?\xcd\xd4G[\xa5R\x95\xbfD8 \xe1\xa9m\xb2\xbf~[\x8d\x94\xc7q\x88\xbf\n\x00Sq\xea\xe9\xc6?\xe9\x87\x9e\x8bx\xe7\xa9?\xb5Q(\xea\x7fi\xaf?\xf4a\x9a\x95\x02\x83\x99\xbf\x1f,\t\x96\x9d\x10\xa3?\xcc\tV\xc8\xb9v\xda\xbf8i\xda \x12b\xb2?V\x88\xf3u\xdat\xc1\xbf\x1bB\xf5\xefb\x04\xd8\xbfD\x9c\x17\x05\x9c\x7f\xa6?\x01V[\x1c\xa8$\x9f\xbf\xe0h\xea\xd8\xc4\xce\xe1?G\x1d\xd1\xb221\x87\xbf;\xf9\x0b\xdcu4\x9d?\x88v\xc4\xdb\xb7^\x8d\xbf"\xbfv\xbe\r\x9e\x7f?\xf5G\x0e\x1d\xa0_\x92\xbfR\x90\x11Z.\xae\xb7?\xc5t`\x9d\xf9H\xa0?\xef\x0c%\x06\x8e+\xa7\xbf\x1a:\xe5M\x19|\xd1?\xd44\x03tK\xe5\xc6\xbf>\xf4\xc3\xb3=\xaa_\xbf\x8c\xcf\xd4\x8eO|\xc3?\xd7\x0fq\xf1\x94o\xb0\xbfW\xdac\xf5$\x0b\xad?t\x05\xa8\xaaJ\xa0\xb5?\xa9\x01v\x0c\xa6\xb8\xd1?\xafh\xfe!\xbe\xe1Z?\xffT-%k`\xaf\xbf\xbc`\xb6\xde_5\xd4\xbfC\xf6\x0f\xec\x9dM\xd1?\xcbM7 \x95\x0b\xdc\xbf\x1f\x91Y:\x01\xd7\xc1?\xf2\xc4\xae\xc2Q\x18\xa3\xbf\x15\xa2\xe3{\xaf\xae\xb9\xbfQ\t\x03\x97\x1c\x06\xab\xbfXG\x91\xd9\x93h\xc5\xbf\x87\x9d\xfd;]AQ?|N.{@d\xcc\xbf\xe8\xab\x1fi\x06~\x80\xbf\xd3\x9e\x17\x17\x15\t\xa1?\xde8\x99,^\xf4\xc1\xbf\x96\xf9\xe3\xc4\x85-\x91?4bJE\x9e\x9a\x8b?\xb4\x06(sF\'\x8a?R\xdfD\xc3\x84\xd2P\xbfq\xca\xbe\x1a\xec6\xde\xbf#\x927\x00\xdb\xbd\xa7?\xf4)D\x02hG\x9c?0\xc9.e\xe9A\xc1\xbf\x8a\x8b\xfc3\xb4\xffQ\xbf\xf3^\xc6\xb3\x90}\xb8?4\xf0\'\xa7\xb6^\xa1?\xfd^\xda\x0c<\xbc\xb2\xbf\x8b\x00\xc0\xfb\xf2$p\xbf\x81\x1f\xf2\xa5\xf6\\\x85?\xd5\x18C\xec`\x1f\x7f\xbf\xb0B\x8f^O\xf1W\xbfo\xf5\xd9\xe3K\xe6z?\x13\x19\xf7\xb5&\t\x93?P\x90\xc7e/q\x99?\xc3%\x0b\xa4\xff\xc4\xaf\xbf\x94iL\xa4q\xb8G\xbfb|\xd7)\xa1\xefc?\xa7\xde\xb6\xd1n\x8b\xad?\nE{\x1607\xfd>\xd7|P\x07\x0cIJ\xbf\xe8\xf01\xed:6\xd8\xbf\xe9k\xc0RxRq?\xd7\xc0\xaeD\xfc\x14\xa1\xbf\xd5Y\xe2\x19\x13P\xa8?j\x0c\xdf\xe9ne\x97\xbf\xd7\xbb]\xde\xa0\\R\xbf\xf9E\xd06\xb2m\x93?r\x11\x19\x01A\xa0l?\xf2\x9b3\x1af\xe9\x82?\xedg;2R\x8er?\xe9c,\xc1\x1b\x16e?\xec\xc3\xee\xe3\x95d\xa2?\xf8Nc\xf6\x1a\xe4\x81\xbf\xd7\x1f\x81\xf5\xd6g\xa6?\xa6\xc9\xcca\xe7}\x82?\x87\x80\xc2t\xf0@\xb5\xbf\x0c\xd7\x88U\x18\xb9\x8a?K\xd8\xe7\x97\xf2\xd2\x85\xbfj\x84\x87\xf8\x93\xff\x8f\xbf_\xe6Y9\x9d\x8ca?>\x11`#\xad\xed\x91?wxZl\x08\x97r?\xc6\x14\xad\xfa\xd5\xddd\xbf&\xdb\xb4\xf9\x96N\x83\xbfsK\'\x90<6\xa5?L\x9a\xfc#o\xb7q?<Na\x95uK\x86\xbf%\xee|\xf1\xf2\xd3[?\x8a\x94\xe9\xaa\nj\x9e?\xcf\xc4\xee!\x03@t\xbf\xbe\xdd\xf5\xe0\t\xe6h\xbfZ\xf8D0nF\x80\xbf\x8b\x9f\x07\x87\x10T\xdb?\x16\xc8\xabz\x0bC\xe0?\xce0Ry\xf6\x01\x8e?d\x9fz\xdf`\xcdr?w\x85\xe2=\xd5Z\x8b\xbf\xeaz_,\xf8\xd9\x89\xbf\xb3\x98\x02\xa1\xd5\xf8_\xbf\xfb\xde\xe7\xdd\xb3\x98\x8f?e\xe8\xc7\xee\xc36\x98\xbf\xe61_\xd2\r\x93\x86?_\xd6\xb0\xd0Q\x9eb\xbf\x89\x93b\xe7\xdb\xa5\x96?\x94\x0e\xd2ND\xa3y?\xaa\xe1\x9b\xcb\x98\x95=?\x8a\x95\xb4\x89M\xced?\x960\xe7\xcb\x02\x14\xdd?\xec\x9d\xd7\xcd\xc4\xfch?\x83=\xce$V\xa3N?\x0b){]s\xad?\xbf}\xb5\\\x88\'\\\x88\xbfiD\xa8A\x0f]O?\x94\x97\x01\xd7Y\xb1\x9e\xbf,\x12\x13\x99\x93\xf5\xa5?\xde~\xc7\xcb\xe4\xf0\x87\xbf_\xfc$\x8e\xa5=f?\xa2\xe4,\xd7\x88\xf7a\xbf\x00\xf5<\xa0?q\xc1\xbf8\xfb]P\x8dl\x9f\xbf\xa5\xd1e\xa7\x18/\xa4?\xd1.vW\x97\xddg\xbf\x81\xd2\x94~$\xaf\x95?Uy\xd7\x13Dk{\xbf\xe8"}\x80\x94n\x93?\x19\xf8\xec!\\(V\xbfz>\xfd\x89!\xdcp?<\xb9XPQ=\xa9?\xfe\xd0.\x8dW\x15b?\x919\xdf$&\xfd\x87\xbfB\x89\xf0\xc5[\x86\xda\xbfF={\xff\x0b\xaeI\xbf\x85\xfc\xe9\xde\xe1\xbe\x80\xbf\x96\xba\x8eG\xc1\xcd\x9c?u\xedd\xa5\x12<\x9e?2\xc3)\x13\xd9z\x93?\xa4\xa3J\xec\x014\x8f?\xdf\x1a\xa4\xb5\xaf\x7f9?8>[\xcd\x1f\x0c\x8e\xbf)\xb3\x89\x1e 8\x90\xbf\xf9\xcd\xe7\xf6\xeb_\x9f\xbfn \x12\x08\xda\x15\x91?\xbd\x98w\xf3\x02\xcd\xd5?\xf1\xfd\xd8\xd3Ay\x92?\x07\x92e.\xdd\x12\x86\xbfz\x1d;\xc5\xa8\xe3\xa2?\x0f\xd4@]\x14E\xde\xbfq\xe0E\x1b\x92Z2\xbfj\xe5\x04\xef\xbe\xc4Y\xbfQ\x9d7_\xfdFc\xbfz.Ru\xd6l\xfc\xbf\xbc\x84\x87c\xb7\xb0\x19?\xf0\xde\xcaq\n(\x91\xbf;\xd4{\x96\xfds\x96\xbf\x99\xb1\xec\x13\xc1U\xd3\xbf\xed\xcf-\x82"Kx\xbf\x9c\x86\xe4\xa05\xab\x83\xbf\xcf_\'j\x13wt?$\xb1&fL\xb6g?H\xac\xd6r\x8c\xd3w\xbf_\x8b\\\xb3\x18H\x7f?\xe2B\x7f\xb6\x19\x8f\x81?\x9c\xefCl\xf3\x91n?38\\?\xdb(\xd7?*\x95_GZ+\xad\xbf*\xb5X\x01\xbd\xbb\xb2?\x19\xb5=\x9b\xf4\x1ct\xbf\x8f\xb1]\xdf|\xcew?\x9d\t$\x9d\x9b\x87\xac\xbf]\xecA\x0cI\xf3z?\n\x15\xbb\xf2m\x1er?\xd1\xbb`\xda\xa21\xa5\xbfB\xae\xcd\xaf`\xf4~?\ti\xee\'\xd4\x8d\xab\xbf\xae\xa0\xde\xca2ux\xbf\xcd\x83\x91\x90I[\x90?\x8f1\x13\x1e\xd0\xb4\x94\xbfZ\xb9\x00MC\xd7\x90?F\xc0\x1eO8\xc3\xba?S\xd3O\x18\xf5}P?\x14\x83NU\x12\x93p?\xc4\x02\xb5@C\x1eC\xbf\xc4\x83\x03+\x9a\xd0g?\xb3HC\xe4\xc9\xee\x91?\xbbe\x1ap\x9e\xa8\xa0\xbf-\x1c\xcbWr:\xd6?\x08\x96"KdM0?\xba\xdd\xea\xd1\x8a\xd2{?\xf5\xb5tmO\x97\xb9\xbf\xa0aN=\x84\x16\x83?\xb6G*Ta\xfd\xf7?\x8a\xdd\x06+ \xf8\xa5?U\x98q\xc7Q q?\xcc]\x8d\x98\xd6\xc8d\xbfZ{s\xac_I\x90?\xba\x82\xe4W\xca\xf0\x8a?*\xc0-\xa7\x11\xd5x?2\xb09I\xcc\x1e\xce?\xfa(7\xfcif\x80\xbf\xf6\xb5\xf2\xa5hL\x8a\xbf\x7f\x91\x83;@l\x9a\xbf\\\xaa\x91\xe4\xd7\x1d\xbc\xbf\x82$\xa8H]\x9c\xa3?\xd0\xc4\xf7\xec1F\xbb\xbfK\x1e\x91\xca\xc7\'\xd3\xbf\xb9\xa1:^\x8e\x1b\xb4\xbf7\xd1\xf9i\xa8\xc9y\xbf0\xeb\x1b\xf8\x98\xe6j?\xe4\x0e<\x91M\xfb\xbb?$\xb39-]g\x84\xbf\x91\xed\xb5\xda\xef\xc5\xb4\xbfW\xdc\xf6\xb0\x1e\xb7\xe7?<\xcf&E\xe1\xb0\xe9?\x18\x82"G\xaa,\x9b\xbf}\xc2@gGh\xe3\xbf\x81\x8e\xea\x83\xd6\xd6q\xbf\x8f\xc9\x05v\xed\xf3\xb9\xbf\x7f\\%\xa8Z\xe7\xeb\xbf1\xdaj\xe4\x9a\xc8o\xbfs$yw\x8a1<\xbf\x01*\xf4\xfb\xd3mp\xbf\xc93A\x16\xc4;\x8d\xbfYu\x1a\xf4\xa5C\x82?a!\x91\xd9\xb5\xd4\x81?\xea\x84jk\x88\x82\xa6?\xbf\x9f\x89\xcew4\xf9?\xb6\x19\x8f\xa98|\xf0\xbf\xa6\x80\x1ez\xb6\x15\x8c\xbf\x0c\xd1\x93\x00\x8a_\xa4\xbf\xb44y\xbe\x1dS\xdd\xbfp\xf7\x02\x8a\x12\x7fU\xbf\x91)\x9d\xcf\xb1[z\xbftk\xea\x19\xe5\x0e\x8c\xbf\xa22E\xf0\xad\xbaW\xbf\xa5~9\x15 \xf1\x98\xbf\xe4\'\xee\x86\xfett\xbf\xa8P\x7f\x99D\x94\x87?\xd1\x92O}e\x10\xbc?z\xa1-)}\xb7|?\xd3:$\x0bu\x15\x92?[\xcb\xb4FV\x8e\x93\xbf}\xb2O\xbd*6\xed?\xf1b\x07t\x10\xce\x95\xbf\x1eZB|\x02\x8ca\xbfw\xb2\xe1T\x91#\xd7?h\x90\xe5\x8b\x92!\x86\xbf\t\x87\xf8\xa5VW+?\xc3\x8f]\xbe\x03\xab\xa1?\x9b\x11\xdfW\x0f\xa4?\xbf\x11\xf3\x03\xfb\xd9\x9e\xd8?\x15\x8e+q\x18\x9bg\xbf\xa2\x10?"ra\x85\xbf\xc9b\xec\x17]\x84\x8a\xbf\xceo;K\xc39\x95?\xf2+{\x99\x17\x94\x9d?\xcb\xee\x01\xb4#rt?#\xb7\xe6\xf2\xd0\xd2\xc2?\xb1\xd6|\x02/ \x93?6\x11T\x17\xe8\x19\x82\xbf\xfbv\xf0\x9a\xb3\xbc\xc7\xbfR\xb7\xe4\x91\xc3\xb6\x82\xbf\'\xf4]\xd7s\xa6\x80\xbf\xc2t^=\xdb\x80\x83?_\x8a#\xa0\x1d<\xc0\xbf\xb5\xda\xc1)\xd0\x11\xca\xbfng\xd8d\xfe\xf6\x83?\x8b\xb1\xdb\x04\xfdVq\xbfDa\xbbym\xber?\x7f\xe2\xd9\xe6>\xd4\xbb?W;D\x9b\xac\xff\xc2\xbfv\x1c\x036\x8c\x8d\xc1?J\xb3\x8f0\xca\x83\xb5\xbf\xa4d\x88\xd2"\x04\xc0\xbf(\x14\\\xaf\x9fC\x9a\xbf8\xb3\xda=\xd0\xa2\xc0?\x80\x13\xb97H\xb1\xb1\xbf\x12\xea\xa9\xc9\xfaa\xbe\xbfuP\xfe?U/\xcb\xbf\xfc\xb1C\xa7G\'\xa6\xbfx\xe3\xcd\xd63\xc8\x80\xbfI\x15]\xb81\xbe\xc9?\xad\x10\xe1\xe5y\xa2\xe0\xbf\xdbv\x83\xb9K\xc3\x84?\x85n\xf6\x01\xc5\xc7\xae?(\x14z\xe8nT\xce\xbfp\x0f\x9e\xe4\x9a\xbf\x93\xbf\x9e\xb1\xcf\xea\xe5.\x87?\xe92\xfa\x92\x82e\x8d?\xcc7\xb6\x84W \xc2\xbff0:\x87\xe2\xc0\xc4\xbf}c4\x1eK\x93\x9e\xbf!\xe4\x88\xd2}\x04{?ph\xa5\xe6wHx?\x81^\xc6\xad\xd7\x9c\x95\xbfv\xdc*t\xf3y\x8f\xbf\xe0%\xd7\x87\x08\xfd\xc6\xbf\x88\x84\xfd\xbc}8\x94\xbf\xba\x89\xb6v\xb8\xd0\xd1?\x9d;\xed\xf7\xf0"\xc5\xbfo\x85w-\xd2\xe8\xea?\x00\xd5\xd4y\xff\xf2\xc1\xbf\xb6\x89\x87t\x1d\xb6\xb8?\x16\xfb*<\x8f\xd4\x84?\n\xa3I\x02\xfc-\xce\xbf\x85\xcb\xb1\xee\xb27\xa9\xbfS\x06\xf2\xa9\xa6%\xb2?\xc6\x87\x83G\xf3\x05\x86\xbf\xb0\x06l-<4\x96?\xff\xfe\xc6\x18\xe6\x83\xb4\xbf\xa0\xc5$V2\x91\xc0\xbf\xca\x14\x97IM\xc3\xc1?\xb5\xc6\xb2\x02\x8c\x89\xa0?\xed\xaef=-6\x86\xbf\xf6,\xd6\xecF\xb0\xc6?\xc3\x9f\x9a]\xf9\xe6\xa0\xbf\x012\x1b\xd4\xca\xa4\xe1?\xdc;\xcd\x977\x80\xa7?75\x87Q1\x95\x86\xbf\xedf\xaa\t\rI\xda\xbf\xa3\xd1x\xa8\x9d\xe3\xa4?4\xe2\x96>\xba\x14\xcd\xbf\xddYJ#\xa2\xf7x\xbf\x8e\x11\xc5\xd2\xe0J\xe2\xbf\xed\xa4Q\xe2_\x96\xd0\xbf\xe1\xad\xb6\xbf\xc6\xf4\xcf?\x007\x0fY\xe8\xa3\xa1?\x19\x9f\xab\xf0\x91\xf2\xb0\xbf\xfa\xda\xdf\xad\xae^\xdd?_\xf9\x1e\xb0\xa3\xe2g?\xaa\x0e\xb0\x91\xbb[\x89\xbf\xbf\xd9\xd4\x915\xeeV?\xfaF\x04\xaek\x85\xc4\xbf\x14?8\x07\xeb%\x8b\xbf\xa2<b\xa9!_\xb1?\x06t}\xf0\x12\x94j\xbf|\x066\x86\x14 b?\x94\x1b\x19\xeb|\xd7\xa8\xbf\\l\x7f~\x13\x0b\xa6\xbf]1\xc3Rg\\+?\xcdWVJ\x01\x98\xce?lec_\xd4B\xd3?\r\r\x15.a\x82\xa8\xbf\x91\xa2V\xa8\xf5\xaa\xa1\xbfp@\x01\xb9\xee\x9a\xb3?/~o/\xca\xa0\xb4\xbf}\x85\x9c^\x94\xca\xa8?ll\x9b\xf3\x19\xe8\x9f\xbfe\x1f\x0e2\x91\xa6g?\xb7I\xac\x1d\'\xbd\x91?\x8c\xf7\xee\xd4\x8d0w\xbf\xda%D=I\xb1o?G\x8ed\xde\xc9\xd3~?\x997D\xc5\x90\xe7\xa8\xbf\xcd\x012Mj\xf3\x96\xbf\x9c\xe8\x11a\x82z\x9e\xbf^\x19\r\xd1\xea*\x7f?_\x08\xad\x81\xfb\xdda?\x9b@\xf4e\xad\x1a\xe1?\x01\x1f MD\xc0u?N\x1a{S\x89\xaf\x86\xbf\xea\xfd\xd9XB]\xb8\xbf\xcb4\x81\x8f\xc7V-\xbf\x80\xa0\x99\xaaa\xf0V\xbf\xef\x04>\t\xa2\x14\x9c?\xe5\x10\xb0\xb0)8y\xbf\'.)\xd7cT)?\xd1j, \x11\xac@\xbf\xde\xce{\xc7e\xb6p?\xbd|\xc9\xe10\x95t?\xe8\x08\xcd\xc8o,E\xbfu\xce\'+\xbc\x0e{?\xe8\xbe\xb1\xd4\xc1\x04d\xbf\xe5\x81\xd5\'5\x1ap?CuJ\x18\xe17\x81?\x8d\xb2\x89\xbe\r"\x9c\xbf\xfa\xe8\xf1\x1crq\x9e?\x92fxr\x03\x0b\x8c\xbf\xafv\xb4{B\x1c\xa0\xbf\x88\x0c6!\x85\xad\x80?U\x17h\xf3L\xc3\x81?\xbe\xccR\xb3\x01M\x8b?\x15v\x10U\x8b\xfdv?1r\xd9\x8e\x88\xb9\x89\xbf\x8b\x021\xf9\xa6\xa4\x99?tx{\x1bFX\x99\xbf\xc1\xde6\xca\x00o\x81\xbf\x92\xa0\x03\xae\xb6Uz\xbf\x029Lt\xc7\x89z?]\xa2\xd7\x94B\xdc@?\xe6!\x97\xc0\x03\xd9v\xbfQ\xb0\xfe\xf7\xd5\x9fs\xbf\x89D\xc6\xd0\xbf.`\xbf\xa7\x91\x0b\xad\xf6x\xcb?p\x07\xd5o\xb3\xf5\xdb\xbf\x8e\xd6\x893\xfc\x88\xb3?\x19\x19b\xcc\xf5\x15~?L\xc80\xc2\xe3\xf4\x87?\xd4\xa3\xd0\xab\t\x0b\x96?\xc4\xc3\x07\xcb\x93T_?~P\xad"\x9eQ\x9b\xbf\xcd\ru\x18\x91\xb5\x94\xbf\xd4\x13\x8f?\xe5\xb1s?%\xc7\x1d\xcd\xf9\x88z?Z\xce\xd0?\xa2\x19y?D\xf7\xaf:\xdaaN?\xbfn\xc7\xbe\x81\x8fr?C\x99\x90MB\xd7w\xbfm\xadW\x08\x117\xd5?\x1f\xca\xdc\xb3\xe9^\\?\xae\x19\x16\x19\x97\xe6\x82\xbf\xef\xa2\xd2\xe3\xb7aY?S\xab\x98\xef@\xccM\xbf\x94\xd9\xfd\x8c\xc3\x07|?!\x8e\x14m\x82Q\x90\xbf_\x03\x96\xcf)O\x97?~\x0f\xf8\xd9\x17vr\xbf\x88\xdf\xfc\xbf\xee\xacZ?\xa0I;\xc8\x81\xb9\x7f?\xe7\x15\xaea\xee\x17?\xbf\xcf.\x9a,\xf4\t\x9f?\x83\x8fG\x8arR\xa3?\xe9\xea\x81\xf8\x95\x95r?;\xf6\xeb\x02\x1b\xb2\x9f?\xc1\xf1\xd2\xa6\xec4\x81\xbf\xeeK\xea\x01\xfc\x1e\x91?\xf1\x1d\xd2\xd3\x87\xb7\x85?\xdd\x03WM5>|\xbf\x9c\x03x2\x0c\xee\x8b\xbf\xdd\xb4;\xa0\xf6\xba`?\xf3\x12\xbcN\nA\x8b?\x18s)\xc7Z\xe6\xb1?tG\xd1\xd9\xc8\x95\x8b\xbf\x97\xdc\x90\xe9\xe2eE\xbf\x88G\x92^x\xf1\x91\xbf}w\xdd\xfcC\x1cA\xbf\n\xdf;F\xbd\xec\x80\xbfV\xd1x\x18\xc8\xd8\x8f?\x04\'\xa4\x86L\xf2T?\xa8t\x0b)\t@\x8e?0\xcd\xaa\xc5\xec2\x95\xbf0\x05\\\xebf\xad\xa4?\xc5=k\xa0\xe5\x8c\x83\xbf\xd9\x91"\xf1\xc0i\xba?\xfb\xca\x023\xdb)\x98\xbf\xe8\xe8G\xcf\xaao\xa0\xbf\x17\xa4\x1d\x08\x08\x18\x99\xbf\xb4\x8d\xe9\xeb\n\x95\xd4\xbf\xb2\x1e(\x14\xb2\xa4}?\x06\xa9\xbcI\xc5\x92z?\xd3\xb4th?\xadq\xbf \xf5\rIwB\xa3\xbf\xf5 vh\xe2}\x89\xbf\xeeo\x06[\x07\xdc\x97?\xbe\xbf\xb8`\x81m\xa6\xbf^P$\xe4Dy\xd0\xbf\xbd\xa4\xc4\xbb\xff\xcay?\x91\xe7\xcek\x87|\x84\xbf\xc2d\x1f\xaa\' x?\xe0\xed\x9c\x8f\xe0\x01\x87?\xa1\x81\x7f\x96\x93\x16\xb6\xbf\xd0h!%\r\x9d\r\xbfT\xfc&a\xbb\x95\x81?0\xd1\xd6\x7f/\x86\x81?\x1f\x19\xbeB\xc1\x9e\xa6?\x91SA1\xebI\xa0\xbf\x8b\x9d!\xf6\xff\xde@\xbf\xb9@\xefe\xc6\xb4q\xbf6\xfdq\xda\xcc\xcdw?\x848\xeeI[\xa5\x94?Y\xf3\x9c\x8f|\xd4z\xbf\x90b\xb7\x9d\xfd\x80y?=\x9b\xea\xa8`_\x9a?\xe4\xa9)\xb1\xf4X\x90\xbf\xcfD\xab}(\xc8\xb9\xbf\x89\x14\x85\x17<\xd5\x90?\x17\xbc)hG\x18\x99\xbf\x10\xf3\xb0_\xfe)\x84?\xe7\xcdT\x0b\xf1\xee\x7f\xbf\x97%W\x02m\xb6\xa5?\xd2\xf1i\x03\xca\xec\x84?1\xe9q\x84\n\xbd\xa7\xbf\xf8\x81o\xd8X\xa9\x83\xbf\xb8os\x06\x1e\x80\xa4\xbf\x02\x9a\xa0x\x82^p?9\xb4z\xef\xf5-\xa2?Ke|Ms:\xb0?`\x16C\xb2L\xf2Y?\xf7u\xf2H1w\x01\xbf\x12xd\xf4&\x8a\xbd?\xf7uH\x86\xf3\xaa\x83\xbf\'\x7f%\x8d>\x8a\xd1\xbf|\x8e\t\xb0~\xb0\x98\xbfH\xb8\tc\x83 B?\xd1 \xc3\xb4f\xcf]\xbfEZ\xaa\xd4E\xcc\x89?0\x16\xc6\xb2-v\xc6\xbf5\x1f5\x0e\xab\xff\x88?[\xc4N\xe8\xb7\xd8\xd1\xbfMa\xd1e\xa63\x85?rH%12\xf5\xa1?7\xdb\xd7\xf3K8\x94?>%\x16\x00\xa6C\xf5\xbf\x00\xa05\x9fr\xbb\xc0?\xb4X\x95\xafG^\xc9?[(L\x07\xc9\xe5\xb4\xbf5\xe8\xb6lN\x14\x99\xbf\x03\xaaI\xc6-x\x82\xbf$\xfb\x8d\xe6v\xaf|?p\xb1\xef\x07\x8a\x8d\xb8?\x9fM2\xa2~\x89N\xbf\x81\x01\xbd-L\xd2\xf7?\xe1cs\xc6l\r\xf7\xbf \xd4\x85\xae\xce#\xb1\xbf\n\xe8\x01\x8aW\xa3\x80?\xf6\x0f<\x9d\xb5\x17\xc2\xbfQQm\xc2Q\xcf\x7f?\xcfy*\x06\x19\xc3\xa1?\x84S\xfb\x17U\xd9\x8f\xbf\x11\x82\xfe8X\xcb|\xbf\xe0\xc9R\x1d\r\xfe\xb5\xbf\xf3G;B\x8a3\x95?D\xb4\x89\xbc\xdc\x83\x89\xbf\xece\xd6\x98$]\x88?)\xf5\xcc\xbc\xb5\xe9\x8b\xbfgF\x83\xd9\xb52\xb5?b\x92C wb\xcb?\xfd\\VF\xd9o\x82\xbf\xc5\xc6\xa6*\xc8s\x8e\xbf\xee9\x877M\xea\xe7?Y\xaa \xe3\x8b\x06\xb7?\xa8\xe5R!\xad\xdcv?\x91\x05\xa8_\x8dF\x8f?\xc7\x1b\x9a9C&Q\xbf/\x88k\x8b\xcf\t\x89?\xd6\xf6\x02\xbf\xd0\xa9I?\x16\x90\xe2\x07\xf6\x17\x90\xbf\x81J\x8dn\x1bWd?\x14=\xfa\xc7\xabZ\xb6\xbf\x0e\xca\xaa\xa4\x1e\xb3\x85?G?\xf2\xf08\x10t?W\xb6\x07\xd5\xd8\x03x?e\xf3\x0b\xa4\xc6E\xbc\xbfn<fB\xfe\xecy\xbf\xa00\xb7O\xa7\xf9\\\xbf\xb5\xa6\x1clb+\xd1?\x16\xb3\xe2\xb2\xca1\x91\xbf/\xb2f\x89\x97]j\xbf\x8d\x0fZ2\x08o_?\xf3J\xbaxB\x1f\x93?kXi\x04\x1b\x95\xc3\xbfi\x11\xda;\x87D\xa5\xbf\xc34\x9aw\xeb\x80\x80?a\x02\xac\xe3X\xfa\x97?\xd9O\xea\xce\xd7`\xaf\xbf\xa6kY\x85\x8b\x99\x87?\xe7#\xfc\x07\x08`m\xbf\x84"\x11\xfc\x97\x9e{?\xf8\xe3\xa2~\xf2\xb7{?\xc4\xd99\xb4\x1e\xabd\xbf\xbbW\x9c-)\x87\xa2?!z\xf8\x8aK\'\xaa?\xa8\xab\xd0\xff-\x13\x8e\xbf\x84\x085\xe7p\x83\x8e?\xdcA\x9d\x02\xe8C\xc4\xbfx\x88M\xa1.\x7f\xd1\xbf\x80$,\x93\x06\xfb\x91\xbf\xd3>9R\xef\xbfy?\xaa>\xa4\x8e\xca\x85\x8e?\xaeT><HX\xec?X\x19r\xee\n\xcc\x90\xbf\xb3\xff\x8e\n\xd3\x00\x98?\xd5\x9b\x937\x8b\xb2\xae\xbf\xb3\xca+\x1f\x80c\xc7?\xed,M9/$\x8a?\xd6\xfc*p\xfc\xa1\xa1?\x10\x85\x92\\+\xed\xba\xbf<4\nw\xa8U\xd0?%\xa7X\xe3N\x8a\xbe?Cks\xc9\xed\x9b\xad\xbfq\xcc4D29Y?\x05\x1c\x95\xdf\x98\xe5\xd1\xbf}\x1eET\'&\xd3\xbf\x08\x99\xcb\x91\x87\xd0\x81\xbf\xba\xc0\xaf\xcf\xb5\xb7\xba?)\xa8K\x0b65\xc4\xbf\xaa?<z\xaa7~?\xb0\x8f\'\x1f\xe8\xb8u\xbf\xde\xc8\x19\xcd\xd7TU\xbfTf\xc3\xf0\xf0Y\xd2\xbf\x8d\xf3\x96\x1a\xbd\x80\xe1?\x13\xef\xf0\xa4\x7f\xde\x8a\xbf\x1eT\xb8G\xa0jf\xbf\xdc\x96{\xbd\xc4\x1f\x99?u\x9e\xf5\xf8\xd4H\x8c\xbf:\xa5\xaeVJ\x1c\xb5?\x8dy`\xf0\xac\xc7\xca?|:N\xd7\xe8A\xa1?B\x1d\x9cw\x86\\\xc7?\x9a\x9ff\x8b\xacR\xa6\xbf+A\xa5\x9c\x9b\xf3\xc9?\x10\xf1\xb2\x8a\xeb\x07\xb3?c<]\x8e[8\xa3\xbf\x02\xaf@\xb4\xd3I\x93\xbf\xfb\xea\xcb\xa2\xcc\x13\xa1\xbf\x03\x16>\xff\xa7V{\xbf\x96\x13$\xef\xd9\x90\xc1?\xae\xeca\xd5\x1c\x82\x9b\xbfugC\xbdp\xe5\x81\xbfh\xe9\xf5/\xf1\xba\xb6?vP\x10\xbe\x00S\xa6\xbf\xfa\x06\xfcN\xab\xe0\x99\xbf~\x11\xa5\xe0\x91\xfb\x95\xbfm\xee\x84\x8bn4\x8e\xbf\xbd\x7f>l\xb7\xaf\xc4\xbf\x02:lg\x81G\x96?\x9e\x8dsD\x90\x18\xe5\xbf\xe4\x00p\x96w2\xa2\xbf#\xdb\xeao\xbbe\x89\xbfm\xfe\xf3[\r\xf9\xd1\xbft\x15\x93\xb0\x9ai\xc1?\x06\xd0\xa2\x98=2\xb8?\xa7\x0bQd\xd7\xa8\x90?]\xb0\x9d\x1d\xeb\xa0\xb7\xbf\xfa\r\xb6rA\xdd\xcf?Bp\xcbk\x92\x8a\xa2?I\x91\xa0\xe2\xd6.\x82?\xf7I\x157\x8f\x96\x90\xbf\x12C?\xa3\xd2\x8c\xd5?;\x03\xc5Ys"\x9e?,z\x81\xa9\x98\xb1\xac?\x01tb[k3y?\x0f\x11\xc8\xad!\x8e\xc1\xbf\xc1\xf4\t\xcc\xebH\x8a\xbfG\x0bg\xfe}&j\xbf\xbb\x0c\xb56\xf0i\xa8?\xf4\x07\x11ew\xaf{\xbf\x87\xf5\x0e\xa9z\x18\x90\xbf`|\xd2\xd4\xa7\x18\x9b\xbf\xc1i\x19\xe5<e\x98\xbf&\x15\x97\x9e!\x19\xc9\xbf\xed/\x01\x1e\xb3q\xca?\x8f\x0e}\x11"\xfd\x8e\xbf,\xb1\x02\xca\x80\n\xa6\xbfR\xb5\xcd\xd0\xb1\x86\xa4?\xeem\xfb\xb2\x19\x19\xa2\xbfH0\xc4\xbb\x92\xf9\xb4?\xbdN0\t\xdd\xd0\x83\xbf\xbc\xb7\xa1z\xa7\xd3\x92\xbf\x91\x1e\x1b\xc7x\xa8\x90?\xf2\x18\xa6h\x1f\x0f6\xbf6\x9b\x1bz\x1c\xea|\xbf\x1cA\x9c4\xc5\x99X?\x19\xf0\x1f\xd14\x00\x98?!\xe7N=C\xe3\xa5?\xb6xpt\x009\x9d?\xee\x05\x86\xa4n3S?\xa6\x94[\xcd\xf8\x93\x98?\xd5\x7f\xa5\x07\xff\r\xe2\xbf\xaa\xe4\x8a\\\x7fQd\xbf\xb6\xb8\n?\x1d\xafn?\xbb\x96\xcf\x8bS\x15\xc2?\xff\xd1\xcfn\xb0\x96c?(\x95\x9dC\x1e\x1d\x8b\xbf\x17U\xc8B\xa5\xc9U?s\x07JI\xff%\xb5?5\xaa\xd7\xf5\x95\xd8o\xbf\x17\x7f\x19\x89M=\x8b?\x19\x96\xeb\xee\x8d\xaa\x8f?\x1c\x05\x94D\x0c\xae\x86?x-H\x18.\xf6\xa1\xbf\xd6\xb9\xbe\x0b\x0c\x07\x85??\x983[\x02\rl?\'\x88\xe9r\x1d\xb0\x90\xbft\x82\xa15\x8b\xb5\x90?d]\xc4\xb2\x8e \x85?\x19|\xdbmJ.\xa6?\xaa\xc1\xb5\x1fV\x1c\x80\xbf\x9a}\xbf\x87\xde\x9f\x8b\xbf\xece\xd2=\xb9\xaf8?1j5\x8a\x1c~g\xbfOzA\x03{3\xa9\xbf91\xa3\xe0\xc4^a\xbf\xfdR\x98\x88\n\xe2\x87?\x89\xef\xfc\x88\xdb\xe3\xbc?\xa3e(\xa03?[?5\xe3\x0b\xfet\xeb\r?ns\xdc{8\xab[?\x16|;\x8d\xedxd?\x9e\xeck\xf4S\x91g?\x8b\x1195R\x9d{?\xb0\xbf\xf4a\x047w\xbf\xa1\xa8^_\xcf\xd8:?\xbfU>\xf1\xf0\xee\xc0?Cq\x85\x9d\x80\xa2\xc6\xbfdJ ]}\xae\x9b\xbf\xf9\x8f\xfc\xa8\x13 l\xbf\xcf\xc9\xd3\x0f\xd4\xef\xa3\xbf\xd5\xa4q\x12\xf1\xd9\x80\xbfY\xd7\xe5\x9d\xf8\t\x80\xbfS>X\xa0h\xbc\x94?\x94\x80Jeh\x7fG\xbf\x80\xb7sX/\x81w?\x16\xa4\x0e;\rud?"$\xf8\x9fO_\x82\xbf\xef`\xc74\x90\xf3@\xbfn\xcfs\x85\x12\xd7\x7f\xbf$\xb2\xc1\xae\xe2\x0c\x8b\xbfH\x05\xcd\x80h\xbb\xc9?`\x1em\xd4\xddq\x88\xbf\xde\xc0\x91{^\xd9X\xbf\xd5MQdV\xe8h?\x86W\xde-\xb0e]?\xb0\xaafKn\xf60\xbf\xb8\xfc\xf3\x9c\x80\xd2\x8d?\xf5\xd5\xa31\xc7\x08\x91\xbf#\x87\x9bG\xa8\x0b\'\xbf>m&\x1a\xa1-[\xbfu>\xd3\x06U\xead?\xe5\x98\xff\xd1B\xaf\x93?\xb8\xaa\xd3\x03\x86\x8cQ?}o\xeal\xa9\xa3`?k?\x1e\xe1\xcf\xc1\x96?5\xd1\xf3\r\xf3\x1a\x92?\xe9u\xb2\xa0bY)\xbf~=\xe6\xb0%\xfcu\xbf\x01\xca Fkub\xbf\xb2 -\x97\xfe\x92p?1Q\x87\xc6p\xda\x81\xbf\x98\xbeK\xcd\xf1xl\xbfM\xa2\x11\xed\xa1i\xfc\xbe.\xc5\xe8\x0fW\x81i?\xe8\x12\r\x8a\x8aL\x97\xbf2\x05\xb1\xd5z\xbd\x88?\xd2{/\x91n6\xa2\xbf\x8a\xba\xbf\xa8ZV\x81?\xe3\x03)\x8bETM?\xfbJ6\xd8\xe4&\x81\xbf\x84_\xaa&\x00\x18\x88\xbf\x86\xad\x06\x1e\xc4\x9b\x84?\xd4\x92`\x96-\xe3\x9e?"V\xc2\xcd)a\xa7\xbf\x8cEs\xd3y\x90t?\x9aU G?\x87\xbd?.<a\xdf\xf3\xa3e\xbfg\xc2\r:\x93b{\xbf\x9c"\xf8\xa7!y\x90\xbfg\xb8ag\x81\xa3\xcc\xbf\xe1.\xdb\xa7\xe4\x98w?^IrNl\xff\x85\xbf\x81SWv\x1bL]\xbf\xd7\xdf\xeb\x8d\'%\xa1?k`\x96\'\x9a`k\xbfV\x8a]Toa5?=\x9c\x95\x8b\x07\xbe\xa2\xbf\x0b\x0f\xac\xac\r\xb7\xbe\xbf\xd0B\xfd\x84e\xca+\xbf\x12\x0b\xd8\xc4\xfe\xe1{\xbfV\xdb\xe2\xbb\'D\x92\xbf`\x92HB%\xb3\x19\xbf\x02\x19\xcchB\xe7\x9a\xbf\xad\xcf\xb2\x08\xf2)l\xbf^\xda\x0b\xc2\xa3\nu?\xb4D\xf7G\x90\x17\x90?\x9a\xda\xc6\x96\x9d4\xaf?\xf6\x01\xab\xe3\xa9\x88\x91\xbfR\xde\xeac\xdcJ\x93?\x824P\x17\xdc\x0f\x90?\xb9\x15U\xf3\xd2\x81\x9c\xbf]/+x\x8d$\xa2?\xf2\x06\xd8`k\t\x8c?+"\xe2\xc5\xe8\x9c\x89\xbf\xd2\x01\xe6\x01\x1e&\x86\xbf\x9f\xbb\x06H\xa7\x99\x85\xbf\xcb\xd4\xbaIZv\xa0\xbf\x9f\x04\x10P\rT[?8\xad\xf0\x8a\x82\xfc}\xbf^a\xf2\xf3\xd5E\x9c?$\xf9\x80\xaf{j|?\xdf\xb7^\x93\x9bL\xb4?\xbe\x12\x92[\x1d\x10~\xbf<\xfd\xf2\xe3\xf6\xf1\xa7\xbf\x9cj\xe7\x8c\xff\x08\x96\xbf\xe0\xd68\xa3 \xecb?\xb02R\x99\x93\xd5\x9a?\xd4\xfb\xd1l\xa6.\x94?\x0f\xfd\x18\xce\n\x16\xad?\x16\xefb7\x80\x81a?\xb4\x95$\xfd\xf5\xdd\x03?\xd86b\xda \xf3\xb2?\x00\xad\x01\xf3g\xa2\x8f\xbf\xae\xb7\x04`>\x1a\xd2\xbfh\x85\xb7D\xae\xbf\x93?(\x14\x87\xd5\x0c\xa4\x88?}Y\xb5\xc6\x00\xcez?j\x9c}B5\x0f\x83?`\\\xdcdK\x03\xe9?\x1a7\xf8\xe7\xc8\xd6g\xbf\xce\x9b\xb8\xf4\xcaU\xd2\xbf\xf3\xa7\xf6\x91O\xffp\xbfG\xd6\xec\x91\xed\x1b\x96?Kk\x0c\x94r\xfd\x9c?\xdb\x81\xbav\xd7?\xc7?a;\x8a\xa5\xbb\xa3\xc7?\xb7*\xce\xc9I\xcc\xac?\xf4\x98e\xd3\xb8M\xb2\xbf\x8c/\xb0\x9bw\x1f\xa8?;\x11P:I\x1a\x80?N\x91,9\xa5\'a?G\xe6\xa6WN\x02\xf5\xbf\xe5\xc9d\xfc\x9c"\x84\xbfg\xec\x9e/n\x00\xab?(\xb6\x91\xc0\x97A\xb7?\xce\xbc\xdc\x99\xd9\x1b\xa4?\'h\xae\xc0\xd1F\xb1\xbfi|\xd0x\xb8\xa6\xa8\xbf\x90\x1c\xee\xb4Y\x81\x96?*WQZ\xe8\x06\xaf?R"\xf6:\x95\xc3\x93?W\xa4\x88\xbe\x1b\xb0\xa2\xbf\xcd\xff5\xae?\x87\x9d\xbf\xca3\x9a\xd4\x154\x8b\xbf\xf5\x1dh\xfc\x9f\xe7\x90\xbfvU,B\xfaG\x8f\xbf*\x92p\xfbq\x12~\xbf\xf3\xcd\xef+O[\x8a\xbf\x80\x9c\x19w}\x1fb\xbf\nU\xab\xa3,-B\xbf\xbc\xd7@<\x99\xcf\xa7?\x16%\xc8\xf4V\xc8\x9b?r#\x1d\x88a\xa1\xe7?\x8c\xafK\xfd\x0e`\x93?^\xfc`\x17\xc0-j\xbf\xaf\xb8\xdf\x8d\x18\xfd\x86\xbfU\xb7\xecY\xb2u\x85\xbf#\x81\xe0=\x87\x06e?\xc9\xdea]>\x8ea?a\x08,\xf45ss?\xc1e\xdb\xc9\x08~\xae\xbf\x90NV5\x11\x1e\x93?j-\'Z\xee\xe4\x81?y>\x96kQ\xc2\x88?9P\xdd\xf5u>\x8a?\xa1\xfe\x0e\xf3p\xc9Q\xbf\x9a \xf8=\xf1\xe2\x94\xbf\xed\xaf\x7f\x04\xb0\xcc\xaa?\xca]a\x8dp\x95\x9a\xbf\xf9\xc3\xc4s\xa8\x8aF?\xd3\r\x84\x1e\xb2\xd9s?))\x1d\x0e\x87\xbe\x9f?\x8f?\xfd,\xce\xbd\xda?\xff\xbe\xfe\x89\x7f\x18\xa4\xbf\xde\xcc`\x01\x81a}\xbf\x02|y\xefC\x9ep\xbfl4\xcb\xe7\x18\xd0\xa2?B\xe7\x82\xf7\xb4l\xa1\xbf\x7f\x7fY\xe5\t\x02U\xbf;*Q\x94\t\xab\x9e?d\x98\x06\x1f`\xec\xa7\xbf\x80\xd4\xc9i\x14Dq?\xf7\rS\\P\xb8\x95\xbfl\'\x14\xd5sb\x9b?\xc2\xc6\xd1S\xb5Cx\xbf\x05k\xd5\x1c5\xa2\x94?1< 2\xf7\x9c\xb0\xbf\xd8\r\x0c\x1d\xeb\x98\xab\xbf47\x0er\xcc\xbb\x98\xbf\x8f\xc0\x02+\x14\xaec\xbf\x955K\xd0\x14\xb4\x93?\x02\xdeC\xdf\x15<\xda?\xf1\x8c\xe7\xdb\x8a\x88\xc1?\t\xb7u\x9b\x0e\xe6~?\xc1\xe4\x13Z\xf6\x8a\x92\xbf\x85A\x9a{Ec\xbf?kl5c-\xfe\xa0?t\xaa\x86\xd26Oy\xbf\xc5\xe1\xed \xef\x1e\xc5\xbfE\xdcA\xc9t\r\xcd\xbf\x84d~\xe3<\xd0\xc6?H\xdb\x8bH\xb9t\xaa\xbf\xd9^\x99\xc2+R\x96\xbf\xe6\xf6P%x\xbe\xb5?\x85\xee\xea6op\xd0\xbfI\x84z\xffCi`\xbfc\x94\xb0a\x8e\xef\x89?\x98\xb5]\xe7\x03\x16\xb3\xbf\xb6\xb6#\xefn\xf0e?)\xb2?\x97\x19\xac\x90?\xb4\x11tJI\x7f\x96\xbf\xba\xce\xbd\x1c\xafE\xbd\xbfL"\x88\x0e"k\xd6\xbf\xf9\x07\xe7\xfa\xf2^\xa6\xbf\xac\x15\x17\xc6!\xea\x90\xbf\xec\x86\x9d\xdf\xfc\x17\xa2?\x01\xa7V1 :\x92\xbfD\x90<\xfe;\xe8\xc4?\x02\x84[\x00\xb2\x1a\xab?\x9f\xfeVC\xdd*\xac?<\xad\x0b\xa2[V\xb5?k>\xfa]\x93\x96\x96\xbf\tJ\xb6\x9d3T\xb8\xbfuzE\xadJ\xae\xa0\xbf0C\xd1>\xac#\x90\xbfLw\xf1?\xe3\xe2\xb9?i\x9e\x07-C\xd2\xa6\xbf\x82\xc0\x0cq\xd4\xe0m\xbf\xcd{\xa9\x9a\x1f\x07\xac?\x17xF\x9a\xfaX\x90\xbf\xb5\xe7\x7f\x90\xef\xea\x95\xbf\x91\xe7\x9d\xe8fk\x90?u\x03\x83-\xc2j\xa1\xbf\x84\x0e\x19s[-\x9a\xbfY\x93mc\xce\x04\x83\xbf\x10uQE\xd9\xb7\x91?\xc2\x00\xe3\xccFZ\xbc\xbfR+_\xa5:\xe0\xa9\xbf\xf3\x81\x80\x1c_&\xa5?]\xacFV\xa6\xc5\xbe?\xa5J-0\x8c\x0e\x88\xbf\xa0[|\xd6\x0b\xf0\xdc?:Wu*!\x14\xaa?\xa0}V\xd3\xc3k\xdb?\xfb\xd4I\x15\xd0{\x91\xbf\x952\x88\xfd\xa0.i\xbf\x95j\xff\x96F\xe6\xbe\xbf\xf3\xcfQ\xe5?\xf1x?C\xe7\x07\x06\xfb\xde\x9b\xbfb\xe4\xe7\x187d\xa0\xbf\xc7\xc15\xdd|\x02\xd2\xbfAh[\xd0`\x87\x89?\x98\x8ee\\L\x06\xa9\xbfs\x93\x03?\xdb8\x85\xbf\xfb\xadn~\xbaM\xc4\xbf\x10\'!}\xe4\xaci?\xcb8\x19\x03\x95\xf8\xb0\xbf\xe6=9\xc6j\xd7\x9a?\x16\xb2B+X%o\xbf\x14/\xfb~\xfd\xc0\x9c\xbf\xe0\x04\x1c\x11\xa0\x92\x97\xbf\x1f\x80\xa8\xd4\x89\x9cw?b\xf1G:\xb4@\x90\xbf\xd9\xbd\xd6\xc1\x93\xff\xa8\xbf#\xe9\x01\x8a\xe4\xf5\x99\xbf\xaf\xed@o\x11\xb4\xa2\xbf\xddr.\xb0\x8b\xeb\x9e?\xeb\xf4\xf5b\x0b\xb7\xac\xbf\xeb\xf4\xe5\xfco\xa0\xdc?\x108\x9e\x7f\xcd\xea\xa7\xbf1\xcfq\xdc\x0bh}\xbfl\xe9\x82\x11\xec\xffg?\x03`\xf0\xde\xedQ\x81\xbf\xed\xba +\xd9\xafP\xbf<\x1b\xd8\xc2\xd1?y?\xb31\x9a\t\xff\x19t\xbf\xee\xd5\x14r\xbcGC\xbfw\x9ft\xc2\xf9E{\xbfO\xfb\xb7\xa8\x96\xbcr?\xa1\xde\xad\xc4\x17\x96\x81?^\x03&\xa6A\x85\x86\xbf7\x8fji\x0b\x1f\x88?\x830\xd4n\xf9\x16D?\xa1*\xb2\x1b:\xb0\xda?\x80\x0e/)\xe8\xafh?\x16\x15\x8d\x7f\x14Ya\xbf\x84\xa0\x9ax=\xec\x9b?[\xae#\xfb\xc8\xbb\xb8\xbf\xe9\x89V\x9a\x0e\x98]?\xf1Q\x11r\xb57\x7f\xbf\x8a\xfd\xee\x02\x1dfq\xbf\x8e\xf3\x9dZ0\x1fW?\x92~\xa5x\xbc\x13\xab?\xfa\xee\xf2W\xce\xbf\x90?T\x14\x93\x04\xc4Cn\xbf>JNrW\xb1\x90?\xa7\x06\x13j\xb1"a?e\xce\x1b\x84SRd?G\xed\x81\xd1e\xaa\xa8?\xaf\xff\xf1\xd3\xfb\xeb\xb4?\xc4\xa8\x96l<\x02s?\x03_\xd2\xd8Xm\x86?\xd1\x99(}0\x04\x92\xbf3\x1d\xb92\xab\x00\x90?\x0f!\xe7R\xc7yd\xbfI\xe8\x16\xe7\x9fM\x81?BS\x8dd\x9bd\xc7\xbf\xc5\xfd\xe4\xa94R\xa3?\x13\xfe\xa8\xdd \x8di\xbf\x83\xc0w\x1d\x8f\x038\xbf\xd3\x9a\xbc\xf8\xc6\xea\x88?\xf6(%Q\x95\xfdz\xbf\xb1\xdc\xdc\xe1g\xdfT?\x84\x0b\xd9\r.\x12{?\xd5!h\xfe8(s?"\xbf\x9a\xf7\xf7\x84\xad?\xc9"\xbe\xdc\xd0\x0e\xad\xbf\x9f;Bu\xd5\x14\xa1?}\xb4\xce[2\xeeO?\xc0\xeb\x8ay\xdf\x9d\xa0?\xce\xfd\xc2\xef\x92\xfdl\xbf]\x06\x92\xe7\xb0\x1cr?\x8d\x1bqd\xe1\x88x?\xe0\x88\x98\xb3\xf6\xe8\xb0\xbf\x86\x0f\xd4G\xe1\xf5w\xbf\x83U\xe2\t\x81\xa3T\xbf\xa7\xdc+\xf0\')i\xbf\x7f;V\xaf\xff`w?\xc6T8\xd4\x83Os?\xad\x9f\xda\x04LOs\xbf\xd6\xf72\xdd\x81\xf0\xb8?\x1d\xd6\xfb\xd2\\Rj?\xaf\xbc&\xc0\xa2-H\xbf\xe5\x85\x8e\xdf\xf1)Y?\xd4fV:-\x04u?\xdf*i\x05\xe7\x92o\xbf\xad[\x12mX\xc2\x84\xbf7KaF\x90\nR?5dq\x88\x84\x85\x86?[\x05\x7f;;\xc2Q\xbf\xbd#!\x806Lj?\x0b\xb3@\x01\xff\xf4\x89\xbf\xb2!\xa8\xa5w\xa3\x9b?e{\xc4\xb5\x96\xde\x8c\xbf\x877\xe6\x83y_o\xbf,\n\x9e`\xd8{r?\xa5\x03jt_\xd5\xa0\xbf\xd2\xc3K*9As\xbf-\xd3\rx\x9a\x10h\xbf\x8c\xa3%\xca0\x02F\xbf^-\xd3\xe4U\xe9H\xbf\xc8\xa8\xf8\xbc\xaa\x0ef?\x03\x8a\xe0V\xeb%\x82?\x06\x9e\xed\xc0\xa3Y\x9f\xbf\x90\x7f\x84B\xae\x90\x94\xbf\xcdA\x81_\x8a,a\xbf\xa9\xf4\x88\xe1 \x8b*\xbf\xbd\x8b\x80\xb3\x15=\x81\xbf\x1d\xf9P\xb6\x00\xa0\x84?\xda\xf5\xf0\x94j^\x94\xbf4\xfaP7\xcf\xd2x\xbf\xf8[aNG\xe6l\xbf\x06\xa5\xdc\xcfu\xd8n?\x84\x9djO\x91J\x86?<\x1c\xd8\xf3\ntc\xbf\xba\x1b? \xd5\xe9\xb4?\xc7\xc1\xbc\xddRO\x7f?\x9ds-\x1bO<\x8b\xbf\x181Z\xda\xb9!s?O0\xb2\xf2\x91\x8d\xb8\xbf\xa3e\x96\x96,\x1ch?5\xac\xb5\xd8w\x02\x93\xbfv\x16\xb0\x98\x1f\x96p?\xc1\x91\x14\x93\xfd\x93\x84?F\'\xd9\'Em\x82\xbf\x10\xd6&}Y\xb6\x84\xbf\xa87{\xf0S_\x84\xbfvs\xd2\xaa\x94\xa2\xbc\xbfx\xb7\x07H\xaf\xfez?\xe0+>y\x91\xf4\x8c\xbfb\xfa\xf9o6\x03\x82?\x06I]\x04\x87d\x8d?\xfa\xd9\x9c\xd2\x15_\x9f\xbf\x05`\xe5\x10\x9c\x81z\xbf\xa8<5\x85\xce\xfb\x86\xbf\xb2\xb7\xa9\x9a\xe80\x81?\xa5\x04tMP\xa0\xa2?\x8b\x95kjd+\x8f\xbfg\xdc\xcd\xb7\xc8\xa2\x8c\xbfw\xb3Q\xb0Y/|\xbfa\xb7W\x08Do}\xbf\xec\x1cIu#\x83\x99?e\xbe\x8eM\x08\xab\x91?X\x11\xaf\x80\xf0Z\x91\xbf\xda\xc9\x03\xbbv\xe6\x95\xbf\x8d\xe4{F/\xc6V?\x1bH\x13\xca\x1a\xb4\x89\xbfx \\\xbc\xc2\x1c\x84\xbf]`WR\xfe\xa9p\xbf\xeb\xa9a\xb5NM\x96?\x89d!\xa4\xb4\xfe\xa2?u\x94\x8a\x896F\xa4?A\x94\xfe\xfb\xf4\x81\x8b\xbf\xc7\xdf4\xdb\xc8O\x92\xbf*\x1e\xc3z\xe8\x0c\x86\xbf\xfc\xe4C\xec\xf5U\xa1\xbf(\xc6@\xed\x99z\x8d?\x96We:^U\x91?\x89d\x11\xef\x8e`\xa4?+1\xae\xf79\x84m?\x1bw\xbf\x15\xcfFT\xbf\xd5\x1d\xfa\xc2\x18/\x9c?B\x06\xdd\x10\xf2\xcex?g\x07~\x18\r)\xc4\xbfE\x92!;5$[?Fe|\xf2\x88bz?\xa9B\xbc(\xc8\xafq\xbf!\x03\xe4p\xb9*\xbd\xbf\x19\xd5\xe1P\xb6\xeb\xa1?d>m\x86?\xa2a?\xf2O[\xc2\xe3\x1f\xc0\xbf\xda\xe2\xb1\x08:\x93Y?o\x08\xb8\x08\xc4,\x8f?\xbe\xa0\x96.\xf3it?\n\x11\xb7Y\x0b\x19\xaa?Ob"\x90+\x8c\xf0\xbf*n\xb8\xb77[^?Lk\x93mn\x1c\x9e\xbf=\x890\xb5\xf0\x9e\x98?7\xf5\xdb\xa4\xad\xbf\x83\xbf\xdca\xe8\xfe\x04\x80u\xbf\x160\xb0\x1b\x1by\x96?U :\xfd\xca\xfap?\xc5o\x00\\\x06\x8d\x88?ax\xc6\xe4\t*\x9c?\x02\x1c\xa8\xb2\xba\x9fz\xbf*\xbf\x95\xa8\x08\x07\x82\xbfl5\xfex\x96v\xab\xbf\xd7Nqj\x90.p?\xe5\xdf\xcf$<\xaf\xe4?\xc5\xbe\xb3c\xbe\xbaG?r\x92\xc8\xa3u\x80\x93?M\xd9~\xe2<i\x92?\x14\x14\t\x9dp\x8b\x9a\xbf\t\xb7v\xa6\xaf0\x8a\xbf\x87\x1a\xdc!\xcd-U\xbf\xc1\xdcpu4r\x81\xbf\x89\xe5\xe4\x0f0>\x93?\x1e@\xc5?\x0b\xd9p\xbfn\xce\x8a\x83v\xcf\x81?\xa5\x93\x07a\xfe\x88\x9e\xbf\x0e\xf0*\xf8\xc0\xcf\xa4?:\xb2o\xca\x08\xc5\xb1?H\x1e\x0c|\xd1T~\xbf&\x05\xec\xd0"y\x8d\xbf\xce\x9dE\xfa\x1e\xaf\x88?K/g\xe7\xa9\xe4\x82?P\x8a\xe7u?\xdbR?2N\x86\xc6\xdf\xbfP\xbfJ\xe8\xf6\xd6\x95LQ\xbf\xa4\xbf\x93\xb4\x00\xc7\xb0\xbf\xeb\x1f\x88\xbb\x12[\x7f?\xcdE\x10\xfc:m\x91?\x88\x9dt\xde\xadm\x82\xbff@.E\xc5\x14X\xbf&I\x8b\xab0\x9cS?\xc8\x14?\x96\xe5V\x90?2\xc7\xd8\x0b)\xcc\xa5?k\x7f\x873\x13K!\xbf{\xf8\xf0t\xb1\xb1q?\x02q$\xb2{h\x8a\xbf\xcc*\xf7\xcer\xe9\x83\xbfR8*\xc2\x08\xbfa\xbf\x94\x96k\xaf\xc1\x99P?\'\xa1\xdb\xd5\xd9\xa8\x88?\xb3\\R\xb1\x89iT?\xda\xbf\x97\x0e\xa5"\x9d\xbf\xd2\xda6\xbew\xc6\xa4?g&\xc8}\x94\\i\xbf\xfc\xaaN\x8a\xdd\x98\x8c?\xf6\x1d\x95`\x1f\xb4\x89?m\x8a\xd6nB\x1a}?\x99\xbb\xa6\xee0\xfe\x92\xbf\xc8\x10\xe5\xa0\xc4\xbc\x97?\xe0m\xae_\xc6\xa3q?|\x16\x83\xad8\x1d\x81??u#D\xda\xc1\xa4\xbf\xbcK\xaf)\xbf\xc8\xe1?\xe7M\xfb/\x87Qe?\x8fa[S\xc0f\x81\xbf\x9a\xeas\xf0iMx\xbf\xc1G\x878\xbfe\x82\xbfE\xc9\x06\xf8\x19\x90\xf4?\xc6\x0c\xec\xe0d s\xbf\xbe\x9c\xab\xdcVl\x96?\xbd-\xece\x81\xdb}?/\x12\x86\xe5\xf5\xde\xa6?;O\xc7\x05\xfd\x1c\x86?\x06}n\xc9\x88c\xcd\xbf@-\xbb\x13\xf4\x8e\x88\xbf\xdb\x94\xc1!\x13\xad\xa3?h\xe84\xbb\xe8\xc1j\xbfZ2\r\x15B\xce\x93\xbfWWf\xe5\x16w\xa0\xbfn.\xfb\x04\x99\x06\x9d\xbf\xaf,6J\x01\x99\x8e\xbf)-\x88\xf0g&\xc2?\xb3\x00\xaa\x0b]~\x8d?n\x14^\x9dXWq\xbf\x98\x95\x0c0\xa1;t?\xf8\xe9\xcf=^d\x86?\xb8\xb7\x89YlY\xa1\xbf\x10)\xe0^G\x91\x91?(W\x05%\x8f\x9a\x87?\x98N:b!\x0f\'\xbf\x99\xca\x0e\xa8\xb2\xde\x94\xbf\xdb])g\xd3Rq\xbfw\xe0\xf9\xd4U\xb9\x98?\xb4~\xf1\xd5w\xb7\x82\xbf\x95\xe2\xb0\xb7_M\xc8?\xd1-Yk\xa0\x94X?M\xb6T\xd5\t\x8d\x89?\xe6R\xe8C\xb6\x9e\xa6?e5[7\x0e\xa2\x8d?L\x93$\x04e\xd7u?\xc4\xd4 b\xf2\xaa\x90?Q^\xeb\xa6\x01Q\x90\xbf\x8al\xb6\x8e\xa2S~\xbf\xa0\x80*\x91\xa4\xd0t?9\xff|V\xb3D\x92?\x7f/c6\xc6\x18(??\xc3\xcf\xdb\x88\x9cy\xbfr\xac7\xc22<\x8b?\xd7p\xb4\x90\xa7\xf6\x81\xbfyt\xf0\xf4\x9a\xf7|\xbf\xed\x0f9\xe0J\xa5s\xbfD\x13\x86\xdd l\x9c?N\xca\xf2\xc8I\x92\x97\xbfI\x9f\x8a\x02\xa6\xbe\x83\xbf\xeb\xb6\xdc\xd4\x95\x18\x95?\x95a\xba\xc5\xb8\x9a\x8a\xbfl\xb81X\x19\xdd\xa1\xbf\xec1\x7f\xc6u\x0f\xc1\xbf\xba\x10\xfaR\xe1\x95\x97\xbf\xf0\x02"-\xd4~`?\xcf\x91y\xbc+Y\x86\xbfv:\xb2\xdf\xdb\xbc\x8e\xbf\xb1\xd8\x12\x9d\xc4.\x86\xbf\x1b.\x98\xad\xfe\xa2\x89\xbf\x82/\xae\xd4\nu\x8b?\xe0.-4\xba\xc3\x81?\xa2\x8e\x19\x12\x08\x94\x90?\xbf\r\xe2\xf6*\x1b\x80?1\xe75\x85,\x00\xb0\xbf\xc6\xe3\xce\x86\x95:t?n_3e\xd9\xd9\x7f??\x9bU\x82\xf9\xe9\xf1? \xf9\xcfs\xf5\x01\x93\xbf\xe7\\\xe8\xbe3\x0el?\xe5}\xca\x85\xb41\xd7\xbf\xea\xc1\x81\xdcv\x8d\x85?O\xe7@\xb1P&D?\xca{\xf8\xfa"(\xaa?\x13\xd4\xe7l[2\xa8?OR\xa2\xa8\xb9\x99=?\xa3\xbc\x1eG\xa9F\x89\xbf\x8c\x8dk\xf0\xd7f\xf1>#\x8f\xa8\xce\xf0\xab\x92?SKv#\x810\xa1?\xa8\x0229\x17\xb7\x94\xbf\xd8\x88\xf3\xa0\xf3\xad;?\x8d\xedq\xbar)q\xbf\x0b\x1eT\x7f\xd1\'\xb0?\xea\xc6qF<\xfd\x81?T\xaf\xd1~J\x1bc\xbf\xe0\xb0\x19\x7f \xb3\xdf\xbe8\xa9*\x9d\xec\xbf\xa7?\x16\xc6j\x14o\x8d\xae\xbf\xaaRH\xeb_Ac?\x8e\xf1\xf1B4\xe1\x8c\xbf\xe7d\x82$\xfaA\xaf\xbf\xa8\x957\x99\xad\xd3\x80\xbf\xc1\x8fVP~\xa0\xa0?gm\xe3x\xf4<\xda\xbf\xee\x9a\xf0b7\x1ef\xbfau\xec\xc3\xfc\xf2\x97?\xd9\x80\x82\x80:\xc8\xa4?\xae\x80\xe9*\x95\xec\xc6?\xa1\xbf\x871`Hw?k\x87w\xfd\xfbHi\xbf\xd5\xb2\xb6\xdbp`\x89?\'\xb3\xd3O\xe1\x1b\xb4\xbf\x90\xed\xac\xfe\xb42\xe0\xbf-\x00\xa4\xe37^\x90?\xe1.\xecP\xa1\xe4\x91?\xa45\x87l\xc8-\xc2?\xd8,8\xd6H\xec\x9d\xbfc\x11\x94\xae\x91\xe1\x87?b\x83.\xcbQ\x9b\xe7?\xb1\x1c\xe7\xf3\x05\xc4\xad\xbf\xb0\xc1\xa1\x10\xe4_\x93?\xe8\x9a\xbc\x11\x10\rt?\x8c\xba\x97\x99\xb8C\x89\xbf\xf3\xc5\xda\x99\x06m\xa6?.\x0f\xe4\x91,\xda\xa1\xbf\x04\xe3\xe55\xd1D\xa8\xbf\xac\x81\x08\x19[\xba\xdc\xbf\xb7\x16\xe1Ju)\x86\xbf\xf8r\xe1r\xaco\x88\xbf\n\xea:\xacGvv\xbf\xac\x9d\x8a\x83"\xd8o\xbf\xfax\xf4\xb5\xd2X\xb4?\x90\xce${\x8c\x8c\x98?\xf5\x1eY|4\xc4\x7f\xbf\xfa\x1a\xe7\x92\x91te\xbf\x13\xf9Y\xae/\xb8\xb6?#\\x\xf0Ly\x86?}\x16\xc0\x7f\x16\xc5\xa4\xbf\xb1\xf1\x86\x7fF\xbc\x8c?h\xd4\x8c\xa7(\xb5\xcb\xbf\xdb\x0b~\x19o\x95\xb1\xbfE\xa7\'\x04\xd1\xfa\x92\xbf\xad\x02\x01\xe5bM\xa3?\xb6\x114\\is\x9d\xbf\x12\xee!/\x07\xe0b?VN\xda\xe6\xc1\xb4T\xbf\x1c\x12\x91wYcj?\x87\xf7\xa8\xbc\xe0\xf3\x87?\xab\xfc_\x8dO\xa6\x98\xbf\xa3\xefW3\xf0\xaap\xbf\x08\xe71\xf8\xaf\xc3\x80?\xfd\xa0\xca\xc5L\x9cr?\x7f\xb3@\xf0\x14Nx\xbfO\xb9\xbfs\xafH\x83?=\x94)\x9b+\x14\x96?\xd2\xb8\x8c\xbd\x89\x1f\x97?\xfaE\x89\xc5\x0f\xec\xa1\xbfF3\x11:\xb3\xd4\xa4?\xee\x9b\xa8\x9b\x91\t\x81\xbf`\xa9n\xb6\xa6\xfa\x85\xbf\xd0\xc1\xd4\'\xff\x92a?{0P\xaa\xe5\xaf\xb0\xbf\xb1\xc16\xe0\xa1\x93\xb5?\x9b\xd2\xdbC\xb9n\xb5?+\xd0\x04\n>\xf6\x82\xbf\x0f%X_|p\xaa?\xc5\x01\xa9\xb6\x86#\x80\xbfUZ\x9a\x96\xbfM\x81?\xc9\xd6\xad-\xfcpn?\x9b/8% 0s?/\x01\x0b#\xa5\xd2\xa5\xbftL\xfd\x85\xf95\xa0\xbf\xdd \x9b\xb1!\xf1\x83\xbf\xe7\x8b\x18\x8d\x87;\xc2?_\x8c\xa1oI\xc3\xb2\xbf\xc6\xf9\xc1\x8a\xeb\xbb\x81\xbf\x97\x98\n\xca+/\xe8\xbf\xdeOc\x9fL)\x92\xbf#\x13\xdeD\r\xdc\x8e\xbfa7\xdd\x0c\x91\xff\xeb?\x9f\x13&m\x87W\x91\xbf\xcdF\x02\xc7Q\x8bn?\xf9u\x94\x069\x85\xb2\xbfT\x97#W\x005\x8e\xbf\x1a\xa7\x19\x15\xe4\x19i\xbf[\xea\r\t\xaa]\x91\xbf\x8c\xebu\x12*\x98\xac\xbf\x03\xa1\x17u\x03\xfa\x99?\x18\xe6\xac\xaf\xc5\x0f\x86\xbf\xdc?\n4dK\xa0\xbf\x8c\x0e\xe9\xc8\xd8\xcbp?\x8d\x82\x82\xfbg\x96p\xbf\x00\x04vS\xbe\x19\x8c?\x93\xd2\xf9\xbb\xe1\xf4\xa9\xbf\x91\xfe\xa9$\x1c\xc9\x9c\xbfhgZ\x96M\xc0\xc3\xbf7\xccj"\x89\x11d?%\xc8\xf9z\xbf\xe8\xb1\xbf\x88\x8aj\xef4]p\xbf9^\x03\x9c\x1d\xaa\xab\xbfA$\x06\x08\x168\x9e?\x9a\xcb!\x08]\'\x8e\xbf\x08\xbd\xf7\x9c"\xa4\xd2?C\xfb\x04XX0\x96?=\xb2\x87Z] \xb1?\xf7r\x1a\xea|\x1f\x84?\xbcjI\xaf1\xed\xd1?\xaa\xc1\x96\x0f\xf6+\xab?\xb79\xf0U\xe6\xee\xc7?:\x00\xe1\xf4\xb1Xy\xbf<\xc2vIa\x9f|\xbf\x06\x0f\'\x0f\x1c\xb2\x9e\xbf\x82\x1a\xbb\xdd\n=x?[FtH\xc9a\xea?\x1b]\xeb\xd0\xb0\xba\x88?\xb2\xcf*\xee"\x82\xab?\x10\x8e\xf6\x136\xf4\xcc?\xd4x\xad\xdbb\xea\xd5?\xe3\x06\x133W\xb1\x12?H8qv{\xcf\xa1\xbf\x88X \xc2\xa9J\x99?\x12J!\xabsv\xd0?g\r\x9b\xdf\x83#m\xbf\xb7\xbd\xce\x0f:R\xa2?\xc4\xc2d%\xd2=M\xbf\x153|\x85\x04\xe1\xa1?\xcfm\x83\xb7\nZ\xc1?\xe2\'\x13%\x1e8\xc8\xbf\x18\xc0\x97\xf2\xc7u\xc7\xbf\x80\x04\x1c\xf7\x02a\x91\xbf\xf4y\x9c\xa1[N|\xbf\xf0n\x95ZQ\xb3\xa0?y\xf0j\xc7H\xa1\x98?0L^\xae\x98\xe0\xb1\xbf\xc3\xafNI\x12\xa5\xaa\xbf9\xb6\xd6T4ak?\xa9 \xc6\xd3\xd7\xce\x85?\xd3\xb8|\xc6\xb3\xbc\xad\xbf\xbb\xb5\xd3\xed\x1a\x17}\xbf\xe6Q\xfcA\xb5\x1e{\xbfw\x92\'?z\x80\x93\xbfw\xac\x16e\xe8\x99\xca?\xbcR\x08\xe5\xd6i\xa0\xbf\xfd\xf5Lx\x00\xeb\x90?\xe3\xc9\n\x90\x81\x00n\xbfN\xa1HA\xed\xdc\x90\xbf\xd4\x15\x95\x19\x7f\xc1\xbc?\xff\x97\x11\xa6\x12\xd4\xd7?\xf8\xbf\xaf\xd8\x0c\xb7\xb6?.\xe1\x8a,\xbf\xdes?r\xa9\xc6\xcb9\x87\x84?\xa5\xe3*o\xa0\xbdz?\xbd7\xa00\x10A\x9f?\xb4\xabD\xc5\xce\xfa}?L\x80I\xf0\xa8a\x9a\xbfh\x95E\x89\x07\xc1\xa8\xbf\x11L9\xfbKe\xbd\xbf\x07\xa4-\x12\xa8t\x99?\xd2\xda\x82\x0cE\xb1|\xbfP\xa3\x9f\x19f\xf6\x9b\xbfn\xca}\x91\'p\xbf\xbf\xfc\x7fN\x87\x12)z\xbf\x95\xee\xc6\x87\xcc6\xa7?\n\x80"\xeb;\x93\xae?M\x86\xae*\xe5\xee\xb6?ug}\xfa\x15\xe0a?\x89)(\x997\xf4~\xbf\xa3s\xcdYK\x8e\xca\xbf(\xd2\x03[\x11T\xad?\x11xQc\x91\x1e\x94?\xd9\xc1\xf5\xb9\xd5\x07\x85\xbf\x9f2\xc2\xa6;R\xc5\xbf\xd8\xc9\xdb\xe2\x02\xc0\xa1\xbfz\xba\xbb\x99\xf0\xc4q\xbf\t+\x04\xf4\xe2\xb7\xb2\xbfly\xbb\xe4L\xf5u\xbf\x90<\xf31\xb8\xf3\x8e\xbf\x01\xb2\xc1\xc8\xe8L\xbe?a"\xb79\xaf\xeay?\xaeN\xe4?\xd4\xfd\x9c?\x00%I\xde\xfe]\xd8\xbf\x9c\xbc\xb3\xc4\xf8\xd0\x8c\xbf>^S\x83M\xe9\x80?\xcbdj\xc4\xc5\x91Q?a\x86\xed\xe3\xbd\xa3\xc3\xbf\xe7~\x85 =o\xa2\xbfew\xfb\xfa\x145\xa3?Q\xe2\xbc\xd8\x16\x92\x92\xbfQ\tP\x85\nQ\xb1\xbf\xaa\x86\x8e\xbe2=\x8d\xbf\xb3\xcc\xbe\x9b\x8d\r\xcc?\xe5\x12\xe2&\x95+\x86?\xe06\xf4\xe7\x0c\xfa\x98\xbfA\xed\x84\t\xf0\xcb\x9f?\xde6\x9do\x1dJ\x9d?\xe6\x8dr\xc9\x86I\xb4?T\x1c\xc2\xab\xaa\xa1\xd7\xbfU\x93\x91\x98L\xea\xb8?\xd7J\xe2\xb4\x95rw\xbf\x9d$;3\x8aO\xf3?\xeaz|P^+\xb6\xbf\xe27n\xd5 \xc9e?\xd6{f\xbb\xbe\x80\xb6\xbf=peYxE\xb3\xbfm\x9a\x008\x91sw?\xddD\xe7\x12S\xf5\x96?\to\x89\xebuV\x81?7E\xf3\xcc\xd08\xb1?,\x0c\xab\x97|\xb6i\xbf\x04\xa1\xa5\x85\x8e\x0bN\xbf\xcfL\x15J\x95\x89\x80?\xeenH\xd6\xc8\x84\x96?o\x15\xdb\x8a\xfd\xef\xba?\xa8\x9f\x161\xd7H\xbc?8\x94TnQN\xba?8\xefm\xc17\x1e\xc0?\xdeI\x83|eK\xbc\xbf\xa5\x84\x1bG%]\xe7\xbf5\xe3\xa4}q\x10\xa1?&\xceB\xdd5\x0co?r\xe0\xc0lw=\x90\xbf\xa2\xeb \x94\x9a+\x84?\x8f\xb6\x08\x03DS\x87?\xedO\xbf\xb2\xe5\x11\xb6\xbf\xc5\x12X\xa6T\xd2\x94?Up\x8fjQY\x90\xbf\xe1\x8a\x1d\x10e\\\xaa?Y\xcfP\xbf\x05\x98g\xbf=\xf5\x15\xac@\r|\xbf\xb7\xb0T.\xe9\xdc\x8d\xbf+\xd8\xc2:\xa2\xce~\xbf\xff|D\x89%\x18\xb6?\x19\xee\xa6\x87\xe0\x9b\xa2\xbfZ\x18\xc7\xfe\xc4Lu\xbfxf]\x8f\x87\xa5\x96\xbf\x8aDD\xa4_Mz?O\xdeiP\x12\xd1\x94\xbf\xd9eg\xb8\xb4\xda\xb7\xbf\xfc\t\xb1P\x90\'\x99?\x8b\x15%\xfb"k\xa3\xbf\xb2^\xef>\x86E\xa8\xbf\x88u\xea\x1bZ \xb7?\x89L\xa9r\xd3\x0b\xc5?\xf6g\xbae\xd0\x15y?7\xdf\xf3\x0cE\xa5\x9a\xbf\xba\xc5\xf82\xf6}b\xbfW\xb7H\xd8\xbd\x97\xa1\xbf\xb4\xe1\xe7\xb2\x8a;v\xbf\xca\x87\x06uk\x1c\xa6?\xc2\xc1\xf2\xb59l\x97\xbfz#:s\xfd\xef\x81\xbf\xb42\x9cf\xd2\x98s?*\xfb\x8f\x10\xc61\xa4?\xcdm\xc1R\x01\x19\x99\xbf\x81\xc4\x8f\xb9\xb4|\x81\xbf-\xa4\x05EX\xdc\x9e?\xcc0\x01\x12Q}\x9d\xbf\x16Z;L\x8e\xdc\x80\xbf\x9b\x0eJ:\xbe\xd7\x89?!X\xfc(Hxm?\xf7WR`=\xc1\x80\xbf\x04\xf3Pt\n\x11\xa1\xbfoS\x80\xdb4\x97\xb4?J/F\xbb\x87\x1d\xb8?\xa7w\x7fO\xeb/\xd1?\x85\x1fHt6\xb0\xb2\xbf\x97l0\x8f\xa4\x9d\x9e?\x1b\x14M\xa3r\xfb\xbb?I{\\\xeb\xbb\xbc\x80\xbf\xb2CD\xa81]\x9c?\x8e\x82\xe0naF\xa6\xbf\xdf}\x05z\x15\xb2\x9a?\x84Vf\xd4\x1cJ\x9c\xbf\x9d>\xdel\xd2_\xb2\xbfPC \xeat5\xc2\xbf"\xdf\xbbl\xf2A[?\x91Q\x9b\xc4\x8c\xf5\xbd\xbfy\x9e\t\x92!.\xed?Qy\x04\x0f\x94\xa1a?\xf67\xad\xa1Z\x86\xb2\xbf\xac?w*u\xae\x95?\x8f0\x89\xb1\nT\x98?\'\x07\xed\xa9\x87`\x8f?I=+\xf8\x99\x11\xd0\xbf\x01\xa3\xeeo\xb0\x0eA?\xa8\xd9\x87\xda\xd7u\x9c\xbf\x10\xab@\xa7\xb14\xe6?\xe6<m"O?t?\xe5\x98\'\xcahN\xa5\xbfD\xca\xb3\x7f\x8e0\x9e\xbf\x02z\x07vE\x9di?'
p628
tp629
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp630
Rp631
(dp632
g78
(I00
I00
tp633
sg80
S'float64'
p634
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g0
(g10
g5
Ntp635
Rp636
(dp637
g14
S'auto_14119'
p638
sg16
Nsg17
g0
(g18
g5
Ntp639
Rp640
(dp641
g22
(lp642
(lp643
(g25
I306
g26
S'nade_train( * args[1:] )'
p644
tp645
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p646
tp647
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p648
tp649
a(g37
I24
g38
S'self.add_parameter(TensorParameter("W1", (n_visible, n_hidden), theano=True), optimise=True, regularise=True)'
p650
tp651
a(g41
I29
g42
S'parameter.add_to_model(self)'
p652
tp653
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p654
tp655
aasbsg48
g621
sg53
g444
sg85
Nsg73
g631
sbsg589
I01
sg84
Nsbag0
(g554
g5
Ntp656
Rp657
(dp658
g53
g430
sg558
Nsg261
g495
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g474
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp659
Rp660
(dp661
g53
g125
sg558
Nsg261
g148
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g127
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp662
Rp663
(dp664
g53
g435
sg558
Nsg261
g531
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g510
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp665
Rp666
(dp667
g53
g449
sg558
Nsg261
g0
(g49
g5
Ntp668
Rp669
(dp670
g53
g449
sg54
(lp671
g56
(g57
(I0
tp672
g59
tp673
Rp674
(I1
(I2
I100
tp675
g66
I00
S'F\xc0\x89\xbfd\xd5\xa9\xbfXFz\x02\xf1t\xb9?M\xd6\x12\x93\xab+v?K@w\xb0O\x1b\xa6?xW\xd8\xdf\xb5\x82\xe8?VU\xe8\x82\xd3\x8d\xe8?"\n8\xd0\xd2 \xe1\xbf\x04\xbe GlS@\xbf\x90w\xe3\x8e\xe0Q\xf1?v\xd1\xc0U9\xc2\xb2?\xc1\xaf\xa3\x88\xa0\xf2\xc3?p\xaec\xb6q%\xcb?\xf2\xbaSY\xc4\x08\xdf\xbf\xe4\x96\x99\x85{\xc4\x87?z1\x1d\xd9Zz\xd9?y\x11\xa4\xc8\xaey\xde??s\xca\x01\\\x96\xe1?\xe1*\t\xac\x06l\xcf?\x185\xf4<Dn\xc1?@/"_\x18K\xd8\xbfS\xf5\xf7\xa5\x06\xfa\xd0\xbf\x93\xa0\x1c\xb2\xaa\x13\xf0?\xb4\x956\x038\x11\xcd?s\xc5\xaa}\xfcs\xeb?f\x05 \xa9 <\xb9?\xdb\xd1\x82U\x06\x83\xc6?\xe2\xebA\x81\xbe\n\xcb?\xbc\x13)\x08v0\xa4\xbf\x1d,\xfcf\x05c\xda\xbfIG\xf5\n\\{\xe4?\xcc\x8b\xf1:\xe4\x90\xe3?e^\xb0\x84%\x05\xc2\xbf\x8e\x05\x03:+\xa6\xc6\xbf\xc7\x0ey\x89&\x83\x9a\xbf\xedt\x97D\x8d\x16\xc6?\xe19\xc6\xc0\xac\r\xa8?\x0e\xea\x1b?S\xc1\xe1?\xd7\xb3\xdd\x10\xe3\x04\xe9?ObU\xd2g\xba\xbc\xbf\xbd\x8bY\xd3\xf7\x05\xc0\xbf\xfe\xb7\xf8\xcbIZ\xe4?\xb8\xf2:\xa9\xfd\xa4\xd0?\xdfM3(\xe74\xb2\xbf$S\xdd#\xef\x9e\xa1?\xb84\x9b%\xcb8\xa7\xbf\'\xa2\x06\xf5o\x9d\xb1?\x8b\x87\x7feV\xd4\xd1?\x9d\x82\xa7t\x9e\xee\xd6?\xd6\x90\xf2\xd7\x8b\x1d\xbd\xbf\x80A\xe0\xdc\xef\xbf\xc4?\x9b\xd7~}\xe5\xdf\xc3?D\x95\xaf\xe9\x953\xb7\xbf\xee\xb4\xac\xe7Mb\xc2\xbf\x1f|\x90\xe7\xd4M\xb1?\xc8\xb7\xe4\xd18p\xba?!b\xf6\xc5@V\xab?!\x91j\x8d\xcd \xd4?s\xf0\xfe\xa5\x96\x8e\xc6?C\x8c9\x80\x92\xe6\xa7\xbfL\xce\xda\x11B\x9d\xd0?\x9e\x91\x90\xebT\x84\xe8?\xdf\x97\xc9Pu\n\xd6?\xd4w\xfb1\xf41\xe6?\xdc\xe29<\t\x03\xba\xbfvWQ\xc9\xa0\xa4\xce?\xd0$\xff\x17\x18\x03o\xbf\x19Q*\x8e\x1d&\xd7?z$\xae\x1f\xb9\xd3\xc0?\x86\x18\xb3X\xbe\xfb\xd2?\xc8\xc7h\xa2=\xb3\xbf?k\xa7~N\xcb\x9dm?\xb10\xa4\xa5 5`\xbf+\x88\r\xcf\xb1]\x9c\xbfj\xbb\xed\xd4\xfe\x19\xd9?\xb1\xca`\x9a\xf1d\xc5?"T?\x9c\xb7z\xc2\xbf\x82?\xf1\x13o\xee\xc1?\xdc\x7f|\x97}U\xce?\xe8\xc0;\xf8}\x8b\xa3?P%\xd0\x8c\xf4^\xcb?\xa0\r\x81\xca\xee<\xc9?[M\xef\xf0\xc0m\x93?w\xc8\xc1g\xces\xa1?\xb8\xb5\xc6O\x07\x1f\xab?@\xf2\xda\x18\xb2\xd5w?\xef\xbd>@\x1cj\x94?VZ4\xed\'\x0b\xa5\xbf\xc6,\x9a\xd0\xd3\x8c\xc6?\xcc\x06\xcbw\xb2\xa7\xd6?\rt\xe7\xb1\x0c[e?n\'alv!\xc0?clMf\x11\xd0\xd5?\xfbZf;V\x02\xc6\xbf\x13\xe6\x1aLU\x18\xca?s\x81;\xdb:e\xdd?\xaeMq\x13\xb9E\xe0\xbf@c\x88\xb6\xdc\x9c\xd5?\x13\xbe(\xfe\xda\xbe\xc7?\xd4\x94\xc9S\x17p\xa5?\xf8\xcc\xb8\xb5j\x18\xbc?\x00\x00\x00\x00a\xa4\x81?\x00\x00\x00\xe0h\x18\x84\xbf\x00\x00\x00\x80g\xa6g\xbf\x00\x00\x00\xc0\x81i\x89\xbf\x00\x00\x00\xc0\xbc\x8cn\xbf\x00\x00\x00\x80V~_?\x00\x00\x00\x00c\xdel\xbf\x00\x00\x00\xe05\xc6T\xbf\x00\x00\x00\xa0\x9b%w\xbf\x00\x00\x00\xa0"\xb5\x94?\x00\x00\x00 d\x88`?\x00\x00\x00\x00Ltx\xbf\x00\x00\x00\x80\xa7\x92\x87\xbf\x00\x00\x00\x00U\xad\x9c\xbf\x00\x00\x00\xa0\xe8\xb7h\xbf\x00\x00\x00\xc0\x18jV\xbf\x00\x00\x00`\xe7\xc3\x85?\x00\x00\x00@\xeb%e?\x00\x00\x00\x805wj?\x00\x00\x00\x80)Mc?\x00\x00\x00 \xbe9\x82?\x00\x00\x00@\xb5\xbci\xbf\x00\x00\x00`Ych?\x00\x00\x00`\xbb\xd7h\xbf\x00\x00\x00`\xcf\x94s\xbf\x00\x00\x00\x80\xc6\x90R?\x00\x00\x00\xc0\x83\x80|\xbf\x00\x00\x00\xc0[\xa9\x80\xbf\x00\x00\x00\xa0=\xb5\x95?\x00\x00\x00\xe0\xa9}\x85\xbf\x00\x00\x00\xe0\xad\xf0o\xbf\x00\x00\x00\xc0\x183\x82?\x00\x00\x00\xa0w\xa5\x86\xbf\x00\x00\x00\x80d\xd3f\xbf\x00\x00\x00`\xffx\x84?\x00\x00\x00\xa0<3\x89?\x00\x00\x00\xc0B R?\x00\x00\x00`(t\\?\x00\x00\x00\xa0\xe5\x02~\xbf\x00\x00\x00\xe0\xb5\xc3q\xbf\x00\x00\x00\xe0\xe0^\x90?\x00\x00\x00@|\xff}?\x00\x00\x00\x80j\xe5t\xbf\x00\x00\x00\x80\x07\x99\x93\xbf\x00\x00\x00\x00IO\'\xbf\x00\x00\x00\xe0\xd7}M?\x00\x00\x00\x00)\xd2m\xbf\x00\x00\x00 \xa5\xf3\x96?\x00\x00\x00`\x96\xd3\x98\xbf\x00\x00\x00\xc0m`\x8a\xbf\x00\x00\x00 \xcaAq\xbf\x00\x00\x00\xe0/\x7f\x80\xbf\x00\x00\x00@V\x8f\x84?\x00\x00\x00@Q\x12\xff\xbe\x00\x00\x00`&\xdax\xbf\x00\x00\x00`\xd3q\'?\x00\x00\x00\x00\xcctt?\x00\x00\x00@yj\x8a?\x00\x00\x00@HSB\xbf\x00\x00\x00\x00\x0b\xc3f?\x00\x00\x00\xc0\x8cKr\xbf\x00\x00\x00`\xe0\xc1\x82\xbf\x00\x00\x00\x80\x7f"\x80\xbf\x00\x00\x00\x00\xb6;3\xbf\x00\x00\x00@\\\xa6\x82\xbf\x00\x00\x00\x00\x8a\ru?\x00\x00\x00@\xd7\xd9\x80?\x00\x00\x00\xe0\x83&P\xbf\x00\x00\x00\xa0nh\x91\xbf\x00\x00\x00 \x9cJr?\x00\x00\x00\xa0]\xaa}\xbf\x00\x00\x00\x00\xd1\xb7:?\x00\x00\x00`P\x9eZ?\x00\x00\x00\xc0\xcf!\x8c\xbf\x00\x00\x00\xc0|\x84\xd1>\x00\x00\x00\xe0\x1c\xba_\xbf\x00\x00\x00\x00=\x00{\xbf\x00\x00\x00\x00\xe0\x13u\xbf\x00\x00\x00\xe0[\xcap?\x00\x00\x00@\xe7\xce\x90?\x00\x00\x00\x80B\xefd?\x00\x00\x00@\xf3"}\xbf\x00\x00\x00\x80\xceBu?\x00\x00\x00\x80\x00\x91\x92?\x00\x00\x00\x80\x94$\x88?\x00\x00\x00\xc0!X*?\x00\x00\x00\xa0\x8f\x16\x94?\x00\x00\x00\x80.4\x87?\x00\x00\x00\xa0\x94\xfe`?\x00\x00\x00`\xa94\x87?\x00\x00\x00\xe0c\xbf\x81?\x00\x00\x00\x001\x03\x8c?\x00\x00\x00\xa0\xdcs\x83\xbf\x00\x00\x00\x80\xb3\xfd\x94?\x00\x00\x00\x00\xb8lx?\x00\x00\x00\xc0\x83nx?\x00\x00\x00\xe0\xdf\xb9\x9d\xbf\x00\x00\x00\xe0\xbf\xeb{\xbf\x00\x00\x00\xe05S\x80?\x00\x00\x00\x80\xe2\x0eA\xbf'
p676
tp677
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp678
Rp679
(dp680
g78
(I00
I00
tp681
sg80
S'float64'
p682
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g0
(g10
g5
Ntp683
Rp684
(dp685
g14
S'auto_14122'
p686
sg16
Nsg17
g0
(g18
g5
Ntp687
Rp688
(dp689
g22
(lp690
(lp691
(g25
I306
g26
S'nade_train( * args[1:] )'
p692
tp693
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p694
tp695
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p696
tp697
a(g37
I28
g38
S'self.add_parameter(TensorParameter("bs", (n_layers, n_hidden), theano=True), optimise=True, regularise=False)'
p698
tp699
a(g41
I29
g42
S'parameter.add_to_model(self)'
p700
tp701
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p702
tp703
aasbsg48
g669
sg53
g449
sg85
Nsg73
g679
sbsg589
I01
sg84
Nsbag0
(g554
g5
Ntp704
Rp705
(dp706
g53
g462
sg558
Nsg261
g0
(g49
g5
Ntp707
Rp708
(dp709
g53
g462
sg54
(lp710
g56
(g57
(I0
tp711
g59
tp712
Rp713
(I1
(I21
I100
I2
tp714
g66
I00
S'\xab\xd6\xefErV\xb0?\xfe\x92\xe3\x02\xc6\x9f\xac?\xd7\xf4\x0e5\xf8v\xcb?\x1a\xf0\xa26\x88:\xc9?D\xc6t\xb9\xf8\x9dc?\x0c\x96K\xc5\x03\xa5\x9b?\x80\xae\x80\x1b\xf34\xc9\xbf\x17\xecb~K\xcc\xc5\xbfa\x832\n\xfb\xec\xcc\xbf\x0f1\x94\xe6MP\xc9\xbf\xa3.\x0ekTg\xb5\xbfP(\xaef\t\xd9\xca\xbf\'x\x88\xf5\x14\xf3\xc8?+\xe9|\xc6\xe2B\xc0?T\xe2\xea\x90o\xea\xa8\xbf\xdcC\xf3\xebw\x9ca\xbf\xaa\xde\xfd\xc3\tI\xc7?\xe0)\x1eb\x1b\xbe\xd5?\x8d\xb5\xc7\x02\x19\x04y\xbf?&\x8b\x19\x95\x96[\xbf\xaa\x02m\xbe\xe7\xfa\xc1\xbfX\xda\t\x81\xfbQ|?_{\xafg\xeb<\xb8?/K\x1d\xfe^\xb5\xb4\xbfu; \xed\xe2j\xb4\xbf\x85\x9e\xffx\x87~\xd0\xbf#NX%}\xbev?\xc0\xd3\xe2\xec\x94\xf6k\xbf\xd3M\xdb\x99\x96\xe7\xa3\xbfcOh\x93\x82\xbb\xa5?\x15\xd9\xd48\x1dY\xd2\xbfv\xc7\x18\xf3\n\xd8\xc5\xbf\x16{\x9c\x80\xfc\xed\xc0?\x04L\xe9\xafz{\xc3?\xe4/\xe0\x88#y\xb2\xbf \xb1\xce\x1b\xd5\xa1\x9d?\x81\xf3\xc8\x1dnd\xa7?\xb1;\xbf^\xbb.\xb0?i\x06h`\x93R\xae\xbf\xb0\xc9\x17\xd9\xac\x8e\xc3\xbfC\xed\x17\xef\x03~\xbc?Q_\xe1\xa1\x89\x9d\xc8?\xca\xe2V\xa3\xe7u\xc0\xbfX,\xb3\x8e(\xf7\x87\xbf\x06\x9e&+l\x9b\xb3?\xd2>\xbe1\x98\xab\xd1?\xd7J\xa0\xde[5\xaf\xbf\x0b\x04\'q\x1dD\xa6?\xb9\xf2\xa6N\x18\xa0\xbe?\x00\xa7R\xb9\xf8R\xb1\xbf<\xad\xc6a\x1c9\xd4?RD\x02\xde\xc4\xe2\xd1?;\xf5\xf7\xd4\xb3O\xb0?\xa5A\x1a\xd6\xddF\x97\xbf\xda\xbf\xb9\xd5\xea\xbd\xa3\xbf.%_\xb3\x97\xc5\x8c\xbf\xb4\x90\xf1\x8c\xc9,\x9e\xbfY`k\x1b\xa5w\xb4\xbf\\\x1a\x83\x05\t\xea\xb1?qA\x9e\xc6\x18R\xb2?-\x7f\x8b\x86\xe0\xdd\xb7\xbf\x19\xbc\xc3\xbb\xdai\xbe\xbfr@\xc4<\x12\x92\xad?\x96\xd1\xb5qz\xde\xb6?S/!*-\xc3\xcc? z]\xd4\xe4\x10\xc2?\x06\x92\x8c\xfc\xd0at?\xfd\x86\xde\x08f\x13\x8d?Q\x15\x01\xb1\x12Sv\xbf\xb5\xd3\x19\x82\xf3{v\xbf\xc0\xdb\xea\x04\x98t\x9b\xbfe\x19\x1e\xdbkF\xb1?L_\xa5\n\xe5\x9f\xb7\xbf\x12\xa9GZ\xd7R\xc0\xbf \xd3\xc0\x95f\xca\xc1\xbfC\xce<\x00p\xfe\x8b?1\xc1\xc7\xb4\x9c\x9a\xa6?\t\xeb\xffVX.\xa7\xbfB;?;\x8e\x89]\xbf\xaa\xe9\xa9h\x9a\xd7\xb0?\xd1f\xfb.\xca#i\xbf\xabc\xad\x00\\\x94\xa7\xbf\x90m\xcd\x80\x94\xf9\xcb?O{\x17Ww0\xbd?<A8\xa2+z\xba?\x91\xcb\xb1\\.\xa8\xce\xbf\x93\x12\xcdf){\xcc\xbfb\x96\xba?\xcc\x14\xd3\xbf@\xee\x94\x94\x9b\x16\xa3\xbf9\x8f\xcc\x10\xafJ\xc2\xbfTF`?\x99\xc5\xb1?g\xae\x03g\xb1\xa0\xb0\xbfu\x02\x99\x08\x12\x98\xa9\xbfr\xc0*\xf40.\xb9\xbf8\x0b%\x92;\x9d\xba?e\xec\x88\xbb\x8a\xbe\xc1?\x0e\xd9Bu\xff:\x98\xbf\x99\xceb;\xc1\xa9f?\xd9r?]B\x1d\xa6\xbf\x12{\xc8\x16\\\x91\xbd\xbf\x0e\xa6\xe6\x00\x9eH\xbf\xbf\x02\xdf~Vp\x1c\xc2\xbfi;j\xe2uX\xb6?m#\xf2\xd4Q\xb3\xc4?W\xb2\xf4\xfdk\x07\x96\xbf3\x99\xea\x99\x84\xae\x93\xbf\xd1s\xa8X\xe2\\\xb1?\xa0\xb5\x08\x87\xf0\x18\xab\xbf\xae\xa1\x19TH\xf5\x9a\xbf\x06\x1f\xce\xa7B/\xad?V\x87[\xcb\xd1Y\xa1\xbf\x96\xa4\xab\x17Fj\xd2\xbf\x13c\x1c\xea\x12\xf7\xaa?\xd7\xc9\xd2\x99aK\xae?\xcd\x1c"4\xdf\xda\xc8?a!Q\xac\x859\xc4?\xad\xae\xcf\xac2M@\xbf\xd9\xe0?\x108\xa5\xa8\xbf\x7f\xf7)O\x83\x87\xb4\xbf\x10\x97\xd0[\x12\xbc\xbc\xbfS\xcagOs\x85\xa0\xbf\xe7@\xb9K\x1b\x0b\xb9\xbf\xa4\xf8ac\x16d\x82?\xdd\x9bq\xdc\x9ci\xc5?\x1b\xa7\xb1O\xf2\r\xba\xbf\xcd\xa3q\x9c\xfd\xc4\xc5\xbf\xffv!v\xb0<j\xbf&B\xee}\x08p\x80? \x88\x18L\xae\xfd\xa3\xbf\xaaQM%\xb2\x19\xd6\xbf\xc3\x10\xb8!8fe\xbf%\x8c\xddfcO\x88?Z\xbaL \x93u\x80\xbfwI\xc4l\xbc0w?\xb0M\xf5\x16?\xca\xb1\xbf\xb4\x85\x17EQ\xb2\xae\xbf\xd9\x0b\xc3\xe2\xc5\xc4\xb2?F\xa4\xf2\xdem\xc4\x9c\xbf\xa8\xa8\x8d\xaa\x08\xbb\xa9\xbf.\xad\xc0\xe2\xef\xbd\xa3\xbf\x86Y\xc9\x83C\xd7\x88\xbfWd\x85t\x00\xb6\x9d?\x99\x07Ox3\xf7\x92?\x8d:\'b\x98\x92\x85\xbf#\x8bX\x8b7r\x9e?\xa8\x9d\x96\xc2\xfa\xda\xb7?\xe6\xaa\xd8`\x04Q\xb5?@;\xeeW2\x82\xc5?\x97 9\xbb\xa5\xca\x96?\xf3\xad\xd5\x88n\xc3}?}d\xe2\x19\x9a\x04\xaa?\x0f\xe5\x06\xe6\xad\xb6\xc7?8h\x93\xc7\x11x\xb1\xbfe\xc8\xefCE\x92F\xbf*A\r\x86\xf4J\xc9?\xb9\x9d\xf1\x94\xec|\xd2?3n\x14\x04\xdaO\xb4?\x90KC\x91x\x05\x82\xbfl\xdd\x07j\xc8\x90\xb8?\n\x0by[\xa7\xfbi\xbf\xe4\rt\xabe5\xc0?\xa9\x80\xb6\xc0\xed\r\xc1?\x95\xc2\xda\nxZ\xcf?\x08\x0f\r\'\x13S\xac?\xc8\x1c\x17\xacV\xd8\x8c\xbf\xa2t\x1f\xc3\xbfS\xa0\xbfF,\xcdU\x9bp\xc2\xbfg\xdf\x92\x9bmh\xd6\xbf\xc9a\xcf\xcdDb\x83?L+\xe5o\xa3\x8a}?\x15\xf2E\xb7\x9b\xc7Q\xbfA\xbd\x07\xb2hu\x81\xbf\xa4\xf0\xd3\xe4\xdeU\xae\xbfv\x8c\x0bb<\xab\xc4\xbf1\xb7P\x14\xf8r\xb8?S\xc8\x99\xc1\xd1\xc9\xa9?\xa5t\x87\xe9)\x13\xa7?G+\xd2\x01\x11\x87\x81\xbf\xbfR\xb9\xdb\x98\xa6\xe1?\xe2s\x85\x92\xa8M\xd7?\xe5\xaeM\xfc\x8e\xe7\xc5?\xc9i\xdb\xfa}\xab\xb3\xbf%\x11\xff\xdcc\xa6\xc2\xbf\x84\x90\xc4\xdc\x1f@\xc1\xbf\x93\xb1\x86\x8e\xffN\xa9\xbf\x0f(""\xf0\xe0\xbb\xbf\xa6\xf0E^\xe2\xc7\xc1\xbfA\xe5\'\xf2 dr?\xd3\xbc\x1aQ\xfd\xf1\xb0\xbf\x06`*\x06<\xb3\xd2\xbf3\xea\xcf\x1a,P\x98\xbf0CE\xc3\x01k\xb9?R\x98\xc2\x9a\x02\x17\xbd\xbf\xab\x83J\xe0vs\xa1\xbf\x91oq\xca\x0b/p\xbfz\x95\x02\xd8%\xea\xb5?\xe5\x80\xb7\xb8\x93\r\xb6\xbf\x1b\xaa\xc9.}\x13\xa7\xbfE\xe9\xcag\xe7\x0b\x87\xbf\x11\xdd\xc8~"\xff\xa5\xbf\xe8QW\x9b~\xe0=?d\xe69p\xb2@\x8c?\xf0\xec,\xd6\xfe?\x83?\xb5\x1f\xe7\xf5\x8c4\xaf\xbf\xbfi\x00\x7f\n\xe5G?\xb4?h\x9d^|X\xbf\xdaS\xed\xebX\xd1\x85\xbf\xf7\x86\xb1N\':\xb9\xbf\xcc\xd2/\xf9\xfa\xc9\xb8\xbf\n\x1d\x85\xe7\xd4\xe5\x89?\xbf)\xe7\xdf\xc7\x97\x84\xbfCCM\x8c;6\xaf\xbfK\xa6e\'\x8bZ\x8f?\xf5\x84\xf3V\xf1b\x95?\x9f\x13\xd3\xad\n9\xa9?\x97v\xdb\xe6iH\xa7\xbf\xa7vn\xbd\x8ep\xc8\xbf\x02m\x11kjB\xbf?\x9d\xbd@\xeb\xd3\xab\xc4\xbf4,%\xd4\xa1~\xc0?!\x06\x07\xa7.\xea\xaa\xbfAC\xa3\xe8\x19t\xbb?\xde\x02\xab<\xbbF\x9b?\x9d\xc4\x98N\xde\xf8\x93?\x94\xb7qp\x1f\xca\x9e\xbfB\xb0\xb8x\xd0u_?\xc17\x91\xfdX\x1dc?f%\x08\xab\xebv\x90?\xe1\xd5\xfcq\xca\xbd\x89?q\xf3\x08?\x9d\xc0\x91\xbfpg\xba6\xab\xd7\xc1?\xbd\xf9\xee\x03\x85\xe2\xb4?W\x8a\xa0\x1bjA\xba\xbf\'\xedT\x88\xa3\xc6\x7f?9\xa8N\x81\xfe\r\xc3?>\xbb%\xb3N\xfd\xbc?\xffAK-\xc2\x93e\xbf\xd8\x90N\xa6\xe6\xfd\xa2?:\x91i2\xbf;\xbc\xbf@\xa77UL\xd2\xbc?\x82\xe6\x9dA\xba\x15z\xbf\x7f\x1f-`)_\x82?\xca9\x8c\x92\x7f7\x9d\xbf\xc2\x06\x9e\xa1\x87\xc8\x99\xbf\xdf\xf8\x9c\xb7\x02\'\x95\xbf\x84W\xb9v}k\x9f?\xe7\x97\xb4<7\x9c\xb6?Moz\x99\xc6^\x9f?L\x86\x08\xb0\x97(\xae?P\xb7\x9at7y\xad\xbfc:\x83\x84\xf8\x9b\x90?\xc2\xf1\xba\x02\xa8\x95\x97\xbfD\x00\xf9\xae/o\x9d?\xbc\xf6/I\xcc\x08\x8c?@\x14\xb1\x84\x84Y\xaa?z\xc9p\xf1\x13M\x9a\xbf\x84\xd0\xaa}\xdb\xf4\x94\xbf\x8fu)\xc7\xcfT\xb1\xbfht\xe0\xf1_Z\x92\xbf\x80-IS\xa0\x82\x91?M\x8c&\xf3\xeb\xf6\xa4\xbf|E$\xc7X;\xba\xbfw9\x1d\xc2\xfc\xdbw\xbfZ\xba\xff.\xff\xc0\xa2?$2\xaa\xee\xc1\x88\x96?\xcb\xcbn>/\x8bi?\xcc\xcdb\xf8r\x1c\x85\xbf\xbe\xc2\x08\xd4\x94\xa5\x87\xbf\xd5\xd35\x1dl\xc4\xa5?\xe8I*\xc1{^e?\x11=\xa9\xfb\xd8\xc5\xa0\xbf_\x8e\xcb\x1c1\n\x93?\xee\x8c\xbb\xaa\x87\xe2\x8e?\xc5d\xf1\x16\x10\x02\x87\xbf0\x85\x94\xb8\xb7\xff\x85\xbf\xe6\xd4\xef\xa0\xc7\xc0\t?gv@}%\x03\x93?b\xbeb\xfca\xcc\xab\xbf\x90{\xa0\xc2!4\x9a\xbf1\xd7s\x05_\n\xb2?\x19\xe70\xcf%\xb1}\xbf\xaf\xd3\nim&\x93?_\xf3*^\x1f6\x99\xbf\xcbc\x85eY\x90\x84?\xb9P\xc7;\xa3\xb6\xa1?\xb2\x9cG\xb7\x8e\x9a\xa5?`\x03sPg\x89\xc3\xbfj\xeed\xe4?\xc6\xa8?nT\xeb\x12\x9a4p?>\x00{\'a\xab\x91\xbf\xees\x19D\x7f\xfb\x9e?!\xd1%NG0l?@>\xfd\x8a\xe1\xcf\xe4?f\x19\x15\x1bIj\xd1?\xc6\x01{\xc5\x81\xb2\x9c\xbf\x02\x9b\xbc\xa9\x04J\xb3?\x96\xdcH\\\xd2\n\xa1?C.\x9f\xe6\x94\xc7\x8b\xbf:=\xb8\x86+\x11\xa1?\x1a]=\xdf\x06p\x90\xbf\x97B4\x81\x88+\x98?\x17\x9a\x8e\x9d\xabF\x83\xbf|\xf7G\x0f\xfb\x9bw?\xb1\xe2\xee\xa0\xd7\xb9e\xbfC.\xe9\x01\xa4\x8d\xb7?r\xfc\xc1O\xb9\'(?\xb5\xacH\xf2\x8a\xeb\xc2?\x8c\xc6\xcf\xd7\n\x1f\xb1?\xe5\xa3\xd4B\xfc8\x90?\x05\x05\xe7\xb8DsX\xbf\xf2\xc92=B&\x97\xbf\x04\x16\x85\x13\xfa\xcc\x7f\xbf\x90\xe7\xb3\x83\x1b\xb6\xc3\xbf\x92\xcd+\xe6Q\xb4\xd3\xbf\x8d\x1e\x82\x1ag\xff\xa4?`\x8b\x94\x80\xe5P\x96\xbf/b\x1bh\xf4D\x98?\xa6H[\xc0d\x80\x8c\xbfO\xccjZ\xd8Y\xd3\xbf\xb4\x1cv.\xb3\xf0\xe7\xbf\t\x11\xa8\\y\x1c\xb6?\xb4\x8eYcA\xd3\xa9?k\x08A\xac5\xc5\xb8?~\xa7\xd6mNR\xad?{;\xf4c\xab{L\xbf=\xfd\xf7\xe8\xabA\xa1?\xed[&\x81p\xe8~?\xe0\xe0\xaa\xb0\xc2g\x9f\xbf\xd9\xf7\xe1B\x144\xa2?\xe3\xe9\x1en\xe2\xf5\x85\xbf\xe8\xa2\xd5>\xb9\xb6\x89\xbf\xc8\x83\x8e:3OS\xbf\xab\x87\x1c\xd9\xf2\x1bp\xbf\xc8\xbf?9q\xd4\x94\xbf\x08\x83\xd0\x04\xe7\x8d\x99\xbfmU\xb5\xbd\xbb#\xd7\xbf\xb3+\x1foj\xdct?a\xff\x1f\xc1c\x0b\xa6\xbf\xc8\x81\xa5\xc4\x82\xde\xd0?Cld +&\xc4?\xcc\x9cp\xbd\x15\xd4\x8c\xbf\x89d)\x84\x11\x00\x8e?q\xc9\x8eO0^k\xbfk\x07\xfe\xca?"i\xbf\x83\x8d+\xae~\xec\xa8\xbf\xa4\xba\xf1\xe2#\xe1i?q=\x7fLg\x96\xc4\xbf\xc2DWd\xc1J\x93?7o\xb9\xa5\xc2U\xd0?u\xc5\t]\x1e\xc0\xc5?3\x85\xb9\x155\xa5\x9b?Kh\xa1|fY\xc2\xbf\x18\xda/u\x9c\xc8\xa1\xbf\xf8\x8af\xdcE\x9c\x96\xbf\x134\xf2\xebC\xb9\x93\xbf\xcb2S\x16\xc2[\x85?\x8aH\xd7;d\xa5s\xbf:\xc2\xd0I)\n\xab\xbf\xdd2k\xf5s\x8f\x98\xbfl\x02\xf6H\'G\xaa\xbf\xbd\x9c\x0eE\x103\xce\xbf\xc2wt\\\x87\xfb\xa9?{\xf6`\x1c*\xcf\xb3\xbfEL\xc4m`\xe1\xab?j\x9f\\6\x1dI\x99?qx\xda5\x1dKq?\x8a\xea\xd7\'^`\xb3\xbfjL/\xec\xfb\xfe\xb2?c\x05\x01J\x82\xb7\x9a?\rO\x94\x91]\xd2\x84\xbf\x02n\x0e\x0b!Tv?\x16\xae\x16X&>\x90\xbfwG\xbf\xe7\x84\xe1\xa0\xbf\x9a\x04N\x82"6\x87\xbf?Fj\xf8Y\x16\xb3\xbfz\xc4\xac\xadZ\x0c\xb4?v\x1f\xa4l\xed:\xa5\xbf\x19F\x97\xf6\xbf\xfb\x97\xbf\xc2R\xb4\xa2\xa2I\x91?\xcaYj\xf7\xd0\xa7\xa3\xbf\x13\x10\xd1\x13\xde\x95\xce?\xb3\xb2\x01OW\x17\xad?\xcd\xf9\x88:iG\xa7?\xd4\x1aa;\xd4<\x95\xbf&\xa5\xc8R\x0e\xed\x9a?Q\x06\xc0Og\xf9\xad\xbf\xeai\x1f\x0b\xd3\xe5\xb0\xbf\xffp\xf0C{@\xb7?\xa1\x193\x9a\xb5\xf8\xa6\xbfD\x8f\xd1\x88\xa9\xeb\x8c\xbf\xd1\xdegn\xdb=\xbf\xbf@\x9bqz\xfd\xf9\xc3?r\xabC\x92\x98\xf3\xbe\xbf_k\xcd\ru\xcc\xb4?!\\\x8a\xe3|y\x9c?\x9fQ\xc2<\x94n\xac\xbf\xffJ\x1dd\xce{\xc1?\xd6h\x97\xbb#\x8f\xb6\xbfA\xf6\xcb\x9fu\xdcm?\xd3c#\x92\xb7\x8f\x83\xbf\x81o\xabk\xb3\x14x\xbfk3Ff\xec\xdc\xad?\x89\xff\x13x\x03\x94\x90\xbf\xcda\xb2\xf1\xe9a\xab?s\xf9R\x1c\xb8h}\xbfn\x9a\xbf\xdc\xc0\xc5x?\x17\x1c\x13\xf1\xae\xa0\xa4?\xb6\xbfW\x8e\xf6\xb3\x7f\xbf\xfa*\xa25<<\xbd\xbfi\x80]pl\x95\xbb?9\xc3\xb3\x06\x845\xa3\xbfj\xcc\x0c>%\x80\x92?\xb8\xf0\x91\xa6\xdc\x82\x8b?m.\xae\xd1\xe1A\x8b?80\xd4\xc0\xa1r\x80\xbf\xe8\xb9\xa7$\xa3\n\xa9?l\x8d\xed/D\x03z\xbf\xdf\x11I\xc4\x86Mk\xbf\xa6\x9b\xad\xc2K\x18\xad?\xad\x94\x0f\x02W\xfc\xbc\xbf\xe6\x8c\xf3\xda\xfc\x0c\xa0?\x99\xb1\x99\xa9\x9f\x95\x92\xbf\x82\xba:H\xcd\x03\xcb\xbfs\xa7gW\x15\x97\xd1?jF{\x8b\xe3O\xbc\xbf,\x9e\xdf\x893#\xc9?\x87\xb3[\x82\xcfGk?\xaf|S\x95qi\xa0?\xdc\xf8T\xbdfb\xe3?\xe1\x067\x1e\xee\xe3\xd5\xbfW\xab\xedM\x10\xa3\xa6?\xf0b\x0b\xf0x\xdc\xc2\xbfxu\xe8Gj>\xa7?\x86~\xde\xec\x17\xa5\xa6?{]&\xb9\xff\xcb\xa5\xbf\x16\xf4\x86\xf2J\x12r\xbfbL\xb9\xe4c \xd1?\xaa\x11\x05\x16\xe7\xe1\xd2\xbf\xe7\xaez\xb3\xdbn\x88\xbfv\xc5:I\x9d\x00c\xbf\xa7\x85S\xda\xeb<\xaa?\xba\x99\x06\xa5[F\x98?z\xcd\x86\x93\xb9\xef\xac\xbf@B\xc4\xfb=Vy?+\xf1\x94\x1b%\x8e\xc2\xbf\xc0\xbb\xa3\xd1:\xe2\xb6?\x14&a\xce\x19o\xa1\xbf$l\xc8tU\xf4\xc2?\xa7\x9c\xca\x9c\'v\xb0?4\x11\xb1\x7f!\xef\x95\xbf\xf8\x9e\x1d.\xbc\x8a\xba?C\x16\xf3\x83%\xc0\xd0\xbf\x1dW\xc2\xed\x89\x06\x93?z\xc9\x80\x00\xb9\x8f\xab\xbf|x-\x0bii\x96?\xc5\x86\x0eo\x9e@\x9b\xbf\xac\xa8\r\xab\xb3-\xb0?\xd8"\x87\xa3z)\xa4\xbf\x8d?\xba\xde\x8b\xfa\xb7\xbf\xdc\xce\xab\x85\xb8\xec\xc4?ve*-\x16\tx\xbf\x84\x91\xbc\xd0h\xb2\x18?\x10{\xd7\x1cW\x11\x88\xbf\xa1r\xc3am\x19\xca?1\x02\n\x9f!\xb0\x9a?\x85L\xc3y>\xe4\xa9\xbfe\xa2\xc6\xb1\x16\xd5z\xbf\xa3\xe8\x8a\xfa\xf39\x8a?+\x99\x98b-\x17\xb2?\xc5I\x8f\xeaWO\x9b\xbf\xaed\x9b\x8a\xcb\xca\xa0?\'hA6\x06B\xbb\xbf\xb99\xcc\xbd\xb7\xe6\xbe\xbf\xba\xf3\xf4\xc1sF\xd0?cY#\x06\x00\xcc\x9b\xbf\x08\xc2\xa1\x10\x0e\xf2\xa6?tU\x07[\x14\x82\xa6\xbf\x8cE:\xe3\xefC\xb1?0\x85d$\xd8/o\xbf\x8e\x90\xda\xc8( W?\x12\x08\x1c<\x82\x05\xbd\xbf\xf4HC\xb6\x08\x0b\xa4\xbf9`\x86\xc1S@\xb6\xbf\xfd#!\xf6\xcc0\xbe?\xb4\x96zy\xcd\xfb\x98?\xf2\xe7\xea\xb0cw\xb6\xbf\x12\xdfR\xb6\xecQ\x94?\xdcQ\xe0q\xf6!\x82?\xba\xb5(%\xd8\x0b\x87?N\xf3\xe9\xa7\xd1\xdf\xc0\xbf\x83\x1ehp\xf9\xf8\xc0\xbf\x19\xd3*\xf5\x05\x84\xc8?\xcb\xc2\xb5E\x9b|\xa0\xbfX,\x19t\xfe\xe0b?uB#\xbe\xed\x8f\x8b\xbf\xbcGM\xb3D\x02\x12?\nV\xe4\xcc<y\xb2\xbfr\x9e\xab\r\xe5`\x87\xbf\x0b\xf2\xcd\x97\x91\x9b\xd4?J\t\x7f#v\xce\xcb\xbf!8\xba:\xc6M\xb7?I*w\xae\xf6C\xb5\xbf\xd0\xf3\xc5\xc7\xb4,\xae?Q\x18]nI\x07\xba?\x1fZG?\xac\xbb\x9a?h4\x10-\\\x03\x9a\xbfW\x89\x94j\x9dB\xac\xbf\xf5_Q\xc1\x83\xf7\x97\xbf\xe5H8bF?\xc6\xbf8\xa1\xc2\x11z\xaf\xcc?G\x8b\x84.\xb2c\xc3?8\x82\xc6rc,\xc2\xbf[%y\xaf\xfe\x92\x85\xbfI\xd9C\x8b\x88\x02\xb4?\xb1\x01\x1c\x83{=\x95\xbf%Vm\xfb\x0c0\xad?\xa4\xf5\xf4\xbe\xbel\xc0\xbf\xdd\xb1\x9a\xebqs\x99\xbf\xc4CyY\xba\xa5\x91\xbf\x95\x05j\x86-9\x89\xbf\x97\xe1\xf0\xc4\x15\x11\xa4?u+\xb9\x1b3^\x95\xbf\xa2\xcb\xe9E8\xa7d?\xf9\xdc\x15.)\x8f\x81\xbfW\x99\xb6\xaf\xbf:\xe1\xbfns\xdeY\xc7\'\xda?\xad\xc3^Pl\xa4j\xbf\xb4\xdb\xc1\xa4\\@\xbf\xbf\xa0=o\r\x93\x0c\x97?\xe8\x82:}\x0e\x7fk?\x93\xc3\xde3\x8cK\x85\xbf\x04_\xa3\xa8\xed\xece\xbf\xad\r:=\xa0-\xa8\xbf\x9d\x9a\r\xd0\xdc\xfb\xc1?)\xe8@M]\xc5r\xbf\xca\x14\x84\xb8\xc7\xec\xa9\xbf\x17\x1d\xb6Ii_V?\xea\xf9x)\xee@\x9f?ne8\nt\xfax\xbf\xf2\xea\xdf\x95dB\x8d\xbf\x92R\xfe\xeaMC\x85?\xaa\xb0|C?1\xa8?=@\xfaX=$`\xbf\xcf\x88\xcf\x88\xe9\xc5h?\xbb\x8f\xa3\xb7\xb5#\x8b?\x1c\'\x90\xe9F\xbe\x98?\xd5\xc2\x12\xd8\xa4\x93\x96\xbf\xfd\xf9}\x03\xa6\xe2\x8e\xbf\x8d\x1ag\xa6\xe8vR?\xecb\xd6\x11\xcdpe?\xd0\xdb\xbe\xf4a5\xa6\xbf<\xa3\xff`\x9b\x02\xa6?}\xf2\xbf\xcdP5\xc9\xbf\xbf\x9b\x94A\xda\x1e\xbe?);K\xa6oQs\xbf\xc0X&0e\xe7\xb0?\xeaI\x17\xb2\x8c\x0c\xd0\xbfN;<\x8e\x16\xb1\xdb?\x9c\xd8\xaf\x8cy#\xa2\xbfQ\\$\xa2\xd0\x82\x92?L\xd1\xaa\xa9\xb7\xecy\xbf\xb9\x12\xfa\xe4\x19\x9f\xad\xbf\xdb\\\x80)\x8aL\xb5\xbf\xe1\x86;]\xa7\x9b\xb0?j\xf0r\xb5\x89\xd3\xbf\xbf\xeb\x17^\xc2Q\xd0\x93?\xfa*\xc4,\xff\xa6\xa1\xbf\xb6\xc2\xbb\x9e\x82a\xa6\xbf\xdb\x037P\xc2\xceg\xbfa\xf8\'\xc6\x81\xbb\x99\xbf\xa3\r\x8f\xc0\x12\r\x8c?\x8fu\xb1\xe9\xa0\xa8m\xbf\xc4/\x0b\xbax\xb2z\xbf\xdb\xdb\xafpZKx?\x97\xa8\xda~Z\xa1\xa4?\x90U)@\x84\xfa\xaf\xbfC\xb5t\x9c\xdeN\x9a\xbf(U\x0e<\x89\x99\x98?\xb2\x90\xebP\xc0\xc2\x87\xbf;J\xb7\x0e\xf8\xa3\x8d\xbf\xbdC\x1cD\t\xc6\x88\xbf\x1b\xfc\x9f\xafa\x88\xb2?\xe6\xf3\x01Na\xad\xa9?KBGd)\xfdk\xbf\xa3\xd7+wT\x97\xd1?\xd2\xc9\xb8<;\xcb\xdb\xbf>\x10\xd3\x1d\x1a\x04\x9e\xbfw\xc7\x14\x9a\x1f\xad\xa0?*\xa1\xa7p\x8f\x99\xc6?u\xa1\xbb\xc0\xccN\xc2\xbfH\xf5\x1e!h1\x8c\xbf\xd7\xbc\xbd\x9a0(\xa4?c`\xf4\xa1\xf4\xd3\xa8?B:\xef\xe1\x8c\xf7\xb3\xbf\xaa\xc2/\t\x1e\xd6\xa6?P%\x04\x8e\x92\xe0\xa1\xbfvm}\x03Y\x9f\xb1\xbf\x8f\xa2\x19\x12\xe5\x0c\xab?^]\x9d&\x17\xad\xb3\xbf>\xda\x0f\xb2D\x81\xba?\x1ea\xd4\x1f\xd2C\x85?\xae{\xcc\xcf=U\x89\xbf\x02\xff\xd8\xc0r\x95\x8a?\x1e\x969Fs\xef\xb6?\xae\xd3\xf2\xf0`\xbd\x91?\x89)\xc9Z\r\x1ef?K=\r\x96J\xdf\xa4\xbf\xc9\xae\xea\xfc\xec\x93\xb1\xbfm\xd0gY\x8cz\xd1\xbf.\xdd\xca\xa4\x07|\xca\xbf\x0eU\xc20\r\x07\x90\xbf\xe9\x0f\xe8Y\xb7\x0e\xc4\xbf\xd8\xcc\xd5\xc0\xdc\xec\xb1?\xa5#\xeb\x9e1\xc8\xc8?l\x82\xa6\xab\xd0\x08\xac\xbf\xb2b\x99\x1fW\x16\x98\xbf\xb1%\xd7l\xb0_\xe4?A\x0f\xc5\xfbH\x9f\xde?\xab\x8aF\xfcn/\xc0?\'\xdc\x8a3\x07\xa9\xb2?\xef]\xc1\x05\xbej\xa8\xbf\x1d\xcd//\xc1\x1d\xb4?+{\x8exQ.\xab?\x16%\x92\xc9\xa8\xac\xc1\xbf\x8fJ\x85\x9a\x9d\x12\x93\xbf\xe4\xfa\xd0J\xc9\xcf\xd1\xbf\xc7h\x90?"8k\xbf\xfb\x05\xd0I\xe0R>\xbf[\x15\xaf\xbd\x1e5\xc5?h\xb4\x07\x048\x10\xb8?[\xda\x92\xb7s5\xc0\xbfG\x84^=\x93\xbd\xbe\xbf\xedY6 A\xa8\xd0?\xe1\xc4\xe6\x95\x0b \xc0?\x9a\xfd\x90\xe8mX\xa6\xbf\x82\xd42\xb0\xd7\xea\x9f?@\xa5\xe7\xc7g\x9e\x89?\x07\xf8M\x89\x98^\xb1?\xbb\xc0\xc0"\x84\xf6\xbe\xbf\xd0H\xd2HV\x87\xce\xbf_\xdf[\x1e\xcd\xbf\xbd?u\x94\xc4\x15\xfd\x0f\xcd?\xb4#K|3\xa3\xc3?L\xda\x84Wk\t\xab?\xa3\xfb\xb2\xe8\xee@\xaf?\xf9\xed\xd8\xc71\xb7\xcd?\x19\x08ge\xf2(\xb6?*dLa\xac\t\xc0?\t\x04\x97\xdc\x9c\xb6\xd2\xbf\x0c\xe0\xe7\xab\xbb\x04\xcf\xbfI\xbc\x84\xaf\xd1\x04\xd1?\xfaP\xce\x16;\x11\xd5?B\xa4\x9e=\x0c\x86\xa3\xbf\xb2\xab\x1ch\xdb-\x9e\xbf\x9f\xb4\x8d\xfd\x81\xaf\x93?\x00\xac\xda\xae\xdb0T?\xd8\x98k\xefCc\xa1?\rqV\xaa\xfe9\xb7\xbf\xc1\r\xf8\xa3 e\xcf?c\xfa\x91\x916\r\xc5?puEy\xf6\xcc\xb2?_t)\xc95\x12\xb0?\xf1\xb4\x0f\xcb%\xe5s\xbf\xd7\xc2Z\x19\x07N\xbe?b\t\x80f\xde\xd6\xd0?E\xee\x92\xb5D$\xc5?6W\xbf\xca\x00\x0b\x84?\x17\xe3\xc5\xb5\xf7\xa0[?\xfez\x07\x8c<\xdc\xa1?\x83\x1dN\x86\x04E\xa0?\xd3\x13\x97\x14\x8au\xbe?\x07\xd7\x87\xe4\x89\x87\xc9?+\xd9\xae\xc6H\x08\xc6\xbf\xe6$\x15\xa6\xf4\xfa\xc6\xbf\xf1g\x9b\xad\xd2\x9b\xc5?K\xc2P\x1f&Z\xc0?\xe8\x97\xf1U\x8b\x95\xb6?x\xfeSYhs\x91\xbf*\xcc\x16\x025\xd0\xb5\xbf\xbbD\xf7\xd8\xbdu\x9c?\x02\xcd\xa4\xe9\xa7T\xca?\xa7-t\xf9\xae\xa6\x93\xbf\x91\x12\xf1U\xaa\r\xd3?\x05\xdd\xab\x15\n\x00\xc2?\x97\r\xaa9w\xc0\xd1?\xb4<\xd4\xb6\xc4\xb9\xcf\xbfL\x85\xbbd\xcd)\xd0\xbf\xd5\x81\xc4Z!\xb4\xd0\xbf.\x9eh\xbcCK\xbb\xbf\xd8\x84E\xa9\x16\xa8\xcc\xbf\xe5\x00\xf9\x9c\x94P\xcf?\xb1\x04\xebt\x9c\xd1\x99\xbf\x06\x9e\x8b@\x1d\x04\xb0\xbf=\xebS\xa7\x1f\x86\xa7\xbfO\'\x9d\x11\xd6T\xc0?K\x0e\x00\x92\xc6\xc7\xc1?8\xd3\x90\xaa\xd4\x95\xa4\xbf\xa6\'\xd9\xb6\x9c\x00{?\x9d\x0cF\xa5\x98?\xbc\xbfjL;X\xd7\x83\xc8\xbf\x90\x12\xf4\x8e-:\xb4\xbf\x7f\xe6\xad\xdf\xf8\xae\xc3\xbf;@\xcc\x9c\tf\xb5\xbfm\xba\xf8\xf2\x15\xb8\xad\xbf\xa6}\x13\xfd\xd0\xb2\xaa\xbf\x91\xdf:\xe2T\xd8\xad\xbf\x9f\x0b\x9e\xb0P\xb1\xa8?\x04\x15&\xd8\xb5\x87\xbb\xbf\x86\x86F\x8e5\x16\x97?\xf0\x8c\x06!Z\xe9\xaa?\xbcuP+\xa5\x00\x91?\x95\xae\x8e\xdcQ\x8d\xd1\xbf\xe8nN\x94\xb5q\xb8?\xca\x14\xb3\x15\x951\xa2?F~\xfc\x89\xa6i\xbc?!$\x8e\ti\x9d\xc8?S\x04\x11@\x1e\xe5\xbd\xbf\xbc\xc5\x1e$9w\xb5\xbf\xef+8\x19\':\xac\xbf?\xea\xb2\xc68\xe8\xb1\xbf\x80\n\n\x1fH\xa3\xe0?\xd6\x0c\xa0y\x83\xb5\xc0?\xd3\x8f\xc8\x15d\xe2\xa6?\x87\xc1\x13\xc0\x14U\xc8?\x17\x82>\x87\xa6\xdd\xc5\xbf\xcd]\xd2\xe0\xd9\x03\xca\xbfs\xc6:%\xcf=\xb7\xbf\xe0\x0b\x85\xee\x9d\xf1\xad\xbf\xf9\xee\xf0\x18\x01\xb9\xb2\xbf\x95\\\xa97\x17E\xd3\xbf\xb0m\xc44\x9f\xd8c?h\x7f\x92\x11\xaeW\x82\xbf\x9drQ\x14F\xcd\xa5\xbf\xd5\xd1\x96\x153\x9du\xbf\xd1b\xbb\xa2tu\xa9\xbfX!N:\x94\xaf\xad\xbf\x10\x1bQi\xb6\xfe\xa2\xbf\x9c\xf0UF\x05e\xa5\xbf\x80\x9a\xf7\xedB\xa8\xac\xbf\xad\xf7\xcc\xc8\xe9V\x98\xbf\x97\x06\xb9G\xfd\x03\x9e\xbfY\x96\x11eN(\xa5\xbf|}\x13\xe4\xfd\xc5\x7f\xbf\xc5\xcc\xafJ\x97\xb7a\xbf>\xdckG<e\xb0?d\x98iq\x93\xee\xb7?vy\xe0\xdb\x84B\xca?\xf2\xec\x19\'\x14\xf0\xc3?(=!>\xf3@\xae?\xef\xa2\xb0\x16 "\x98?\xb0\x07MW\xe3\x97\xbc?\xd6\x1b\x18llT\xcb?ep@\x00@b\x8b?\x05\x1b\x81\x84\xe9\xf4^\xbfx\xef+\xc3|\xb0\xcc?\xd2K\xc2\xedWU\xd5?\x86t\x08.\xb4\x1c\xb5?\xcd1\xcd|1\\\xb1?b\xf0C\x04\x1a\xae\xb8?\x05\xe2\xe4\x03Bf\xae?_\xa2\xdf\x99\xd8\x88\xad\xbf\x16u\x035\xab\xce\xb5?\xb5\x1d\xdf\xc9\xdby\xd1?\x80\xcc\x1e\x98b\x86\xa6?i\x1f[\xeeGRv\xbf\x87\x01A\xdb\x88\xc4\xab\xbf)Q\x92\xa6\x1a/q\xbf\x8fWI\x9bp\xf7\xcf\xbf\xb3\xd4\xa0O\xd0\x1ed\xbfq\xc1\xb3\xee\x87\xeb\x84?\xd5\x11\x9e\xb8o\x82\x83?1U\x08\xa1]P\x80?\x9a"\xf7\xc2\xe7\xdf\xa9?6\xca@\xf2u\xe9\xb5\xbf%E\xeb\xcbG\xcf\xc0?\xba\xbc\xfd\x9d\xd72\xb1?\x94V\xe94.\x1f\x8a?2\xc8\xe7Z\xc6^\x8a\xbf\xae\x0f\x84\xad,\xc0\xe0?e\x1bDrS,\xdb?k\x9a\'K\x8b\xc9\xb5\xbf!*m}\xbd\x94\xc3\xbfp\x0bz\xd6\xf4s\xc3\xbf\x15lt\xebc\x95\xbc\xbfS\xed\xb0l\xf3F\xaa\xbf\x1e\xb0\x1a\x1c\xf8\xc9\xb8\xbfy\x13\x9f\xefB\xe8\xa5?\x8e\xac\xc1X,\xfe\xb1?\xa4\xd5\xd70\xd4\xdf\xc1\xbfm9&\xe4\xab1\xd3\xbf\x11\xc6*x\xfd+\xb2?J\xb38\xe8>\xea\x94?\xc1\x15[\xf2)\xb9\xc3\xbf0\xb1\x0fP\xd9O\xc4\xbf4\xb3\xeb7\xf1\xe8\xbb?|\xc3\xc0\xc4\xda\x0b\xb8?D\xd5b\xc21\xbf\xd8\xbf\xb3\xf04>w~\xbe\xbf\x9f\x7f\xfc!\x8c\x89\x8b?\xc8\x01\xbb\xfb\xbd\xfd\xa6\xbfH\x10\xa7\xef\xab\x03\x91\xbf\xbb\xc6\x8e\x99Lr\xbc?I\xd5%u\xb3\x0c\x11?\xd4\xb5o\x1d\xc6\x87\x84\xbf\x19X\xa05a$x\xbf\x97\xab;\x84\xec\x8bv\xbfs\xe2\xf3\xb0\xbf\xdc\x9b?\xbd\x0fg\xc5;\xa7\x88?\x13\x97"\x84i\x9e\xa5\xbfe\xb9?S\xef\xa6\xa4?[M}9\xb1t\xb0\xbf\x8eZU\\EM\x98?67\x9b\x8d\x04XF?-c\x8e\x0f\xaeD\x95?W\xaf\xc3R]\x1dy\xbfN\xa2K\xae\x13\xaa\x98?\x87\x06\xc7\xfc\xb66\x9b\xbf\xf1\xbaI\xca\x0f\x18\x8e\xbf/a\xd2\xfa\xb6}\x86\xbfB+\xa5\x0f\\\x98\x9f\xbf\xba\xd9yy\xe1\xda\xa9?\x12\xa8\x0c\x18\xc6\x1c\xa1\xbf\xfb`\x15\xde4\x1e\xce\xbf\x19sr\x1c\xf5\x8a\xd2?\xf3e\xe4R\x07_\xb9\xbfu\x87\xdbA\xcc\xba\xd0?pY\xa4~6v]\xbf\x88\xb8 jG\xe4\x95?\x13\x1c\xa9\x82\xf6n\xe5?\xb0\x9cS\rD2\xda\xbf\x14H \x15\xb4]\x99?\xa2#\xec\x1fK\xf9\xc1\xbf\xd6C(3\xfc\x98\xad?QIb\n\x9a\xc4u?\xb23\x89\xeb\xb3\xf1\xac\xbf\xddd\xcc\x10\x1fhb\xbfUt\x11z#d\xd4?\n_\xf5"\xfe\x9a\xd3\xbf\x0c%\xdb\xd8\xd3Fb\xbf\x17\xc2*\xa7\xf0=c?T\x97\xa3VY\x97\xa9\xbfhB\tx\x9aA\xa6?z\xf6.M\xe5\xd3\xb4\xbf\xaa\xc8B(H>\xa7?\xdc\n\xdd\'c\xdf\xc4\xbf}\xd4\xfe\\\xae\xe1\xc1?\xad\xf8/\x00M\x9a\x9e\xbf\xde\xd8)b\xf9x\xc9?\xb3N\xa6\x81\x19\xad\xc2?\xb9\xb4\xed\xb9\x97\xb0\xb4\xbf:\xbco\xa4\xe8\x05\xac?i4\x1d\xdc\x15(\xc9\xbf\xa5\xdf\xd7\x031A\x8f\xbf\xa2\x9d\xad\xa5\x94\xb9\xb5\xbf\xf7H\xfc\xe8\xc5\xe0w\xbf\x12d\xa2a \xd9\x82?\xc6\xb6N\xa8i\x04\xa6?\x02\x1f*\r\xe7\x0b\x97\xbf\x8c;\xba\x05iR\xc2\xbf\xfd\xf8t7F`\xc1?)\xcd\x9dIq\x04\xa6\xbf\xd1\x17\x0b\t]\x9c\x89?%4\x12\xd6\xc5\xc9\xa1?n\x16\xa4S:(\xd0?.\xa9|\xd4[\x8e\xb0?I\xa8\xcd/\xbd,\xc0\xbf|$\x0c\x0b\x01\x85\x95\xbfd\'\xb5\x18\xa7\xca\x8b?\xc9 \x94\xa3\xa3\xd7\xbd?\x10\r\xde\'O\x0fu?\xadp\xea\xf5\'\xa9\x7f\xbf\xfe\x84\xeel\xd4:\xbe\xbf\x8d\x82z\xd4\xae\xbb\xbf\xbf~\x9fI\x8b\xee\xfb\xd0?\xc9\xa3)\x13\x14\xb7\x9b\xbf\\\x95\n\xe3\x1e~l?\xf4\x10\x90(\x89\xcc\x81?PZ\xd4\xd8O\xf4s?\x9a\x86_\xf7o\x06\x99\xbf,\xc9\xe0\xf1\xed\x1cf\xbf\xd7a\xca\xc9\xd2\xce\xc2\xbf\xd6(\xfd_Pl\xa9\xbf[\x98G+\xb5\x98\xc0\xbf\xe7\xb6\xa5;\xb2A\xb8?k\xa2\x0c\xd8\xa3w\xad?\x0c\x00[\x88\x13`\xc1\xbf\xa6\x97\xb3Qb\xe8]?\'\xf9\xd8\x01\x07`\x94\xbf\x02\xcb\\f.T\xb4\xbfZ\x1eC^\x8d\x1f\xbd\xbf\x1e\x81\xfb\xfa\xcb\xf3\xc4\xbf\xce\xc2\xbeV\xc9Q\xcf?\x0e"J\xca7\xb3\x9d\xbf0\xf4\xda\xcf\x10\xcd\x82?\xf4\x1b\xe5\xb4\xa6\x1a\x96\xbf\x9a77E\xc6?\x84\xbf\xb6\x87\x1dN\x84\x8e\xbc\xbf\xfb\x03\xa0q:\xb8\x84?\xea\x93\x7f)\xb9\xa7\xd4?^\x00CI\xf58\xce\xbf\xdce[\xb9\x00\xc1\xb1?\x1e\x07\xe9 \xb0Y\x87?\x81\xd0\x9b\xc0\x90\x16\x9a?\xd7\xb8f\xac\xd3\xda\x9b\xbf^\x1eB \xda\xb0\x98?\xcb(\xf2\x8d\xccVp\xbfE\x9c\x83\\\x8eM\xb4\xbf\xbd\xd0u\xf9\xeaxn?|\xbe\xc6\xd2\xbcR\xbc\xbf\x01\r\x17\xcab`\xd1?\x08\xc3\n\xff(\x82\xc1?\xea\xa9\xde\x83\x0f\xbe\xc7\xbfW/>\x88\xf5w\x91\xbf\xe2\x80\x18\xf3\x8b5\xb5?\xcb\x1b\xdb\xd5\xb9!\x94\xbf\x00`O\x1a\xca\x90\xac?\xe2\xb2\x8a\xea,[\xb0?\x8e\n[\xae\xe5\xf3t\xbfq\xef\xd6^NX\x8b\xbf7\x03\x9a\x12l(\x8c\xbf\xd5\x0f8\xff\xf9d\xa7?\x10\x91\xab\xed\xba"\xad\xbf\xe7\xb5\xc9\xe1\xde{\x97?\xd3\xfe+\xe5\xd1\x03\xa5\xbf\xf3\xa1\xde^\xe3\xd5\xde\xbfM}\x13X\rC\xd8?j\x9a9\x96\x92\x02\x86?\x8e\xc8\xbb\xef\xbb\xc3\xab\xbf\x85N\x8e1\x9d\xac\xa6?s?]_wl\x9b?$\xa0\xafE^\x12\x82\xbf\'H\xddS\x84t\x8a?\txO\t.D\xb5\xbf\xe4\xb6\t\xdc\xb6~\xc8?\x9b\xcb\xed\x07z\x1d\x86\xbf8ss\x02zz\xb1\xbfP\xcexn\xa9\xcd\x8e?\x13\xd7\x91%\x85{}?\x1a\t\xcf\xd8\x0c\xf5\xa4\xbfAt\xf3\xab\xdc5M?\xa26Os\xb0s\x9c\xbf\xcf\xf8\x82h\xd2\xb4h?\xadE\xc5K\x08\xc7`?\xfb\xceq\xf1=\xdfu?\x02\xb9W\xc4\x9f\x02\xaa\xbf\xecg\xa1\xf3\x9f\x02\x8a?\x8bT\xbc\xe7]od\xbf\xcfS\xff\xbb\xc4\xedk?\t\x8c\xa8!\xa1\xb0\x8f\xbf\xe6@\xe1q\xf7\xf9\x82?,\x81\xce\xdd\x8f\x13\xac\xbf\x18f\xb8\xae\xef\xbd\xa8?\xd92\xbd/\x91\x16\xc7\xbfY]}E\xfd*\xb6?\x00r\x97\x1a<\xb2\xa8?F\x80$AI\xe1\xa9?"\xac\x98>\xfa(\xce\xbf\xe1j\xb2IB\x8f\xd9?WM\xf7\xa9\xf5\x1f\x98\xbf\xbfB\xdf\xc9J\xc9M\xbf5\x1c\x19\xcc\xe7W\x89\xbf\xda\xe6@\x9bz\xa7\x90\xbf)t:dt]\xb9\xbfG\x7f\xe6\'\xb3\xea\xb9?\x8f\x9aN?\x8e\xe9\xba\xbfp\xbeomS\xef\x97\xbf\xeb\x17\xc8K{-\xaa\xbf\x84\xdaNl\xcf`\xac\xbfW?Bh\xb6Az\xbf?sy\x93.\xb5\x93?xNl#\xffhw?\xf9o\xde\xf3\xa0\xf3\x82\xbf\xad/\x81\xce %\x93?j?\x00so\xc5\x9b?\xc1\xb0\xd09\xd9.\xb1?\x12\x1a0\x1b)\xd0\xb4\xbf$\xba\x00\xc3X}v?\xe1o\x14\xfbS=\x83?Y_j\x0c\xea\x9e\x9e\xbf%\xe0}y]\xf9u?\xf1{\xd3\x94\xdd\xb8\x92?\x05\xe75v\td\xa4?5\xc8a\x12\xde\xf3\x88\xbf\xa4\xe57\x14\x86\x9f\x96?\x15\x96\x97\xb9;\xf8\xcf?\\\x10\r\x98dN\xda\xbf\xdc\xf6\x9aL\x8d\x9f\x9d\xbf,#\xe6\xb5\xbb\xd4\xb0?\\I\x10t\xc4\xec\xc9?X\x87\x18\xd4\x8eb\xc9\xbf\x82\n\xef\x1fz\x8a\x80\xbf\xf9F\xfc\x90\x83]\x95?(kR\xce{\xae\xb3?\'/0\xdf\xc3P\xb0\xbf\x08\xc5}\x9dp\xf1\xad?\x0f~V\xf23\x06\x87\xbfM01JN\r\x9d\xbf\xebI<\x91\xa5\x9b\xa9?/(^i\x86U\xba\xbfp;%/\nl\xb9?x6\'7\xee\xef\x92\xbf\x08\x9c\x12\xa8a\xe1\xa1?^\x19\x02\xb9x!\xb0?\xa0\x80\xc6+\xfd\x00\xd7?\xc1\xb0\x1fjU\xef\x85?\xb8#\xa71\n=\x87?\xbc*H\xc69j`\xbf\xd2\x96\xf2\xb2\xdaC\xad\xbf\x8b\x87\xa2\xb7<d\x92\xbfM\xc8\x94T\xb0<\xa5?;\x05e\x00\xb0\xb7\xc4\xbf3(\xa3_\xa9\xdb\xc0\xbf\xe7\x02%\xe6\xee\xb5\xc9?\x96?\x16\xd8D*\xdc?(C[\xd9\xc0\xae\x90\xbf9O\xea\x84\x83\xb2\x86?\xda\xac\x82\xae\xe3\xb8\xbc?\x90\x99\x08\xd4\x8dN\x8d?\x1a\xef\xc9\nw\xb5\xcf\xbffz\xad\x9f\x9bX\xc6\xbfu\xf4\xef<S\xe4\xbb\xbf7\xb1\xdf;\x18\x03\xc2\xbf\xddK\x96\x19\xc3\x87\xa1\xbfv3bH\xa4_\xb3\xbfS\xb3\x07U\xbb]\xca?\xf2M\xc3\xba\xd8l\xe0?INX\xed\xf4\xfd\x8f?\xf0\xddok\x9f\xb7\x82\xbftt\xd72\x03\xc7\xa5\xbf\xb9\xb0\xd5TV\'\xc7\xbf\x945c\xff\xf4\xce\xb2?\x0ele\x98\x9a\xdf\xa5\xbfL\xc8I\xdd{\xc4\x92\xbf\x02\xe4Z\xa4\x93\xea\xb2\xbf}\xfe\xd7\xde\x87~\xc5?Wj\x97I\xfbv\xba?=\xd9 \x1f\xe6\xa6\x9e?K\x8cj\x15\x80\xbb^\xbf\x8cM\ni\xe6B\xb5?\xdc\x19\x831W\xc2\xd4?\x01\xcf\xf5\xec\xd4\xec\x96\xbf\xf7c\xf7\xe3\x03\xb0\xba\xbfh\x0bzU\xe3\xe2\xc6?ye=\xdb\xff\xc4\x81?\xce\xb8:\xf7p\xf3\xbd\xbf4"*\xca\xa3\xeb\xd6\xbf\xb5]\xbf\x8c_\xe0\xbc\xbf^\xbc\x05u\x06\xad\xbd\xbf\xef|\x93\xe0\xfc{\xa6\xbf\xe1\x01\xbd\xd0\xf3\xc7\xba\xbf\r\x91\x16\xcf/\x7fC\xbf\x1b*\xaa\xf8\x94\xe6\xc3?\xd5KQ\xc8\xd7\xd6\xa6?\t76g\xf6\x89\xc7?\xef\xbc\xea\x0c0SP\xbf\xbf\x98b\x93\xd9\x92\x86?\xd4\xd3\xcc\x08\x11p\xbb?Z\tw(d:\xb6?QKH\xaaY\xd3\x8d?B\rw\xd6\xa7\x13\xb1\xbf(\x86@\xf1o\t\xb1\xbf\x04\xebe\xad\xf4J\xca\xbf\xf9\xf5\xde\x19\nj\xb4\xbf\xea\x05\x96\x96C\x9c\xbc\xbfea\x90>\xdd\xbc\xa6\xbfj\xb5\xdb\x18z\xa9\xb1\xbf\xf6p)\xbe\x8b\xa5\x8e\xbf\x10e\x8a\x8az@r\xbfZu\xa4\x14<2u\xbfj\x11\xbb\x07\xc2\xa5\xac\xbfw\xbf\xf0\xa3\xcb\xc5\xb5?\xc8\x84"I\x8c|\xc2\xbf\xb3\xf97\x01+\xa0\xa1\xbf75C\xf2\x05\xc2\xa7?X\xf3\x0c\xbb@\x98\xab\xbf\xb9\x1b\xc0\xe8\x06\x17\xc6\xbf\x13\xe0\x94j_m\xa6?\xed\xfe2\\m\x1c\xbf?\x9ci\xd7\x01\x8fB\xb2\xbf5\xc5\x90\xfa\x1f\x07\xa1\xbf\rgl\xad\x9c\xe8\xc8?\xa1:\x16u\x8e\x11\xd3?x\x11\x94\xa7\xc7\xcc\xb0?\t\x99\xdd]\x8d\x1a\xb4?uD\xcdFPE\x9c?\xcc{*CQ\'\xb7\xbf.\xe3hZ\xc6\xe1\xa6?\x9b\xa6D\xa5\xd8\xb8\xaa?\xd5\xba\xa1\xe3\x8cat\xbf\x16\xae\xb4\xa7\x80\xc6\xc2?\xaa\xab\xd8\xd9\xbf\xac\xb7?\xa6\x13\x89\xfe\xc2\\\x9a\xbf\xd5\x8f\x83"\xcet\xb7\xbfe@\xa9\x15 \x1f\xb2\xbf\x97\xb6\x13\x05\x81\xce\xb2?-\xae%\x06;}\x91?\\T\x92\xf9\xfa\x1e\xb1\xbfGUJ\xb2\xe6\x0c\xcd\xbf\xf5\xe6z\xf5Uy\xa4?DE\x82IF\xe0\xb9?\xf4\x15As\x9au\x83?\xc7\xea\x1bzN\xb9\xa9\xbfE"U\x8f\x88\x02s?H\xbd_m\xaf\xa2\x94\xbf\x9a\xaew\x8a\xd7\x02\x83?!\xc9IJ\x9f+\xa2?\xf6\x90T\xbd\xe0\x98\xbf?\x1a?d\xe6\xbd\x12\x91\xbf\xe8`y\x11\xea+\xb1?4\x19(\xc2\xba\xba\x96\xbf\xd4\xbe\x87\xd7\xc0\xc4\xdb?yz1U\x85[\xd7?\x86\xaf\x9b\x86\xa0\xce\xcd?Vr)\x812\xc7\xb5?C\xc3\x9e\xa7\xbbz\xd2\xbf\x1a\x0e\xf2\x87\x8e\xab\xc7\xbf|\xd7\xb1 \xc62\x92?\xb2o\x06\x14d\x9bu?\xb9\x1a ^Mi\xaa\xbf\xfa\x94X\xa9\x93g\xb5\xbf\xb9\x17f:\x1fI\xb1?%\xa9\x81\xee\xdb\x02\x99?Nr\xe1\x8d\x00\x01\x93?\x07\xf3\x91\xe5\xe5_\xad\xbf\xc5\xbe\x8c\xdb\xdb\xac\xa5?\xf5E\tH\xe4\x1d\xa6?\xbcj\xef\xe6,I\x91\xbf\x82\xfe2I\x97?\xa1\xbf\x16i\x061#\xf1\xd1?\xfedzR\xd8\xb9\xc7?7a\xfcC\xbf\x83\x88?\xeb]AJ\x08\x81\x88\xbf\xfd79\x87\x0fX\x8f?\x0f\xffua\x1d\xc1\xa7\xbf\xccr\xec\x12\x8c\x15\xbc?Pw\xa3\xc9\xd6\x05\xaa\xbf\x88\xd0\x068S\xdb\xa1\xbf\xff\x88\xf7\xa5sJ\xce\xbf\xaa\xb4A\x94g\xc8\xaf?\xc8x\x9c\x8d\x85\xa1\x9d\xbf\x00\xa3\xfe\x82\x91\xac\x90\xbf\xd0\xde\x02\xe4EY\x90?O&\xb0Z\xeb\xd6i\xbf\x8c\x9d\x04\x8b1\xcb\x8a?\x1a\xc0\xd7\x0e;\x9dQ\xbf_\r6\xc8W\xc5\xc3\xbfQ\xb1\xfd\xf3\xddE\xd4?\xb8\\z:l\xd2\xd6?\x8fV\x93\x9a06\xb9\xbfP|H=\xeb\\\xbc\xbfQ\x17\xa3=\xfcl\x98?\xc56\xa0F\x14\x06\xbc?\x16R\x8aQ\x05\xa5\xaa\xbf#\x08\x18\x825E\xa6\xbf\xf3\r\r\x99\xb4\xc2\xbd\xbf\xb2\x99\xcf\rX\xe2\xca\xbf\xe2\xa4\xd5H\x8d\x02\x9b\xbf\xfc\x9c\x9f\xbe\xca\x1f\xc4\xbf\x91\xa7\xae\xcd\xeeL\x9f\xbf\xe3\xe5\t\x94\x0f+\x9d?r\x02\xc7-}9r\xbfx$\xf4V}\x8a\xac?:\xfc\x1e%\xac\xa0\x97?Z\n66\t}\xc0?fk\xe0\xcam\xe5\xa7?\xcb\x06i\xd3pP\xbc?\xc0\xf6N\x06\'\xc7\xde?\xeb\t\xe7\xd0\x0b\xd9\xda?\x9d\x10U\\\xe0<l?\x18dh\xc4\xb6\t\x89\xbfl\xe1\x18_I\x89\x95?\xc1?\xd4\xae\xd4+\x8b?\xe3\xb01S#\xeb\xd5\xbf\xf83?g\x1e\x8a\xd6\xbf\xe9Y\xc4\xa2H\xe9\xb7\xbf\xf4\xb1\xed\xd0\x8dll\xbf\xe6\xdb\xb9\x9f=\xe3\xb8\xbf/\x92\xbb\xec\x83\xc5\xba\xbf.\x86\xb2\xd2\x94\xc4a\xbf{\xcd1<\xeb/\xb4\xbfN\xa1\xe1I\x8e\x0c\xcb?BG\xa2\x11;\r\xbd\xbfr\x03\x94\xe8\xa0\xd4\xbb?\x93Lui\xd7$\xc1?[\xec\x98\xabj\xef\x88?$\xfeLl\x8c\x1f\xaf\xbf\xd6\x11\x8a5\xe7,\xc9?\x95\x8d\xcc\x1d\x08G\xd3?T\xab>Sq\xa0\xcc?\xfeq\x8f#\x87`\xda?\xaf\xcc\xb4\xd5\x95\x17\xb4?\xef\xdfD#xt\xb1?\xde\xee\x19n\xce\xcd\xd7\xbf\x93\xca\t\xfa\x05\x01\xce\xbf\xd5\xd8\xb3\xb6\x08\x9d\xd6?\xf9k\x00\x87V\xf6\xab?5\x82\xda;\x83Kx\xbf\x01\x12\x7f\xcd\xed\'\xb6\xbfa\xa6\x88\xc8\n\xd3\x81\xbfd"\x02\xf6Hx\x88?\x02\x12\xef\x9f|\x8eq?\xeam\x7f\x18i\xe7\x9f\xbfk\x9f\x1c%m\x02\xb0\xbf\xb7S\xf8\n-\xd8\xc2\xbf\x88\x06Q\xa7\xf4w\x8e?\xc1\xf1\xc1\xb7\x8a\xa4\x86\xbfJ\xc5k\x94%v\xb6\xbf\xa7rg\xb6X8\xca\xbf\xa1\xa4\x16\x11\'<\xb7\xbf\xc5\x95\x9b\x9c\x9c\xac\xa4\xbf"\xc0\x0cI\x89\xe5\xb1\xbf\x9a\x19\xe9\xbe\xca\xb9\xa1\xbf\rT\xbfe\x9a\xee\xb1\xbf\x8f\xc3\xfe\x07nk\xab?\x95\xb1B\x8ai\xc1\x8d?\xd1AL\x8e\xb4\xa5f\xbf\xd0\x9d\x12/\x99j\xb8\xbft\xa9\x16\xaaB\x14\x81?i,G;\xd8\xa2\x99\xbf&&\x14R7\x0c\xbb?E\xf7\xd5\xfcu\xf0\xab?\xa0P\x14\x95H\xc7\xc0?\xe6Jo\xc2S\xd1\xa7?\xad$\x17j\xd1\xcac\xbf\xe5\\\xf0\xf9\xae\xde\xa6\xbf\xe5\xaf\xa44Fd\xa2?NN\xd7\xaf\x84\xacu\xbf\x05\x81\xab_{h\x91\xbf\x0e*\xe3\xe8\x8f\xc5z?\xe8\xcdr6\x8c6\x81\xbf\x8dw\x80-`\xda\xc3?\xc6\xdf\xed\x8ck\x16\x8f?}\xe9\xbc\xad\xd2P\xc0\xbf\xcb\x1b\xb9_WT\xb4\xbf\x12\x16\xda\x04\x9b0\xb2?BUbj\xf9\xae\x9b?%k \xb0SY\x96?e{n\x10\xc2\xa4\x91?\xab\xc3\x7f\x95\xffB\x80?\x13\x88\xde\x1c\xf0\x9b\xb3?B\xc7.T\xfc\xd8\x97?\xf1\xa3\x88\x1c*\x1f\xa2\xbf\xce\xcdlY\xd5s\xb0\xbf$\x91\x19|x\x90\xc3\xbfr\xe5\x91bt\x06|?\xf7@\x02\xec\x11\xe2\x93?\xa5E!\xfa)]\xc0?\xe8=}\xba\x87\x99\x8f?\xe8[\xcdZ\xeb\xef\xae?\x19\x8c\x13\x9f\xea\xd9\x88\xbf\x00$\x11-\x18.\xa0?\x10,x\xe2\xad\xbc\x93?\xb6@\xda\xb6\xb3\x9b\x97?\xeb=0\x19\xb2\x13\x93?z\xdbJ\xa1\xda\x06\xa0?\xe2\xfc\xb8\xf7\xe7\x03\x94?\x0b\xb9\x11\x82\xce\xc2\xa1\xbf\x16\xb8\xf0\xb8U\xf2\x91\xbf\x9flkn\xb20~\xbf7A\xf1\xac\xa7\xc4\xa8\xbf\xee\x98\xb9T\x8d\x16\xb0\xbf\xd8\xe3\xc7~7\xe2\xd0\xbf\xbf\xe4\xc2\xd0L\xa4\x87\xbf\xa08\xb3\xfcqB\x9b?)\xc7\xc0\xc7s\x8c\x9e?\x87\x9e2?K\xa9\x98\xbf\xd5\xcb\x98&\xd3\xff\x8a?\xeaUP\xe8>(i\xbfT\x0f\xfa\xfd\xd7\x89\x96?\x148CW\x7fJ\x98?ZS\xd7\x84\x8e\xf8\x9e\xbf!t\x8cO\xb0\xb1\xad\xbf\xe8l\xadx\xf2\x8e\x83\xbf\xe90ry\xc8\xe5\x93\xbfv{C\x91\x0f\x96\x8d?\n\x9e\x92D\x15]\xb8?fZ@\xd2PY\x95\xbf\xfe\xb2\x13\taw\x98?\xf9`\x9b\xd3\xbe\t\xa6?\x0e\x051\xe6\xa5+\xa8?\xbe\x1d\xbfI\xea\xcc\xa4\xbf\xd2\xdc\xff\x8af\xf6\x84\xbf?\xa3\xce\x1d\xdcQ\x90?,\x9e[l\x8b\xed\x8d\xbfqT\x96\x06}\xf9\xa7\xbf^\xf9\x81\xc0\x1f}g?_@\x06Z\xed3\xc1\xbf\xa7 \xc6\xcf\xc6\xbbc\xbf\xaf\xf3\xa1\xdd\t\xde\xab\xbf\xa6+<"V\x85\x97?\xc3=\x0e\xeax\xe5\xb1?\x89\xab#\xe6A\x8dz\xbf\xe4\x86s\xd9l\xbc\xdc?R\x19\x07\x8c\xc1\xe0\xbf?\x1f\\D\xabX\x17f\xbf&i>g\xa3V\xc0? \xdf\x07\xe0&Qw?\xae\xa7K]qf\xa4\xbf`v\xe4m-\xc6\xa9?e\x83\xc4\xfdy\n\xa8\xbf\xab\x18G\xd7\xf09\x7f?\x02tx\x90ov\x97\xbf2\x12\xa5\xa6\xe1{\x8f?\xc4}\xc3\xcb;a\x95\xbf\x99\xce(\xce0_\xba?+\x8e\x15\x8d\x9d@\x9f?\xa3\x84C\xd3\xa8c\xc3?xlI\x85\xe9X\x81\xbf5\xe0\xea\xa6V8\xa6?\x1bJ\xa1\xf8\xa5\xa5\x96\xbf\x9ax.&f\x8a\xa2?U\xfb\xcf\xa4\x9d\x83\xaf\xbf\x19\x08z6\x181\xc9\xbfH\x8c\x18\xd3\x95\xed\xcd\xbf&\x92\xd5\x18\xc6\x8b\xa3?\xa7\xd7\x84\xef\x9eh\xa3\xbf\xeb\x9fS\xb0\xdaog\xbf\xdea\xc5\t\x85u\xa2\xbf\x8b\x85\x95[\x8c\xaf\xb6\xbf\xf8H\xb6C\xaed\xdd\xbf\xffgI\xf4x\x16\xc6?\xab\xe2)_\x03\x02\xbd?\xcf\xd9\xe4d\xa6\x91\xb9?w\xa9:\xde2\x07\xc4?\\\x97\x8f\xdf\xee&\x8d?\xc3\xce\xe4&tq\x90?\xdaR.R\x9eM\x91?\xdf\xb24\xae2\xea\x86\xbf\xc4r\x83\x9e\t\x1e\xad?\xaadJ;\xf5\x81\xa9\xbf\xd5\xeb\xc3j8\x99z\xbf\x16\x93\x101\xc9<\x83?~\x9b\x04\xb6 \xf5\x92\xbf:\xd5a\x0b\x99\xb4\x88?H\x88\xd6w\xafV\xc6\xbfgah\x0fk:\xd6\xbfp2UW\x9c\xfd\xba\xbfV\xd1\xa5+\xe2\xe8\xb1?\x08S\x15\xad\x87\xce\xd1?\xc3\xb3\xcah\xb9\xac\xd1?\x17,\xf6\xd3\xb9<+\xbf\x01\xb8\xbd\x95\xfepb?t\x1f\x85\xac\x80\x98\x84?\xe9\xf0\x12\xdc\xc9\xcfr?\x1bu,^x;\x8b\xbf\x938b\xc0\xb0\x89\x91?\xfe&\x8e\xcc\xb9\xcd\xb2\xbf\xb4\x90\xa1\xcb\xe64\x9e\xbf\xb1\xc7\x06\xa8\'\xe6\xda??\xd9\x9a\xcb\xbd\xd5\xd4?\xd2Tp\xb9\xedFX?\x97\xba_\xcbX\x04\xbe\xbfo\x01\x0e\x8dl\x86\xa2\xbf\xb2\x89B\x94\xf8\x84\x84\xbf5&\xb4\xdb\xff5\x89\xbf\x8crL\x83\xa0O\x95?\xc3\xa3EI\x82\x14\x92?\xea\x1dac\xd3\x91r?\x8e\x8ex\x8b\x1d\xb6\xc0\xbf\x9e\x05\xfb5\x87C\xa4?\x80\xf2\xa7\xf9\x81u\xcc\xbf\xe8\xa5\x9b\xd8\xab\x05\x91?\x93\xdb\xdf\xc2/\x95\x90\xbf\xc4i)\x9d\xf9\xf3\xa2?\xd5\xa7\xfd\x9e\xa5q`\xbfc\x1er\xb2.[\x9f?\x9c\xd2\n7O\xfc\x88?L\x16O\xe90\xe0\xb0\xbfm\xba\xa2\xf3T\x1ei?/\x14St\xe9\xe7w\xbfmp1`\xc7ac?\xa4\x16\x8b\xfdQ_\x8e\xbf\x08\x84\xc6\'\xaa\x06\xb8\xbfb\t<\xeb\x03F\xa8\xbf:\xc8\x8a5\\\x05\x91\xbfI\x9e^\x1e\xb9\x03\xa1?\x85\xc1\xc7\xa6C\xc2\xb2\xbfu@\xf8\xc5\xbd\xf4\xa0\xbf\xec\tY\x1a\x03\xb2\x97?F\x11\x9d\xa4\x06b\xac\xbf\xa6A\x90\x1f\n\xc6\xd0?\x1e\xf4i\x98X\xdb\xa7?\x9ep\xa1K\xf0\xcf\x92\xbf\xf7.M}W\xb7^?A\x02\x0c<\xfa\r\x91?\xba\t \xaf,\xa2\x8e\xbfbmC\xa4\xffJc?w\x91\x8c\x8d\x08\x81\xbc?\x90{\x1b\xee\x9dP\x96\xbf\xe7\xd3N\xe7\xa5\x87r\xbfiw\xeb\xfe\xba\xfa\xb7\xbfk;IG\xfdt\xbc?6\xa0\x8f\x0bz\xc1\xc0\xbf\xf5\x01\xad\xd3\xf7\xe7\xa3?\xca\xdf\x9d_\x9d\xc4\xaa?\x9bZ\xe0\xda\xd9e\x98\xbf\r\x83\xdd\\+\xe6\xb7?1\x8dR\xa8\xf0\xad\x9d?\xb8\xb3\x7f-\xb3A\x92\xbf\x94\xe6\xcb`\xab\x16\x98\xbf#8`[N&\xac?r\x94C\x89m\xd0\xa4?I\x06\x82\xc4Y\xaa\x8e?Jo\x08\x12\xb40\xaa?,\xa4\xf5\xa9\xc3\xcdg\xbf\xed\x96zr\xe5\x99q\xbf\xc5\xd5\xb2\x1c2q\xb1?\xdb\x9e-\x86_E\x90\xbf\xec/\xd5\xf0\x92\xa5\xdb\xbf\xa8\xe3\xa6\xf1\x164\xd2?(\x8c\xb8}\xd1\x87\xbb\xbf\x99<c\xaen\xa4\xab?\xfc{2\x91\xc9B\x95?o\x81h\xb3\xff\n\x82\xbf\xf7\x9d)\x1dR\x1d\xb3\xbf\xef\x9cVwu`\xa5?\x91\xcbJ\x94\xa0\xb9\xbb\xbf\x1a\xfd&\xb0\xf5]\xb1?S\x86c\xe3L\xac\x84?\xb7\xd34`d1u\xbf\xfb\xda\xec\xeb\x9fW\xa1?\x06\x16c\x9fxI\xbd?(\xec\x0c\xa1t\xd5\xd2\xbf\xc5R\xcb@\xd9\x8b\xc1?Tj/v\xa4\xcb\xe1?3?\xeb\x02\xe7y\xe1\xbf9\xcd\x98\xff\x96&\x8c\xbf\xef9F\xcb\xb6\x91~\xbf\x07E\xf4\xed\xbc\r\xdd\xbf\tA\xfb\x1a\xbb\x85\xc7?\t\xa56\xe8\x9d.\xc1\xbf1\xfaV\xc3\x0c\xaf\x93?yB\x82Q\x07\xf4\xad?\x9b\xf0\xf9\xf1\xcc\xc5w?T\xf4N\x8d\xff\xe1\x8b\xbf\\M\x16\xc8C\xf5\xa3?kN\x9a\x02\xce\x97\xc7\xbf\xbf\x1fB\x86\t\xbd\xb4?\xba\x83\xa3\xbb\xc8\xb7\xa6?\x10\xa3mk\xe2\x8d\xa0\xbf`\x16\xb6l\x85\xaa\xd4?!\xf4\xd90\x18\xabv\xbf\x1f\xca\xb66\xa5L\xc2\xbf6\x80\xa9T\x8b\xfe\xb1?\x81\xe3\x1e\xd0\x89#\xb2\xbf\x11\x90O\xcc\x90\x8b\xac?8\x8f\x1a\x19"\x94\xce\xbfpI\xe1\xb6\x08&\xd1?\x03_,L^l\xb6?A\xb7e\xe2\x0b\xaf\xa1\xbfJ\xa4a\x1d\x80>\xd2\xbfs\xf1\x9cR\xc3}\xd4?bs/\xebH\x8d\xcd\xbf/\xdb]fRl\xd6?\x8c^oV\xd1\x82\xb7?\xc2\x8a)B\x86\xdd\xba\xbfM\x08\xbb(b\xda\xad?\x07\xfb\xa0A\xd9\x92\x91\xbf\x93\xf2\x97J\x81f\xb5?\xae/TO\xdf;\x85\xbf\xdb\xc7\xca\xc2\x9d\xb5\xa9?\x06\xf7^\xe0\x17\xd9t\xbf\xc1\xba6?\x96I\xc3?\xef\x84\xc9h\xbdI\xb0\xbf\xa4\x08\xa8\n\x9b\x02\xbf?\x04(\xfe\x18\xeck\xc4\xbf\xa6\x0fNA\xe9\xc2y\xbf.gE\x9d)7\x8b?k\xbd;\xd7\xd9\xbc\xa2?\xf3\xcf\xca\xb2\xbb\xd8\xac?\x10\x17\xd8\x00\xa9\x80\xc3\xbf\r\xb7\x8d!\x08\xe7\xb8?\x03,D\xbf\xa5\x9e\xaa?<\xec\xc1m#\x92\xa5?Lvy\xdc\x18\xec\xb7\xbfy\xd8\xd7(\x8fz\xba?v\x120\xc8\xc1\xac\xac\xbf\xc7&\x80\xc5\xd8^\xaa?\xfaH\x06U\x07\t\xaa?H\xcc\xcb!\xa2x\xa9\xbf\x00\x8b%\x08n\x15\xce\xbf\xbf\xb4\x04\x9e\xbfe\xc8?\xf4g*\xf6M\'\x92?:\\\'\xbe\x13\xac\xb9?\xd1&r\xc2\x9au\xc4\xbf>\x8f\x83x\xd6\xf6\xbf?!\xb2OA\xa90\xa5\xbf\xcc\x9d$$\x14\x8e\x95?k\xe6\x9a\x82.\xa4\xb9\xbfq\xf6\xbb\x9c\xba+\xb6?Q\xb5<\x0e\xea\xf8\xb0?\xa1_\xfdx\x87\x89\xb3?5\xe6UE\xee\x82\x81?7\xb3\xa7!\x82#\x91\xbf\x1ch\xa4D\x04\xbc\x82?Q\x82\x15\xfeN\xb4\x8b\xbf\x19\xaaKr\'}\xae?\x17\\\xea\x99\xab\xa2\x9f\xbf\x9f\xbfY\x08&\x1f\xc3\xbf\xaa\x13\x12\'\xc0J\xca?v;\xe8lE\xd8\xc8?\x98\x12\x8d\x1d\x0c\xb4\xaf\xbf\xc4^\x08\xd8vM\x80?\x88bB\x99\'\xf8\x86?\x04\xe0\x7f\xe1\xd7\xe6\x80\xbf\xdd1\xb9\x04\x05\xe5\x80\xbf<\xe6\x93\x99/{\xc5\xbfs\x86`\xd7%\xc4\xac?h\xe4\xcf\x86\x06\x81\xc5?.\xeb\x8a\xbbo6\xd6\xbf\x14{\xae\x97~8\xb4\xbf\xd8\xed\x82\xbdQ&\xb0?`c\xce%\x04u\xb6\xbf&\xfdi\xde\x8c2\xb7?\xaed\xc7\x17\x865\xb3\xbf\x97\xa2\xad\xe9\xa7W\x8a?\xc7U (\x0e\x11\xc0?_\x937\x18A=\x9f?&\x85\xcf\xee\x00\x08n?;\xe9\x00\xd6\xd0.\x8c\xbf\xdd\xa7)\x90\x96l\xb2?\xcc,\xa3\nj`\x9a\xbf_A\xe7\xfcz\xd8\x9f\xbf\xf0\xddlD\xb2\xa4\xb5?{>\x0c\x95\n\xbf\xbc?\x7fr\x87\xc1\xb8\xf3\xaa\xbf_*\x03\xd8*\xe0w\xbf\xbe\xac\xff\xb1\xdf\xa5t?\x1e\xb5\xb1K\x1b"\xc7?\t\xee\xc1\xe6\xfe\x1f\xc1\xbf~\xcf8z\xc2\xeax\xbf(v\xff\xc8\n\xb7\x90?C\x80\xd2\xf4\xcc\x80\xb0?\x96\xc7\x92l\xae\xb2\xb8\xbfR$\x15\xaf\x01\x04\xb2\xbf\x90\x0f\xf2\xdc\x88\x8b\x9a?\xad/\xb6\r\xec\x9c\x84\xbf\xc8\xa1\xce\xc7\xed}\xa1?r\xae\x92\x17\x13q\x9c\xbf3\xc8c\x9dVI}?\xfeS\xd0\x9d\xb9\x0f\x8c?\xde\xa1\x00c\xc5A\xa4\xbfJ\xf0\xf0\x84\x13\x9dw\xbf\xefX\xce\xbe\xfc\x1f\x80\xbf\x01\xedo\xe8m\xc1e?G\x89\xe3|s\x87\xc5\xbf\x0em)\xc5y\xd8\x9d?\xbf\n\x85\x89-U\xa9\xbf`\xd5L\xe2<\xa5\x9a?%vv\xb3EQ\xab\xbf~\xfaC6\xc0\xb3\xa7?\xe2\xd89\xf6\xeb\xe0\xb1\xbfM\xa4r\xf2\x9bI\xb2?\xdb\xb74\xb4\xc7\xa7\xc8\xbf\x80\xe6\r\x8f\xc3>Z?h.\xbc0\xbe\xa0\xcc?q\xfeT\xac\xc9\xe0\xd7\xbf\xd2\x93\x08\x89\xbc\xa0\xb7\xbf\xc6\xf9l\x86\xb2\x8e\xad\xbf\xb0\xe8\xe6\xd4y\x00\x96?\xe1nw8\\\xdc"\xbfE|UrY\xff\xb4\xbf\xd1@+>:\xb8\x91\xbf\xba\xbcX\xe5\xd5j\x92?\xc4\xe0\xb1SO\xb0\xcc?z\xbb\xd3+\xdb/\xd1\xbf\x8b3\x07,\t\xa2\xd0\xbf\xd5e%\x04\xc9\x18\xc9?\x12\xb4\xed\x97\x9e\x94g\xbfXc\x83X\xa9\x93^?R\xed\xde\xa6\xde\xf7\x84\xbf\x1e\x16\xa7\x91.xa\xbf\x15m\x0c\xa1\xdc\x0e\x8f?0I]jD\x83\x99\xbf2B\xfc\xaco7\xc9\xbf0\xbf\x15\x0f\xd16\xc7?\x10%F\x90\x05\xdf\x98\xbf\xfdx/\x8au\x18\x85?\xefw\x1b\x10W5\xb6?\x87\\7\xfdA\xec\xb0\xbf\xd3\xa6\xfa8\x1b\x9c\xb3\xbf\xec\xc5RI\x95\xce\xb5?a\xbc\x00?$\xc6\x8c?w\x10\xf9L\xd7\xf1\xb6?\xe7\xd0\x88\x0e\x1c\xab\xd5?\xbaR\xd3\xe7\x18\x8b\xd4\xbf>\xafvi\xea\\\xb4?\x00\xa0\xda\x9b\xdeX\x92?\xdbB\x8bb\x8cf\xcb\xbf\xa7\xdc\x84hq\x9f\xce?{\x0f\xbc\x17\x8a\x01\x9f? \x14\x1e\x88\x0c\x14\x9f\xbf:C\x0c\x86\xbc\x9c\x92?d\x01\xeb\x9d\xde\xc0`?u\xed\xc1\xf0\xdb\xca\xbe?\xd9\xeb+cg\x07\xb7\xbf\xe2\xc8\xac\x8aW\xb7\xb8\xbf\xd9\xf6\xc0e\x19\xa4\xa7?\xe5;\xb4\xee-\x00\x9d?k.\xb8\xed\xdb\xe8\xc1\xbf@\x15\x03h\xa6:\x8b?\xd2\xcbHA\x97\xfd\xa6\xbf\xe5\n\x01\x13\x02\xcc\xd0\xbf\xc2\xd7\xff\xc0\x00\xf0\xdd\xbf!\x88\xcde\xfd\xf8r?\xd5lA\xa4\xc4\x98\xa2\xbfT\x19E\xa2\xf0<\x92?C]\t-~\xd6\xbf\xbfcPLu$>\xa4\xbf=]\xb8Z\x00\xaf\x93?\xe2aZ\xd5\x95r\xc3?\x00OBd\xd4\x14\x86?6=\xcf\xb9q\xb6\xcb?\xcbe\xa68\xfb\x1c\xd4?\xb2Vb1\xa8\xffs\xbf\x07I\x1f`\xd0\x1b\xa2\xbf\xa3\xa62\x8d\x7f7q\xbf\x91o7\x92\xfc:\x90\xbfjj\xc6>|u\xcb\xbf\x0f\xab\x1d\\\xf2\xcb\xc2\xbf\xd6l\xa2\xecS`\xc4\xbf@c\xe9\x97\xed\xb5\x99\xbf}\x122\xa0\x02\xa9\xa3?A\xf0\xf4\xe2\xf6\xc6\xb8?\xae\xb9\x01\x84\xd0B\xc3?\xfbk\x8c$\x1f\xe2\x8f\xbfX\x89G\xd2\x94\x98b?\x10%\xc7)\x8e\xe8\x9b\xbf\x17\xf1tA\xec\xca\xb3?\x96\xc4K>\xe7\x9d\xc7?\xed\xcb\xc6\x84\xbe&\x99?\xed\xae\x9c%\x0b\xfb\x95\xbf\x88[\x96L\xe6\x12\xc3\xbf(\xba@y\xae\x10\xb8\xbf\xdfGMW\xc5)\xda\xbf\x82\xbe\xa3\xd2\xa7\xba\xd2\xbf\xdf+{;o\xfa_\xbf\x87\xe72\'\x08\xfd\x97\xbf\xecC5\x8e\x9a\xa8\x97?\xa7\r\xc5\x8e]\xd3\xcb?qD\xe2\xc1\xfeq\xb0\xbf/\xf0\xf4\xed\xeeK\xc0\xbf\x06\xdfnb\x84\xce\xa3\xbf\xe0:.;Tfa\xbf\x19W\xa3\r\x1aE\xb1\xbf\xecM\xbd\xa4@0\x80\xbf\x85&o\x13\x06H\xae?w7\xea\xa6\xb3\x87\xa9\xbf\\\x80\xfb\x10\x9f\xc6\x8d?\xfa\x0fL\x8e\xf5\xa1\xa3\xbf\xfd\xde\xca\x9d\x86\x1e\xc4\xbfx\xc4\xcd\x8b\xf3V\xca\xbf\xe4\x9d\x15\xff\x04\xdb\xa7\xbf\x84\x08\x11\x1c\xd5T\xbf\xbf\x88H\x8e\xd0\xe6\xdd\x9f?\xa3\x9c\n\xa9l\xdc\xbb?\xef*\x1e\xbbZ\xf5\xb0\xbfAV\xb7Zp~\xa1\xbf\x17\xe6F\x15pY\x8b?\xec\xda\xd6.o\xca\xa9?s\x98sYvR\xc0?g\x8e\xb0\x1f\x17\xb0\xb3?*K/\x14\x0c\x80\x88\xbf\x89V\x9a\xd7Wk\xa0?;\x82\xfe\x91\x7f\x92\xb5\xbf\xeb\x94\xaa\xad\xe9X\xc0\xbf\x88\xa6\xd4\xbb\xa3\xe7\x80?\xb8b\x0b\xb3\xa4\x8b\x80?\xb3c\xb8\xad\xcd\xca\xa8\xbf\r\xa8\xe9z\xe0\xa5p?\x87\x9c\xb3t\xbe\xc6\xb4?\xd6\xa2\xbc\\/!\xda?2\x84\xb0+\xf1\xfe[?\'r49|a\xa9?\xa2\x02\xb8\xe1Fy\xa3\xbf\x99\xcc\x99+\xc9\xe3U?\xf8\xc9\x8f\x0b\xd0\x8a\x9c?\xa3\x91\xf7_8#\xb1\xbfT;M\xe9\x9c\xb4\xa0\xbf\t\xf6&4\xc8\xf5\x85?\x13\xa6\x83\x9c\xda\xc1\xbb\xbf\x1d\x95\x16qU\xf5\xca\xbf\x80\xde\x9aQK0\xb6\xbf\xe6\xbb\x9a\x9c&0\xc3\xbf\xf3\xb7\xc1\xd9u\xdb\xbb?V`C\xa3\xc1\xe9\xc0?7\xc6\xf6\xab\xc7\xdc\xb5\xbf\xf6>\x11\xf9\xf4\r\xc7\xbf|\xf2\xb1\xdc\x02\x92\x85?([\x1d\xd8\xd4\xbf\xa1?-\xeej_\x977\xcb\xbf\x0b\xec\xd3\xc5\xf1\xeb\xd8\xbf?\xc8\xc9A\x0cS\xba\xbf\x8c\xdb\x87\xa0\xc8\xd4\xbe\xbf\xee\xef\x91\xc7\x99U\xb1?+\xa5\xf6k\xd2\x13\xb9?\xefK\xa7&\xa4\xeeT\xbf\xacg+\xc1h\xb3\xb1?\x9c\xfe\x92e\x10\xa7\xae?s\xce\xd3 \xdbA\xc2?\xf7\xa1\xdf6\xba\x03\xb6?\x1f\xbf\xbf\x1a\xac\x02\xa8?\xdeV\xa7\x8c\xb1\x80\xae\xbf\xde\x82\x8b\x93H\x8d\xa9\xbf[\xa9\\\xcc\xb4\xd7\xa8\xbf\xfcr\x94IV\xc3\x9a\xbf\x90\xf2\x8f\xda\xf3\xff\x86?,\x9e$|\xd9h\xbc?{[&\xaa\xad(\x80\xbf\xa4\x1c\xcd\x8d\x1f\xa5\x80?X\xba\x7f\xa1\xe2L\xc2\xbf\xd7\xe51\x06\x146\xd6\xbf\xe7\xf2C\nF/}?\xf5\xe0\xdd\x86A\xe0\x9d\xbf\x9d/\xca\x01\xc2\xd1\xac\xbf\xbe\xf4\xb0\x10\xf4\xe1\xad\xbfQ\xdc\x01#\xce\x02\x8d?\xa9\xf9=\xdd\x9b\xd2\xa3?-\x94B\xae\xa5\x83\xb4\xbfELrl\xed\xb0\xb5\xbfb\x8b:.\x88\x0f\xce?\xf6j\x1d\x1e\xbd:\xa2\xbf`\xcf\xf3\x18Cm\xc2\xbf\x93\x99y:\xb5\x0c\xa0\xbf\xe4F\xb2^\x94i\x91\xbf\xbc\x8eT?\x1f k?\xd1\xe3\xc4Q\xad\xc4\x80?\xbc\xad\xceH\t\x1d\x9a?\xee\xf4t,~\x95\xd5?\x0b\xa0\xd3\xbas\xb7\xe8?\x9dU\xc7~\xba\xf4w\xbf\xb1n\xaf\xab+\x0f\x91?\xf7\r\x00\xdb\x1a\x07\xa2\xbfSf\xbd\x0b\x1b\xa4\xbb\xbf\xfe\xd4j{\x81\xf9\xc4?,\xfc^\xf9\xf8\xce\xc2?}l0xx\x00A\xbfa2\x087\xd7\xac\xc2\xbf\x101\x90\xe3\xbc\xc1\xb8?\xf0\x95\x88\x1fY\xfe\xb8?$\x7f\x87\x88\x9e\x80\x95\xbf\xfd\x88\x14\xa3\xa9\xe7\x93\xbfq\xe6`\xf4Won\xbf\xe3\xe0Rwf\xf8o\xbf#\x1b\xa2>\xb9d\xac?@m(,\xcc\xc0\xc1?@]\x1e\xfd\xca_\xd0?\x80\tG4\xb28\xcb?\xb7,\x81\x11\xccz\xc4\xbf\xa0\xa2\x08\xfb\xdd\xec\xc1\xbf\x91\x8a~\xfa\x14)\xc4\xbf;\x88\xce\x96l\x96\xbd?\xfd\xd4\xcb\x90\x9f\xdc\x95\xbf,|,\x9c_\xc3\xb2\xbf\xc0\x87\xe8q\x19\xb0\xa8\xbf\x95\xcb\xa7\xee`\xe3\xae?\xa1d\x9d\x85\xa6\x1b\x89\xbfd\x98v7"4\x9a?\xe5\xbfke0\xcc\xa7\xbf\xb4\xa4\x03!\'\x12\xb5\xbf,\xddA=\x95\xbc\xc7\xbfj\x91r1\xd09\xc5\xbf\xed\x975\x06\xba\x16\xa8?X~\xf2s\xc89v\xbf\xa4k\'\xd4$\x1a\x92?b\xc5\xbco\xc3S\x95\xbf\xff\xe8\x1bQ|m\xdc?\x91\x1fQ\x8f{\xf5\xd1?h\xcf\xa9\xc0)\x04~?\xa7\x01\xb4\x969\xf5\x8f\xbf\xbao1\x1aN\x95\x80?"\x99\x8c\x12\x05\x85i\xbf:\x06\xc4\xae\xac\x19\xbf\xbfK\xb3=\x00\x11\xa8\xbb\xbf\x0f%\x0b\x16R\xee\xb2?0\xcdt\xd3\xd8\xc0\xa3\xbf\x8f\xf7\xbc\xf6g\xde\xa9\xbfu\x9eTXVo\xa3\xbf=\xbac\x08\xb1\xd1\xa6\xbf\xb6\xbe"\xe9\'\xd6\xa0\xbf\xa6\xe25fK\x19\xd2?oh\xf0\xbc<Y\xc5?\xfc@\xd8\xec\x0f\x8c\xc1?\x00\x80\\\xeb 1\xb5?ST\x1f\xcd\xe8+\xa9?\x00\x9b\xa9s\xda\x03\x93?\xe1\xd7O\xd4\xbe"\xc3?\x8a\xec\xda\x05p\xe9\xbe?\xc2\xcf\xbc\xda\x84\x8b\xad?\xfc\x0c{\xc8\xf6\x82\xa6?E\xca"\x9f>\x15\xc8?O\x0fj\x10J\x05\xda?\x8b\x8fl\xeb\'g\xc6\xbf\x0b\xc4\x94?#n\xb9\xbf\x8b\xc8O\x92o\x82\xca?[\xe1\xda\x95si\xa8?bb\xd8=Kv\xbe\xbf\xcd\xf7\xa3\xe99\x07\x82\xbf\x17\xb7z\x08f\x8a\x9b\xbf\xceR\xd9+\xb1\xa7\xa2\xbf5&j\xe0\x0f\x1f\xa7?\xc4\x1a\\:\xd5h3?;\x06\xef\xfb\xaf\xe0\xac?\xc0\x12a\xc5\xfa\xc5\xa5\xbf\x12\x8a\x99\\\x97\x92\x8f?\x1e\xd6\xd4\xa3\x0b\x81\x80\xbf\xdc\xa7\xc9\xaa\xba\x0eZ\xbfY,b\xd9\xd7\xc7\xac\xbf\x15o\xbd\'\xcer\xae\xbf\x0c(\xbb#\x0b\x8a\xa1\xbf1ZQ\x0e"\xcc\xac\xbf\xdc\xe1Xx\xffY\xb6\xbf~-\x8c\x9c/\x15t?X(\xc5G\xea`\xa4?\xffUr\x17`"s\xbf\xa3Te%\x184\x83\xbf\xc5\xeb\xfc\xcc\x08a\x85?\xa4\xe8\xe1\xcd\xc5\r\xaf\xbfU-~\x99e\x9c\xb1\xbf\xca\xc0\x81\xe1\xcf\x9d\xb4?vs\xc6R,a\xb0\xbf\x90\x162F\xb9u\xb4?Y]W\xd6\xde\x80\\?e\x7f\xb3\n\xfcOr\xbf\x9d\xe2\x16\xd8\x96\xa0\xa2\xbfu& \xc1T-w\xbf\x07\x0f\xf1Z\xe9z\x8b\xbf\xac\x88\x1e0:Rs\xbf\xc1y\xbc$}u\xa2?\xadyH\xad\xc4b\xaa\xbf\xdf\xce\xf7\xa3wr\xbc?R\'\xaf\x93\xa1k\xb2?\xc2\xc3\xb0!b\xcc\x96\xbf\xa9c\xe5.\xed=\x84\xbf\xadj,\xe1\x94+\xbf?\xf0J"\xf9$)\x9a?=\xdf\x90\x80C\x9dv?M\xde\xacj\xed\xea\x88\xbf(l\x8f\xf5w\x17\x93?\x12\xe0\x0cl\xde-\x8d?P\xd2\xe8n\xa6\xd4\x94?\xc5\xd7\xd7\x01\xb6*s\xbf\xa2\xc8CwR\xb2\x9b\xbf\xed\x92[\xc9\x06\xf6\xb5\xbf\t!38!\xaa\x91?/@t\x8a\x91\xc1\x88?\xd1\xa1\x89@\xf4\xae\xc0?\xdfe\xfe\xdc\xb26\x97?\x1f$\xcb4=\x9f\x8e?\xec\x10\xa56of\x9e\xbf\x87K\xb9\xe6\xfeg\xa9?\x7fk<\xbe\xe6\xdd\x89\xbf\xce\xd7\x9f\x03\x82vt?\xa0\xcc\xa3\xb3\xefU\x89\xbf\x143\xe9|\x9f/\x9f?H:9\xc2\x85h\x80?\x8ay\xb5W?\xa8\xb0\xbf\xffZ\xbb\xb1\xe1\xb6\x96\xbf\x93\xb6H\x04\xe1C\xa1?\xf2\xba\xc27S\xfd\xa1\xbf\xb1\xa1\x96ut\xf8\x81?\x98\x9al\x8d\xcf\x86\xc3\xbf\x85W.\x95I\xd1^?\xd2I\x8f!\x9a\x8eP?\x0c(a\xe3\x9b~\x98?n\x80\xa2N\xc8\xb3\x90\xbfQ\x8b\xbc#\x029~?\xf4\\\xd9\x8e\x812c?\x11\xbc\x9c&p\x84\x9d?,\xea\x9ck\x13\xf0\x96\xbfc\x1c\x9b\x98a\xd3\xb0?XE\x8e\xa1\xf6\xfb\xa6\xbfB\x99D\x9b><h\xbf\x88\'\xda&S\x91k\xbfvB\xd2Y\xc4\x08\xb7\xbf<\xda\x81^\xc4B\xb1?\xb1\x18\xe7\xe8\x7ft\x97\xbf\xb5\xd2\x8b\xbe8\x1a\x90?\xcc\x1cV\x934\xf5\xb6?\xf0c\x1c\x8f\rz\x8a\xbfR\x8f\xda\xa5:\xad\xbb\xbf\x03)\r\x8f\xdba\x9d?\\\x01\x91M\xe7\x03\xa6?\xc6\x9c\\\xca\x97\x02\x91\xbf\x85RP\xf6\xa7n\xb5\xbf\x11j\x8f\xcd\xb4\x19\xab?Fu\xd6#~"\xbb\xbf\x1a\x03\x8cr\x1bs\xa1\xbf\x00Y\xda\x95\xbfV\xa6\xbfN\x0b\xa1\xa3\xa2\x17\xa0?\xcfea\x05i\xcd\x87?\x8a\xa4_S+\xaf\x8b?\xdc\x85\x7f\x9b\x90\xa7\xd3?\xd2\xc8\xab\x84\x90M\xc1?\xbd\xf3_GSBs\xbf\xd3\xc6Y\xf4Gr\xb4?\x8d\x9d\x8e\xd3\r\xafw?3\xe7\xb8t\x13\xd9\x93?\x11p\xdc(u\x86\x8a?;\xe8\xfd\'Ju\x8b?\xa4\xa4\xc3g\xed\\\x90\xbf\xaaP\xc38*\xa6\x80?ao\x08\xf2#.}?\x8b\x15\xd0<\xe4m\x80\xbf\x01\xd5jn\x8f:\xa3?\xefW\x9b\xc3\xeb<x?\xd2)|L\xf0\x8d\xc0?\x19F9HD\xe2\x84?\xa1\\\xe9\xd7\xf1\xc0\x94?B0\xf0\xbd\xfb\x97\xaf\xbf\x1e\x1f\x88\xd2{d\xa2?`\xd7\x91x\\\x90\xb0\xbf"\x91%\xe0\x81\xdc\xc0\xbf\xb6W\xf59\x96\xac\xc7\xbf\xe7[T6UM\x92?\xf8|\xb0\x19\xc2\x9e\x8d\xbfd\xc9"=J\\\x95\xbf\x00\x17v\x9b\x81\xc0i?f\xa6\xb2\x0c\x8dR\xc5\xbf\xf1A\xd5D\x86h\xd4\xbf\x8c\x8ddD\xf72\xba?\xe0X\xef\x88\xd1\xdb\xba?^\n\xf8\xb6\xb3\x81\xb1?\'\x1c\xcb\xc4\xe6=\xad?\x84&\x17\xe8y\x1d\xa8?s\x8f\x86O\x19\xafv?>?\x01v@6\x9b?s\xc7\xfb\xca\xcc-\x94\xbf\x8aR\xe0L1a\xaf?rY\xd5-\xc2\x0f\xa8\xbf\xa2ATg}\x9e:?\x90*d\x85wKm\xbf\x81\x80\x19\x18\xca\x17\x94\xbf~\x05\\\xe9<\xe0M?\x8d\xdc\xb4\x07\'\xc8\xd0\xbfp\x90G\x96\xccA\xcf\xbf\xcf\x94\xcb\xf1\x1d\xbe\xbc\xbf\x08\x07\x0b*\x83\xfd\xc3? \xcf\x12o\xa5\xf4\xcc?k\xe4|\xbes\x86\xd5?!\x0b`\x10\xc5\x04v\xbfor\x02.\xca\\s\xbf\xc3\xa0\x19|P\x15f\xbf\xf3\xfb{\xb4I\x19\x81\xbf\x14\xf5\x1f8\xdf\xcd\x94\xbf6\xf4\x94M\xb1l\x87?\xe2)AG\x851\xb1\xbf\xbe\xde\xfc\xbd\x82`\xa1\xbf\xf7r\xac\x98\x03\x1e\xc8?:\xe5\xde\xa8\xc7Z\xc6? \x08\xa1\x99\x16\xbf\x91\xbf\xc5\xa0\x9aC\x01\x08\xba\xbf\xd1\xe0\xacUyF\x90\xbfR\xff\x0ecy\xdfp\xbf\xfc\xaf\x88u](\x8a\xbf\xbe\xacA\x84\x1f\x8d\\?.\x02z\xde\xd6=u\xbfaF\xeb3= \xa4\xbf\xb1q\xbb\x002\x91\xc3\xbf\xcfb^\xd6\xb1\xd0\xb1?\x04\x19V\xe7"\xe0\xb6\xbf\x06V=AX\xfa\x97\xbf\xf8\xc3\x90\xb3;\xc7\xa3?e\xd2%\x0fES\x80?\x9ex\xfc\xba\x84|\x81?\x11Q\xf3[\xa7\xddv\xbf\xb1\xa2\xc0\xb0\x7f\x1a\xa6?\x1a\x13\\wjS\x90\xbf\x9d\xa2\x1d\xbe\x1dvz\xbf+\x93\xb0U\xd9\xe8\x86?\xc5\x13\x1cS\xa8\xa9E?9@`Z\xd0\xee1?\xb0\x06i\xc2\x0c\xe8\xb9\xbf\xe0\xd1\x88*d\x84\x81\xbf\x13\xc0\xcc\x11\xb6\xb8\x93?\xfcQ&\xb0\xaf\xb5\x84\xbfd\x0f@i\xca\x97\xc0\xbf\x89\xe9\xd3\x06\x07\xed\x84\xbfs\xbd\xa7\x8aw\x9f\x8b?\xc4S\x1d\x0e?\xf0\xb0\xbfK[\xc9\xb9\x1a>\xc9?99\x0c\xac\x1ab\x90\xbf\x81\x02?\x00\xeeH\xa9?g|:J2\xce\x85?\x89\xf9\xdb\x7f\x9a\x00\x91?.\n\xb8\x86\x10!\xa0\xbf\xc8 \xdd\xdd\x80\x96\x93\xbfz\xacu\xc8ZL\xa4?\x84\x8d\x18\xdb-\x98|\xbf\xbbc\x96\xfbZ\n\x93\xbfgy|+\xb2\x9d\xc9\xbf1\x02\x00}\x8e~\xce?\x13\xf2E?\xc7\x01\xc2\xbf\xe8\x95=\xac\xb3)\xaf?\x10w\x1c\xf6Zz\x9f?\xa9\x05|\xd0\xbf\xfc\xb6\xbfr\xc1\xd8u\x8f\xa1\xb9?5\x1d\x82u\xc1>\x85?\xaf\x88T\x11 \xfb\x91\xbf\x0b\x13/\x85M\x9e\x87\xbf4Y\xbb\xc91\x91\xbc?\x11\xa9!\x08n\x95\xba?a\xf3h\xb6<\x9dl\xbf\x00\xc8\xe6\xe4\x11\x99\x97\xbf\xe3\xb6\xe4\xa4<\xe6\x7f?6\xff\x0b\xe2\xa5\x87\x89?\xa5x\x10\xf7\x9f\x15\xc0?\'@\xd7\xdd\x9e\xbd\xb9\xbf3F\x01\xfbl\xcd\xdf\xbf0\xbb\xb3\x83\xd0\xfd\xd9?\xef\x03\x9c\xc4+\x17\xbe\xbf\xf0h\xe9\xb0\xec\\z?\x07m:\x0fI\xb5\x9e?j\xebK\x93\xdc\x1bf?\xda>\x18\x9f\x82\xc6\xa7?\x96\xb1\xd1\xd2l!\xa1\xbf\xc0\xdf0\xed:.\xb9\xbf\xbb\xa1\x1e\xc6\x0bb\xb8?\x8f\x838\x86\x0c\xedZ?)\xe7\xdc\xfb\xa1J\xa3\xbfi\x8b\xc0\xf51C\xaa?W6[\xff\x98Z\xb0?\xc9b\xa1d\xaa\xea\xcc\xbf\xc1\x11\x19\x15\xae{\xd2?uK\xfd=P\xc5}?\xc4+\x1cZ\x96q\xba?\xba\xb3I\x9f\x18\xcdy\xbfZ\xc3B\xf9H~p\xbf\xaf\xf6\x9br\xe2;\xb1\xbf\x7f\xcc\x08Q`\x7f\xa7?\x84\x86\xc8c\xfcn\x9e\xbf-\x0e}\xbfJ\xdaa\xbf\x0cc\x11\xb5D\xb5\x83\xbf;\x06\x94Wa\x0e\xb6\xbf\x8c\xb6\'\x92xK\xa8\xbfz\xf1\x17\xb6\xce\xd2\xa0?\x94>\x94\xb2bR\xce?N\xd6\xe6\xe1}d\xd5\xbf$\x18P\xc9~\x15\xd7?\x10x\x96Y\x04\xd4\xd3\xbf\xd4\xc3;\xfdB\x1f\xbc?\xed\xc8\xef\x1dC\x85\xc6\xbf\xbb\xda\xd8F\xa8w\xbe\xbf\x0b\x87\xcfb\xa4\t\xb4?Eo\x06\xfaA\xfd\xd6\xbf\xbe\xa07\xf2w\xd6\xc2?\xb2-\x88\xbeq\x8e\xc3\xbf\xec4Kc\x17(\xd5?\xb8>\xb3\x93B\xff\xb3?\x01\xaa\x0c\x93\x9d\x85\x9e\xbf\x8d\xbd\x00>\x8bA\xd7\xbf\x94Mm7t\x9e\xb4?\xebk\xef\xc5R\x08\xc5\xbf\'\x99\xbf\xc4@g\x9c?\x9cv\xeca\x8d\x0b\x8e?\x80\x03M9m=`\xbf+<gx\xadA\xc1?\xaaS\xcb\x12\xf8)\xad\xbf\x07YO\xce\xfdT\xbc\xbf\x01\xfa\xac\x9aEv\x80?{\xbd\xfeR\xb3"x?\x8d\xab>JK\x0f\x96?\xca%6\x01YV\xc3?\x8b\xd1\x13\xea\x94h\xab?\xa3\x98\xc4o\x9a\xaa\xb4?\xc9\x88\x12\xc5\xb9\xe02\xbf\x9c\xc5\x19M\xc9\xe5{\xbfj\x92M\x905\xc8n?\xef\xa5;\xd8\xe4\xd6\xc5\xbff\x1bt\xb2\xd5\x1d\xc3?\xfe{\xc8\x8e\xff\x07\x96?m\x96\xa2\x8e-\xca\xa4\xbf:U#$\x9a\x91\xb7?\xee9\x9eU$XK\xbf\x1f\x89C\xe8\xd4\x01\x99\xbf-}\xc5F\xff$\xa9?\x81\xe3\xd9w\xc9\x84\x8f\xbf\x0cr#\xde}\xe3\x9f?\t\xe5_\xfc\xdf3\xaf?\xd3\xa6>\x13\x1d\xa8\xb2\xbf\xc5+&\x1aDd\xd0\xbf\x02\n\'\x0c\xf9\x8c\xcd?}\xa2SZ~\x03\xc4?\x88\xcc\x08"<{\xc4\xbf\'\x1b)Z\xe8\xeb}\xbf\xfbF\xe01\x8cY\xab?\xc2\x91m\xa2\xda\x89\x8e\xbfy\xb2i\xef\x82\x17\xa9?S\xc1{\x18\x98\xeet\xbf\xc9\xf5\xd5a\x1d&\xc1\xbf\xf8\x9f\x9c\x97\x84\xeb\xd0?;\x85\xaf\xf6\x00\x06\xa1\xbfKcK\xac\xfb\xf8w\xbf\xc2\xda\xbem\x88\xf2\x9b\xbf\xfd<J\xd2\xf8\xcf\x99\xbf\x9b\x05;\x85\xa0P\x93?\xc9\x89f\xbam\xad\xbb?s\x91#\x1a\x98\xb4\x91\xbfby\x93&\xc1\xd4\xe2\xbf<1\x0bT\xa3\x8d\xda?\xf9~\x8a\x87\xf1\xb1\xb4?\xcb*Z@\xe3\xa7\xac\xbfV\xda\x8f\x82\x9b\xb7\x9e?\xd2\xfe;\'\x85\xa6\xb6\xbf\xfb\x8d\xa1\x89\xa7\x0c`\xbfx\xef\xff\xb7\xb6\x80v?2\x14\xc5\xd3\xa5-u\xbf\xa9\xf0\xe3\xd4H\x15\xb1\xbf\x8a~\x85j\xd5\xaa\xb7\xbflu>\xd7\xa1\xb2\xb9?\xffo\xf9E*m\xbb\xbfv\xbd\x03E\'s\xc2?\xc2#o\x82\xddS\xb8\xbf{\x80\xccQe\x92\xbf?\xdd2\x87\x8e\xef\xf0\xb9\xbf\xb4\x10\xce\xeb\xf7\x11\x9a?\x83,\x01\x9a\xfa\xa1\xb1?\xd4\x8a\x00n\xea\x94\xa2?\x14\xf1\xff2\xfa\xe9$\xbf\x06\xc3mj\xafA\x92\xbfCS\xee\x1b\xf3g\x9d?XR7\x89\x82\xc1\xb2\xbf0\nw\x0b\x97\xf6\xb0\xbfeB$Ix`\xb3?\x81=u\xed\x85V\xb3?eg\xfaGz\xc5\x90?C\xa9|\xd1~O\x9b\xbfrQ\x04\xae\x81\xc1\x94\xbf\x9b\x8a\xef\xd4_v\xc6\xbf\x0e>\x87\x81ht\xc7? \x1f\xbb\x07\x1a\xb7\x8c?8\xbcV@h\x1bz?\xb35&]@\xae\xce\xbf5\xb6_A\x89\x18\xe1?\x1e\xd8L"9[\xa1\xbf\x02\'\r\xf0\x8c\xde\xa2?\x90\x88!P\xa9\x97p\xbf\xf8\xd7\x06MMzZ\xbf\xdew\x99\x03\x03\xc4{\xbf\x0c\xe1+\xc7d\x00Y\xbf\xcdQ\xfa\xaf3)\x93?\x05\xec\x14\x0e1\xe5\x98\xbf`\xc4w,8\xd0\x8a\xbf\xe4\x0f\xcbh\xd92`?\x84,\x93s\xd3\xdf\x99?\x0f~\x9c\xfc\x96\xf3\xaa?\xda\x05\x1e\xd4\x96\xf9\x84\xbf\x13\xae\xeb\x99\xfd\x0c\x86?\x9d\xcfa\xb8Z}\x83?qb<\xab\x86\xb0\xaf\xbf\x04\rj\xfbo.\xa6?\xf2\xcf@\xc6k\x8a\x8c\xbf\x9e\xc2\x81\xa7\x86\x10\xba\xbf\xefD\xed\xe7\xf6\xe5\xab\xbf\xbabV\xac\xde\xa4\xc6\xbf\xb2\x05\x92\xd8 \xbc\xd8?d\x00\r5\xe8_\xc9\xbf\xbc\x11@^\xf2\xdc\xb6\xbf7\xd7\x9bk%n\xad\xbf\xc9\x01)\xac\xf4\xben?_\xc6\x91\x0e0\x1av\xbf\xb1\xb3B\xec\xea@\xb5\xbf\xbb-\x06\xd8R]\x97\xbfjL\xc18\xef\xb8\xad?x1\xd9uM\x0e\xba\xbf\xbd}(L\xfd#\xa0\xbf\xd5\x99\xb0\xe7\xdcKc?J\xad\xb1\x00\xc6\x19\xb5\xbf!u\xf3w\xcd\xa8\x93?\x12\xe7E\x16JlL?\xec\xd5s\xb9\xd1\x91}?\xaf0~\xa4<\x06u?\xf5@gW\xe7\xcf\xa1\xbf"$\x02!\xd8\xdc\x96?i\xf7\xf5\x9a\xdc\xfd\xc7\xbf\xdc\xa2\xbb{w\x93\xc8?\xa4\xd4\xe6N\xd2T\xa3\xbfj\xa0\x92\x0e4\x11\xa6?\x95\x99\xb2\x91\x89\xa4\xbd?[g\x9d9\xd7T\xc5\xbf&\x0f\x02\x10-=\xaf\xbf\xafn\xf0\xbc\x82:\xb5?9\xd5=\x13y\x83\xba\xbf\xd2\x13;\xaar0\xbc?\xee\t\xb3\x80\xd8\xbd\xa8\xbf\xcf\x97\x19\xa3\xea\x8b\xb5?5\x99xW\xe9\xdan?\xe4^F\xc5\xed\xfd\xad?z\xa9\x18,a\xf9\xbc?p\x1c3\x17\xf7[\xbb\xbf\xf0>\xbf3\x00\xe7\xa0\xbf\xd0C\x9f\xce{\x94u\xbf\x05\x90\x9d\x05\xe6~\xbb?\x9a@\xd0\x13\x84a\xaf?\xc3\x7f\xba\x8f9l\xa0?A\xfc@EEe\xa8?\xa4\x1a\x0b\xfe\xafa\x85\xbfb\xae\xee\xa8\xab@\xa3?\xfe\x0cx\x84\xcap\xb4?\xecf\xb8\xb7N\xc7\xc4\xbf\xadH\xa3\xb6\xc2K\xa8?\x95;P\x96\x10\xd0\xa0?6\xbe\x1c\xc8\xc5\x91\xd1\xbf\x11o\x13N\xe0=\xda\xbf\x8f\x00\x86x\x12\x96X?#5\xba\\\xa4\x8f\x82\xbf3\xed\xc9\x1bf\xf7\x91\xbf\xde\xba>\xdf\xcc\xdc\xac\xbfAi/\xf1\x84\xf1\x89\xbf1\x07f\x8e\x98;\\?\xa2&_\x0c\xf3\x9f\xa7?0\x8e\xd0\xce\xe3\xc7\xb7?9\x85\xfd\x9c\xce\xe9\xc6?\x14&\xd2\xe4(\xb4\xc3?U\xe6\xec8\xa1[\x94?\xe3\x98\xf7KI\xc3\x7f\xbfv\xe8\xaf\xa6\x10U\xbc\xbfp\xd6\x95\x8c\x05\x81\xb0\xbf/\xe3^ :\r\xb5\xbf~6\xe1\xc5\x1d\x1c\xc6\xbf\xb1%X%\xa7J\xb0\xbfZ\xb3\x11\x1b\xe6\x10\x9c?\x03\xe5\x87hi\x05\x96?\xee*\xbbb\xd8\xf6\xa8?=\x9d\x7f\xf2\x16\xd3\x92?\xf0I\x83\xaa\xc8\xf2\x99\xbf\x90\xc4\xff\xa6K\x17\x99\xbfb\xb5\xb4r\x1cyt\xbfs\x02\xf1\xe6\x95C\x8f\xbf,\xe6\xeb\xb1\x91r~?\x1aj\xeb\x92\x80\xe4\xa4\xbfdK\xc3\xb1\xb5\xed\xb4?hr\xc0^\xef\xe5\xa8\xbf\xef\xf0oa>\xb2\xba\xbfT\xda\x0b\x9e\xc4\xae\xd5\xbf\xd2\x90$\xb8_s\xcb\xbf\x19F\xa0\\\x15\xd6\x9f\xbfYt\xf5\xd5\xee\x8a\xaa\xbf]\x1e\xef\x94\xd2$\xae\xbfd(\xe3\x07\xf9\xd8\xc2\xbf\xc7\xaa\xc0\x9fg\x8e\x8d?=\x14i\xa2\xc1\x85\xa1\xbfE\xbd\xb6k\xa7\n\xce?;\xb6\n)\x81\xf1\x9e?\xaa\x9a\xfe\x93\xf4]{\xbf\xf3\xb1}=Q\x83}\xbf\x10\xda\x17\xce\x95\n\xb2?\x90&\x1b\x1e5\x13\xb4?\xa7\xe9\xa9\x88\xe4\xb0\xad?\xdc\t\xd5\x93\x83K\x8a?\x9eqd|Y8\xc2\xbf\x86\x843\xaa,{\xc1\xbfa\x1e\x9e\xa3\xa7\xa6\xb3\xbf\xcc\xd0 \xd2\x87\xea\xb1\xbf\xe0mW\xa1\x16\xfdl\xbfzL/\xe73A\x8c\xbf\x95\xab@\xd0\x80h\xbd\xbfR\x7f"*D\xa7\xaa\xbf_\x98a\xf6\x16p\xaa\xbf\x93L\xbc\n\xa6V\xb4\xbf\xc8\xbb\x10\xb9\x82\x11\xb8?q\x959k\x19\xcf\xb5?\x88\x07\xd1\xbdl\xa3^?\x9f#\x0f\x1f\xe1\x9b\x80?\'\xebe\xeac\x05\x94\xbf$\xd2\xb0gkh\x84\xbf\xecz\x84\x97\xe4\xa0k?\xe5\x0c\x7f\xde\t\t_?\xa4\xf0A$I\xae\xb5\xbf\x81\xcd\xbf\xf6\xa5\xe1\xa8\xbf\x0c\x18\x97,\x83\x13\x93\xbf\xc7\x9d\xd7\xc0x\x0c\xc2?\xfd\xc1\xcb\xc6\x0e\x88\x9a?\x90\x85QN\x0cl\xa3?\x9b\xeb<8\xb4d\xb4?\xd0\xba\xdbEM\x96E\xbf\xa3|o\x05\x8b\xad\xa9?\xdf51\xb4\xd1\xab\xb2??f\xeb\xa9\xa6\xb1\xc1?.\x0fM\xa7\xa2\x9b\xa3?\x87\x80\x02{\x85\x85\xaf\xbf\x17\r\xb2\xc9\x02\x94\xc0\xbfJ\x9b\xddw\x1e\xc0\xbc\xbf\xd3\xb5\xeax\x9dU\xc2\xbf\x84$\xe9w\x8d0{?\xe5\xb8\x87\x18d!\x82\xbf\xaci\xbb7r\xa5\xaa\xbf^s\xf8"Et\x90?o\x1dY{\xdd(\xaa?\xa8\xa5\xa8\x87\xfe\x91\xae?2\xad\xce\x92\xd5\xe8\xc6\xbf\xf0\xe1\xf5\x90\xd5\x97\xcb\xbf\xa4\xcd\x05\x1a\xf9p\x90\xbf$%\xc6\xa0\xbd\x05\xa3\xbf\xc6\xd0z\xa5f[\xb5?\xcc\xd9]\x11"\xff\xbb?\xf6\x8c\xb4\xdb\x8d\xc2\xa8\xbf\x97G\xaa\xcf\x8aJ\xaf\xbf\xefk\xdfR!>\xac?M>\x14Jb\xcb\xb3?,\xc9$\xa3\xbf\x1b\xb5?x\x1f\xe6\x07\xca>\xc2?\x96s"\xc7:=\x96\xbfL\xb3\x86W\x19\xd5\xb1\xbfoq/\x8by-\xb2\xbf.6\xc9\xbaim\xb5\xbf\r_\xd8\x8dW\xd2\xa5\xbf\x1a\xf7n\xeb)@\x93?\xe6\xda\x87\xc2\xb4\xee\xad\xbf\x99\xf8\xdd\x06\xae?\x96\xbfM\xa8\xe9V\x84\xe2\xc7\xbf\t\xb0S\xae\xae\x85\xca\xbfj\xd4\x08\x8b\x82F\x9d\xbf\x08\xd2R\x14\xb4n\x95?\xef\xed\xda\xcf\xcf\xe3o?R\xe0Q\xc8k\x15\xaf\xbf\xbb\xf4\x04\x8a\x04>\x8d?\x02\r4\r\x1eC\x80?\xc2|\xed.\xe8\xcc\xa4\xbf:\x1b\xe6k\x8a\x97\xa5\xbf%1\xf9\x1e$\x99{?L\xd2\x96\x19\x88\xf6\xa9\xbf\xf1\x01\x93kg\xb8\xda\xbfq\xca\xa5a\xba\x8d\xd4\xbfb\xc7\x82\x16w9\x98\xbf<k\x0c\x16a\xf6|\xbfP\xf1\xf8\xb9\xc6\x83C?\xc4~\xdbV\x89A\x89\xbfi\xd2\x984b\x9d\xb4?\xca\xffV%G@\xaa?\xe3\x9b\xf2\x93S\x83{\xbf\x8c\x84\xa9C*\xe4\x84\xbf)#h\xa22\xae\x84?\xe8\xc9ry\xa1\xeag?m\xae\xbe\xa2Z\xc6\x8c?R\x06\xc7\xe1\x96\x02\xbd?\xa1/\x10\xa9\x9a@\xb3?j\xc0P\x14^C[?\xca\xbc\xa7\r\xe6\x10\x9d?c\x84\x9b\xc8*\x05\xb7?Pl\x10\x17\xee\x89p?\x1cy\xedq\xd0\xabs?gD\xab\xd9r\xdd`\xbf\xb9.\xa7\xda\xb2!\x94\xbf\xe3\x94d\xa1G\x81\xa1?\xad\xc4qIS\x8b\x97?\xc2\n\xb8}\x86\xccr\xbf^sp\xfd\x91\xda\xb9?\xeeS\x04\x18$O\xc3\xbfY\xd8<\x8d\x0b\x97\xc5\xbf\xd1V\x87\x90\xc0\xf7\xd3\xbf\x9f\x10MU\xd7k\xcb\xbf\xde\t\x9cu\xc6.\x9b?8\xceL\x00\x87A\x85\xbf\xb5\n\x19\x8fPt\xa2\xbf\xe0\xaf\xadQ\xbeW\x85?\x01\x7f\t\x0f\xfa0\xa1?\xb0\xa2\x8e\xae\xed\x1aP?\x87\x1c\xad\x1e\x8a]\xbb?aK\xa9m\x87\xda\x91?\x04\x9e\x14g"\x9d\xc6\xbf\x11\xe8\xa3\xf1\x12!\xc0\xbf\xfcx\xe0\x19\x9fn\xa1?n\xaa{\x9aN{\xa9?!]`\n\xe9N\x9e?\xe4\x94V\x93?tG\xbf\xf8\xa5\x0e!\xb6\xe7\xc7?\xf3\xaf\xf7D\x1d{\xcf?*\xc5\n\x17^S\x80?\x9f\x90\x9e\xd7\xfc\xdf\x83\xbfK\xea\xc7\xc5D\x87\\?\x1a\x8fW\x0b\xf2/t\xbf;9\xacU\xbd\x0b\xc3\xbf\xdd\x0c\xdd\xd9\x16\xf1\xc9\xbf\xb4bT\xeb`\x07\xb7?\xf5L\xd1\xeb\x0e\x17\x9e?\x90\xba\xa3\x92\xf2\xb7\xb3?@\xdb\xf7\x9fa,\xb0\xbf>\x87\x0b4\x14\x9e\x96\xbf\x12\xbfH1I\xcf\xa5\xbf\x95[\xbaU\x8dk\xbc?\xca\x05\xca\xa8zl\xbf?\x00\xdd\xdd\xc5\xf4\x16\x97\xbf2\x8ek6\xe9o\x86?\xe2\xe4\xe0\x97\xad,\xa8?.(a\xb2\xc7\xfa\x9d?\xf0:&\x19\xb5\xae\xab?B\x8f\x87:\xe3\xd7\xa7?\xb6[\x17\')n\xaa\xbf0\xdf\xf5h\xb0\xec\xa3\xbf\xa9\xf4\x87\x1e\x9f*\xc0?\xee\xb2P\xb6\xc4\xfe\xd0?\xc9\xc5\x93\xdc\xb8\t\xa8\xbfH\xfc\x00\x8a\x05\x18\xbc\xbf\xe6\xb0sL\xc8\xf3\xd0?\xd9o~\x12\x0bf\xd3?\x1b\xda\x9a5h\xd4\x9b\xbf\x92h\x88\xc2\xd2\x96\x9e\xbfP\xd0&\xd1U\xd8\xb1\xbf@\x1a\x1b\xe2\xd9G\xac\xbf\x85<)\x8a\xfa,\x98?\x8e\x15\x8d\x1b\x99\x1c\x85\xbf*<tQ\xf3=\x9d?\xb6B\xafguh\xb5\xbf\x9c5\x86\x8e\x99\x1b\x86\xbf6\x8c\xef\xe0\xf1\x08}\xbfw\xb4\x18e`/\xad\xbfhV\xae\xeb\x8e*\xbd\xbfv\xfbG\x89\xc7$\xa1\xbf\xcf \x03\xbdS\xb2\xa1\xbf\xcdQ\x16S\x9901\xbfn\xc0\xe7\x9c\xef\xe5\xb7\xbf>\xff\x16\xf9\x92a\xa4\xbf\xb5\xc9K\xb9,\xc6\xb0?\xe9\xc7\x1dtE\x04m?Rs\x1b!\xe6#\xa4\xbf]$X\xbc\x89\x9cq?\x90QR\x94\x1es\xaa\xbfq\xe5W\'\x1f\xa5U\xbf\xf1Mu7d\xd6\x8e?\x95\xcc\x0c5!\xd7\x8d?:J\x13\xae\x89\x8f\xbc?\xe4\xe3\x0c\xf6\xf3\xfc\xab?\xd7S\x1d\x0c\x9a\x1du?\xf5\xb2\'3\xe3p\x99\xbf:\x9d\x1b\x82[\xeb\xa8?\xe6\xbb\x02h~ZZ\xbf;t\xa1\xf4\xf9\x8d\x8a?0p\xd3\x07\xbeO\xa0\xbf\x87\x89\xd6|G\xc3`\xbfA\xcb/;w$\xc2?Fj:FWL\x9c?\xeai\xdd\xdbF\x9a\xa7\xbf\xfc\xae\x0f_\xa5P\xae\xbf\x99k\x06z\xacu\xb5?%y6\xa3\xa1\x04\x7f?\'@H\xcdtl\x9b?I7\x03\xfe\x07ao\xbf\xcdYmtp\xbd\x96\xbf\x92\xbc4\\\xbc\x90\xab?5\xa2\xf0\x8c\x00w\x88?\xfd\'\x13\xeb\xd6\x80\x9b\xbf\x19\xf0W\x88WJ\x95\xbf=\tj{6\xfe\xb5\xbfE\xab\n\xf8\x8dg\x92?MYi?:_\x81\xbf\x92\xcb\xac6\x9e\x9d\xb0?\xe3\x1e\x95\x9f\x91r\xa3?\xc0`\xaf\xc2\x12\x94\x8a?\x9d\xce:\xc0o\xde\x83?\x7f\xe3\t<vT\xb3?\xcdl\xad\xc4[\xa3\x92\xbf\xd5J\x06=\xe2\xf6y\xbf\xc8<"\xf6\n\xb8\x85?95\x0e\xf3\xce[\x85?\xee\n\xe7kv\xf8\x7f?\x81\x01\xbfv{D\xa9\xbf\x17\xff9\x0b\x12\x83\x87?\xcf\x9c\x7f\x87F1r?|\xbcJ\xa0\xddu\x9d\xbf\xd5%\x9ch|B\x99\xbf\xc2!k\x11\xe0\xcb\xbe\xbfi\xf7>;C\xd2\x96?\x81\x04\x9b\x01\xb5o\x84??\x84&Fy\xfa\x8a?\xb5\xa4B\x06r\x85\x8e\xbf{\xc4\x9eX\xa4\x06\x85?\x16\xd0\xe4\x0c\x12\xb0F\xbfH\xba\x0e\xe4\xd7i\xa9?h\x8cKvG\x9d\x8f\xbfb\x9c\xfbx\xc4\x0b\x98?y\xa5\x7fE\x0e\n\xa8\xbf\xc4E\x15\x9d\x9e\x0f\x8a?4\xbe\x9aV*r\x90\xbf.\xf7\xaf\n^\xbd\xb9\xbfEP\xb5\x86i*\xb7?\xd9\xa2\xcc.\x02\xac\x95\xbf\xc6^\x12\xeb\x10\xe5n?\x86\xcc\xcd\x0c\xf4\x16\xb5?\xed\xe7\xd8\xb2u\xa8\x95\xbf\x8dd*R\xb7\x18\xbf\xbf\x0e\x9az\x08\x14\xcd\xa4?\xc8\x03\x18\x9f\x82t7\xbf-z\xb0G\x02 \x9b\xbf\xc4\xbd\x8f-!\x17\x89\xbfVg\xff\x1dC\xb1\xb3?\xcfe\xa7\xffE\x88\xa0\xbf\xeb:K;p\x08\xa6\xbf\xaf\xd3\xc1\x01\xa7\x08\xaa\xbf\xcck\xc3\xe4z\xb5\xa3?_8\x1dhx5\x9c?\xf3\x9e\x12\xc2y\x11\x9d\xbf\xa7\xdc)M\x0e\xd8\xcb?T\xb8%\'\xa8m\xbe?)Z\xbd\xdf\x94\x0ex?\x1f\xc2\xc5\x07\x91\x96\xb7?\x01\x9b\xeb\xa5\x96\xcf\x90\xbf\x92\x9e\xec\xc9\xfd\x8az\xbf\x9e\x9e\xcal\xcf\xf6~\xbf\x01\xc7\xc5p\x1c\x18\x89\xbf\xd5|\x02\xafK>\x7f\xbf\x02\x01\x01\r\x18\x99\x8c\xbf\xd1o\xe9\xb2\xdav\x8d\xbf\x0e\xe5\xe0\xd0\xc2\x95\x97\xbf\x89\\U\x7f{\xd2\x98?\xd1\xe2/\xff\xfas\x80?\xe4\xcd\xa9VH\xe4\xb5?,\x8b\xc9\xbb\xef\xb2\x98\xbf\xad\x84-\xd9\x02\x8d\x94?x\x97m\x81\x1d.\xa0\xbf\xf5k\xba\x906\xe1\x97?\x82y\x00\xb7\xe01\xad\xbf\x18\xa2\x9f\xda\xb0\x85\xc5\xbf\xb8\x97\x81O&\x9f\xc5\xbf\rG\x0f&k\xa2\xac?\xfb0G\x94\xf4^\x9e\xbf\x81\x0f\x14w\xcb\xb3[?\x06W?1\x84\x1aj\xbf\x84\x94\x91\x17\x0e\xf6\xbb\xbf\x1dl\xec\xb6tW\xce\xbffC\x18\xaf\xf6\xa7\xad?l\xcc\xe0i\xee@\xb6?\x14$\xd6\x93\xbc\xef\xbb?gy\x86\xff[\x8c\xa3?w\xb9\xcb\x86[F\x99?\xc3\\{\x86\x92\xe2J?\x84l\xbc\xb47\xcaI\xbfz@\xfd\x12\xc6\xdf\x88\xbf\xd3\x9a\\FC\xc1a\xbf\x96\x00\xd8\xcb\xe8\x83\x8b\xbf\xfco@\xd8 \x16}\xbf\xdd\xedX\xb1V\xff~?\x8a\xdf\xe2\xd0\x00\x08\xa3\xbf\x04\xbeV@\xccG\x8c?\xa4!\xcf\x95\xffm\xc7\xbf&r\x895\x17\xed\xb8\xbf*#Q\x01\xd7\xd2\xbc\xbfZ\xc9\xf0p\xc9\xde\xab?BE\x05Q\xfe\x14\xa1?\x95WZ\xc1t\x82\xcd?^\xca\xa1\xa3\xd3~\x91\xbf\x18p\xbf\xee\xe57\x99\xbf@e%E\xd1[b\xbf\xb1\xa1O\xe2\x0e\xb9b?\x17\xd87E;V\x95\xbf\x9e\x12\x8d\xd4uE\x92\xbf\xb3\x1d\x9fl\x8b!\xab\xbf.\x1eic\x01)g?I\x18\xf6\xc0\x19\x13\xce?H\xde\x1fQ`_\xcd?\xeaL\xdb\xfc\x1c\xe0\xb2\xbf+\x15\x1d\xff\xa3\xc7\x9f\xbf\xfa\xf2+YZ\xd5\\\xbfX\xe7)`n\x8ap?\xe3\x1f\xd8\xfe\xdd\xed\x87\xbf\xd7\x97\xdc5F\x97\x8f?o\xa9\xcd\x8b\xb0\xa7\x87\xbfs\xd1\x14*ki\x8a?\x18 \xf5\xad\xd8l\xc1\xbf\x87_V\xae\xc0\xd8\xb7?23H+\xa7\xb3\xb8\xbfK\x01\xd9\x12\xbe\xdc\xae\xbf\x14!\'\xee\xbaA\xa1\xbf\x89\x18\x88\xad\xcb\x01\x98?;\xbdk\xdb\x0c2\x8b?\xe7L\xf4\xc5\xf0+j\xbf\xfd[\xb2z`qx?\xd3\xde3N\xf0\xcc\x91\xbf\xb7\x13\xae\xed\'\xd8w\xbf\xfc(\x98;6\xee\x88?\x05\x1b\xd8\xc5/\xd7\x83?\xf4\x86\xbf$\x0c.\x89\xbf!\xb3\xfd\x9d\x85\x8a\xbc\xbf\xc1\xa4\t\xf6\xe5$\x84\xbf:e\xf1Jo:w\xbf\x95\xb3\x03\x12n\xc3\x87?\x05\x12\rO\xeeL\xb7\xbfkw\xf4x\xe3i\x9c?<\xf6]x+j\x88?\xfb\xec\xe1oP\xcf\x99\xbf\xd5\xc3\xca\xb7%\xdc\xcb?\x9a\xa6qS\xed\x02\x9f\xbf\xcf\xa0\x9a\xae\xbb:\x94\xbf/\xcf=\xb0\xb7\x9e\x93?\xb6\xa6\x1e\xac\xccfq?\xe8*^S\x82\xa4\x9c\xbf\xc1-\xd5\n\xd9\x11\x1e\xbfu\x0f\xc9\x95\xf5\'\xb3?\x9b\xd0\xed\x1a\xa6w\xa4\xbfp\x15\x16\xe8\xe8@\xa4?\x9f\x93\xb4\x14]\xee\xb0\xbf\x90$\x80@\xd7\xfe\xb0?\xc8\x9e\x89\x01Vx\xb3\xbf\x11W\xe2\xccC\xc6o?\xda2O\xf5\x06\x9b\xab?T\xc5^\x8fG\t\xb0\xbf\x8b\xc4\x85a^\xbf\xa9?\x84\xade|\xc3\xc0\x87\xbfp\xc0\xe7J2t\x9e\xbf?\xe8*\xc23\xcc|\xbf\xb9\xcd\x8f\xd5\x03\xc8\xbc?7\x8d\xd3\xfc:\xdc\xc5?J1\xc2\x18\x00O\x96?\xf6x\xdf\xfb@Ue\xbfi\x94\xd24Fk\x1d?\x809cB\xf2\xac\x14\xbf!\xaa\xa1\xb3\xc2t\xc1?\xbf\x93B\x87\xf1\xea\xbb\xbf<M\xda`!K\xe1\xbf3u\xf6*\xb3\x0b\xe0?\t\xcb \x106\x19\xc0\xbf\xb7\xedi\x132\x82\xb9?2d\x8b\x15AT\x9f?\x87z\xc3J\xfb\x7f\x98\xbf\xe0f\xed\xce\\\xda\x91\xbf\x11\xabM\x1e\x17\x10\xb5?~\x1co\xa2\x0c(\xba\xbf\xef\xfd\x10\x187$\xb5?\x130\xf3\xce\xe0Dv?tl\xee\t\x94\x8d\xae\xbf\xb8\x193\x18 _\xaa?\x97\xb65}\x83\x05\xba?\x15f\xef\xbb==\xc6\xbf\xdf\xe7\xdfqDs\xc6?\xd4[\xb6t\xc4n\xa8?\xcf\xd7E \xdc\xa9\xba?\x99r\xeb\xe7\x032[\xbf\xa8\x17\x81\xe5{\xddZ\xbf\xccU\xdc|^\xc4\xc2\xbf\r \xfb\x87\xb7\x98\xbb?)g\x8a\xe5\x1a\xc8\x96\xbfk\xad\x9d\xc8M\xf5\xa8\xbf\x0f\xa6.\xdb\xbd\x16\xa2?\xe4\x13O\xecB\x05\xb5\xbf\x0fM\xd7Kc\x15\x8e\xbf\x94NS\xcc/\x12\x93?W\xda\xe8\xea\xa2\x8a\xc5?A\xb2\x80\x947\x8b\xce\xbf`p\x15\x12\xc2\\\xc2?[\x94\x01O.\x1a\xbc\xbf\x93A\xe9\x98Rq\x99?\xa2A\xf7K\\Tg\xbf\x0b\xb8\xb2^\xd3\xf9\xc1\xbf\xad\x8c^\xb0\x8d+\xbb?v\x88\x85\x0c\xf7L\xdc\xbf;\x16\x87\xb6\xcd\x17\xd2?<\xaeLEOi\xc6\xbfe\x99\x01\xbfX\x07\xcd?\xb3\xc1\'\xd8\x9fa\xb4?\xad\x9d\x03{\x0e\x14q\xbf\xb3\x83y.\x87c\xcc\xbf\x9e\x06\xd6\'\x91\x99\xb0?k\x15\xf9\xb4\xf5\xf3\xd1\xbfQ\x1aO\xbaX+\xc8?6\x8c\xb0\t.\x88\xb5\xbf!\xc1p+\xddG\xa9?\xca\x9d\x0f\xae\x187\xbc?\xfcw 1\xa1]\xbb\xbfa\x00\xf4;\x91\xaa\xbb\xbf\xb8Jf\xe4\xa8\xa9r\xbfml^\xc3=\xd9\x94?\x81\xf9\t\xee\x17\xf1\x96?\x8b\x813f!\xe4\xa9?\xa25)W\xf8?\x98?gg\x17-\xa3%\xc1?MZ\xef\xe1\x1b\xb5\xb5\xbfr\xff~E`\xb3{\xbfm\xff\xaad\x8e\x881?\xdb\xda\xae\x9a&\x82\xc3\xbf\xd4\xc1\x8f\xea\xab\xcc\xb8?;\xc0\xf9\xb5\x85\xe4\xc6\xbfo\xd4,@Pn\xc3?_\x0fPc\xa6\x1a\xc1?Cp\xa9\x9f\xac\x1d\x9e\xbf\x82d$\x1dP,\xb0\xbf\xec\x057\x9f\x16}\xc1?q?\x04\xe9\xf2\xc9\xa6\xbf:\x08\xa8@\xe1J\xb0?R\xf0\x824\xb6\xe3\xa0?M\x9eo \x93\xdc\xa8\xbfh\x8a\xd4\x89kX\xd4\xbf:ug|\x0f\t\xd7?\xd9H&)\x86d\xc7?\x10\xc9&j!Z\xb7\xbf\xdf\x03ch\xf1\x9b\x9b?\x86P\xf2\xcd^)\x9d?\t\xf7\xda\xfa-\x9f\x9b\xbf\xe5\xb2(\xa6\x0e\xf1\xa9?/\xc6\xc3$\xc4\x97\xbc?&\xf3\xac\x11 \xdf\xc6\xbfS\xa3\xccS\xa3\x81\xbf?4o\xd6p\x88Z\xb6\xbf\x06\x0f\x12\xeb\xe4\xe3\x90?\xc0\x08:j\xc1\xd4\xa3\xbfY\'\xa8\xeb\xda\xab\x97\xbf\n\x8aR_\xca[s?.\xd2\xf8\x99\x1a\xa6\xb0?\x06I\xc4\xa73 \xb8\xbf\x0c\xe8_iS\xf8\xcc\xbf\x9eN\xe4\xa9\xd0x\xc3?\xa5\xc9Z\xa4\xddB\xad\xbfO\xbd\xe9\xba\xc4\xde\xbd?\xc7]\xa87z>\x9b?<\x8a\x00\xb6\xf2\xc2\xb5\xbf\x1a\x04\xd0\x96<\xdf\x81?\xee\x90\xbdj3\xdd\x9a\xbf\x12n\xf66\x83E\xb1\xbf\xb9\x82\x9b\xf3\xae\x87\x90?k\x0e\xce\xc1J\xa1\xc0\xbf\xbc\x08{yY\xf0\xb4?=\xe8\xdd\xac\x15\x1e\xbe\xbf`8|+\xcf;\xc9?\xb8n\xab\x9e\xad\x94\xa6\xbf\x93s\r\xd1!Q\xb4?\x83\x85\x9f\x8f\x8f\xc7\xc0\xbfQ\x97=\x93\x82f\xb3?\x02\x87\xa7^\x11\x03\xb2?\xed\xae%\x10]U\x89\xbf\xae\xb2x\x99\xf6\xa8y\xbf\x9c\x93\x88kN|\x95\xbf"9\x9b\x8b\xd5\xa0\xac?V53\x1f\xef\x9e\xbc\xbf\x1d\xf7\x86K\xa8\xfc\xa9\xbf;\xdd\xb3\x94I\xec\xb4?\xe4\xd3\xed\xf5S\x14\xb1?\x89.6\x8b\xea\x9c\x89?\xc4\xad\xf4\xf9\x86\x9c\x96\xbf\xfc\xaf\x86\xa6\xed\x8d\x92\xbf\xbb\xc1\xd0\x9e\xc9\xe0\x92?\xab\xba:\x16D\x00\x85\xbf\t\x13la\xabD\x95\xbf\x8c\x0eQ\xfb\xc3\x02q?~a?\xa7y\x05\xc2\xbf|\xa8!\x04\xf8%\xd5?\x14B\tZ\xd8\x9e\xa4\xbf\xb1}1\x05\xad\xe8\x94?R\xc7\x8a\xd6\xd7\xff\x8c?O\x0fJ}\x04\xccD?|X\xfc\xb2\xcf\xd8\xa0\xbf\xf0D\x13\xd2\xe8$\x87?\n\xf8\xabK\xafQ\x98\xbfq{\xb8,w$i?\x91\x89\xf2\xdaH\x1bv\xbf\xd7<\xb6lF\xecz\xbfa\x96Y]\xa6\xca\xb7?5\xaf\x8d\x17*\xba\xc6\xbf\x99\xbe\x1c\xaa\x11\xf0\x85?\x81e.;\xcb~\xa8\xbf\xe1.\xc4\xa7\x9b!\x9e?\xae5\xb8\'\xc8\\\xb3\xbf:\x15\xbe\xefW\xa7\xb0?\x84$\x0cu\x1fF\xa4\xbf\xbe\xc1\xe1\xf8+\xb0\xb8\xbf\xe3\x10}A8S\xac\xbf\xce\x95\xf8\xdf\x1d\xd1\x98\xbf\xcc>\xf5\xad\x1e\x10\xc6?\x1c\xb6&h\xc42\xc2\xbf\x01\x0f[\xa7u\x17\xc3\xbf\x90.\x1b\x943\x8a\x96\xbf\xa4?\xe4u\xad \x80\xbf~\xc9\xee\xdc\xe3\xfa\xa7?\xe1rT\xfc\x0e\xe8\xc1\xbf\x18]\xa7h\x06\xc2\x99?\x12\xdc\xa8\x03\xa6z\x8c\xbf\xd8\xa5\xde8\x15\xbf\x8c?+\xfbA\x89T\xfc\xb9\xbf\xf5Z\xe1\xc0\xc85h?\x1e~\r%z\xe7\xb4\xbf1\xa6\n\x80\xc6k\x8d?\xb8k\xbe\x1d\xc9\xc5\x83\xbf\x98=\xdb1T/\x7f?\xfc\'j*\xf5\xed\x8e?=\x00\x93\xe0#\x8e\x99\xbf\xf0\xa9iky\x88\x7f?"0\xfb\xf8\xc6^\xbc\xbf\x8f1v\\\x07\xae\xb8?\x84\xf4&\xaca\xdd\xa5\xbfb\xa8!\x8c\x93\x04\xb2?EJA\x11{+\xbc?\r\xba<L\xbc\x90\xc4\xbf\xf9x]\xc1\x8b\xbf\xa5\xbf\xf3\xb8\x07K\xca\xc0\xb6?\x03\xd6s\xa8Bd\xb4\xbf t\xf30\x05\xa5\xb7?`\x18@b,\x01|\xbf\x11\x1d\xf1H\x17\x87\xb2?\xed\x1b)\x86\xa8<\xa5?\xe2\xb8\xef\xe7\x8b\xbf\x98?&\xa7\xa94\xa7\xc6\x9d?n\xad\xba\x1e\xab\xef\x9d?\xd6\xb5\xa1\xd4]\x1e\xa0\xbf\x16\x94O\x13\xc3\x01\x81?tc\xeb\xb02\x98\x9e?\x80p\x06\xc3#C\xa7?\x8f\nE\x90[\x8a\x9e?b\xd1\xa3\x02\xb1u{?\xe8\xbac\'\xf3i\x91\xbf}\x1f\x8a\x99\x0f\xa0\x98?\xc4&\x00x\x14\'\xb3\xbf\xd0^\xd0\xab\xaeN\xa1\xbf\xc5S6$(-S?\x11<m\xb1\x14\xf8\xa2?X\x03\x99\xe8\n\xcc\xc7\xbf\xa9\xb8nE\xef\xb4\xd2\xbf\xfbI\x04X\x18Pa?\xe1c\xfe\x90\x8bG\x89\xbf\x17\xdc\xd0V\xda\xee\xbb?w\xa6\x80\xe5\xd8\xd3\xaf?F\xbb@\xb2&o\xa5?\xfc\x86"9Q\xc4\xab?\x90S\x07\x99\x1d\xe9\xcf?(\xff(\xa8V\x9c\xbe?\xe4D\xda\xd60\xc5\xcf?\xd7\x11\xf1r\xb2\x16\xc2?b\xcd\\U;Ex\xbf\x83\xefVPD\x11\x9c?\xe2\xbb\xf4\x12\x05\xd1\xb0\xbf\xf8)\r*-\xd6\xc1\xbf\xf6\xc6\xb3\xec\xe6\x9d\x94\xbf\x13\x04\xf8x\xae\x0e\xab\xbf<:\x17\xc8p>\xa3\xbf\x98n\x90j\xceF\xb5\xbfS(\x07I\xdd\xa2\xa2?p\xd8\x15\x19\xd8\xf9\x96?\xf2\xbbE\x05(#\xad\xbf\xc9\xeaPb\xe8\'\x8a\xbf^\xba\x11(\xf4\x95|?/u\x84\xba7^_\xbfY\xda\x88m"^\xb0\xbf\x9dj\x13\xb1\x91@\xaa\xbf\x99=J\xa0h[\xb4?0(\xd5\xdb\xd1\\\x85?D\xf9\x11\x84\xe9\xc8\xb1\xbf\x0clX\xdeG}\xc5\xbf\xeb/F\x90N\x00\xb9\xbfT\xe7\x92\x9dl\xa2\xc9\xbfr\xfe\x91\xf2\xde\xb2\xa3\xbf\xd9P~\x00\x1bTR\xbf\xd6\x02W>W\xd2\xb5?\x145\x17e\xe7^\x13\xbf8Z\xcb\x99\xa1\x8a\x84?Gr\xcf\x04\xea\xf0\x83\xbfu\x826\x08"\x9f\xd1\xbfO\x0eZ\xbe\x13\r\xba\xbf!\xc3j\x85\x06\x85\x85?=iw\xcf^D\x97?\x9d6\x18\x82B`\xb0?\x8f\x9e\xa7&\xd9\x16\xa4?a)\xb8\xf7O\xd2\x85\xbf\x16\xf8\xd1\xff\xe0\x92\x92?\x89\xb5~\xca\xed\xb0\xa4\xbf\xbc\xb1\xd7\x06\x93\xf1\xb1\xbf;F\x8f~C\xe7\xa2\xbf\\\xd9\xd1\xa0/\xd3\x9f\xbfh\x1b~\x17\x06-}?\xe4\x98\x07\xe2^Z\x84\xbf>}5A\xf9\xee\xb2\xbfmh\xe2-\xfd\xe2\xb9\xbf\x0e6\xe6*\xa6\x84\xb0\xbf\x93\xde\xb2"\xc0\x13\xb1\xbfj3\x90\x82\xe4\x80\xb3\xbfc\x80O\x11\x01}\xa4\xbf\xe1\xa6\x86\xfe\xf5Y|?\x9f\xf1Q)E\xfa\x93?\xfc\x9c\xe3\x04\xe0?\x96\xbf\x9a\x88F\xab\xc3H\xa0\xbf\xa5\x06\xf7\xbf\xcc<\x91\xbf\xc2\xfc|\x85\x88K\x86?\xd4\x1d\xdc\xe8?]\xaa\xbf\xf2\xb7\x93\x026\x9f\xa8\xbf]\xca\xf4\xb2G\xc9\xa9\xbf\xd77g\x8d\x94\xd7\xb6\xbf\xdf\x91\x17>y\x03\xa5?p\xd6\xe3\x0ey-\xa0?\xb9\x14\xbe\x84,\x0c\xb2?\xf3Ky\xdbH\x15\xb2?\xa6\x9c#"\xf2E\xaf?\x93L\xa8&8m\xb6?\x93Q\x82\x9bn\xfe\x92\xbfq\x81+\xb0\x06\x8d\x86?\xb2\xda\xdd\x06q2\xc3\xbf\x1cO\xa5\xf2\x96S\xc4\xbfDt`P[s\xb6\xbf\xf7\x81\x87\x06i\xb4\xbe\xbf\xea\xff2\x11\xde\x8e\xad?\x1b=\xbc\xdcQ\xc3w\xbf\xc0\xaf\xac\x96\xc3\x01\xb7\xbf\x9c\xe3\xad\xc9G\x9a\xb2\xbf\x8b\x96\xcb\x10\x14\x12\xbd?U\x1fE\x89(\x0f\xb5?=\xd2K\xe3(e\xba\xbf\xb2\xf7\xbagA\x85\xc5\xbf\xe2b|\xbfU\xcb\x8a?\x12>\xb0R;\xcd\x97?\xe6\xb0H\x90\xd1S\x83\xbfo\xaca\xfb\x88\x86\xa1?\xf2R\x1fH\xbf\x0f\x8d?)\xff2\xbf\xc5f\xa0\xbf\xd2v\xdd\x06\x87\n\xb5?\x9f\x0c\xa2\xf0\xd5\xe7\xa4?c"\xbbEM\x1b\xb3?\xc2L\x12i4\xb4\xb3?z\xd45\x8d\x1aIa?\x880\xf3!\xe0\x92\xa2\xbf\x1aX\xc7\x98ni\xc2\xbf\xca\x16\x08?\xf8\xab\xba\xbf\x00G\x08e6\xad\x96\xbf\xb3\xc0\xe3\x04\xf5p\x91?\xe4{\x0ed[\x7f\xae\xbf\xab\x90\x11\xfb\xb9:\x9b\xbf\xb2\x9d\x0c\xa8\xb4\xe4\xae\xbf,l\xc1z\xa8\x14\xc6\xbf\x02\x98\xa9t~\x0f\xb0\xbf\x8f\xbc\xbfQ\xb2"\xa8\xbf\xcd\'\x80\xac\xcf\x0f\xc8?\x0b\x99f\xeb\xfa\xba\xc1?\x07\xf0\xd9\xc3\x01+\x8c?\xc9n\x90\xf20er?\xf0\xb9\x0c\x8f\xd3\xb2\xa7\xbf\x19\x8d\x8b\x1b\x95\x91l?5\x9da#DD\xc6\xbf\xdb\x19\xb1*\x81d\xbd\xbf<\x92e\xc4\x05\x00\xcb\xbf\x9f\x95\xcbE?\xde\xc8\xbf\x0b\x94:~g\xa1\x90?c\xb5\xcbl\xa1\xc2\x85\xbf\x18\xb0_\xb5>\x89\xa8\xbf\x95\xbe"\x0f*A\x8f\xbf\x06\xdfl6\xaa\x93v?\xf4\x13\xcfZK0\x88\xbf\xa8om\xf7Z\x84\x8d\xbf>\xa7/\x17.\xc6\x91?\x11\xae\x19\xa3\xefW\x96?Tg\xe2@\\\xab\xa0?\xf9\xc0\x91isg\x8a\xbf\x84\xea\nv%\xb7\xb5?\xbf\xbbYz\x1f\xb8\xa5? \xaf\xf4\x03\xa2\xa4\xa4?\n\x1f\xd8\x81g\xef\xab\xbf8\x84_\x07\xdb\xb3\xa0?\x92d\x07\x90\xe9Z\x8b?Q\xb7\x8at|\xd5l?\x9ax\x07`\x17\xa0\x7f?\xcfDpnFdg\xbf\xf0\xcb\xefX\r\xb8n?U\x88\x06\x94J\x84\x93?>\xf5pW\rM\xa9\xbf^8\xbc\xe1\xe6\x00\xab\xbfPf\xd1\xb9\xe8\xa1\xb1\xbfb\xbf\x83\xc47e\xc7\xbfPl\xaf\x13`y\xb6\xbf\xff\x89\xe6\x07\x00h\xd4\xbf\x12\xd8\x80~\xc6\xca{?`\x9c\xef4\x7fm\x90?\xde\xa9N-H\x8b\x83?k\xc7QA*3\x8b?+h_\xa9\x01\x18t?\x9d\x14\xb7\xf3\xcc\xc6\x90\xbf1\x96\xec\xfbxC\xb0\xbf\xb3\x02\xd4\x06\xe0\xa1\xa6\xbf!\xbd%\xb13\xf6\xb3\xbf-\xcb@\x96\xd8A\xb8\xbf\xe6\xf6\x0ev;\xe3\x9b?v\xf0\xc7,\xc4 \xac?\xbb~\xa4i\x14\x84z?\x04&\x9d3C\xc0\x90?\x19\xe4?\xa6:~\xa4?\x07)Y\x99\xe8\xfe\xc8?\x9f!\xfd\xff\xb9\xe9\x87\xbf\xbe%G\xb4\xc8c\x90\xbf\x9c}\xe1\xae\xc3C{?\xd7I\xb8\x08b/\x94\xbfm\x0bj=\t\x0f\xc1\xbf\xe8\xdc\x0e\x14\xcf2\xd2\xbf/O\xf8\xf7\xaa\x8f\xb3?\xad\xa7\xf0\x0fC\xb4\xba?\xa5\rX\xfb\xfa\xb3\xa7\xbf\'k\x08&\xdeL\xbc\xbfu.\x80t#\x95\xa2?\xfb\xc6%\xb8{q\x81?\xc6\xb8\x0f4?.\xb2\xbfw\x17\x14J\xa3\x1d\xbb?}KHn\xaf\x9e\x98?\x9c\x87\xc6\xde\x97\xd7\x9d?n\xdc\xec\x8fU\xf5\x9d?\xe5\xf4\xa2\xa7\x86\xef\xa2?\x95\x8d-\xb3\xba(\xb4\xbf\xa0\x8f\x9d\xb4U\xb0h\xbf!A\xf8\xe8\x7f\x95\x9c\xbf\x90,\xf3^\xaa-\xa3\xbfwH\xa1\x89\\o\xc5?\xfc\xf6x,b\xc7\xbe?#\x03\xaa^&\x0e\xa0?\x85\x0c\xde\xa4\xd9\xae\x85\xbf\xb2\x04\x90;:\xe8\xc6?/\rT\xe0T,\xcf?Z\xf6\x13E\xdb\x01\xb2\xbf\xe6\x81=\xf9\xb5\xf0\xc4\xbfF\xc2\xa1\x81\x1e\x8d\xa3\xbf\xceY\x86\x88\xc2\x8c\xa0\xbf1\xcbc=\x1f\x8e@\xbf\xe4\'\xf4hw\xd1L?\xe8\x84\x89A\xfa\xfbw\xbf\x9c\xcb\x89\xf6\xb6>\xa0\xbf\x9a.\x08\xff\x9a4&\xbf\xdc\x03\x82\x16\x7f:v\xbf\x8a\xc1J\xd9\xaca\xb5\xbf:\xe3A\x8d\xf8\x84\xbb\xbfwbp\xb4$\x05\xa0\xbf\xa2\x87\x14\xb4\x82\xd9\x98\xbf\xd0\xcd\xa1\xfb\xbf\n\x9f\xbf&2Sq\x16N\x9c\xbf\x82\xa7\xbdF\xcd\xb7\xa2\xbf\xa1\xe8\xb9\xef5\xfd\xb2?\xfb\xb6\xf1\xb3\xad\x0e\x81?_\n,`O\xado?\x19\x84^Q\xa4{\xa3\xbf4\x82\xf7\x17\x85\xac\x84\xbf\x10\xae_U\xcd\xcf\x85?\xcd\xf8\xfaJ\x80\xd0i\xbf"\xa2dX\xf51\xaa?\r\\p\xe9\xff\xcb\xb9?\xba\xb4\xf9\x8b\xae?\xa3?\xc63\xd2\xa9\r\x8d\x86?E\x13\xf5\r\x14\x01R\xbf\x0b;\xa8\xdb\x16\xcc\x93?F\x1e\x87P|\xe8|?J,{5\x1a\xbbq\xbf\xb8\t\x89X\xb0\x9a\xa4\xbf.\x9e\xf8\xa4\xfc\x96\x91?1\x0c?|\x1c\xff\xc1?Ey\t\xc5\xe2\x89\xa0?\xd6\x8c!-T\xb9\xa0\xbf\x07\x03\xdf\xe0;\xfa\xaa\xbf\xa1\xddM\x8f"\x96\xb4?\xcb\xa4\xc5\xfcM\x14m\xbffzM^&\xbem?\xa3H\xdd\xf4\xf3\xbe\x82?>Z\x17V\x802\xa8\xbfbW\xe8-\x8d)\xb3?1 \xae\xad_>\x9f?\xbf\xcc\xe3\x1bg\xfb\xa1\xbf\xee\xba\x13\\\xcb\xdf\x93\xbf\xdd\xc77f\x1a\x8c\xa8\xbfT\xa1\x8e\x90\xa8Da?Y\xb0\x19V\x9e\xf2{?/\x04\x15t\xad-\xb3?\xdc"m\x0fxq\xa3?U\xa7\x1e\x15|v\xa3?.\xb9\x89w\x15\xf3\x9b\xbf\xbf\x13\x88\xa8!\xcf\xaa?;(\xb8\x97t\xf9u\xbft\xd8\xc2\x13\xe1\x0f\x83?\xaa/\xe1zQ\xfa\x96\xbfd\xae\xcb\x82\xca\xeb\xa4?/;\xee\x18[\x16\x85\xbf7]\xeb\xb2r\xd5\xa4\xbf\x1a^T\xee\\\xfdh?\xfe\x81=\x0c\xb5\x98p?\n\xba\x07uB\xb7\x98?\x1f\x9a\x10q\xe5\xe4\xa7\xbf\x85\xe0\r\x0f\xfd/\xc2\xbf\x81\x99b\x060m`?\x91\xc2\xca\x8d\x8a\x1a9?\t\xb6\xc3\xd6\xfd\x86\x89?\xbc[\xbe\xfd\xca\x93\x91\xbf\xf4\xba\xfb\x1e#\xaa\x87?w\x13\x12\t\'\xafd\xbf&\xcc\xa0m\xf6\x04\x94?D\xcd\x9e[\x9fFU?E\xf5Ct\xec\xbf\x9d\xbf\xe5[\x92\xb8\x18w\x98\xbf\xec\xdf\xa3\xa8\t\x00\x83?\xd5\x99+uoA\xa0\xbf\xd2X(\xec\xc2"\xaa\xbf\xa0\xc3\xb2,\x03\xfe\xa5?y\x04\xa6\xa1\xfe\x8d\xb1?y\x8fL7\xb7\x16\xb9\xbf\x8cT\x7f\'\x83\x16\xaa?\xbe\xe0\xfa\x90\xb9\x96]?\xb8\x9f\xeb\xd2\x8f\xaa\xb0\xbf\x9b.\xcd\xc3\xe9i\x98?g\'9\xa0?L\x9c?8\xcc\xd1\xea\xb5\xdb\x97\xbf\x81\x15\xf3\xf4\x85\xd8\x8a?\x8foTv\x10\xe0\xb0?\xaf\x0c\xe0\xbe\x88C\xab\xbf`\x80 w\xae\xb4\x91\xbfq\xdc\xaa\xab\x00\xc9\xa7?\xe2X\xce e\xfc\xa4\xbf\xc2\xf4\x98&n\xa3\x99?f\x90|\x0c\xe4\xff\x96?\xdb\xd5\xba\xc9\x04\x1f\xcb?\x8a\x15i\x8d\x03\xa5\xbc?(\x95>\xd7\xea\x1f\xba\xbfdb\x13\xee\x8f\x1d\xc9?iTKv\x97\x15\x81?\x91\x7f\xc7\xc8\x17\xf5\x91\xbf\x86\x89\x9c:aJ\x9d?q\xba\x1a\xc2\xcd\xa8\xae\xbf\r\xb0\xd9\t&\xd4\x87?\xae`\xd0\x0c\xa8\xde\x9f\xbf\x0c\x10\x89\x86<\xa9r?v\xd6\x9afI\xd9\x8d?\xca\xc1Vg\x11\x92\xb1?\xcd\x8a{\xfc[q\x96\xbfP"B\x8e\x15\xc5\x89?|4\xf3=2"\x98?\xd6\xc6$n\xech\x90\xbf\x12\xa4\xceB\x16"X\xbf\xc1\xfdD\xf3\xb4\xc7\x82\xbf\xce96\xa7\x01\x14d?\xb4\n\xa0\x85\x89.\xc0\xbf!\xd6y8X\xdf\xc6\xbfb\xd1]\xed=\xd0\xa8?\xe2\x06eR\x93I\x9c\xbf\xa1K\x08\xd1\xc8\x11n?\xd4\xb1\xed\xadS}\x97\xbf\xc6l\x81\xb4WM\xc3\xbf\xf4\x8c@;]v\xc7\xbf\xd9\xd9\xa5\xb41\xfc\x9c?c\xfd>u2\\\xb4?~@1}7W{\xbfVL\xbb\xee\x05\x99\xbe?\xf7\x05\x97\x11\x9eH\xa0?o\xbe\x160\xf7\x08}\xbf#\xe7\xc3\xa9\xd6\x9b\xa5\xbf\xe2o\xdd\x05+\x8c\xa0?\x91DU\x9b_\x91\x91?\xa4\xee\x0cP\xf15s?\x85\xe4\xf7\xfb\x12\x9as?\x03\x0f\xad\nBWs\xbf\xe8\xa1\xad\xc6\xe5!\x9e\xbf\x9f\xacgc\x0b\xcav?B\x10\x88s\xa7\xdc\xc9\xbf\xd5\xe1\x02\x17\x19\x1b\x8d?\x10\xb98\xfb\x91\xb9\xb1\xbf\xe4\x88\x087/\xe4\x9c?jEuv\x12\xca\xb3\xbf\n\xb4\x05\x111\xa1\xd0?\xfa\x01TEi\xf4\x81?\x8e*\xf23\xc1\xe5\x88?(\xbf\x94`\x19\xc8\x8c?\x89\xbbv\xd4\x15F\x81?2i\xc2,\xf8:\x8c?\x80\xae\x1f$\xf0\xe3\x8a\xbfU\xe8\xed\x82\xe3Z\xb2\xbfSlCp A\x93?tyb\x9b\xeb\xe1\xd2?\xa3>\xac\xadY\xf8\xce?LW\xcbjI\xf3\xb7\xbf\x9c\x91A"O\xa1\x8a\xbf\xcc\xeck(\x17#p\xbf\xab\r(\x1dC\x88\xa0\xbf\xf5y\xa4\x8d\xc4\x92\x8d?\xe2_\xaf\x82\xa1\x8et?\xe5\xae\xb5\xf0\xc6\x9e\x84?\x1e\xc7\xb3\xa8\x17\xd3\xa1\xbf:&\xd9\\8\x16\xc2\xbf?\xa9\x9f\x04\x94\xac\xac?:k\xe1\xd9\xf7\xd4\xbd\xbf\xd0\x1a\xfb\x9c\xb4{\xab\xbf\x9e\x8e\xa9\x86\x18\x90\xb6\xbf\x96l\xe4w\xb7\xcf\xa3?\x0e\xca\xe4\xadW\xc9\x9d?\x1bC\xf4\xce\xcf\xc8\x8e?\xfe\xa7E \xae\x07\x95?\x9c-\xbdg\xa9\xf3\x95\xbfhw\xc3\xac&\x99o?I\xe2\xc4\x00\x86\x88j\xbf&\xbb\x14p\x18\xf3\x81?e\x8fc\xa5\x9c\xfd:?\xc4\x10\x8f\xd7P,\xaa\xbf\x8a\xf71\xcc\xb7:\xab\xbfL \x8e\x9f\xe5A\x80\xbf\xd5ki1>\x06K\xbfA\t\xe5\x1b\xd0\x06\xa8?\x143\x0e\xba\xd0\xde\xb5\xbf\xcc\x07\xa1ya\xe8\xa5?16\xe5~M\xe4\xa0\xbf\x8a\x02\xd0\xc9\xea[\xb9?\xb0\xc9wu\xc7\xa0\xb0?g\xd9*H\xb8=\xa0\xbf\xa4~/xe\x0e\xa1?-\xb2q\xea\x03,l?\xb8\xac\x0b\x1aV\x01\x86\xbfj1\xa9\'\xcc\x15\x90\xbf5\xa1\t\x00\xe6z\xb6?\xca\xa2\x86n\xc6\x11u\xbf\xf5\x7f\xf4\x8a\x8f*\x83?\xa7\xdc\xd7\x11\t\x93\xb4?\x10\x90\xca\x016`\xad\xbfL\x1a\t\x8f\x12i\x99\xbf8GS\x8c\xdaSm\xbf\xa1X\xf5\xfe\x03\xe0\x9c?\x06\xee\x89\x8f\xd5!\x9c\xbf\xa5Y\xd6^\x18#\xb1?\xcf\x83\xda$\x11\xe4\xa7\xbfcK\xd9\xd6Pf\x8b\xbf\x95\xf8\x9b\xce\x05Fg?\x11\x80\xf1\xa6\xe5\x10\x9f?\x08k\x9e~\xa6H\xbb?\xeduy\x96\xba-q?&B\x95J\x12yk\xbf\x19\xf3fV\x10\xceh?\xf7L\xd7`1\x92\x89?w\xef\xcc\xb5\xc1\xf6\xbe?\xeds-a\xd1\x84\xb0\xbfD\x86X\xb9$:\xdd\xbf\xa50Ov\xa8\xf8\xdc?p\x9f=t\x01\xad\xb8\xbf\x9d\xd2\xdb%.\x11\xb2?\xcfs\x1e@\x99A\x8d?.^3\xc2i\xc9\xa0\xbf\x96\x13OxL\xdd\x96\xbf\x95\x85<\xa5/Y\xa5?L\x9b(\x03\xd5\x1b\xb4\xbf$y\xcb\xca/\xa7\xb2?\x89\x06=z\xdb\x1ad\xbfB\x9a\xb7\xc7T\xdb\x96\xbf\xe7\xd9\x97\xc3G\x81\xa1?\xb7\xc9\xd9\xb7b\xa2\xb1?\xa5\x88\xae\xfb\xf4\xab\xc2\xbf\xe3\xe810\xd7\xbd\xbb?\x04\xac\x91^\x91s\xa4?D\x00-\x98\xfb<\x96\xbfz3\xb4\xb2\xa5\x10\x19?)/8\x12\xe6\xc5Y?J\x88H\xd2IC\xba\xbf\xb9\x94\xc4\x82{\xbe\xba?\x16\'\xb0\x99~\x93\xa3\xbf\x1c\xca&!\xaf\xb6\x95\xbfT\xc8\xcfJ\xcc.c\xbf\xab\xf1\xf3\xcb:\xf9\xa4\xbf\xe9BX\\\xbb\xb4\xa3\xbf\x83\xd2a\xc9\xa7\x07\xa6?c\nr;\xfam\xba?\xd8\xa4\\?Gu\xc3\xbf\x9bY\xd2\x1c\xbc\xd0\xb6?6W\xd4\xc9\xf9\xd5\xb7\xbf\x01\x04\xe9s\xddQ\x91?\x1arG\x8d[\xdd\x83\xbfs\x99y\x01\x8d\xfe\xc0\xbf\x9en7\xe5\xaa\xc1\xb8?\xd6\xfck\xb1hD\xd2\xbf\x15\x0f\xbf\x1bw\xc0\xcc?d\xaf\xa8*\x96\xff\xc6\xbf\x11\xa4)W}\xcd\xc6?8\xd80~\xc0`\xa6?\xb8:\x890RNr\xbf\xe1\xc6\xa6~\xba\xb3\xbf\xbfsN\x97\xc1\xc8u\xb9?D\xf1\xd8\xaeC\x04\xc5\xbfkz]\x82v\x1a\xc1?&\xd9zWE\x82\xb1\xbf\xb7z)F\x1c\xb6\xa5?\x9e."\xb7\x1e\xe6\xb6?\x1a:\xe07q\xf4\xb7\xbf\xcc\x01\x01\x9d\x84/\xb3\xbf\xa7"5\xa3D\x08}?\xbd\xadH\xa1\xa9B|?\xc6\x9bi\x0b&h\xa5?[\xa6%\xac\x9fL\xa5?\x97\xf9L\xbd^\xaf\x82?\x1f\x9e\xabN\xf8R\xba?\x94\x14Iacz\xb1\xbfG\x8c$\x11\xc2Wy?\xbc\xea\xd7f\xde\xf3}?&+\xf7\x02Nr\xb4\xbf+K!\xa2\xc1o\xbb?\xbb2i?\x01\x8c\xc0\xbf\xd7\x83\x1b\xc6\x118\xbb?2\xddh\xaco\x80\xba?\xb2AQ\xbe\x99G\xb3\xbf`\x87\x97\xc8zq\xa8\xbfH\xec\xdcXJ\xcb\xb7?B\xd4\r\r3\x9b\xa3\xbf\xee_\x10R\x02s\xb2?\xf0D\x86\x9f\xeaZ\xb0?+\xf5te\x13\x9c\xa6\xbf\xa0\xf2\x94`\rL\xd0\xbf\x11#\x90\xe8\xe3V\xd1?#\'M\x1c\x0f\xcb\xb8?\x94\x05\xf4\xdd\x01\x0c\xb2\xbf\x85\xdcJ\x9fJ\x1a\xac?\xef\xda\x0c\xa8m\xd1\x88\xbf\x15\xba\xc8XQ\xef\xab\xbf]\xbeK\xbd\xad\x11\xb5?\xb19\xea>\xea\x0e\x95?\x88\xc0\xac\x07i\x16\xb5\xbf\x96\xccIi \xe2\xb4?\x17\x1eq\xf1ec\xa9\xbf\x84\x0e&q,\xd9\x93?\xa0\xf6\xeb\x0e\x04\x7f\x9d\xbf\x94\x07\x85\x86\x1c\x99\x85\xbf\x9d.\x9b\xf2F\xc4\x80\xbf\xa6\x9d\xbc\xd5\x9eV\xad?\xa6\xcf\xcf\xc7r|\xb4\xbf^\xeb\x97\xc3n\x9f\xc8\xbf4\xf3w\xdd\xd9P\xc0?=&s\xb3\xf1\xc9\xb8\xbf2\xe4\x11k\xb7\xfe\xc0?\xd5\xb0Q\xc6\xba\x93\x90?C\xeeE\x15+{\xa7\xbf\xa4\x08hgV\xaec\xbf\xba\x8f\xc1\xef\x9d%\x96\xbf\x9c\xc7\xaa\x05\xbc\xbf\xa7\xbfi\xc2\xcd\x0f\xd4\x9f}?\x83\x1a{\xfc\x9f#\xbb\xbf0W\x911\x04K\x97?\x8a)#u\x8d\x93\xb9\xbf\x7f~\x05\xaa,\xa8\xb9?\x07$\x03],K\x95\xbf\x8f\xbd\xa6\x9e\x17\xd6\xa2?\x8al\x0b"_T\xb6\xbf\xd4\xf9\x0fI\x90\xf5\xaf?\xee\x89\xd3\xb4\x14\xb0\xa1?\x9c\xbc\xee\x1f\xf4\xb6\x84\xbf\x0f\\\x83\x9dq0l?\xf5\x05Q\x99\xf9\x06\x8b\xbf\xc28+}\xc5\x9c\x9f?IjC\xd9\xa5\x9f\xa9\xbf\x0e.y\x05\xc8\xc8L?\xd72\x93\xe19Z\xaa?|4<\x89\x95,\xbc?C\xde\x8bc(\x03\x91?Q\xcfK\x93\'\xf5>\xbf\xce\x8a\x80\xff\xdd\xaez\xbfT\x99\xaf\xe7\xd3\x0f\x9a?\x8a"\x99\xa4\x8bv\x8f\xbf\xd2fv\xa8;c6\xbf8<wp\xf2%d\xbf\xb8O\xe6\xdb\xf9\xaa\xc1\xbf\x9a\x04\x8b7\xad\xe4\xc4?\xbd\xb2P\xb7\x90T\xa6\xbft%\xf8\xa1i\xddP?.\xe9\xd8\xc2(Q\x9b?g\x91\xc1\xedu\x81\x9f\xbf\xed\xc7\xd2l@\\b?]-\xddz\x1b\x9d\x96?A\xf4E\xd0&\xd5\x8a\xbf\x96\xd71~c!\x83\xbf\xd3nG\xe8\xb3\xa2\x8d? \xe4\x14v\x86s{?\x1d\xb8R\x99\xba\xfe\x93?3\x17\x85@\x9c\xf9\xb4\xbf\xcd#\xa5\x9a\xe9\xc7\x9c?\xb5y5V\xfc\x16\xaa\xbf\xfa_\x0f\xa1\xbe\xf2y?\xc2E\x8fA\xdfg\xa8\xbfc\x97Z\xb2h\xca\xa0?OX\xbe\xa8Fx\x9a\xbfPn\xa9W\x1d/\xb0\xbf\xe6\x10+1k\x19\xac\xbf\xb1\xf0=S8XZ\xbf\x1a\x9bK:5h\xaf?<U\xa4&\x871\xb2\xbf+\'d\x12\x94\xff\xb8\xbfZ\xf3\x900\xf0\xb4\x81\xbfM5\x82\n\x90\x15\x94\xbf(\xac\xa1\xef\xb4\x1e\xa2?@\x82e\x86\x86\xc3\xba\xbf\xb5\x0b\xaa\xd8\x10\xf1\xa5?\xb9U\xa9H\xfen\xa5\xbf\xf0V\x93\xa8\x925\xb2?P:Sw\xad\xea\xb4\xbf\x1cR\n\'|\xd5z\xbf\xff\xf7\x13<\x89\xb1\x9e\xbf\x8a=\x0f\xb9iI\x87?\xc5[\x86\x0b\x95\xdew?\xf09K\xf9\xf6\x91\x80\xbf8E\xf6\xeb\x07\xcbs?\xb6\xbb\xb72\x1a\xfe\x85\xbf\xd1\x0bN\xfc\xad\xa5d?(%v]\x9b\x9b\xb3\xbf\n|\xfa\x17\xc2\xed\xb4?l\x07\xa9\xb7\xaes\xb1\xbfZl\xaf;\xccr\xb0?dD\x82"\xdf\xee\xb9?\xd6\'ul\x8b\x98\xba\xbf\xc5\x9a\x8e\xac\nvF?\x0c\xb6\xa7|\x0b~\x99?,\xb4\xb36\xc1:\xa6\xbf\xa7\xd6\xe8\x9a\x0c|\xb0?\xe1U@+]\xcf\x86\xbf)\x18\xb1\x9c\xdf\xf7\x9b?\x17fmJr\xfd\x94?\xd3\x9a\x8e\xc4\x9a\x7f\x93?K\xcd\x8d\xb3\xe6\xf2\x94\xbf\xee\xd9\'7\xc1u\x82?k\xb6\x9a\xc4(1\x8a\xbf&\xc6o\x1f\xf3\xca\x83?GM\xbeUh~\x95?E\x99R\xff\x91r\xae?\x87\x81\x03\xbf\x94\xe3t?R\xacbgS\ri?\x07\xc6\xff\x85P\xc5\x84\xbf\xcf\x93\x1a$k\x1c\xa0?mKZ\xf4@\xb4\xa2\xbf\xe4\x8e3\xa2\xd7\x96Y\xbf\xbb\xe8\xef\xcc\xf4o\x97\xbf\xf8\xd2\x02\xc7\xa3&\xa4?\x95\x84\x10\x80\x82)\xac\xbfH\xea\x81\x96\x1a\\\xc3\xbf)qq\xd4Y|q\xbf9Q\xcf\t\x94\x86\x93\xbf\\\xb5\x852V\x8d\xc2\xbfi\xb0\x02\x1e\x12\x1e\xc4\xbfy\xcd\xda\x96\xda\x05\x99?]\xe5\x1c\x91\xb5*\xc3\xbf\xa2<\xff\xb6\xe8\x06\xab\xbf\xd0zI\x83\xbe\x95\xcb\xbf\xd3\x82\xc5u\x96\xc1\xa4\xbf)F\xa4\xe7\xe2bk\xbf4\xc2q.\xb1\x1e\xa9?\xd2\xfa\xa1\x87\xea\x81\xa3?b\x9d\x8a\xebRu\xa7\xbfX\xf4\x8dg\xd8\xe4\xea\xbf)\xcd\xa4}\xa9\xba\xa8\xbf\xe6\x0cx\xb8\xf8xt?\x174\x1f\x85\xa9Zy\xbfy:\xd2\xdfE\xe4\xc6\xbf\x1e#\xb5I\x80U\x8f?\xdef\x9c0\xe6\x1e\xa4?\x97\x8e\xdb\x8a\xac\xe8V?\xbb"\x90\xbb.\x03p?\x97\x9c\xf2\x81$\x90\x81\xbf\x81\x88\x85\x03~2u?\xef>]=\x93J(?P\x83\xf3\x90\x16\xfb\xab\xbf\x9f2.\x9aKC\xa3?\xbf\x1f\x92\xaf\xfb\x03\xc9\xbf$\x1a\xcdc\xee\xe3\x8a?\x92}SN\xef\xfc\xbd\xbf:I\x10\x0c\x0b\x98\xa7\xbf:\r\xc22\x0c\xcb\xb3?\xe0f\x87\xa62\x90\x91?\xf6\x02\xf4\xe37\xa9\xa2?\x89(`\xcc\x9c\xd2\x9d?\xfa/=x\x9b\xba\xa4\xbf/j\xa1\x18.R\x92?\xef\xd3ADw\x97\xa1?\xf0q\xd4\xbc\x8e\x8b\xa1?\\\xe1\x90\xb7Y\xdd\xab?`/\xf0\x83o\'\xa3?\xdb\xbaE\xf2w\xbd\xb5\xbf4\xcc\xc9\x8c#\xd4\x84?\x04\xae\xbe\xae\xff\x85\xa9?\xef=\xf1\xa0\xa0tg?\xdd\x14N\xedxi\x99?\xc6/\x7f\x91\x8fJ\x90\xbf\xd4^\xe7w\xdbz\x87?t\xe8$y\x80W\x95\xbf\xa5\x9cM\xd2p\x89\xb3?\xe3\x08r\x13b\xdd\x9e?5;V\xeb\x14c\xb0?4\xb4\x0e\r\xbb(\x97\xbf}\xcemcm=\x9d\xbf\xec|\xe4\xf7\x04\x0c\xaf\xbfXq\x96s\x9c\xf8\xc9\xbf\xd3\xa6\xf34te\x9c\xbf\x90%\x08\x99\x9a\xa9\xc5?\x8e8\xe7\xd6\x0f\xe5s?_\x8b\xa8A\x91\x02h?\xbd]m\x95\x82\xbf\x9f\xbfGV\x97AJl\x9a?\xc7|\x15/\xaa\xbb\xec\xbeA\xc2\xe0}D\x06\x83\xbf\xb8\xde\xfcd\xa2,\x8c\xbfql\xac\x8d\x17\xdd\x90\xbf\xef\xed9\xa4\x17\xbe\xc0\xbf\x05PW)r,\xba\xbf\x1e\x0bDS\x1d\xac\x86\xbf\xa4\x03j\xa1\xa7\x05\x95\xbf\\\x9avq\xc1l\xc4?\x9cZ\xba\x82\xcb\x8c\xc8?\xf5Ls\xfb\x83\x9d~\xbf\xd6\x06\xff7\x1aT\x9b?\x80\xa7C%(U\x99\xbfs\xc5\x0f\xb5zP\xb2\xbf\x07\x9cN\xb1\x0c{\xa8?\x99\xf8\xb9\x9d\xde\xc0\x98\xbf\x17\x92\x8a\xa6n1\xa7?/W\xa1*\x18\xd3\x9c? \xe3?i+\t\x99\xbf\xc1\x05\xcd\xad\xa8\x06i\xbf\xf7\xe9\xd9\xd7\x93~\xa7\xbf\x9b\x81}\xea\x15 \xb4\xbf_\xc0\x87\xfcI\x1c\x80?\x85\x93[\xc9\x97\x8c\x88\xbfT\xdf\x82\x1f\xb3o\xab?\x83\xda\xa8\xa3e\xeaw\xbf\xf52\x80Y\xbf\xa7\xaa\xbf}\xc0\x0c2\x8e\xdc\xac\xbf\xf2\x85v\x15R\xd6\xd3\xbf\xf5\xa6he\x89S\xd6?\xf9\xe2\xd6|\x1e\'8\xbf\xbb>\xdck~\x88\x83\xbfaAz\x14\xc1j\x91?#\x8c8z\xd1\xeb\xb4\xbf\xb4\xa0)\x1b\x90\xb7\x90?.\xef8\xa8\xb9\xfc\x9c?\x93\xd1Se\x82\x04\x99\xbf\xfe\xa4\xc7\xca\xec\x8eL?\xcf\xff\xeb$(\x0f\xba\xbf\x9c\x9b\x1d\xa9\x9e.\xb2\xbf=\x9c\x04A\xecs\xad?w>p\xfd\x19\x86\xce\xbfQ>a\xea\x00E\x85\xbf\xabE\xbd\x8b\x19\xc1\xb1?\xd3\xc6"\x88\x92\xde\xa6\xbf\xf0\xaeQe\xa6B`\xbf\xf1\xa9\x1d\xa6\xb5u\x90?\xd1~O&n\xf1\xb0\xbfv\xf5[R\xb0\xc7\xa6?\x13C\x0b\xb4\xe4\xb0\xc5?\xc2^\xe1_B\xb8\x7f\xbf\xfd!\xa4\x7f\xc1\xfc\x93?\x1ca\xf2.\x19\n\x94\xbf\xf4\x9dRV\x03$\xbd\xbf\xa7\xc6\xa5\x8c\xf9l\x94\xbfO\xcc\xb3"\x1c\x15\xb2?\x97\xc0o\\\xd9\xb7x\xbf\x8c7e\xc3\xf4\xd0\xbb\xbf7x\x80\xa4r\xd0y?\xe7~\x95\x958\x88\x9f?\xc5\x0fw\x1a\xf3\xd1V?\xbc$\xbd\x19\xc7\xd7{?\xacy\xb7\x16\xc6E\x82?O9yb\xe2C\x8e\xbfk\t{y\x1a\xe0t?\xc2\xfa?\x1az\xfbx?\xf2$\xd9\xc9\x0c@\x84?@%\x0f\x17\xe7W\x87?\x9bF\x8b>\x00w\xe0?\xbc\xf3\xf8\rqc\xce?z\x03\x16\x15v\xbd\x8f?\x1c\x99\xf1\xcc\xff@\x9c\xbf\x82w\xc8\xd2\xfd$\xde?\x19\x17\xa77\xf6S\xc9?e7\x92\xaaF\xb6z\xbf4\xef\x03;\x18\x19\x99?\xdd\xcc\xfev1\x83\x80\xbfkB\xadhF\x85`\xbf\x0c\xdd\xf5\x11t\x18M\xbf\xe6nqpC*\x8f?\xa2\xa4\x911C\xbe\xc3?s\x0bw\xa9@\xa4\xd8?\xa9g\xaci\xe6\xa1\xbf\xbf\x0c\xdd\xf1\xf4\t\x10\xd2\xbf\xe6c_~\xe8M\xbc\xbf&\x04-\xf8>\xdb\xd1\xbfi\xbe\xa7\x95U\xb4g?\x0e+\xf5$e\xf3\xb0\xbf\xac\x1a\xc9\xb0E\x8fq?\x87\x98~\x11*\x1f\x8e?\xa3\xfdBO\x1d\xc6\xab?wg\xda\xdd<\x8f\xb1?\xd9KX\x9d\xb6\xea\xdc?m\x07\xebGLY\xd3?G\x08\xb1\x94\xc7G\xc1\xbfO\xa7\xcc7\xf9\x14\xb0\xbf\xb6\x0e$zF$\xac\xbffC\xae\xa7\xb6\xbf\xd0?2\xdb\xef\x15;qw?\x8ap\xb0\xa1r\xe8\xb2?\x040~\xe1\xe3\xf8o?\xe9/\x87}^\xba\xc7?T8\xe5\xc6\x17\xd3\x95?\x0b\xee\xc2\xd3\x05\xc4\x97\xbfI\xa1ow.\xa7\x8b?\xc8\x0b\x9aM\xe0.\x96\xbf\x98\x89\x90\t,{\xac\xbf\xc4;v\xfc\xb5\xf2\xc4\xbf\x14R\xcb\x96\x06\x05y\xbf\xe8\xb4\xaa\x84xBq?\x1c\x9e\xfb\xa2:t\xd0\xbf&\xa9\xfa\x00\xf2R\xe1\xbft\xf9\xc6\x01\x15(\x9f?\x8fnU=\x90o\xa5\xbf\x8aw\xe6R\x1f\xc5\xd0?0\xe8\xf6PY\x0b\xb0?\xd4\'\xe3-\xdf\x95\xa2\xbf\x8c\xe2\xd6D\xde3\xc7?v\xc7o\x8e\xab\xd4\x89?\xff|fT\xca\xb5t?\xf5J\x07T\xc5\xa8\xdf?3`N[\x0c\x9b\xc6\xbf\xeb\x83\xdb\xf0\xc9\x05]\xbf\x9c\xfaY\x07\xe00\x98\xbf`\\\xd8\x91\xe9\xa4\xa5?\x18\x0c6q\x12\xa5\xc2?\xdb\xb6\x8b*\xfc\xb6\xab\xbfl\xd8\x99\xd3\xf4q\xbb\xbfMJ\xb2=\xef\x92\xb9?\x13xFi\x1aA\xb4?A\xad[\xd4\xaf\x05\xad\xbf\xb1\xdc\xf5\xc4\xc6\xe9\xb6?t9p\xb1\xe8\x0e`?\xda\xc0U\xcd\xd2\xa7\xb6\xbf\x92\xe81^\xa7UV\xbf\x8b\x8d\xd5+Ru\x87\xbf\xb8\xfcS\x16\xee\xa2r?\x04bS\xee\xe5D\xc4\xbf\xbd5@mn\xber\xbf\x17C\x86(\xd2\x17\x8e\xbfoV\xaa%\x83\xa5\x92?q.\x7f\xde_\xb5\x91?F\xf0\xee\xe3\x7f\xfc\x84\xbf\xec\xde\x08\xdc"~\xb4\xbfv\xa1\x80\'\xbeG\xa7\xbf-<M\xcb\n\xbd\xa3?\xa4\x03\xec\x0b+B~\xbf\xe3\xd9\\\xa2\n\xf0\x98\xbf\xec&\x05\n\x03\x19\xa0\xbf\x9a\xb8\xfc u\x99\x8d\xbf\xad\x19\xcf\xb8\xc3\x1a\xb4\xbf\xcaC\'VTQ\xca?\xe7D\x99\xcf\xd2U\xa5\xbfpR\x98\xaf\xea\xa4\xc0\xbf\xf6\x0ff\\G\xfb\x88\xbfh\xb7v\x19\xae\xbd\xb5\xbfR\xe7\x19;\xbb\xc8n\xbf\xd0\x12\x11NU\x99\x91\xbf\xf7l\xad\x86H\xf9\x85?\xef%\xd3\x80(\xb3\xb9?\xb5\xbcH\xb1\x16\xfaX?\xc1\xcf\x1a\xbf\xa0\x93\\?L\xb2\xdex\x84\x15p\xbf:fa\x17\xa3%\xb1\xbf\xbav)^t\x01\xa6\xbf\xd1\x0e\xe4*\xa0M\xa2\xbf\x059\xb9\x12\xce\xcb\xa3\xbf\xbcvH\x17A;\xca\xbf\xf0\x96a\xc9N\x86\x8a?\xa61\x17\x04\x88\xa8\xaa?\x00\xd8\x14\x9a\xf1\x9aY\xbf\x18\x11M\x8b\x0bsr?7\xc6\xa2myx\x94?\x03\x12>\x1c\xa4\xc1\xa1?k\xae\xa8\x9b\x86fX\xbf\x8cF\xd7\x9b\x13\xc9\xa0\xbfy\xa9\x8e\xaaGU\x8d\xbf\xaf\xdf\x93\x8f\xb9\xe3\xd6\xbf\xd8\xef\xdbq\xc1\x10Z?\xe7M\xbdl\x04\xa6z?A\x82\xa0\xb6\xdd\tu\xbf\xbf\x1b\xd5(DT\xc7\xbf \xce34\x01p|?PF\xaf\x95\x00\xe1\x9e?]\x19\x7f!\xcf8\x88?O\xb8\x83\x83\x834\xa5\xbf.\xfe*8\xc4\xccT?\x0f\xf2A\xfb\xa0\xdf\x8c?\x9c\xf0CM\xfc\xa0l?\xca\xa8t\x8f\x9ai\x95\xbf\xcc\x02\xc6V\xc53n?\x0b\x9a\x96C\xc1p\xa5?\xe14\xffu\xc8\x89\x9b\xbff\x95\x88\xb6\xb0R\x9d\xbf\x9b*\xe1a(\xd7\xa5\xbf\x98\x03\x99\xd6\r\x9f\xd6\xbf\x94\x84E\xc5\n\x031\xbf:*\xac\xb5\xd6\xcc\x95?"\x05\xf9\x14a\xd2\x83??\xba\xd2p\xdd3{?\x8c2`_\xd7\xe8\x89?\xb8\x93\x17\x87\xc6\x0fq\xbf\t\x90\xfe\x9a\xdd\x00\x80\xbf\x97/Q\xe3\xb5h\x93\xbf\x8f\x92\x00\xe1\xdc\xe9a?\xb5\x05\x08\xc6:\xae\x7f\xbf\xdf\xff\xae\xf1\x18\x06D\xbf\xc1\x19\xb0W]\x88j\xbf\x16\x8a+\\\xdf<\x9b\xbf\xa6>?\xea;\xbc\xdf\xbf^\xdb\x0e\x05\xa9\xcc\x98?E\xa0\xefI\xa8\xfc\x9f?o\xd3dl\x1d\x16\x8c?\xf8t\xb2y\xe8\xd1\xad?O]+u0\x11\x85\xbf(}}\x1d\x1br\xb9\xbf\x0e=\x15\x08B\xbe\x7f\xbfV\xdd\xf3`V\x10\x9a\xbf\x88\xa6O\xca\x87rn?$]\xbf\xae\x98q\x9f?\x02X\x16aj`\x80?\x14\x1e5\xd6\xa9"\x94?B\xa8(\xc6\x0c\xd9\x82\xbfz\x81~<7#P?U6:\xcd\xeb)\x93\xbf(\x80T\xc1\xa1\x1f\xc6\xbf\x9f\xaf\x0e\xeb\x90\xa6\x81?P\x0f\xb8\xc9\x86\xca\xae?P7\x9f"G\x87\xb5?O\xb3L[\xa3F\xb2?\x16\xdf^\x9cg\x08c\xbf\x86\xb6\'\x01\t\xc1T?\xf8\x1e\xdf"&5y?K\xe3\xbe\xce}\xc9\x9d?\x95\x833O\xb8\xc4\x83\xbf\xec\xeby\x9fK*\xac\xbf\xa4\xeb9M\x14\xcai?\xbc\xd9nj\xeb\xf2\x87?\x9b\xfb\xf0\xd5\xea\xf0w\xbf\xd7k6\x9e3\xac\x82\xbfoB\x8e,\xf3p}\xbf\xce\xd5^\x1by^\xbf?R\x1f\xa5q>\xbep?\x85\x08x\xd3\x89\xbf\x8f?\x02u\xec\xa5\xf4\xd4\x8c\xbfSM\xfd\xa9)\xce\xb3\xbf\xe3\xc2\xd9S\xab\xad\x88\xbf\xe89<zc\xc4\x9d?\xbb\xf0F\x83u\x03(?U\xb7\xfc\xae\xeb{\xb7\xbf\t\x9a\xf9O\x82\xf1S\xbf\x84\x02\x16|v\xa4\x94?\xbf\xe0\xc8\xe6\xeb\xadx?^\xe7\x84\xfdW\x9e\xb0?\xa981\xdc\xc2\xff\xb3\xbf\xa3w\xf9\x00\xe6\xf5\xcd\xbf\xdeq\x9c\xc5`e\x9e\xbf\xf7<\x82\x8d\xfd\xba\x8b\xbf\xf7\x1b2\x16D\xca\x92\xbf\xd6\xb5n0\xce\xda\xb2\xbf5\x12\x03\xe0\xb8\x80\x83\xbf\xa6\xba\x0e\xd2\xa72g?K"Y\xab\x93\xf8\x8e?\xd2c\xf8J\x88\xa0\xb7?\xeeRIA,\x9db?\x07X8\x1c\x7f3\x8c\xbf\xfa\xbc\xb1\x82\xdb\xc2\x82?\xd1U\x8av\xf8\xfd\x95?\xbfgd\xeb\xd2[\x91\xbf%0\xb9\xde\xae\x14\xca\xbf\'*\xd2\n\x1f\x05\xb2\xbfC\xca\xa5\xe0J\x82\xcd\xbf\xc8P\xbc\x81\xa2p\x9a\xbf\xd4\x07\x0b)Cs\xc1\xbf\xf2,\x9e\xd6\xa5W\x93\xbf~8\xd0\x87\xef\xffP\xbf\xfbC$*\x86\xa0b?&\\\x85\x1c\xfe\xf4\x8b\xbfmq\x9d\x03i\xbbK?\x8bv/\x89\x95\x03\x94\xbf\xe1r\x0c)O\x15\x80\xbf4^\x07lP\x06\xe2\xbf4\xce\x14\xd5\xdb\x17\x80\xbf\xe0\x19\xb4#\xea\x11\xc1\xbf\xadN~\xf4\xc7&\x96\xbf8>\\\x82\xe2c\x8f?5\xf9\xe9.\x89\xfa[?w\xdb\xa5\x0e\x1f;z\xbf\xdce\x99}w#\x89?\x12\x1b\x854\xab\xd6v\xbf%<\xda\xe8a\xfa\x88\xbf\x8aU\x0bS2\x99\xa2\xbf\x95\x98\xb4\xd3u)q\xbfn\xc1\xe6\xad\t%\xa7\xbfe\xdfn1\xdd}\x91\xbf\x87fhL\xf3\xf7\xc5\xbf\x81\x00\xe512\xf8\x97?0\x97=\xb14\xfc\xa7\xbf)\xcb\xf4\x1a$\xeep?\xabJ\x9aB1\x94\x8c?\xfb]\xbfkx+\xa6?0\xcd\xb7\xea\xe1Z\xbc?_\xd9\x1fo8\xa0y\xbf\xd9\x99u\xa6\x9e\t\x92\xbf\xb8\xf7\xba:\x8dPw?\'%\xceef\xe6{\xbf\x16z\x88\xbf\x81VX?\x8c\x85\x98\xa0\xec\x06\x97?\xbf\x1b\xab\x04\x08 \x91?8_\x82\xb2b\x9b:?\xea\xa3+\xb9"e\xa2\xbf\xbe\xaadP\xcd\x92\xcc?\x8d\xb0k\xdd\xab\x8dt?>\xca4\xa9\xc4\xf2\x8f\xbf>;\xbbu\xd0\xa0M\xbf\xa1Bj\xbd\xbb\x1c\xb6\xbf\xfeS6\xd25\x16\x9b?\x16\xfb\xef\x0b\xf8\x00\xa3?\x0eS\xda\x084 p\xbf\xe3\x81\xef;M\x13\x94\xbf\xc6\xb5\xf1&D\xd4\x98\xbf\\\xea\x1f\x0c\xd2\xc5\xbd?7GQ4\x7f\xcf\x86?G\x9d\x99\x17R\x9c\x87?\x0c|\x1aZ\xab\x1bl?\xb7\xed7\xe1G\xd1\xc0?Q.\x8e\x92v\xef\x89\xbf\x83\xf0\xdb\x88\x19\xea\xb6\xbf\xe7\xc7\x84a\x922\x81?\xe6\xef`\x07h[\x84\xbf\x92l\xd8\x03m\xffs?%(\x8a\xdb{6\xa8\xbf\xda\x7f"\xe5\xde\xe0\x88\xbf \x94\xb8\xf4<\xe9\x83?PO\\U\xc6\x0c\x11\xbf\x16\xd1?\xd2\x81d\xae\xbfZ!>&\xc8\x92K\xbf\x9b\xf0\xd9\xef\x0f)\xb3?\x89\xd42*\x04\xf4\x93\xbf\xbf\xd30Jj\xa3\xa3\xbfx\x0b\x1aY\x97\x9c\x0f\xbf*<p\xa7\x12IR\xbfUB<r`\xb6V?\xf07\xbd\xff_\xdb\xc1?`C\xf9\xd5\x0b@I\xbf\x9d\'\xb4\x1b\xb1\x98\xb1?\xa5\xc5\x8b\xb5l\x90=?\xbauJ\x96\xfcu\xc8?\xe4\xec\x06\xc55\x95_\xbf\xd7R\xf9\x8b\x0c\xb7\xb2?Z\x02\xdfO\xc4\xe1m\xbfI\x80 \xb7\xa7\x97\xe4\xbf\xc3\x84m\xea\x81\xbe_\xbf\xd1\xac\r-\xab\xcd\xef\xbfE2\xc5j?\xa9\\\xbf\x1e\xbd\xdc\xc5/{\xc6?z\x1c]\x07\x87tC\xbf:\xd0\xd2\x91y\xab\xc5\xbf\x0c\x94\xe8\xfc\xe6OZ?\xda\x12\xe3\xcf\xb3\xf1\xc1\xbf\xb6V.\x16\xe8\x05\x84\xbf\xd1\xf6\xb9\xe0\n`\x9e\xbf\xb5"\x06\x9ea6\x0f?5,2O\x10\x06\xc6\xbf\xaeh\x81x\x93\xf7E\xbfH\x08"t\x08\xcc\xa0?Su\t\xdb\x8c\n.?\x80. \xb8I@\xd5\xbf\xe4\xd9\xb0\x1f\x7f~K\xbf\xe5\xb1Q\xcf\xb2\xcd\xa5?_\x89\x80\xad\xf7L6?\xa7\x95\xaf\xc9\x9d\x14\xb7\xbf\xcd\x93\xe5y\xca}Q?\xee\xdb\xa4:s\xe7\xce?JI\xbd\x9e\x9f\x14\xf0>\xc5\xab\x01\xf8\xfe;\xc1\xbf\x8f\xba\x91\x15\xfdhb\xbf`\xb7\xf2\xd9\xec\xe8\xc8\xbf\xc8\x18\x84m\x10\xc12?\xa4X\xa3\x86w\xaa\xc0?\xe8\xad\xea*}\xbcG\xbf\xa1_,\xec\x07(\x9e\xbfcnd\xef\xfa\x93U\xbfz\xaa\xb6\x08\xd4\x9e\xe4?\x19:~\x97\xb2\xb9T?\xa4\xed)7W>\xdb\xbf_\xc6\xb8\x8d\xa2\xef_?\xcc\x08\x16`\xc2\xdc\xa8\xbf\x06\x8c\x84K\xe2aF?\x0cbCFI\x8a\x8a\xbf4N\x04\xd92\xe7\x15?\x00zD7\xa8\xcd\xb5?\x81\x08Xa,\x81=?\xf8\xc7u\x08\xacm\xde\xbf\xd8\x97\xbf\x8c`\xf67\xbfW\x02gr\x8fs\xd8\xbf<\xba^d\xb5MK?\x9bf;\xf8\xdc\x14`?S+\xf8\x0e\x1d\xa3N?\xc7\xbcl\x8f[<\xd2\xbf\xb3\x88\xcd\x02Y\xcf\x9d?{f\xaa\x18\x82\xb1\x89\xbf\xab\xf1y}\xdbED?\xd6\xe5[\xea\x89\xcd\xac\xbf\x90\xae\x8e\xa4\xbd\xe4R\xbf\xb9\x8a\xc6\xec\xf7\xe2\xbc\xbf\xaf\xa1\x9b\x89\x1a\xbe\x1f?\xa7`\xa7jx<\xcb?\xacz\xd7\x96\xa7\x18-\xbf#\xef\x16\x1d\x87<\xc6\xbfC\xcc\xc8\x00j\xb0X\xbf\xe3\xe7%JyP\xc0\xbf7ie\xc4#\xc9L\xbf\xe7\x0c\'%\x11\xff\xdb?\xfdSb\x87\xbeX4\xbf\'\x8bV\x0e\\\x1b\xcb\xbf\xe2\xcbVU\xf8Y6? j\xa65\x0c)\xe4\xbf\xdc17\xf0>\xa91?_\xa6V\x9bV\xf3\xdc\xbf2\xb1\x18\xba\xd4\xa00?\xcbE\xd2\x9e?_\xca\xbf\xa0\x84\xa1\xa4>@L?\xdf\x1c\x87\xa5\xb4\x13\xab?u\xc5\x1fJ14/\xbf4\xc3\xb0\xbcm-\xd7\xbfc\x14T\xc9\x89\xd4F\xbf\xe8e\x89e\xc3\xa9\xa5?D\x13\x9e\x96\xe3\xbeM\xbfH\xff(\xba\xf0q\xc5\xbf>^Z\xba\x14H#?\xed\xd0\x03\xd3O\xcb\xb5?#\xed\xa7\x9c\x10\x9bI?\x8e\xb75hb\xdb\xc6?\xed\xad\xcf\xa4[\xd2S?\xc8N\x8b\xac\x97\x88\x9d\xbf\x7f\xf6yUU\xcfJ\xbf*3\x9c@y\xf6\xb6?\x1dV/\x91\xff[F?\x9c\xfd`\xbd\xd9R\xc1?\x18y\xe7[\xd8xP?o\x99V\xacn\x06\x95\xbfq=\n\x83;\xbeL?\xbc\xdc\xde\x07\xdc\xbd\xb5?\xc0\'\xf4\xb0\xb7/\x11\xbf\x96[\x916P\x16\xd6\xbfo\xbd\x84\x15\xcb\xf75?\xf0\xc3LK\xfe\xe9\x80\xbf\xbb\xb7\xf1\xde-\x98C?\x0f\xec\xac7x\xc4\xc9\xbf\xd0\xe6xD\x99\xeaD\xbf\xcb\x0c\x164J\xc6\xc5?\x81\xeb@\x04\x01\xceG\xbf\x81\xec\t\x03\xc6\x97\xb9?\xc6=\xbe\xe79\xa1]\xbf\xfa\xe0\x9b\xbbDT\xe5\xbfWdr\x0f\xeaYM\xbf\x88\x82\xaf\x97\xde\xdb\xbe?Z\xa8.\xc1\xc0\xee7?\xcc\x1e\xe5\x11\x150\xc0\xbf\xaa\x9b\xfc\xb5\\OR\xbf\x0b\t\xbfx\xab\xd2w\xbf\xc4J\x1d\xa9\xec\xbaE\xbf\xed\xc8\xb8,\\3\xb6?n\xc5X\xc5\x04\xc0\x81\xbf\xbb\xd7f\xf8\x1f\xf7\x87\xbf@6\xac\xf0\xb7\xf8B?\x1b\xcdX\xe5\x95\xee\xac?\xc4\x9aT\x7fcbY\xbf5\xd3\xd63\x88F\xac?u/j\xd8\x1dA^\xbf\xa7|\x0b\rI(\xd3\xbf\x92\xdbvo\xb6\x94??\xaf\xc7\x03\x95\xd7lu\xbf\x0b\x07{\x93\xafHd\xbf`\xaaB\xeb\xdeI\x81\xbf\xcc\xdd6\x985u\x8e\xbfA(\r\xea>=\x8c?_M\xbd\x81\xd6\x0b\x1a?\xa5\x87\x8e\x1c8\x8d\x91\xbf\xf4m\xc0\x00B,X\xbfPR\xb6\xa4\xd3\xc3\xcb\xbf\x86E\'x\xdeG2?;\xe4\xd0\x97\xde\xb1\xaa\xbf`_\x86\x1f\xa5\xcc\'?\xed@\x8c\xddz\xe2\xc3\xbf|0\x03YM\xdd0?]m\xb9\xd9k\x06}\xbf\xe74v,\x178S\xbf&\xbd\xe6\x03\x95Q\xd4\xbf\t\x01(\xf3\xa6=[\xbf\xb1B\xe4\xeaq\x13\xd3\xbf\xb0\xc1\xa0\x8e\x94%0\xbft\xb2>\xf8\xb6\x1e\xd0\xbfd\x92\xab\x17\n\xedA?L)X\x07e=\xd5?\xfe\x92\xedf"\xf1R\xbf\xce%\x87\x08j5\xe6\xbf\xa8\x8e\xd4\x11\xb1o%\xbf\x9dw;e\x07x\xa8?\xbapH\xe8\xd9\xe73\xbf\xb4\xe2f\xb2\xe1S\xbe\xbf{%\xa1\x13\x02\x08\x95\xbf\xa2Z\x8f\x18\xaf\xb7\x87\xbf\xea\x87\x8a\x12H\xd3\x87\xbf;\xc2\x85\xda\xe4\x10\x9a\xbf\xd4H3\xfb\x83\x9fT\xbf\xb9\x07\xd19@\xc1\xa4\xbf\x1b\xbe\x9e\xad\xc1\xcaR\xbf\xff\x92\x15\x0f\x05&\xd9\xbf=\xe9\xcb\x11\xcd\xffV?\xc7\x04I\x18bV\xdf\xbfUp\x19\xc7\xabI]\xbf\xd4\xca\xb7\xc3\xc2\xce\xe6\xbf|\x9a\x84\xf3\x1a\x93.?\x0b\xc7\xc8\xbd\xc7\xb3\x91\xbfww\x80\xfbE?+?\x08{\xa2\xb5=\xc2\xe9?9\xb7=\x7f\xae\xb2U\xbf\xcb\x92U^-\x8fC\xbfu~\x18\xca\xe3!Z\xbf\x82a\xd2\xec\x9c\x93\xb2\xbf9[\xae\xfe\xeb9I?\x17\xa1^\xc0\xf64\xb5\xbf\xbd\x05\xf8N\xcd|3?\x8f7\xf8\xd4\xcb\x84\xcd?&\xa6r\xd7\x8c\x91F\xbf\x1dA\x11\x17\x97\x9d\xd6?\x92\xce\xeb\xd0\xfe?D\xbf\x19\x0ef\x14.P\xce\xbfUk\x00\x12\xb7\x03f?=\x9b\x0e\x8a=\x1d\xd7?7\xe1\xe7]!OT?c\x8f~\xe3\xf3\xa4q?pQ\xc6\x14.[\x98\xbf\xd9\x0e\xe2B\x8e\xcd\xb0\xbf\x80\\I\xad\xfd\x9ez\xbf\xf45\x8c\xb1N\x18\xc7?\xe5e\xb1gy"[\xbf\x9f\x10\xd5\x02\xc9`\x92\xbf\xf8\xc5\x07Yl4\xa4\xbf\xa1\x1c\xe3.u\xc9\xa9?\x8c\x8e\x08\x1a;\xa7\x8f\xbfVB\xaetL\xee\x9c\xbf=L\x1c\x0b\x14Z\xa2\xbf] \x96v\x0f\xcf\xc5\xbfF!\xc8\xca_\x05\x83?M\xf1E\xe3J\xe7\xb3?k\xc0\xf5N\xde\x04\xa2\xbf\nf>\xba\x8a\x7f\x91\xbf\x1c\xf9,ay\x82\xbe\xbf\x05)\x93\xf9\xf2l\xc6\xbf\x1d\xf0m\xe1\x0b)\xb0\xbf$\x18A\xb5\xc6\x0c\xa9?\x91\x98z-\xbf\xf0\xa9\xbfP\xf8\xb6n\xd6\x7f\xb1\xbf?\xe5\xbb\xd1\xe9\xb6\xa9?\x07\xc3\xb8\xa851\xa2\xbf\x9d\x99\xf3\xe5_\x08q?\x961\x01?\x86y\x9d?N\x0b\xc0\xde\xb2E\x94\xbf\x02\xd9\x8dN\x9cv\x7f\xbft\x06\xebaj\xc4Q\xbf\xdcV\x11\x06&\x0f\xa0\xbf=\x87\xbe.\xfau\x97\xbf\x83\xde\x9c\xa2L\x91\x9b\xbf\xb14r\xb9\x8b>\x95\xbf\xc4t\xfd\xda\xa9\xa3\xba\xbf\xcf\xdaF\x88:N\x9e\xbf\x1fM\x07\x04\x9cB\xc2?{\xd2\x1a\x9e\x01ts?\xf5\n\xf3\xb1\xfd\xb6\xb1?\x99\x1aG1f\xb1\xa8?\xd7\x97\x00\rm\xbf\xa1?m\x04\xa6/\x06x\x86\xbf\xb6\xd8\x9d\xdd_v\x8a?c\x01\xb0\x80\xf7)\x8f\xbf\xd0\x1b\xf6\xd1i\x1d\xb6\xbf\x12\xd3\x7f\xe5}\x97p?\xea\x9dXoM0\x8e?\xaa\xa9\x89\x13\xb0-\xab\xbf7\xc7w\x1e\xee\xf0\xb9\xbfmC\x80\x8e\xfc7\xc9?\xb5\x9f@\xc7\x8eT\x97?\xd8\xd0\xb5wa\ry?@(=\x06\x9bL\xc4?\xe01\xe5\x99\xddl\x1e\xbf\x05\x0b\x0f@`\x8e\xb3?\xe5v\xdc\x1e\x9f\xf2\x84?gj\xff@\xd2\xa0\x9e\xbf\xe4\xafS\xa9#\xd3\xa3?cZ\xb1\x7f\x07/\x9c?m`\x8b\xec\xd8H\x9c\xbf\xc2\xce\\\xb2\x8d1\x86?\xdfS\x13D\xed#\x99?\xfa\xb8\xde*9\x0c\x96\xbf\xc9\x89\x0f\x1a\xf0\x17\x92?\xa8\xfa\xee\x1c\x83\x9es?\xca\xfa=\x1e9\xf5\xa4\xbf\xf9\xd4N\xf4\xeb\xa9\xb4?\x9f\x88<\x11\x80\x0eq?\x98\x85t*&@q?aoC\x9f\xb6g\xa3?!/w\xe4\xe4%\xa4?\xb1\xdc\xbb\xee\xb6\x9d\x9a\xbf?\xb0\\X\xe1f\xc3\xbf@p\xfe\xad\xab\xbb\x95?^R\x1d\xfco6\xa6\xbf{\x15\x0e\xc0B\xd3\xad\xbf\xe8\xcb\xbb\x0e\xac\x01\xc3\xbf\xf5\x1dJ&\xa4\xc5\x95?\xfa\xc9\x13\xdc\x8e\xe4\x87\xbfFb\xea\xb3b{\xa2?\xe4\xfa\xe9\xcb\xa3\xeb\xa3?g\xf20\xd3\x12\x01\xba\xbf\xa9\x06PEq\xfb\xad?N\x13V\xc7\x93\x7f\x90?<\x8c\'\x979\xd7\xc4?4W\x05\xd1\xd5\x1e\xb5?\xb9\xb1\xa2\x1e\xbbx\xc3\xbfg/\xc0\x0e\xf9\xad\xad?^\x9a\xd1\xa9F9\xb4\xbf\x82,?\x93f\x1b\xb2?c\xc1@\xfd&&\xa1\xbfy \x1f^\xc7\x05\x8f\xbf\xeck\xba\x17\xdc\xd6\xbc?\x89\xcb\xdbF\xb6\xe8\xa9?\x94\xea\xa5\x9b+\xe1\xad?\xc2\xf6sK\x1c`\x88\xbf\x9d\x07\xf3z\x82\x1c\x98\xbf\xf4\xe0<iX\x07C?\xd8\xd4*\xc57W\xa4\xbf\xd0\x05{\xe9\xa9\xae\xb2?\x14\x8aP\xea\xbe\xbb\xa8?\xfd\x92]\xe9T\xb1\xa0?\xd1\x9a\x87!\xeb\xfe\xc6\xbfAn\x84Jt\xba\xa6\xbf\xc96\xe4=\xb3\xce\xaf?\xda\xb3>\x9d\tl\x7f\xbf^\x9bD\x12\xa0v\xa8\xbf\x97d\xeaR\xe2\xd7\xb1?h\x88\x95\xa8V\x92\xbd?lO\xe8b\xac\xfb\xa0?C!\x9b\x19\xad#\xb4?-%\xb6q3%\xb0?h\xd1I\x81\x95\xcf\xbc?\xc8\x8f\xef\xcdx\x96\xa1\xbfG\x85Lb\xd2a\xb0?\xb6\xe6k\xe4\xc7\xd7\xb2?H\x07\x80+l\x91\xbf?\xff\xee\xff\xed\xb5,\xae\xbf\xf01L\xc4\xffH\x9b?_\x14\xccZ\xcfV\xa2?W\x95\x81v\xb3\x01\xb2?\x11\xae\xf2\xb9\x9c\x1d\xc6\xbf\xc7r\xb3S\xc2\r\x95\xbf\xf0\xcfc\xc4]X\x97\xbf\x1f#\xda\xbb 5\xad?M\xcd\xaa00a\xa2?<M/hB\xb4\x91\xbfp\xb1ou|\x1b\x90\xbf?J\xd2\x0f\x0b\xf1\x9b?\xb87\xc1\xc2\xcd\xbb\xaf?\xc29\xe9\xc2\x80\x07\xb2\xbf\x055\x1b\x02)\x8d\x87\xbfT\x19\x05\xd1\xb8\x99\x8b?n\xa9z]\x02O\x99\xbf\x8e@\x13\x86R\xa9"\xbf\xecl#\xf7\x1e\x10\xa4\xbf\xe6\xa1\x877\xf7\xdd\x93?{\xd0\x9d\x89\x83\x15\xb4?\x1b\x01\x9bo\x88\xdb\xd9\xbf1\xbf\x01\xf9\xbb\xdb\xa4\xbf*-A75\xc6\xa4\xbf8q\xa5\xc1\xd9uQ?\x15P\xc7a\xd7\x91\x9e?\xae\xaf{9\xbd\xdcZ?\x86\\\'C\x19\xc1t\xbf$rw\x87\x80\xe2\x82?\xda#\xeb\xc00\t\x98\xbfQ\x1d\xef\xa92\xee\xa7\xbf\x0c\xc7\xff\x881^\xb8\xbf\xcf\x9fQ\xdb\x85\xff\x81\xbf\x10\xb8\xf1h\x0c\x18\x92\xbf\xdf\xea\x8c\x86\x0c\xf7\x90?\x00}\xd1yYe\xc5?6\x94\xd4d\xd4\xa8\xa2\xbf. \xe0z\\\xac\xa2\xbfIu\xdd\x19\x84\xfa\x96\xbf\xe4\x1a\x92\x92\xbb\x94\xa1?R\xa8\x90\xd2;[$?>\xc7)3\x82J\xb2\xbfi\x0fr=E\x94\x9b?\x10\xe5\xd3A\xcfYq\xbf\x01\x9arX\x1a\x8f\x99\xbf\xd2\xed\xee\xf3\xe8h\xb7\xbf\xcb\x83\xcb=\x03R\x8f\xbf\x8e\x96\xd6\xe00\xcc\xb1?\xc6\x8a\x12u\xbd\xfb\\?\xf9!\xc7= \x9b\xa3?\x1cP\xaf\xca\xc1\x98\xb1?\xf6Kc\xe3f\x00\xc3\xbfP\x8fm\xc5\xa7Ug\xbf9/\xd01\x19\xca\x8d?a\x02\xb2z\x1d\x9fW\xbf\x81\x9d\xca\xbe\xff\xad`?\xa6\xc8\x8fkm>\x97\xbfFH\xa0\xaa\xee\xf1\x94\xbf\x93!\xf6\xea\xd7\xe6\x96?\x9f\xcbs\x00\xd0Cp?\x1c0\xafV\xdf\xa3\xb0\xbf\x0fr\x0c|~\xe8\xc6\xbf\xf9\x91\x12s\x81;\x92\xbf\xdc;K\xb9\xe4F\xbe?_\xbd\x9dq\x115\x87?Jy\xde\xf4\x8a\xd3\xb4?A\xad\xe7\xcb\xc7v\xa5\xbf&\xddu\xcc\xfby\xb1?\x17zD\xc6;&\x99?\xfc\x91a\x01\xeeM\xb9\xbf\xae\xddF\xb4"I\x8c?\xc0\x19\x88\xc8d\xd7\xad?\'={\rG\xb6\x8b?P\xce\xd1\x9d\xc7\xcc\x82?\x99oN\xbaH\x98\xb6?\x82F\xeeN\x94\xab\xcd?(\xf1\x12\xee\xe9\x0e\xb8\xbfA\xceT\xa4EG\xbb\xbf\xc2\x1c\xb0\xc3H\xb4\xa5\xbfE\xc9\xab\x01c\xe5\xc0\xbf\xfe\xf8\x92\xa35(\x96\xbfM\xefc\xeam\x92\x84\xbfim>\xc1\xb7\xd8s?\xde\x90RT\xc3\xe5\xad\xbf'
p715
tp716
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp717
Rp718
(dp719
g78
(I00
I00
I00
tp720
sg80
S'float64'
p721
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g0
(g10
g5
Ntp722
Rp723
(dp724
g14
S'auto_14123'
p725
sg16
Nsg17
g0
(g18
g5
Ntp726
Rp727
(dp728
g22
(lp729
(lp730
(g25
I306
g26
S'nade_train( * args[1:] )'
p731
tp732
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p733
tp734
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p735
tp736
a(g37
I29
g38
S'self.add_parameter(TensorParameter("V_mu", (n_visible, n_hidden, n_components), theano=True), optimise=True, regularise=False)'
p737
tp738
a(g41
I29
g42
S'parameter.add_to_model(self)'
p739
tp740
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p741
tp742
aasbsg48
g708
sg53
g462
sg85
Nsg73
g718
sbsg589
I01
sg84
Nsbag0
(g554
g5
Ntp743
Rp744
(dp745
g53
g203
sg558
Nsg261
g226
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g205
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp746
Rp747
(dp748
g53
g162
sg558
Nsg261
g185
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g164
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp749
Rp750
(dp751
g53
g9
sg558
Nsg261
g51
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g12
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp752
Rp753
(dp754
g53
g88
sg558
Nsg261
g111
sg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g90
sg589
I01
sg84
Nsbag0
(g554
g5
Ntp755
Rp756
(dp757
g53
g418
sg558
Nsg261
g0
(g49
g5
Ntp758
Rp759
(dp760
g53
g418
sg54
(lp761
g56
(g57
(I0
tp762
g59
tp763
Rp764
(I1
(I21
I2
tp765
g66
I00
S'ke\xfdW\x0e\xbb\x9c\xbf\x9bf\xfdW\x0e\xbb\x9c?\xe1\xfdJ\xc8\x9c\x00y?K\xf6J\xc8\x9c\x00y\xbf\xf4\xb1\xa4*\xa8\x01\x8e?\xcb\xb0\xa4*\xa8\x01\x8e\xbfZy\xfe\xcd;\xcb\xcc\xbf\x90y\xfe\xcd;\xcb\xcc?(\xf4?=\x9d\x90\x9f\xbf\xa9\xf4?=\x9d\x90\x9f?\x953n\xd4\x12s\xc6\xbf\xc93n\xd4\x12s\xc6?\xe4\x96\x8e\xddf\xf2\x97?Q\x94\x8e\xddf\xf2\x97\xbf\xe3\x15`\xec\xaa\x90\x8b\xbf\xc7\x16`\xec\xaa\x90\x8b?\xa1l\xb1\x92\x9c\x15\xb6\xbf\x16m\xb1\x92\x9c\x15\xb6?\xd5\xdb\x88z&%\x92?&\xd9\x88z&%\x92\xbf?\xd0\xadc\\\xa0i?;\xcc\xadc\\\xa0i\xbf\x89\xe9\\\x86{\xab\xb1\xbf\xec\xe9\\\x86{\xab\xb1?W\r{h\xd6\xb8U\xbf\xe96{h\xd6\xb8U?\x1f\x1bv\x1eq\xdc\x98?\xaa\x1av\x1eq\xdc\x98\xbf\xe1m\xc5\t\x19\xdf\x80?<k\xc5\t\x19\xdf\x80\xbf\x0f\x94J\xec\x95\xa4\x8f?0\x90J\xec\x95\xa4\x8f\xbf\x14\xbd6O\xfe\xcfv?\xfa\xb96O\xfe\xcfv\xbfIOL\x95f.\xb1?\xc1NL\x95f.\xb1\xbfaU\xc4k80\xd0?IU\xc4k80\xd0\xbf\\\xc7:F :\xd8?_\xc7:F :\xd8\xbf\x1e&\xab\xcf\xc2)\x92?\xb3%\xab\xcf\xc2)\x92\xbf'
p766
tp767
basg71
I00
sg72
I00
sg73
g0
(g74
g5
Ntp768
Rp769
(dp770
g78
(I00
I00
tp771
sg80
S'float64'
p772
sg82
g66
sg83
I00
sg53
Nsbsg84
Nsbsg559
I01
sg71
I00
sg560
I01
sg561
I00
sg562
g0
(g10
g5
Ntp773
Rp774
(dp775
g14
S'auto_14128'
p776
sg16
Nsg17
g0
(g18
g5
Ntp777
Rp778
(dp779
g22
(lp780
(lp781
(g25
I306
g26
S'nade_train( * args[1:] )'
p782
tp783
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p784
tp785
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p786
tp787
a(g37
I34
g38
S'self.add_parameter(TensorParameter("b_alpha", (n_visible, n_components), theano=True), optimise=True, regularise=False)'
p788
tp789
a(g41
I29
g42
S'parameter.add_to_model(self)'
p790
tp791
a(g41
I167
g45
S'setattr(model, self.name, theano.shared(np.zeros(self.shape, dtype=self.theano_type), self.name))'
p792
tp793
aasbsg48
g759
sg53
g418
sg85
Nsg73
g769
sbsg589
I01
sg84
NsbasS'required'
p794
(lp795
I01
aI01
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
asS'unpack_single'
p796
I01
sS'output_keys'
p797
NsS'fgraph'
p798
g0
(ctheano.gof.fg
FunctionGraph
p799
g5
Ntp800
Rp801
(dp802
g551
Nsg552
(lp803
g0
(g563
g5
Ntp804
Rp805
(dp806
g16
Nsg53
g270
sg798
g801
sS'clients'
p807
(lp808
(g0
(ctheano.gof.graph
Apply
p809
g5
Ntp810
Rp811
(dp812
g552
(lp813
g805
asg798
g801
sS'outputs'
p814
(lp815
g0
(g563
g5
Ntp816
Rp817
(dp818
g16
I0
sg53
S'x.T'
p819
sg798
g801
sg807
(lp820
(g0
(g809
g5
Ntp821
Rp822
(dp823
g552
(lp824
g817
ag0
(g563
g5
Ntp825
Rp826
(dp827
g16
I0
sg53
S'm.T'
p828
sg798
g801
sg807
(lp829
(g0
(g809
g5
Ntp830
Rp831
(dp832
g552
(lp833
g826
asg798
g801
sg814
(lp834
g0
(g563
g5
Ntp835
Rp836
(dp837
g16
I0
sg53
Nsg798
g801
sg807
(lp838
(g0
(g809
g5
Ntp839
Rp840
(dp841
g552
(lp842
g0
(ctheano.tensor.var
TensorConstant
p843
g5
Ntp844
Rp845
(dp846
g16
Nsg53
Nsg798
g801
sg73
g0
(g74
g5
Ntp847
Rp848
(dp849
g78
(I01
tp850
sg80
S'float64'
p851
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp852
(g840
I0
tp853
asg14
S'auto_15625'
p854
sg17
g0
(g18
g5
Ntp855
Rp856
(dp857
g22
(lp858
(lp859
(g25
I306
g26
S'nade_train( * args[1:] )'
p860
tp861
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p862
tp863
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p864
tp865
a(g37
I36
g38
S'self.recompile()'
p866
tp867
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p868
tp869
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/NADE/OrderlessMoGNADE.py'
p870
I237
S'sym_mask_logdensity_estimator'
p871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p872
tp873
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/NADE/OrderlessMoGNADE.py'
p874
I232
S'sym_mask_logdensity_estimator_intermediate'
p875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p876
tp877
aasS'unique_value'
p878
cnumpy.core.multiarray
scalar
p879
(g66
S'\x00\x00\x00\x00\x00\x005@'
p880
tp881
Rp882
sbsS'data'
p883
g56
(g57
(I0
tp884
g59
tp885
Rp886
(I1
(I1
tp887
g66
I00
S'\x00\x00\x00\x00\x00\x005@'
p888
tp889
bsbag0
(g563
g5
Ntp890
Rp891
(dp892
g16
I0
sg53
Nsg798
g801
sg807
(lp893
(g840
I1
tp894
asg14
S'auto_14840'
p895
sg17
g0
(g18
g5
Ntp896
Rp897
(dp898
g22
(lp899
(lp900
(g25
I306
g26
S'nade_train( * args[1:] )'
p901
tp902
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p903
tp904
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p905
tp906
a(g37
I36
g38
S'self.recompile()'
p907
tp908
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p909
tp910
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p911
tp912
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p913
tp914
aasbsg85
g0
(g809
g5
Ntp915
Rp916
(dp917
g552
(lp918
g0
(g563
g5
Ntp919
Rp920
(dp921
g16
I0
sg53
Nsg798
g801
sg807
(lp922
(g916
I0
tp923
asg14
S'auto_16835'
p924
sg17
g0
(g18
g5
Ntp925
Rp926
(dp927
g22
(lp928
sbsg85
g0
(g809
g5
Ntp929
Rp930
(dp931
g552
(lp932
g0
(g563
g5
Ntp933
Rp934
(dp935
g16
I0
sg53
S'max'
p936
sg798
g801
sg807
(lp937
(g0
(g809
g5
Ntp938
Rp939
(dp940
g552
(lp941
g934
asg798
g801
sg814
(lp942
g0
(g563
g5
Ntp943
Rp944
(dp945
g16
I0
sg53
Nsg798
g801
sg807
(lp946
(g0
(g809
g5
Ntp947
Rp948
(dp949
g552
(lp950
g0
(g563
g5
Ntp951
Rp952
(dp953
g16
I0
sg53
Nsg798
g801
sg807
(lp954
(g0
(g809
g5
Ntp955
Rp956
(dp957
g552
(lp958
g952
ag0
(g563
g5
Ntp959
Rp960
(dp961
g16
I0
sg53
Nsg798
g801
sg807
(lp962
(g956
I1
tp963
a(g948
I1
tp964
asg14
S'auto_16713'
p965
sg17
g0
(g18
g5
Ntp966
Rp967
(dp968
g22
(lp969
sbsg85
g0
(g809
g5
Ntp970
Rp971
(dp972
g552
(lp973
g0
(g563
g5
Ntp974
Rp975
(dp976
g16
I0
sg53
Nsg798
g801
sg807
(lp977
(g971
I0
tp978
a(g0
(g809
g5
Ntp979
Rp980
(dp981
g552
(lp982
g0
(g843
g5
Ntp983
Rp984
(dp985
g16
Nsg53
Nsg798
g801
sg73
g0
(g74
g5
Ntp986
Rp987
(dp988
g78
(I01
I01
I01
tp989
sg80
S'float64'
p990
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp991
(g980
I0
tp992
asg14
S'auto_15681'
p993
sg17
g0
(g18
g5
Ntp994
Rp995
(dp996
g22
(lp997
sg878
g879
(g66
S'\xb4\xbed\xc8\xf1g\xed\xbf'
p998
tp999
Rp1000
sbsg883
g56
(g57
(I0
tp1001
g59
tp1002
Rp1003
(I1
(I1
I1
I1
tp1004
g66
I00
S'\xb4\xbed\xc8\xf1g\xed\xbf'
p1005
tp1006
bsbag0
(g843
g5
Ntp1007
Rp1008
(dp1009
g16
Nsg53
Nsg798
g801
sg73
g0
(g74
g5
Ntp1010
Rp1011
(dp1012
g78
(I01
I01
I01
tp1013
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp1014
(g980
I1
tp1015
asg14
S'auto_15673'
p1016
sg17
g0
(g18
g5
Ntp1017
Rp1018
(dp1019
g22
(lp1020
sg878
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xe0\xbf'
p1021
tp1022
Rp1023
sbsg883
g56
(g57
(I0
tp1024
g59
tp1025
Rp1026
(I1
(I1
I1
I1
tp1027
g66
I00
S'\x00\x00\x00\x00\x00\x00\xe0\xbf'
p1028
tp1029
bsbag0
(g563
g5
Ntp1030
Rp1031
(dp1032
g16
I0
sg53
Nsg798
g801
sg807
(lp1033
(g980
I2
tp1034
asg14
S'auto_14819'
p1035
sg17
g0
(g18
g5
Ntp1036
Rp1037
(dp1038
g22
(lp1039
(lp1040
(g25
I306
g26
S'nade_train( * args[1:] )'
p1041
tp1042
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1043
tp1044
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1045
tp1046
a(g37
I36
g38
S'self.recompile()'
p1047
tp1048
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1049
tp1050
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1051
tp1052
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p1053
tp1054
aasbsg85
g0
(g809
g5
Ntp1055
Rp1056
(dp1057
g552
(lp1058
g0
(g563
g5
Ntp1059
Rp1060
(dp1061
g16
I0
sg53
Nsg798
g801
sg807
(lp1062
(g1056
I0
tp1063
asg14
S'auto_15860'
p1064
sg17
g0
(g18
g5
Ntp1065
Rp1066
(dp1067
g22
(lp1068
(lp1069
(g25
I306
g26
S'nade_train( * args[1:] )'
p1070
tp1071
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1072
tp1073
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1074
tp1075
a(g37
I36
g38
S'self.recompile()'
p1076
tp1077
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1078
tp1079
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1080
tp1081
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p1082
tp1083
aasbsg85
g0
(g809
g5
Ntp1084
Rp1085
(dp1086
g552
(lp1087
g0
(g563
g5
Ntp1088
Rp1089
(dp1090
g16
I0
sg53
Nsg798
g801
sg807
(lp1091
(g0
(g809
g5
Ntp1092
Rp1093
(dp1094
g552
(lp1095
g1089
ag0
(g563
g5
Ntp1096
Rp1097
(dp1098
g16
I0
sg53
Nsg798
g801
sg807
(lp1099
(g1093
I1
tp1100
asg14
S'auto_14765'
p1101
sg17
g0
(g18
g5
Ntp1102
Rp1103
(dp1104
g22
(lp1105
(lp1106
(g25
I306
g26
S'nade_train( * args[1:] )'
p1107
tp1108
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1109
tp1110
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1111
tp1112
a(g37
I36
g38
S'self.recompile()'
p1113
tp1114
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1115
tp1116
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1117
tp1118
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p1119
tp1120
aasbsg85
g0
(g809
g5
Ntp1121
Rp1122
(dp1123
g552
(lp1124
g0
(g563
g5
Ntp1125
Rp1126
(dp1127
g16
I0
sg53
Nsg798
g801
sg807
(lp1128
(g1122
I0
tp1129
asg14
S'auto_14741'
p1130
sg17
g0
(g18
g5
Ntp1131
Rp1132
(dp1133
g22
(lp1134
(lp1135
(g25
I306
g26
S'nade_train( * args[1:] )'
p1136
tp1137
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1138
tp1139
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1140
tp1141
a(g37
I36
g38
S'self.recompile()'
p1142
tp1143
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1144
tp1145
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1146
tp1147
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p1148
tp1149
aasbsg85
g0
(g809
g5
Ntp1150
Rp1151
(dp1152
g552
(lp1153
g0
(g10
g5
Ntp1154
Rp1155
(dp1156
g16
Nsg48
g185
sg53
g162
sg798
g801
sg807
(lp1157
(g1151
I0
tp1158
a(g0
(g809
g5
Ntp1159
Rp1160
(dp1161
g552
(lp1162
g1155
asg798
g801
sg814
(lp1163
g0
(g563
g5
Ntp1164
Rp1165
(dp1166
g16
I0
sg53
Nsg798
g801
sg807
(lp1167
(g0
(g809
g5
Ntp1168
Rp1169
(dp1170
g552
(lp1171
g0
(g563
g5
Ntp1172
Rp1173
(dp1174
g16
I0
sg53
Nsg798
g801
sg807
(lp1175
(g0
(g809
g5
Ntp1176
Rp1177
(dp1178
g552
(lp1179
g1173
ag0
(g563
g5
Ntp1180
Rp1181
(dp1182
g16
I0
sg53
Nsg798
g801
sg807
(lp1183
(g1177
I1
tp1184
a(g0
(g809
g5
Ntp1185
Rp1186
(dp1187
g552
(lp1188
g0
(g563
g5
Ntp1189
Rp1190
(dp1191
g16
I0
sg53
Nsg798
g801
sg807
(lp1192
(g1177
I2
tp1193
a(g1186
I0
tp1194
asg14
S'auto_15238'
p1195
sg17
g0
(g18
g5
Ntp1196
Rp1197
(dp1198
g22
(lp1199
sbsg85
g0
(g809
g5
Ntp1200
Rp1201
(dp1202
g552
(lp1203
g0
(g10
g5
Ntp1204
Rp1205
(dp1206
g16
Nsg48
g708
sg53
g462
sg798
g801
sg807
(lp1207
(g0
(g809
g5
Ntp1208
Rp1209
(dp1210
g552
(lp1211
g1205
asg798
g801
sg814
(lp1212
g0
(g563
g5
Ntp1213
Rp1214
(dp1215
g16
I0
sg53
Nsg798
g801
sg807
(lp1216
(g0
(g809
g5
Ntp1217
Rp1218
(dp1219
g552
(lp1220
g1214
ag0
(g563
g5
Ntp1221
Rp1222
(dp1223
g16
I0
sg53
Nsg798
g801
sg807
(lp1224
(g1218
I1
tp1225
asg14
S'auto_14806'
p1226
sg17
g0
(g18
g5
Ntp1227
Rp1228
(dp1229
g22
(lp1230
(lp1231
(g25
I306
g26
S'nade_train( * args[1:] )'
p1232
tp1233
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1234
tp1235
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1236
tp1237
a(g37
I36
g38
S'self.recompile()'
p1238
tp1239
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1240
tp1241
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1242
tp1243
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p1244
tp1245
aasbsg85
g0
(g809
g5
Ntp1246
Rp1247
(dp1248
g552
(lp1249
g0
(g563
g5
Ntp1250
Rp1251
(dp1252
g16
I0
sg53
Nsg798
g801
sg807
(lp1253
(g1247
I0
tp1254
asg14
S'auto_15237'
p1255
sg17
g0
(g18
g5
Ntp1256
Rp1257
(dp1258
g22
(lp1259
sbsg85
g0
(g809
g5
Ntp1260
Rp1261
(dp1262
g552
(lp1263
g1205
asg798
g801
sg814
(lp1264
g1251
asg17
g0
(g18
g5
Ntp1265
Rp1266
(dp1267
S'imported_by'
p1268
(lp1269
S'local_shape_to_shape_i'
p1270
aS'init'
p1271
asbsS'deps'
p1272
(dp1273
sS'op'
p1274
g0
(ctheano.compile.ops
Shape_i
p1275
g5
Ntp1276
Rp1277
(dp1278
S'i'
p1279
I1
sbsbsg73
g0
(g74
g5
Ntp1280
Rp1281
(dp1282
g78
(tsg80
S'int64'
p1283
sg82
g63
(S'i8'
p1284
I0
I1
tp1285
Rp1286
(I3
S'<'
p1287
NNNI-1
I-1
I0
tp1288
bsg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp1289
Rp1290
(dp1291
g16
I0
sg53
Nsg798
g801
sg807
(lp1292
(g1247
I1
tp1293
asg14
S'auto_16733'
p1294
sg17
g0
(g18
g5
Ntp1295
Rp1296
(dp1297
g22
(lp1298
sbsg85
g1186
sg73
g0
(g74
g5
Ntp1299
Rp1300
(dp1301
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp1302
g1222
asg17
g0
(g18
g5
Ntp1303
Rp1304
(dp1305
g1268
(lp1306
g1271
ag1271
asbsg1272
(dp1307
sg1274
g0
(ctheano.tensor.opt
MakeVector
p1308
g5
Ntp1309
Rp1310
(dp1311
g80
S'int64'
p1312
sbsbsg73
g0
(g74
g5
Ntp1313
Rp1314
(dp1315
g78
(I00
tp1316
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp1317
g0
(g563
g5
Ntp1318
Rp1319
(dp1320
g16
I0
sg53
Nsg798
g801
sg807
(lp1321
(g1085
I1
tp1322
asg14
S'auto_14807'
p1323
sg17
g0
(g18
g5
Ntp1324
Rp1325
(dp1326
g22
(lp1327
(lp1328
(g25
I306
g26
S'nade_train( * args[1:] )'
p1329
tp1330
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1331
tp1332
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1333
tp1334
a(g37
I36
g38
S'self.recompile()'
p1335
tp1336
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1337
tp1338
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1339
tp1340
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p1341
tp1342
aasbsg85
g1218
sg73
g0
(g74
g5
Ntp1343
Rp1344
(dp1345
g78
(I00
I00
tp1346
sg80
g721
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp1347
Rp1348
(dp1349
g1268
(lp1350
g1271
ag1271
asbsg1272
(dp1351
sg1274
g0
(ctheano.tensor.basic
Reshape
p1352
g5
Ntp1353
Rp1354
(dp1355
S'ndim'
p1356
I2
sbsbI0
tp1357
asg14
S'auto_14783'
p1358
sg17
g0
(g18
g5
Ntp1359
Rp1360
(dp1361
g22
(lp1362
(lp1363
(g25
I306
g26
S'nade_train( * args[1:] )'
p1364
tp1365
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1366
tp1367
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1368
tp1369
a(g37
I36
g38
S'self.recompile()'
p1370
tp1371
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1372
tp1373
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1374
tp1375
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p1376
tp1377
aasbsg85
g1209
sg73
g0
(g74
g5
Ntp1378
Rp1379
(dp1380
g78
(I00
I00
I00
tp1381
sg80
g721
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp1382
Rp1383
(dp1384
g1268
(lp1385
g1271
ag1271
asbsg1272
(dp1386
sg1274
g0
(ctheano.tensor.elemwise
DimShuffle
p1387
g5
Ntp1388
Rp1389
(dp1390
S'drop'
p1391
(lp1392
sS'shuffle'
p1393
(lp1394
I1
aI0
aI2
asS'augment'
p1395
(lp1396
sS'func_name'
p1397
S'APPLY_SPECIFIC(cpu_dimshuffle)'
p1398
sS'input_broadcastable'
p1399
(I00
I00
I00
tp1400
sS'func_files'
p1401
(lp1402
S'c_code/dimshuffle.c'
p1403
asS'inplace'
p1404
I01
sS'new_order'
p1405
(I1
I0
I2
tp1406
sS'code_sections'
p1407
(dp1408
S'support_code_apply'
p1409
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p1410
ssS'view_map'
p1411
(dp1412
I0
(lp1413
I0
assS'func_codes'
p1414
(lp1415
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p1416
asbsbI0
tp1417
a(g1201
I0
tp1418
a(g0
(g809
g5
Ntp1419
Rp1420
(dp1421
g552
(lp1422
g1205
asg798
g801
sg814
(lp1423
g1181
asg17
g0
(g18
g5
Ntp1424
Rp1425
(dp1426
g1268
(lp1427
g1270
ag1271
asbsg1272
(dp1428
sg1274
g0
(g1275
g5
Ntp1429
Rp1430
(dp1431
g1279
I0
sbsbI0
tp1432
a(g1261
I0
tp1433
asg14
S'auto_14657'
p1434
sg17
g0
(g18
g5
Ntp1435
Rp1436
(dp1437
g22
g729
sbsg85
Nsg73
g718
sbasg798
g801
sg814
(lp1438
g1190
asg17
g0
(g18
g5
Ntp1439
Rp1440
(dp1441
g1268
(lp1442
g1270
ag1271
asbsg1272
(dp1443
sg1274
g0
(g1275
g5
Ntp1444
Rp1445
(dp1446
g1279
I2
sbsbsg73
g1281
sbag1181
asg798
g801
sg814
(lp1447
g1290
asg17
g0
(g18
g5
Ntp1448
Rp1449
(dp1450
S'fake_node'
p1451
g0
(g809
g5
Ntp1452
Rp1453
(dp1454
g552
(lp1455
g0
(ctheano.scalar.basic
ScalarVariable
p1456
g5
Ntp1457
Rp1458
(dp1459
g14
S'auto_17004'
p1460
sg16
Nsg17
g0
(g18
g5
Ntp1461
Rp1462
sg53
Nsg85
Nsg73
g0
(ctheano.scalar.basic
Scalar
p1463
g5
Ntp1464
Rp1465
(dp1466
g80
g1283
sbsbag0
(g1456
g5
Ntp1467
Rp1468
(dp1469
g14
S'auto_17005'
p1470
sg16
Nsg17
g0
(g18
g5
Ntp1471
Rp1472
sg53
Nsg85
Nsg73
g1465
sbasg17
g0
(g18
g5
Ntp1473
Rp1474
sg814
(lp1475
g0
(g1456
g5
Ntp1476
Rp1477
(dp1478
g14
S'auto_17006'
p1479
sg16
I0
sg17
g0
(g18
g5
Ntp1480
Rp1481
sg53
Nsg85
g1453
sg73
g1465
sbasg1274
g0
(ctheano.scalar.basic
Mul
p1482
g5
Ntp1483
Rp1484
(dp1485
g327
g0
(ctheano.scalar.basic
transfer_type
p1486
g5
Ntp1487
Rp1488
(dp1489
S'transfer'
p1490
(I0
tp1491
sbsg53
Nsbsbsg1268
(lp1492
S'inplace_elemwise_optimizer'
p1493
ag1271
asbsg1272
(dp1494
sg1274
g0
(g318
g5
Ntp1495
Rp1496
(dp1497
g53
Nsg322
g1484
sg330
(dp1498
I0
(lp1499
I0
assg332
(S'multiply'
p1500
I2
I1
tp1501
sg333
g0
(g334
g5
Ntp1502
Rp1503
(dp1504
g338
I3713080549408328131
sg339
(dp1505
I0
I0
ssbsg341
I00
sbsbI1
tp1506
asg14
S'auto_15236'
p1507
sg17
g0
(g18
g5
Ntp1508
Rp1509
(dp1510
g22
(lp1511
sbsg85
g1420
sg73
g1281
sbag1190
asg798
g801
sg814
(lp1512
g0
(g563
g5
Ntp1513
Rp1514
(dp1515
g16
I0
sg53
Nsg798
g801
sg807
(lp1516
(g1056
I1
tp1517
asg14
S'auto_15755'
p1518
sg17
g0
(g18
g5
Ntp1519
Rp1520
(dp1521
g22
(lp1522
(lp1523
(g25
I306
g26
S'nade_train( * args[1:] )'
p1524
tp1525
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1526
tp1527
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1528
tp1529
a(g37
I36
g38
S'self.recompile()'
p1530
tp1531
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1532
tp1533
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1534
tp1535
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p1536
tp1537
aag1523
asbsg85
g1177
sg73
g0
(g74
g5
Ntp1538
Rp1539
(dp1540
g78
(I00
tp1541
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp1542
Rp1543
(dp1544
g1268
(lp1545
S'local_join_make_vector'
p1546
ag1271
asbsg1272
(dp1547
sg1274
g0
(g1308
g5
Ntp1548
Rp1549
(dp1550
g80
g1283
sbsbI0
tp1551
a(g0
(g809
g5
Ntp1552
Rp1553
(dp1554
g552
(lp1555
g1173
ag0
(g563
g5
Ntp1556
Rp1557
(dp1558
g16
I0
sg53
Nsg798
g801
sg807
(lp1559
(g1553
I1
tp1560
a(g0
(g809
g5
Ntp1561
Rp1562
(dp1563
g552
(lp1564
g0
(g563
g5
Ntp1565
Rp1566
(dp1567
g16
I0
sg53
Nsg798
g801
sg807
(lp1568
(g1553
I2
tp1569
a(g1562
I0
tp1570
asg14
S'auto_14850'
p1571
sg17
g0
(g18
g5
Ntp1572
Rp1573
(dp1574
g22
(lp1575
sbsg85
g0
(g809
g5
Ntp1576
Rp1577
(dp1578
g552
(lp1579
g0
(g10
g5
Ntp1580
Rp1581
(dp1582
g16
Nsg48
g111
sg53
g88
sg798
g801
sg807
(lp1583
(g0
(g809
g5
Ntp1584
Rp1585
(dp1586
g552
(lp1587
g1581
asg798
g801
sg814
(lp1588
g0
(g563
g5
Ntp1589
Rp1590
(dp1591
g16
I0
sg53
Nsg798
g801
sg807
(lp1592
(g0
(g809
g5
Ntp1593
Rp1594
(dp1595
g552
(lp1596
g1590
ag0
(g563
g5
Ntp1597
Rp1598
(dp1599
g16
I0
sg53
Nsg798
g801
sg807
(lp1600
(g1594
I1
tp1601
asg14
S'auto_14718'
p1602
sg17
g0
(g18
g5
Ntp1603
Rp1604
(dp1605
g22
(lp1606
(lp1607
(g25
I306
g26
S'nade_train( * args[1:] )'
p1608
tp1609
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1610
tp1611
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1612
tp1613
a(g37
I36
g38
S'self.recompile()'
p1614
tp1615
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1616
tp1617
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1618
tp1619
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p1620
tp1621
aasbsg85
g0
(g809
g5
Ntp1622
Rp1623
(dp1624
g552
(lp1625
g0
(g563
g5
Ntp1626
Rp1627
(dp1628
g16
I0
sg53
Nsg798
g801
sg807
(lp1629
(g1623
I0
tp1630
asg14
S'auto_14849'
p1631
sg17
g0
(g18
g5
Ntp1632
Rp1633
(dp1634
g22
(lp1635
sbsg85
g0
(g809
g5
Ntp1636
Rp1637
(dp1638
g552
(lp1639
g1581
asg798
g801
sg814
(lp1640
g1627
asg17
g0
(g18
g5
Ntp1641
Rp1642
(dp1643
g1268
(lp1644
g1270
ag1271
asbsg1272
(dp1645
sg1274
g0
(g1275
g5
Ntp1646
Rp1647
(dp1648
g1279
I1
sbsbsg73
g1281
sbag0
(g563
g5
Ntp1649
Rp1650
(dp1651
g16
I0
sg53
Nsg798
g801
sg807
(lp1652
(g1623
I1
tp1653
asg14
S'auto_16717'
p1654
sg17
g0
(g18
g5
Ntp1655
Rp1656
(dp1657
g22
(lp1658
sbsg85
g1562
sg73
g0
(g74
g5
Ntp1659
Rp1660
(dp1661
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp1662
g1598
asg17
g0
(g18
g5
Ntp1663
Rp1664
(dp1665
g1268
(lp1666
g1271
ag1271
asbsg1272
(dp1667
sg1274
g0
(g1308
g5
Ntp1668
Rp1669
(dp1670
g80
S'int64'
p1671
sbsbsg73
g0
(g74
g5
Ntp1672
Rp1673
(dp1674
g78
(I00
tp1675
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp1676
g0
(g563
g5
Ntp1677
Rp1678
(dp1679
g16
I0
sg53
Nsg798
g801
sg807
(lp1680
(g0
(g809
g5
Ntp1681
Rp1682
(dp1683
g552
(lp1684
g1089
ag1678
asg798
g801
sg814
(lp1685
g0
(g563
g5
Ntp1686
Rp1687
(dp1688
g16
I0
sg53
Nsg798
g801
sg807
(lp1689
(g0
(g809
g5
Ntp1690
Rp1691
(dp1692
g552
(lp1693
g1687
ag0
(g563
g5
Ntp1694
Rp1695
(dp1696
g16
I0
sg53
Nsg798
g801
sg807
(lp1697
(g1691
I1
tp1698
asg14
S'auto_15773'
p1699
sg17
g0
(g18
g5
Ntp1700
Rp1701
(dp1702
g22
(lp1703
(lp1704
(g25
I306
g26
S'nade_train( * args[1:] )'
p1705
tp1706
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1707
tp1708
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1709
tp1710
a(g37
I36
g38
S'self.recompile()'
p1711
tp1712
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1713
tp1714
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1715
tp1716
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p1717
tp1718
aag1704
asbsg85
g1553
sg73
g0
(g74
g5
Ntp1719
Rp1720
(dp1721
g78
(I00
tp1722
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp1723
g0
(g563
g5
Ntp1724
Rp1725
(dp1726
g16
I0
sg53
Nsg798
g801
sg807
(lp1727
(g0
(g809
g5
Ntp1728
Rp1729
(dp1730
g552
(lp1731
g1725
ag0
(g563
g5
Ntp1732
Rp1733
(dp1734
g16
I0
sg53
Nsg798
g801
sg807
(lp1735
(g1729
I1
tp1736
asg14
S'auto_14672'
p1737
sg17
g0
(g18
g5
Ntp1738
Rp1739
(dp1740
g22
(lp1741
(lp1742
(g25
I306
g26
S'nade_train( * args[1:] )'
p1743
tp1744
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1745
tp1746
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1747
tp1748
a(g37
I36
g38
S'self.recompile()'
p1749
tp1750
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1751
tp1752
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1753
tp1754
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p1755
tp1756
aasbsg85
g0
(g809
g5
Ntp1757
Rp1758
(dp1759
g552
(lp1760
g0
(g10
g5
Ntp1761
Rp1762
(dp1763
g16
Nsg48
g759
sg53
g418
sg798
g801
sg807
(lp1764
(g1758
I0
tp1765
asg14
S'auto_14662'
p1766
sg17
g0
(g18
g5
Ntp1767
Rp1768
(dp1769
g22
g780
sbsg85
Nsg73
g769
sbasg798
g801
sg814
(lp1770
g1733
asg17
g0
(g18
g5
Ntp1771
Rp1772
(dp1773
g1268
(lp1774
g1271
ag1271
asbsg1272
(dp1775
sg1274
g0
(g1387
g5
Ntp1776
Rp1777
(dp1778
g1391
(lp1779
sg1393
(lp1780
I0
aI1
asg1395
(lp1781
I0
asg1397
g1398
sg1399
g771
sg1401
(lp1782
g1403
asg1404
I01
sg1405
(g270
I0
I1
tp1783
sg1407
(dp1784
S'support_code_apply'
p1785
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p1786
ssg1411
(dp1787
I0
(lp1788
I0
assg1414
(lp1789
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p1790
asbsbsg73
g0
(g74
g5
Ntp1791
Rp1792
(dp1793
g78
(I01
I00
I00
tp1794
sg80
g772
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp1795
g0
(g563
g5
Ntp1796
Rp1797
(dp1798
g16
I0
sg53
Nsg798
g801
sg807
(lp1799
(g0
(g809
g5
Ntp1800
Rp1801
(dp1802
g552
(lp1803
g1797
asg798
g801
sg814
(lp1804
g0
(g563
g5
Ntp1805
Rp1806
(dp1807
g16
I0
sg53
Nsg798
g801
sg807
(lp1808
(g0
(g809
g5
Ntp1809
Rp1810
(dp1811
g552
(lp1812
g1806
asg798
g801
sg814
(lp1813
g0
(g563
g5
Ntp1814
Rp1815
(dp1816
g16
I0
sg53
Nsg798
g801
sg807
(lp1817
(g980
I7
tp1818
asg14
S'auto_14735'
p1819
sg17
g0
(g18
g5
Ntp1820
Rp1821
(dp1822
g22
(lp1823
(lp1824
(g25
I306
g26
S'nade_train( * args[1:] )'
p1825
tp1826
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1827
tp1828
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1829
tp1830
a(g37
I36
g38
S'self.recompile()'
p1831
tp1832
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1833
tp1834
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1835
tp1836
a(g874
I222
g875
S'Alpha = temp / T.shape_padright(temp.sum(2))  # BxDxC'
p1837
tp1838
aasbsg85
g1810
sg73
g0
(g74
g5
Ntp1839
Rp1840
(dp1841
g78
(I00
I00
I01
tp1842
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp1843
Rp1844
(dp1845
g1268
(lp1846
g1271
ag1271
asbsg1272
(dp1847
sg1274
g0
(g1387
g5
Ntp1848
Rp1849
(dp1850
g1391
(lp1851
sg1393
(lp1852
I0
aI1
asg1395
(lp1853
I2
asg1397
g1398
sg1399
(I00
I00
tp1854
sg1401
(lp1855
g1403
asg1404
I01
sg1405
(I0
I1
g270
tp1856
sg1407
(dp1857
S'support_code_apply'
p1858
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p1859
ssg1411
(dp1860
I0
(lp1861
I0
assg1414
(lp1862
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p1863
asbsbI0
tp1864
asg14
S'auto_14734'
p1865
sg17
g0
(g18
g5
Ntp1866
Rp1867
(dp1868
g22
(lp1869
(lp1870
(g25
I306
g26
S'nade_train( * args[1:] )'
p1871
tp1872
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p1873
tp1874
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p1875
tp1876
a(g37
I36
g38
S'self.recompile()'
p1877
tp1878
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p1879
tp1880
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p1881
tp1882
a(g874
I222
g875
S'Alpha = temp / T.shape_padright(temp.sum(2))  # BxDxC'
p1883
tp1884
aasbsg85
g1801
sg73
g0
(g74
g5
Ntp1885
Rp1886
(dp1887
g78
g1854
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp1888
Rp1889
(dp1890
g1268
(lp1891
g1271
ag1271
asbsg1272
(dp1892
sg1274
g0
(ctheano.tensor.elemwise
Sum
p1893
g5
Ntp1894
Rp1895
(dp1896
g80
g251
sg322
g0
(ctheano.scalar.basic
Add
p1897
g5
Ntp1898
Rp1899
(dp1900
g327
ctheano.scalar.basic
upcast_out
p1901
sg53
S'add'
p1902
sbsS'axis'
p1903
(I2
tp1904
sS'acc_dtype'
p1905
g251
sbsbI0
tp1906
a(g980
I6
tp1907
asg14
S'auto_16729'
p1908
sg17
g0
(g18
g5
Ntp1909
Rp1910
(dp1911
g22
(lp1912
sbsg85
g1729
sg73
g0
(g74
g5
Ntp1913
Rp1914
(dp1915
g78
(I00
I00
I00
tp1916
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp1917
Rp1918
(dp1919
g1451
g0
(g809
g5
Ntp1920
Rp1921
(dp1922
g552
(lp1923
g0
(g1456
g5
Ntp1924
Rp1925
(dp1926
g14
S'auto_17140'
p1927
sg16
Nsg17
g0
(g18
g5
Ntp1928
Rp1929
sg53
Nsg85
Nsg73
g0
(g1463
g5
Ntp1930
Rp1931
(dp1932
g80
g251
sbsbag0
(g1456
g5
Ntp1933
Rp1934
(dp1935
g14
S'auto_17141'
p1936
sg16
Nsg17
g0
(g18
g5
Ntp1937
Rp1938
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp1939
Rp1940
sg814
(lp1941
g0
(g1456
g5
Ntp1942
Rp1943
(dp1944
g14
S'auto_17142'
p1945
sg16
I0
sg17
g0
(g18
g5
Ntp1946
Rp1947
sg53
Nsg85
g1921
sg73
g1931
sbasg1274
g0
(ctheano.scalar.basic
Composite
p1948
g5
Ntp1949
Rp1950
(dp1951
g552
(lp1952
g0
(g1456
g5
Ntp1953
Rp1954
(dp1955
g14
S'auto_16718'
p1956
sg16
Nsg17
g0
(g18
g5
Ntp1957
Rp1958
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp1959
Rp1960
(dp1961
g14
S'auto_16719'
p1962
sg16
Nsg17
g0
(g18
g5
Ntp1963
Rp1964
sg53
Nsg85
Nsg73
g1931
sbasS'nin'
p1965
I2
sg53
NsS'inputs_type'
p1966
(g1931
g1931
tp1967
sg814
(lp1968
g0
(g1456
g5
Ntp1969
Rp1970
(dp1971
g14
S'auto_16721'
p1972
sg16
I0
sg17
g0
(g18
g5
Ntp1973
Rp1974
(dp1975
g22
(lp1976
sbsg53
Nsg85
g0
(g809
g5
Ntp1977
Rp1978
(dp1979
g552
(lp1980
g0
(g1456
g5
Ntp1981
Rp1982
(dp1983
g14
S'auto_16720'
p1984
sg16
I0
sg17
g0
(g18
g5
Ntp1985
Rp1986
(dp1987
g22
(lp1988
sbsg53
Nsg85
g0
(g809
g5
Ntp1989
Rp1990
(dp1991
g552
(lp1992
g1954
ag1960
asg17
g0
(g18
g5
Ntp1993
Rp1994
sg814
(lp1995
g1982
asg1274
g1899
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp1996
Rp1997
sg814
(lp1998
g1970
asg1274
g383
sbsg73
g1931
sbasS'_c_code'
p1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = exp((npy_float64)V%(id)s_tmp1);\n}\n'
p2000
sS'outputs_type'
p2001
(g1931
tp2002
sg327
g0
(g1486
g5
Ntp2003
Rp2004
(dp2005
g1490
(I0
tp2006
sbsS'nodenames'
p2007
(lp2008
S'%(nodename)s_subnode0'
p2009
aS'%(nodename)s_subnode1'
p2010
asS'nout'
p2011
I1
sbsbsg1268
(lp2012
g1493
ag1271
asbsg1272
(dp2013
sg1274
g0
(g318
g5
Ntp2014
Rp2015
(dp2016
g53
Nsg322
g1950
sg330
(dp2017
I0
(lp2018
I0
assg332
Nsg333
g0
(g334
g5
Ntp2019
Rp2020
(dp2021
g338
I3713080549408328131
sg339
(dp2022
I0
I0
ssbsg341
I00
sbsbI0
tp2023
asg14
S'auto_14731'
p2024
sg17
g0
(g18
g5
Ntp2025
Rp2026
(dp2027
g22
(lp2028
(lp2029
(g25
I306
g26
S'nade_train( * args[1:] )'
p2030
tp2031
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2032
tp2033
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2034
tp2035
a(g37
I36
g38
S'self.recompile()'
p2036
tp2037
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2038
tp2039
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2040
tp2041
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p2042
tp2043
aasbsg85
g1691
sg73
g0
(g74
g5
Ntp2044
Rp2045
(dp2046
g78
(I00
I00
I00
tp2047
sg80
S'float64'
p2048
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2049
Rp2050
(dp2051
g1268
(lp2052
g1271
ag1271
asbsg1272
(dp2053
sg1274
g0
(g1352
g5
Ntp2054
Rp2055
(dp2056
g1356
I3
sbsbI0
tp2057
asg14
S'auto_15859'
p2058
sg17
g0
(g18
g5
Ntp2059
Rp2060
(dp2061
g22
(lp2062
(lp2063
(g25
I306
g26
S'nade_train( * args[1:] )'
p2064
tp2065
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2066
tp2067
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2068
tp2069
a(g37
I36
g38
S'self.recompile()'
p2070
tp2071
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2072
tp2073
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2074
tp2075
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p2076
tp2077
aasbsg85
g1682
sg73
g0
(g74
g5
Ntp2078
Rp2079
(dp2080
g78
(I00
I00
tp2081
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2082
Rp2083
(dp2084
g1268
(lp2085
S'local_dot_to_dot22'
p2086
ag1271
asbsg1272
(dp2087
sg1274
g0
(ctheano.tensor.blas
Dot22
p2088
g5
Ntp2089
Rp2090
sbI1
tp2091
asg14
S'auto_14719'
p2092
sg17
g0
(g18
g5
Ntp2093
Rp2094
(dp2095
g22
(lp2096
(lp2097
(g25
I306
g26
S'nade_train( * args[1:] )'
p2098
tp2099
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2100
tp2101
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2102
tp2103
a(g37
I36
g38
S'self.recompile()'
p2104
tp2105
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2106
tp2107
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2108
tp2109
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p2110
tp2111
aasbsg85
g1594
sg73
g0
(g74
g5
Ntp2112
Rp2113
(dp2114
g78
(I00
I00
tp2115
sg80
g124
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2116
Rp2117
(dp2118
g1268
(lp2119
g1271
ag1271
asbsg1272
(dp2120
sg1274
g0
(g1352
g5
Ntp2121
Rp2122
(dp2123
g1356
I2
sbsbI0
tp2124
asg14
S'auto_14673'
p2125
sg17
g0
(g18
g5
Ntp2126
Rp2127
(dp2128
g22
(lp2129
(lp2130
(g25
I306
g26
S'nade_train( * args[1:] )'
p2131
tp2132
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2133
tp2134
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2135
tp2136
a(g37
I36
g38
S'self.recompile()'
p2137
tp2138
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2139
tp2140
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2141
tp2142
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p2143
tp2144
aasbsg85
g1585
sg73
g0
(g74
g5
Ntp2145
Rp2146
(dp2147
g78
(I00
I00
I00
tp2148
sg80
g124
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2149
Rp2150
(dp2151
g1268
(lp2152
g1271
ag1271
asbsg1272
(dp2153
sg1274
g0
(g1387
g5
Ntp2154
Rp2155
(dp2156
g1391
(lp2157
sg1393
(lp2158
I1
aI0
aI2
asg1395
(lp2159
sg1397
g1398
sg1399
(I00
I00
I00
tp2160
sg1401
(lp2161
g1403
asg1404
I01
sg1405
(I1
I0
I2
tp2162
sg1407
(dp2163
S'support_code_apply'
p2164
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2165
ssg1411
(dp2166
I0
(lp2167
I0
assg1414
(lp2168
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2169
asbsbI0
tp2170
a(g1577
I0
tp2171
a(g0
(g809
g5
Ntp2172
Rp2173
(dp2174
g552
(lp2175
g1581
asg798
g801
sg814
(lp2176
g1557
asg17
g0
(g18
g5
Ntp2177
Rp2178
(dp2179
g1268
(lp2180
g1270
ag1271
asbsg1272
(dp2181
sg1274
g0
(g1275
g5
Ntp2182
Rp2183
(dp2184
g1279
I0
sbsbI0
tp2185
a(g1637
I0
tp2186
asg14
S'auto_14661'
p2187
sg17
g0
(g18
g5
Ntp2188
Rp2189
(dp2190
g22
g96
sbsg85
Nsg73
g121
sbasg798
g801
sg814
(lp2191
g1566
asg17
g0
(g18
g5
Ntp2192
Rp2193
(dp2194
g1268
(lp2195
g1270
ag1271
asbsg1272
(dp2196
sg1274
g0
(g1275
g5
Ntp2197
Rp2198
(dp2199
g1279
I2
sbsbsg73
g1281
sbag1557
asg798
g801
sg814
(lp2200
g1650
asg17
g0
(g18
g5
Ntp2201
Rp2202
(dp2203
g1451
g0
(g809
g5
Ntp2204
Rp2205
(dp2206
g552
(lp2207
g0
(g1456
g5
Ntp2208
Rp2209
(dp2210
g14
S'auto_17016'
p2211
sg16
Nsg17
g0
(g18
g5
Ntp2212
Rp2213
sg53
Nsg85
Nsg73
g1465
sbag0
(g1456
g5
Ntp2214
Rp2215
(dp2216
g14
S'auto_17017'
p2217
sg16
Nsg17
g0
(g18
g5
Ntp2218
Rp2219
sg53
Nsg85
Nsg73
g1465
sbasg17
g0
(g18
g5
Ntp2220
Rp2221
sg814
(lp2222
g0
(g1456
g5
Ntp2223
Rp2224
(dp2225
g14
S'auto_17018'
p2226
sg16
I0
sg17
g0
(g18
g5
Ntp2227
Rp2228
sg53
Nsg85
g2205
sg73
g1465
sbasg1274
g0
(g1482
g5
Ntp2229
Rp2230
(dp2231
g327
g0
(g1486
g5
Ntp2232
Rp2233
(dp2234
g1490
(I0
tp2235
sbsg53
Nsbsbsg1268
(lp2236
g1493
ag1271
asbsg1272
(dp2237
sg1274
g0
(g318
g5
Ntp2238
Rp2239
(dp2240
g53
Nsg322
g2230
sg330
(dp2241
I0
(lp2242
I0
assg332
g1501
sg333
g0
(g334
g5
Ntp2243
Rp2244
(dp2245
g338
I3713080549408328131
sg339
(dp2246
I0
I0
ssbsg341
I00
sbsbI1
tp2247
asg14
S'auto_14848'
p2248
sg17
g0
(g18
g5
Ntp2249
Rp2250
(dp2251
g22
(lp2252
sbsg85
g2173
sg73
g1281
sbag1566
asg798
g801
sg814
(lp2253
g1695
asg17
g0
(g18
g5
Ntp2254
Rp2255
(dp2256
g1268
(lp2257
g1546
ag1271
asbsg1272
(dp2258
sg1274
g1549
sbI0
tp2259
a(g1169
I0
tp2260
asg14
S'auto_14879'
p2261
sg17
g0
(g18
g5
Ntp2262
Rp2263
(dp2264
g22
(lp2265
sbsg85
g0
(g809
g5
Ntp2266
Rp2267
(dp2268
g552
(lp2269
g805
asg798
g801
sg814
(lp2270
g1173
asg17
g0
(g18
g5
Ntp2271
Rp2272
(dp2273
g1268
(lp2274
g1270
ag1271
asbsg1272
(dp2275
sg1274
g0
(g1275
g5
Ntp2276
Rp2277
(dp2278
g1279
I1
sbsbsg73
g1281
sbag0
(g563
g5
Ntp2279
Rp2280
(dp2281
g16
I0
sg53
Nsg798
g801
sg807
(lp2282
(g1169
I1
tp2283
a(g0
(g809
g5
Ntp2284
Rp2285
(dp2286
g552
(lp2287
g1165
ag2280
asg798
g801
sg814
(lp2288
g0
(g563
g5
Ntp2289
Rp2290
(dp2291
g16
I0
sg53
Nsg798
g801
sg807
(lp2292
(g0
(g809
g5
Ntp2293
Rp2294
(dp2295
g552
(lp2296
g0
(g563
g5
Ntp2297
Rp2298
(dp2299
g16
I0
sg53
Nsg798
g801
sg807
(lp2300
(g2294
I0
tp2301
asg14
S'auto_15081'
p2302
sg17
g0
(g18
g5
Ntp2303
Rp2304
(dp2305
g22
(lp2306
sbsg85
g0
(g809
g5
Ntp2307
Rp2308
(dp2309
g552
(lp2310
g1155
asg798
g801
sg814
(lp2311
g2298
asg17
g0
(g18
g5
Ntp2312
Rp2313
(dp2314
g1268
(lp2315
g1270
ag1271
asbsg1272
(dp2316
sg1274
g0
(g1275
g5
Ntp2317
Rp2318
(dp2319
g1279
I1
sbsbsg73
g1281
sbag2290
asg798
g801
sg814
(lp2320
g0
(g563
g5
Ntp2321
Rp2322
(dp2323
g16
I0
sg53
Nsg798
g801
sg807
(lp2324
(g1122
I1
tp2325
asg14
S'auto_14764'
p2326
sg17
g0
(g18
g5
Ntp2327
Rp2328
(dp2329
g22
(lp2330
(lp2331
(g25
I306
g26
S'nade_train( * args[1:] )'
p2332
tp2333
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2334
tp2335
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2336
tp2337
a(g37
I36
g38
S'self.recompile()'
p2338
tp2339
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2340
tp2341
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2342
tp2343
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p2344
tp2345
aasbsg85
g2294
sg73
g0
(g74
g5
Ntp2346
Rp2347
(dp2348
g78
(I00
tp2349
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2350
Rp2351
(dp2352
g1268
(lp2353
g1271
ag1271
asbsg1272
(dp2354
sg1274
g0
(g1308
g5
Ntp2355
Rp2356
(dp2357
g80
S'int64'
p2358
sbsbI1
tp2359
asg14
S'auto_16656'
p2360
sg17
g0
(g18
g5
Ntp2361
Rp2362
(dp2363
g22
(lp2364
sbsg85
g2285
sg73
g0
(g74
g5
Ntp2365
Rp2366
(dp2367
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2368
Rp2369
(dp2370
g1451
g0
(g809
g5
Ntp2371
Rp2372
(dp2373
g552
(lp2374
g0
(g1456
g5
Ntp2375
Rp2376
(dp2377
g14
S'auto_17028'
p2378
sg16
Nsg17
g0
(g18
g5
Ntp2379
Rp2380
sg53
Nsg85
Nsg73
g1465
sbag0
(g1456
g5
Ntp2381
Rp2382
(dp2383
g14
S'auto_17029'
p2384
sg16
Nsg17
g0
(g18
g5
Ntp2385
Rp2386
sg53
Nsg85
Nsg73
g1465
sbasg17
g0
(g18
g5
Ntp2387
Rp2388
sg814
(lp2389
g0
(g1456
g5
Ntp2390
Rp2391
(dp2392
g14
S'auto_17030'
p2393
sg16
I0
sg17
g0
(g18
g5
Ntp2394
Rp2395
sg53
Nsg85
g2372
sg73
g1465
sbasg1274
g0
(g1482
g5
Ntp2396
Rp2397
(dp2398
g327
g0
(g1486
g5
Ntp2399
Rp2400
(dp2401
g1490
(I0
tp2402
sbsg53
Nsbsbsg1268
(lp2403
g1493
ag1271
asbsg1272
(dp2404
sg1274
g0
(g318
g5
Ntp2405
Rp2406
(dp2407
g53
Nsg322
g2397
sg330
(dp2408
I0
(lp2409
I0
assg332
g1501
sg333
g0
(g334
g5
Ntp2410
Rp2411
(dp2412
g338
I3713080549408328131
sg339
(dp2413
I0
I0
ssbsg341
I00
sbsbI1
tp2414
asg14
S'auto_15080'
p2415
sg17
g0
(g18
g5
Ntp2416
Rp2417
(dp2418
g22
(lp2419
sbsg85
g0
(g809
g5
Ntp2420
Rp2421
(dp2422
g552
(lp2423
g1155
asg798
g801
sg814
(lp2424
g2280
asg17
g0
(g18
g5
Ntp2425
Rp2426
(dp2427
g1268
(lp2428
g1270
ag1271
asbsg1272
(dp2429
sg1274
g0
(g1275
g5
Ntp2430
Rp2431
(dp2432
g1279
I0
sbsbsg73
g1281
sbag1165
asg798
g801
sg814
(lp2433
g0
(g563
g5
Ntp2434
Rp2435
(dp2436
g16
I0
sg53
Nsg798
g801
sg807
(lp2437
(g0
(g809
g5
Ntp2438
Rp2439
(dp2440
g552
(lp2441
g0
(g563
g5
Ntp2442
Rp2443
(dp2444
g16
I0
sg53
Nsg798
g801
sg807
(lp2445
(g2439
I0
tp2446
asg14
S'auto_15858'
p2447
sg17
g0
(g18
g5
Ntp2448
Rp2449
(dp2450
g22
(lp2451
(lp2452
(g25
I306
g26
S'nade_train( * args[1:] )'
p2453
tp2454
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2455
tp2456
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2457
tp2458
a(g37
I36
g38
S'self.recompile()'
p2459
tp2460
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2461
tp2462
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2463
tp2464
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p2465
tp2466
aasbsg85
g1093
sg73
g0
(g74
g5
Ntp2467
Rp2468
(dp2469
g78
(I00
I00
tp2470
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag2435
asg798
g801
sg814
(lp2471
g0
(g563
g5
Ntp2472
Rp2473
(dp2474
g16
I0
sg53
Nsg798
g801
sg807
(lp2475
(g0
(g809
g5
Ntp2476
Rp2477
(dp2478
g552
(lp2479
g2473
ag0
(g563
g5
Ntp2480
Rp2481
(dp2482
g16
I0
sg53
Nsg798
g801
sg807
(lp2483
(g2477
I1
tp2484
asg14
S'auto_14740'
p2485
sg17
g0
(g18
g5
Ntp2486
Rp2487
(dp2488
g22
(lp2489
(lp2490
(g25
I306
g26
S'nade_train( * args[1:] )'
p2491
tp2492
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2493
tp2494
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2495
tp2496
a(g37
I36
g38
S'self.recompile()'
p2497
tp2498
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2499
tp2500
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2501
tp2502
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p2503
tp2504
aasbsg85
g0
(g809
g5
Ntp2505
Rp2506
(dp2507
g552
(lp2508
g0
(g10
g5
Ntp2509
Rp2510
(dp2511
g16
Nsg48
g51
sg53
g9
sg798
g801
sg807
(lp2512
(g2506
I0
tp2513
asg14
S'auto_14660'
p2514
sg17
g0
(g18
g5
Ntp2515
Rp2516
(dp2517
g22
g23
sbsg85
Nsg73
g76
sbasg798
g801
sg814
(lp2518
g2481
asg17
g0
(g18
g5
Ntp2519
Rp2520
(dp2521
g1268
(lp2522
g1271
ag1271
asbsg1272
(dp2523
sg1274
g0
(g1387
g5
Ntp2524
Rp2525
(dp2526
g1391
(lp2527
sg1393
(lp2528
I0
aI1
asg1395
(lp2529
I0
asg1397
g1398
sg1399
g79
sg1401
(lp2530
g1403
asg1404
I01
sg1405
(g270
I0
I1
tp2531
sg1407
(dp2532
S'support_code_apply'
p2533
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2534
ssg1411
(dp2535
I0
(lp2536
I0
assg1414
(lp2537
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2538
asbsbsg73
g0
(g74
g5
Ntp2539
Rp2540
(dp2541
g78
(I01
I00
I00
tp2542
sg80
g81
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp2543
g975
asg17
g0
(g18
g5
Ntp2544
Rp2545
(dp2546
g1451
g0
(g809
g5
Ntp2547
Rp2548
(dp2549
g552
(lp2550
g0
(g1456
g5
Ntp2551
Rp2552
(dp2553
g14
S'auto_17152'
p2554
sg16
Nsg17
g0
(g18
g5
Ntp2555
Rp2556
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp2557
Rp2558
(dp2559
g14
S'auto_17153'
p2560
sg16
Nsg17
g0
(g18
g5
Ntp2561
Rp2562
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp2563
Rp2564
sg814
(lp2565
g0
(g1456
g5
Ntp2566
Rp2567
(dp2568
g14
S'auto_17154'
p2569
sg16
I0
sg17
g0
(g18
g5
Ntp2570
Rp2571
sg53
Nsg85
g2548
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp2572
Rp2573
(dp2574
g552
(lp2575
g0
(g1456
g5
Ntp2576
Rp2577
(dp2578
g14
S'auto_16699'
p2579
sg16
Nsg17
g0
(g18
g5
Ntp2580
Rp2581
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp2582
Rp2583
(dp2584
g14
S'auto_16700'
p2585
sg16
Nsg17
g0
(g18
g5
Ntp2586
Rp2587
sg53
Nsg85
Nsg73
g1931
sbasg1965
I2
sg53
Nsg1966
(g1931
g1931
tp2588
sg814
(lp2589
g0
(g1456
g5
Ntp2590
Rp2591
(dp2592
g14
S'auto_16702'
p2593
sg16
I0
sg17
g0
(g18
g5
Ntp2594
Rp2595
(dp2596
g22
(lp2597
sbsg53
Nsg85
g0
(g809
g5
Ntp2598
Rp2599
(dp2600
g552
(lp2601
g0
(g1456
g5
Ntp2602
Rp2603
(dp2604
g14
S'auto_16701'
p2605
sg16
I0
sg17
g0
(g18
g5
Ntp2606
Rp2607
(dp2608
g22
(lp2609
sbsg53
Nsg85
g0
(g809
g5
Ntp2610
Rp2611
(dp2612
g552
(lp2613
g2577
ag2583
asg17
g0
(g18
g5
Ntp2614
Rp2615
sg814
(lp2616
g2603
asg1274
g1899
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp2617
Rp2618
sg814
(lp2619
g2591
asg1274
g383
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = exp((npy_float64)V%(id)s_tmp1);\n}\n'
p2620
sg2001
(g1931
tp2621
sg327
g0
(g1486
g5
Ntp2622
Rp2623
(dp2624
g1490
(I0
tp2625
sbsg2007
(lp2626
S'%(nodename)s_subnode0'
p2627
aS'%(nodename)s_subnode1'
p2628
asg2011
I1
sbsbsg1268
(lp2629
g1493
ag1271
asbsg1272
(dp2630
sg1274
g0
(g318
g5
Ntp2631
Rp2632
(dp2633
g53
Nsg322
g2573
sg330
(dp2634
I0
(lp2635
I0
assg332
Nsg333
g0
(g334
g5
Ntp2636
Rp2637
(dp2638
g338
I3713080549408328131
sg339
(dp2639
I0
I0
ssbsg341
I00
sbsbI0
tp2640
asg14
S'auto_14777'
p2641
sg17
g0
(g18
g5
Ntp2642
Rp2643
(dp2644
g22
(lp2645
(lp2646
(g25
I306
g26
S'nade_train( * args[1:] )'
p2647
tp2648
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2649
tp2650
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2651
tp2652
a(g37
I36
g38
S'self.recompile()'
p2653
tp2654
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2655
tp2656
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2657
tp2658
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p2659
tp2660
aasbsg85
g2439
sg73
g0
(g74
g5
Ntp2661
Rp2662
(dp2663
g78
(I00
I00
I00
tp2664
sg80
S'float64'
p2665
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2666
Rp2667
(dp2668
g1268
(lp2669
g1271
ag1271
asbsg1272
(dp2670
sg1274
g0
(g1352
g5
Ntp2671
Rp2672
(dp2673
g1356
I3
sbsbI1
tp2674
asg14
S'auto_15791'
p2675
sg17
g0
(g18
g5
Ntp2676
Rp2677
(dp2678
g22
(lp2679
(lp2680
(g25
I306
g26
S'nade_train( * args[1:] )'
p2681
tp2682
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2683
tp2684
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2685
tp2686
a(g37
I36
g38
S'self.recompile()'
p2687
tp2688
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2689
tp2690
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2691
tp2692
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p2693
tp2694
aag2680
asbsg85
g1169
sg73
g0
(g74
g5
Ntp2695
Rp2696
(dp2697
g78
(I00
tp2698
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp2699
Rp2700
(dp2701
g1268
(lp2702
g1546
ag1271
asbsg1272
(dp2703
sg1274
g1549
sbI2
tp2704
a(g2285
I0
tp2705
asg14
S'auto_15082'
p2706
sg17
g0
(g18
g5
Ntp2707
Rp2708
(dp2709
g22
(lp2710
sbsg85
g1160
sg73
g1281
sbasg17
g0
(g18
g5
Ntp2711
Rp2712
(dp2713
g1268
(lp2714
g1270
ag1271
asbsg1272
(dp2715
sg1274
g0
(g1275
g5
Ntp2716
Rp2717
(dp2718
g1279
I2
sbsbI0
tp2719
a(g2421
I0
tp2720
a(g2308
I0
tp2721
asg14
S'auto_14659'
p2722
sg17
g0
(g18
g5
Ntp2723
Rp2724
(dp2725
g22
g170
sbsg85
Nsg73
g195
sbasg798
g801
sg814
(lp2726
g1126
asg17
g0
(g18
g5
Ntp2727
Rp2728
(dp2729
g1268
(lp2730
g1271
ag1271
asbsg1272
(dp2731
sg1274
g0
(g1387
g5
Ntp2732
Rp2733
(dp2734
g1391
(lp2735
sg1393
(lp2736
I1
aI0
aI2
asg1395
(lp2737
sg1397
g1398
sg1399
(I00
I00
I00
tp2738
sg1401
(lp2739
g1403
asg1404
I01
sg1405
(I1
I0
I2
tp2740
sg1407
(dp2741
S'support_code_apply'
p2742
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2743
ssg1411
(dp2744
I0
(lp2745
I0
assg1414
(lp2746
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2747
asbsbsg73
g0
(g74
g5
Ntp2748
Rp2749
(dp2750
g78
(I00
I00
I00
tp2751
sg80
g198
sg82
g66
sg83
I00
sg53
Nsbsbag2322
asg798
g801
sg814
(lp2752
g1097
asg17
g0
(g18
g5
Ntp2753
Rp2754
(dp2755
g1268
(lp2756
g1271
ag1271
asbsg1272
(dp2757
sg1274
g0
(g1352
g5
Ntp2758
Rp2759
(dp2760
g1356
I2
sbsbsg73
g0
(g74
g5
Ntp2761
Rp2762
(dp2763
g78
(I00
I00
tp2764
sg80
g198
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp2765
g2443
asg17
g0
(g18
g5
Ntp2766
Rp2767
(dp2768
g1268
(lp2769
g2086
ag1271
asbsg1272
(dp2770
sg1274
g2090
sbI0
tp2771
a(g1682
I0
tp2772
a(g1085
I0
tp2773
asg14
S'auto_16698'
p2774
sg17
g0
(g18
g5
Ntp2775
Rp2776
(dp2777
g22
(lp2778
sbsg85
g0
(g809
g5
Ntp2779
Rp2780
(dp2781
g552
(lp2782
g0
(g563
g5
Ntp2783
Rp2784
(dp2785
g16
I0
sg53
Nsg798
g801
sg807
(lp2786
(g2780
I0
tp2787
asg14
S'auto_15857'
p2788
sg17
g0
(g18
g5
Ntp2789
Rp2790
(dp2791
g22
(lp2792
(lp2793
(g25
I306
g26
S'nade_train( * args[1:] )'
p2794
tp2795
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2796
tp2797
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2798
tp2799
a(g37
I36
g38
S'self.recompile()'
p2800
tp2801
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2802
tp2803
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2804
tp2805
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p2806
tp2807
aasbsg85
g0
(g809
g5
Ntp2808
Rp2809
(dp2810
g552
(lp2811
g0
(g563
g5
Ntp2812
Rp2813
(dp2814
g16
I0
sg53
Nsg798
g801
sg807
(lp2815
(g2809
I0
tp2816
asg14
S'auto_16681'
p2817
sg17
g0
(g18
g5
Ntp2818
Rp2819
(dp2820
g22
(lp2821
sbsg85
g0
(g809
g5
Ntp2822
Rp2823
(dp2824
g552
(lp2825
g0
(g563
g5
Ntp2826
Rp2827
(dp2828
g16
I0
sg53
Nsg798
g801
sg807
(lp2829
(g2823
I0
tp2830
asg14
S'auto_14686'
p2831
sg17
g0
(g18
g5
Ntp2832
Rp2833
(dp2834
g22
(lp2835
(lp2836
(g25
I306
g26
S'nade_train( * args[1:] )'
p2837
tp2838
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2839
tp2840
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2841
tp2842
a(g37
I36
g38
S'self.recompile()'
p2843
tp2844
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2845
tp2846
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2847
tp2848
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p2849
tp2850
aasbsg85
g0
(g809
g5
Ntp2851
Rp2852
(dp2853
g552
(lp2854
g0
(g10
g5
Ntp2855
Rp2856
(dp2857
g16
Nsg48
g148
sg53
g125
sg798
g801
sg807
(lp2858
(g2852
I0
tp2859
asg14
S'auto_14654'
p2860
sg17
g0
(g18
g5
Ntp2861
Rp2862
(dp2863
g22
g133
sbsg85
Nsg73
g158
sbasg798
g801
sg814
(lp2864
g2827
asg17
g0
(g18
g5
Ntp2865
Rp2866
(dp2867
g1268
(lp2868
g1271
ag1271
asbsg1272
(dp2869
sg1274
g0
(g1387
g5
Ntp2870
Rp2871
(dp2872
g1391
(lp2873
sg1393
(lp2874
I0
asg1395
(lp2875
I0
asg1397
g1398
sg1399
g160
sg1401
(lp2876
g1403
asg1404
I01
sg1405
(g270
I0
tp2877
sg1407
(dp2878
S'support_code_apply'
p2879
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2880
ssg1411
(dp2881
I0
(lp2882
I0
assg1414
(lp2883
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p2884
asbsbsg73
g0
(g74
g5
Ntp2885
Rp2886
(dp2887
g78
(I01
I00
tp2888
sg80
g161
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp2889
Rp2890
(dp2891
g16
I0
sg53
Nsg798
g801
sg807
(lp2892
(g2823
I1
tp2893
asg14
S'auto_16652'
p2894
sg17
g0
(g18
g5
Ntp2895
Rp2896
(dp2897
g22
(lp2898
sbsg85
g0
(g809
g5
Ntp2899
Rp2900
(dp2901
g552
(lp2902
g0
(g563
g5
Ntp2903
Rp2904
(dp2905
g16
I0
sg53
Nsg798
g801
sg807
(lp2906
(g2900
I0
tp2907
asg14
S'auto_15856'
p2908
sg17
g0
(g18
g5
Ntp2909
Rp2910
(dp2911
g22
(lp2912
(lp2913
(g25
I306
g26
S'nade_train( * args[1:] )'
p2914
tp2915
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2916
tp2917
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2918
tp2919
a(g37
I36
g38
S'self.recompile()'
p2920
tp2921
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2922
tp2923
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2924
tp2925
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p2926
tp2927
aasbsg85
g0
(g809
g5
Ntp2928
Rp2929
(dp2930
g552
(lp2931
g0
(g563
g5
Ntp2932
Rp2933
(dp2934
g16
I0
sg53
Nsg798
g801
sg807
(lp2935
(g2929
I0
tp2936
asg14
S'auto_14689'
p2937
sg17
g0
(g18
g5
Ntp2938
Rp2939
(dp2940
g22
(lp2941
(lp2942
(g25
I306
g26
S'nade_train( * args[1:] )'
p2943
tp2944
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p2945
tp2946
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p2947
tp2948
a(g37
I36
g38
S'self.recompile()'
p2949
tp2950
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p2951
tp2952
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p2953
tp2954
a(g874
I213
g875
S'masked_input = x * mask  # BxD'
p2955
tp2956
aasbsg85
g822
sg73
g0
(g74
g5
Ntp2957
Rp2958
(dp2959
g78
(I00
I00
tp2960
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g10
g5
Ntp2961
Rp2962
(dp2963
g16
Nsg48
g621
sg53
g444
sg798
g801
sg807
(lp2964
(g2929
I1
tp2965
asg14
S'auto_14652'
p2966
sg17
g0
(g18
g5
Ntp2967
Rp2968
(dp2969
g22
g642
sbsg85
Nsg73
g631
sbasg798
g801
sg814
(lp2970
g2904
asg17
g0
(g18
g5
Ntp2971
Rp2972
(dp2973
g1268
(lp2974
g2086
ag1271
asbsg1272
(dp2975
sg1274
g2090
sbsg73
g0
(g74
g5
Ntp2976
Rp2977
(dp2978
g78
(I00
I00
tp2979
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp2980
Rp2981
(dp2982
g16
Nsg53
Nsg798
g801
sg73
g0
(g74
g5
Ntp2983
Rp2984
(dp2985
g78
(tsg80
g251
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp2986
(g2900
I1
tp2987
a(g2900
I4
tp2988
asg14
S'auto_16017'
p2989
sg17
g0
(g18
g5
Ntp2990
Rp2991
(dp2992
g22
(lp2993
sg878
Nsbsg883
g56
(g57
(I0
tp2994
g59
tp2995
Rp2996
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
p2997
tp2998
bsbag826
ag0
(g10
g5
Ntp2999
Rp3000
(dp3001
g16
Nsg48
g495
sg53
g430
sg798
g801
sg807
(lp3002
(g2900
I3
tp3003
asg14
S'auto_14653'
p3004
sg17
g0
(g18
g5
Ntp3005
Rp3006
(dp3007
g22
g480
sbsg85
Nsg73
g505
sbag2981
asg798
g801
sg814
(lp3008
g2890
asg17
g0
(g18
g5
Ntp3009
Rp3010
(dp3011
g1268
(lp3012
S'LocalOptGroup(local_inplace_gemm,local_inplace_gemv,local_inplace_ger)'
p3013
ag1271
asbsg1272
(dp3014
sg1274
g0
(ctheano.tensor.blas
Gemm
p3015
g5
Ntp3016
Rp3017
(dp3018
g1404
I01
sg330
(dp3019
I0
(lp3020
I0
assbsbsg73
g2977
sbag0
(g843
g5
Ntp3021
Rp3022
(dp3023
g16
Nsg53
Nsg798
g801
sg73
g0
(g74
g5
Ntp3024
Rp3025
(dp3026
g78
(I01
I01
tp3027
sg80
S'int8'
p3028
sg82
g63
(S'i1'
p3029
I0
I1
tp3030
Rp3031
(I3
S'|'
p3032
NNNI-1
I-1
I0
tp3033
bsg83
I00
sg53
Nsbsg807
(lp3034
(g2823
I2
tp3035
a(g2780
I2
tp3036
asg14
S'auto_15644'
p3037
sg17
g0
(g18
g5
Ntp3038
Rp3039
(dp3040
g22
(lp3041
(lp3042
(g25
I306
g26
S'nade_train( * args[1:] )'
p3043
tp3044
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3045
tp3046
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3047
tp3048
a(g37
I36
g38
S'self.recompile()'
p3049
tp3050
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3051
tp3052
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3053
tp3054
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p3055
tp3056
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p3057
tp3058
aasg878
g879
(g3031
S'\x00'
p3059
tp3060
Rp3061
sbsg883
g56
(g57
(I0
tp3062
g59
tp3063
Rp3064
(I1
(I1
I1
tp3065
g3031
I00
g3059
tp3066
bsbasg798
g801
sg814
(lp3067
g2813
asg17
g0
(g18
g5
Ntp3068
Rp3069
(dp3070
g1451
g0
(g809
g5
Ntp3071
Rp3072
(dp3073
g552
(lp3074
g0
(g1456
g5
Ntp3075
Rp3076
(dp3077
g14
S'auto_17075'
p3078
sg16
Nsg17
g0
(g18
g5
Ntp3079
Rp3080
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3081
Rp3082
(dp3083
g14
S'auto_17076'
p3084
sg16
Nsg17
g0
(g18
g5
Ntp3085
Rp3086
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3087
Rp3088
(dp3089
g14
S'auto_17077'
p3090
sg16
Nsg17
g0
(g18
g5
Ntp3091
Rp3092
sg53
Nsg85
Nsg73
g0
(g1463
g5
Ntp3093
Rp3094
(dp3095
g80
S'int8'
p3096
sbsbasg17
g0
(g18
g5
Ntp3097
Rp3098
sg814
(lp3099
g0
(g1456
g5
Ntp3100
Rp3101
(dp3102
g14
S'auto_17078'
p3103
sg16
I0
sg17
g0
(g18
g5
Ntp3104
Rp3105
sg53
Nsg85
g3072
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp3106
Rp3107
(dp3108
g552
(lp3109
g0
(g1456
g5
Ntp3110
Rp3111
(dp3112
g14
S'auto_16665'
p3113
sg16
Nsg17
g0
(g18
g5
Ntp3114
Rp3115
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3116
Rp3117
(dp3118
g14
S'auto_16666'
p3119
sg16
Nsg17
g0
(g18
g5
Ntp3120
Rp3121
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3122
Rp3123
(dp3124
g14
S'auto_16667'
p3125
sg16
Nsg17
g0
(g18
g5
Ntp3126
Rp3127
sg53
Nsg85
Nsg73
g3094
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g3094
tp3128
sg814
(lp3129
g0
(g1456
g5
Ntp3130
Rp3131
(dp3132
g14
S'auto_16670'
p3133
sg16
I0
sg17
g0
(g18
g5
Ntp3134
Rp3135
(dp3136
g22
(lp3137
sbsg53
Nsg85
g0
(g809
g5
Ntp3138
Rp3139
(dp3140
g552
(lp3141
g0
(g1456
g5
Ntp3142
Rp3143
(dp3144
g14
S'auto_16668'
p3145
sg16
I0
sg17
g0
(g18
g5
Ntp3146
Rp3147
(dp3148
g22
(lp3149
sbsg53
Nsg85
g0
(g809
g5
Ntp3150
Rp3151
(dp3152
g552
(lp3153
g3111
ag3117
asg17
g0
(g18
g5
Ntp3154
Rp3155
sg814
(lp3156
g3143
asg1274
g1899
sbsg73
g1931
sbag0
(g1456
g5
Ntp3157
Rp3158
(dp3159
g14
S'auto_16669'
p3160
sg16
I0
sg17
g0
(g18
g5
Ntp3161
Rp3162
(dp3163
g22
(lp3164
sbsg53
Nsg85
g0
(g809
g5
Ntp3165
Rp3166
(dp3167
g552
(lp3168
g3143
ag3123
asg17
g0
(g18
g5
Ntp3169
Rp3170
sg814
(lp3171
g3158
asg1274
g0
(ctheano.scalar.basic
GT
p3172
g5
Ntp3173
Rp3174
(dp3175
S'bool'
p3176
I01
sg53
Nsbsbsg73
g0
(g1463
g5
Ntp3177
Rp3178
(dp3179
g80
g3176
sbsbasg17
g0
(g18
g5
Ntp3180
Rp3181
sg814
(lp3182
g3131
asg1274
g0
(g1482
g5
Ntp3183
Rp3184
(dp3185
g327
g1901
sg53
S'mul'
p3186
sbsbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\nnpy_bool V%(id)s_tmp2;\nV%(id)s_tmp2 = (V%(id)s_tmp1 > %(i2)s);\n%(o0)s = V%(id)s_tmp1 * V%(id)s_tmp2;\n}\n'
p3187
sg2001
(g1931
tp3188
sg327
g0
(g1486
g5
Ntp3189
Rp3190
(dp3191
g1490
(I1
tp3192
sbsg2007
(lp3193
S'%(nodename)s_subnode0'
p3194
aS'%(nodename)s_subnode1'
p3195
aS'%(nodename)s_subnode2'
p3196
asg2011
I1
sbsbsg1268
(lp3197
g1493
ag1271
asbsg1272
(dp3198
sg1274
g0
(g318
g5
Ntp3199
Rp3200
(dp3201
g53
Nsg322
g3107
sg330
(dp3202
I0
(lp3203
I1
assg332
Nsg333
g0
(g334
g5
Ntp3204
Rp3205
(dp3206
g338
I3713080549409410656
sg339
(dp3207
I0
I1
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp3208
Rp3209
(dp3210
g78
(I00
I00
tp3211
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp3212
Rp3213
(dp3214
g16
I0
sg53
Nsg798
g801
sg807
(lp3215
(g2809
I1
tp3216
asg14
S'auto_14684'
p3217
sg17
g0
(g18
g5
Ntp3218
Rp3219
(dp3220
g22
(lp3221
(lp3222
(g25
I306
g26
S'nade_train( * args[1:] )'
p3223
tp3224
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3225
tp3226
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3227
tp3228
a(g37
I36
g38
S'self.recompile()'
p3229
tp3230
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3231
tp3232
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3233
tp3234
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p3235
tp3236
aasbsg85
g0
(g809
g5
Ntp3237
Rp3238
(dp3239
g552
(lp3240
g0
(g10
g5
Ntp3241
Rp3242
(dp3243
g16
Nsg48
g531
sg53
g435
sg798
g801
sg807
(lp3244
(g3238
I0
tp3245
asg14
S'auto_14655'
p3246
sg17
g0
(g18
g5
Ntp3247
Rp3248
(dp3249
g22
g516
sbsg85
Nsg73
g541
sbag0
(ctheano.scalar.basic
ScalarConstant
p3250
g5
Ntp3251
Rp3252
(dp3253
g16
Nsg53
Nsg798
g801
sg73
g1465
sg807
(lp3254
(g0
(g809
g5
Ntp3255
Rp3256
(dp3257
g552
(lp3258
g0
(g10
g5
Ntp3259
Rp3260
(dp3261
g16
Nsg48
g669
sg53
g449
sg798
g801
sg807
(lp3262
(g3256
I0
tp3263
asg14
S'auto_14656'
p3264
sg17
g0
(g18
g5
Ntp3265
Rp3266
(dp3267
g22
g690
sbsg85
Nsg73
g679
sbag3252
asg798
g801
sg814
(lp3268
g0
(g563
g5
Ntp3269
Rp3270
(dp3271
g16
I0
sg53
Nsg798
g801
sg807
(lp3272
(g0
(g809
g5
Ntp3273
Rp3274
(dp3275
g552
(lp3276
g3270
asg798
g801
sg814
(lp3277
g0
(g563
g5
Ntp3278
Rp3279
(dp3280
g16
I0
sg53
Nsg798
g801
sg807
(lp3281
(g2780
I1
tp3282
asg14
S'auto_14682'
p3283
sg17
g0
(g18
g5
Ntp3284
Rp3285
(dp3286
g22
(lp3287
(lp3288
(g25
I306
g26
S'nade_train( * args[1:] )'
p3289
tp3290
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3291
tp3292
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3293
tp3294
a(g37
I36
g38
S'self.recompile()'
p3295
tp3296
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3297
tp3298
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3299
tp3300
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p3301
tp3302
aasbsg85
g3274
sg73
g0
(g74
g5
Ntp3303
Rp3304
(dp3305
g78
(I01
I00
tp3306
sg80
g682
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp3307
Rp3308
(dp3309
g1268
(lp3310
g1271
ag1271
asbsg1272
(dp3311
sg1274
g0
(g1387
g5
Ntp3312
Rp3313
(dp3314
g1391
(lp3315
sg1393
(lp3316
I0
asg1395
(lp3317
I0
asg1397
g1398
sg1399
(I00
tp3318
sg1401
(lp3319
g1403
asg1404
I01
sg1405
(g270
I0
tp3320
sg1407
(dp3321
S'support_code_apply'
p3322
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p3323
ssg1411
(dp3324
I0
(lp3325
I0
assg1414
(lp3326
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p3327
asbsbI0
tp3328
asg14
S'auto_14681'
p3329
sg17
g0
(g18
g5
Ntp3330
Rp3331
(dp3332
g22
(lp3333
(lp3334
(g25
I306
g26
S'nade_train( * args[1:] )'
p3335
tp3336
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3337
tp3338
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3339
tp3340
a(g37
I36
g38
S'self.recompile()'
p3341
tp3342
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3343
tp3344
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3345
tp3346
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p3347
tp3348
aasbsg85
g3256
sg73
g0
(g74
g5
Ntp3349
Rp3350
(dp3351
g78
g3318
sg80
g682
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp3352
Rp3353
(dp3354
g1268
(lp3355
g1271
ag1271
asbsg1272
(dp3356
sg1274
g0
(ctheano.tensor.subtensor
Subtensor
p3357
g5
Ntp3358
Rp3359
(dp3360
S'idx_list'
p3361
(g1465
tp3362
sbsbI1
tp3363
a(g3238
I1
tp3364
asg14
S'auto_14680'
p3365
sg17
g0
(g18
g5
Ntp3366
Rp3367
(dp3368
g22
(lp3369
(lp3370
(g25
I306
g26
S'nade_train( * args[1:] )'
p3371
tp3372
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3373
tp3374
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3375
tp3376
a(g37
I36
g38
S'self.recompile()'
p3377
tp3378
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3379
tp3380
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3381
tp3382
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p3383
tp3384
aasbsg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p3385
tp3386
Rp3387
sbasg798
g801
sg814
(lp3388
g3213
asg17
g0
(g18
g5
Ntp3389
Rp3390
(dp3391
g1268
(lp3392
g1271
ag1271
asbsg1272
(dp3393
sg1274
g0
(g3357
g5
Ntp3394
Rp3395
(dp3396
g3361
(g1465
tp3397
sbsbsg73
g0
(g74
g5
Ntp3398
Rp3399
(dp3400
g78
(I00
I00
tp3401
sg80
g544
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp3402
g2784
asg17
g0
(g18
g5
Ntp3403
Rp3404
(dp3405
g1268
(lp3406
g2086
ag1271
asbsg1272
(dp3407
sg1274
g2090
sbsg73
g0
(g74
g5
Ntp3408
Rp3409
(dp3410
g78
(I00
I00
tp3411
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag3279
ag3022
asg798
g801
sg814
(lp3412
g1089
asg17
g0
(g18
g5
Ntp3413
Rp3414
(dp3415
g1451
g0
(g809
g5
Ntp3416
Rp3417
(dp3418
g552
(lp3419
g0
(g1456
g5
Ntp3420
Rp3421
(dp3422
g14
S'auto_17094'
p3423
sg16
Nsg17
g0
(g18
g5
Ntp3424
Rp3425
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3426
Rp3427
(dp3428
g14
S'auto_17095'
p3429
sg16
Nsg17
g0
(g18
g5
Ntp3430
Rp3431
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3432
Rp3433
(dp3434
g14
S'auto_17096'
p3435
sg16
Nsg17
g0
(g18
g5
Ntp3436
Rp3437
sg53
Nsg85
Nsg73
g3094
sbasg17
g0
(g18
g5
Ntp3438
Rp3439
sg814
(lp3440
g0
(g1456
g5
Ntp3441
Rp3442
(dp3443
g14
S'auto_17097'
p3444
sg16
I0
sg17
g0
(g18
g5
Ntp3445
Rp3446
sg53
Nsg85
g3417
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp3447
Rp3448
(dp3449
g552
(lp3450
g0
(g1456
g5
Ntp3451
Rp3452
(dp3453
g14
S'auto_16682'
p3454
sg16
Nsg17
g0
(g18
g5
Ntp3455
Rp3456
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3457
Rp3458
(dp3459
g14
S'auto_16683'
p3460
sg16
Nsg17
g0
(g18
g5
Ntp3461
Rp3462
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3463
Rp3464
(dp3465
g14
S'auto_16684'
p3466
sg16
Nsg17
g0
(g18
g5
Ntp3467
Rp3468
sg53
Nsg85
Nsg73
g3094
sbasg1965
I3
sg53
S'Composite{((i0 + i1) * GT((i0 + i1), i2))}'
p3469
sg1966
(g1931
g1931
g3094
tp3470
sg814
(lp3471
g0
(g1456
g5
Ntp3472
Rp3473
(dp3474
g14
S'auto_16687'
p3475
sg16
I0
sg17
g0
(g18
g5
Ntp3476
Rp3477
(dp3478
g22
(lp3479
sbsg53
Nsg85
g0
(g809
g5
Ntp3480
Rp3481
(dp3482
g552
(lp3483
g0
(g1456
g5
Ntp3484
Rp3485
(dp3486
g14
S'auto_16685'
p3487
sg16
I0
sg17
g0
(g18
g5
Ntp3488
Rp3489
(dp3490
g22
(lp3491
sbsg53
Nsg85
g0
(g809
g5
Ntp3492
Rp3493
(dp3494
g552
(lp3495
g3452
ag3458
asg17
g0
(g18
g5
Ntp3496
Rp3497
sg814
(lp3498
g3485
asg1274
g1899
sbsg73
g1931
sbag0
(g1456
g5
Ntp3499
Rp3500
(dp3501
g14
S'auto_16686'
p3502
sg16
I0
sg17
g0
(g18
g5
Ntp3503
Rp3504
(dp3505
g22
(lp3506
sbsg53
Nsg85
g0
(g809
g5
Ntp3507
Rp3508
(dp3509
g552
(lp3510
g3485
ag3464
asg17
g0
(g18
g5
Ntp3511
Rp3512
sg814
(lp3513
g3500
asg1274
g3174
sbsg73
g3178
sbasg17
g0
(g18
g5
Ntp3514
Rp3515
sg814
(lp3516
g3473
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\nnpy_bool V%(id)s_tmp2;\nV%(id)s_tmp2 = (V%(id)s_tmp1 > %(i2)s);\n%(o0)s = V%(id)s_tmp1 * V%(id)s_tmp2;\n}\n'
p3517
sg2001
(g1931
tp3518
sg327
g0
(g1486
g5
Ntp3519
Rp3520
(dp3521
g1490
(I0
tp3522
sbsg2007
(lp3523
S'%(nodename)s_subnode0'
p3524
aS'%(nodename)s_subnode1'
p3525
aS'%(nodename)s_subnode2'
p3526
asg2011
I1
sbsbsg1268
(lp3527
g1493
ag1271
asbsg1272
(dp3528
sg1274
g0
(g318
g5
Ntp3529
Rp3530
(dp3531
g53
Nsg322
g3448
sg330
(dp3532
I0
(lp3533
I0
assg332
Nsg333
g0
(g334
g5
Ntp3534
Rp3535
(dp3536
g338
I3713080549408328131
sg339
(dp3537
I0
I0
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp3538
Rp3539
(dp3540
g78
(I00
I00
tp3541
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag1319
asg798
g801
sg814
(lp3542
g1060
asg17
g0
(g18
g5
Ntp3543
Rp3544
(dp3545
g1268
(lp3546
g2086
ag1271
asbsg1272
(dp3547
sg1274
g2090
sbsg73
g0
(g74
g5
Ntp3548
Rp3549
(dp3550
g78
(I00
I00
tp3551
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag1514
asg798
g801
sg814
(lp3552
g1031
asg17
g0
(g18
g5
Ntp3553
Rp3554
(dp3555
g1268
(lp3556
g1271
ag1271
asbsg1272
(dp3557
sg1274
g0
(g1352
g5
Ntp3558
Rp3559
(dp3560
g1356
I3
sbsbsg73
g0
(g74
g5
Ntp3561
Rp3562
(dp3563
g78
(I00
I00
I00
tp3564
sg80
S'float64'
p3565
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp3566
Rp3567
(dp3568
g16
I0
sg53
Nsg798
g801
sg807
(lp3569
(g980
I3
tp3570
asg14
S'auto_14782'
p3571
sg17
g0
(g18
g5
Ntp3572
Rp3573
(dp3574
g22
(lp3575
(lp3576
(g25
I306
g26
S'nade_train( * args[1:] )'
p3577
tp3578
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3579
tp3580
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3581
tp3582
a(g37
I36
g38
S'self.recompile()'
p3583
tp3584
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3585
tp3586
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3587
tp3588
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p3589
tp3590
aasbsg85
g0
(g809
g5
Ntp3591
Rp3592
(dp3593
g552
(lp3594
g0
(g10
g5
Ntp3595
Rp3596
(dp3597
g16
Nsg48
g226
sg53
g203
sg798
g801
sg807
(lp3598
(g3592
I0
tp3599
asg14
S'auto_14658'
p3600
sg17
g0
(g18
g5
Ntp3601
Rp3602
(dp3603
g22
g211
sbsg85
Nsg73
g236
sbasg798
g801
sg814
(lp3604
g3567
asg17
g0
(g18
g5
Ntp3605
Rp3606
(dp3607
g1268
(lp3608
g1271
ag1271
asbsg1272
(dp3609
sg1274
g0
(g1387
g5
Ntp3610
Rp3611
(dp3612
g1391
(lp3613
sg1393
(lp3614
I0
aI1
asg1395
(lp3615
I0
asg1397
g1398
sg1399
g238
sg1401
(lp3616
g1403
asg1404
I01
sg1405
(g270
I0
I1
tp3617
sg1407
(dp3618
S'support_code_apply'
p3619
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p3620
ssg1411
(dp3621
I0
(lp3622
I0
assg1414
(lp3623
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p3624
asbsbsg73
g0
(g74
g5
Ntp3625
Rp3626
(dp3627
g78
(I01
I00
I00
tp3628
sg80
g239
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp3629
Rp3630
(dp3631
g16
I0
sg53
Nsg798
g801
sg807
(lp3632
(g980
I4
tp3633
asg14
S'auto_15476'
p3634
sg17
g0
(g18
g5
Ntp3635
Rp3636
(dp3637
g22
(lp3638
(lp3639
(g25
I306
g26
S'nade_train( * args[1:] )'
p3640
tp3641
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p3642
tp3643
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p3644
tp3645
a(g37
I36
g38
S'self.recompile()'
p3646
tp3647
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p3648
tp3649
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p3650
tp3651
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p3652
tp3653
aasbsg85
g0
(g809
g5
Ntp3654
Rp3655
(dp3656
g552
(lp3657
g805
asg798
g801
sg814
(lp3658
g3630
asg17
g0
(g18
g5
Ntp3659
Rp3660
(dp3661
g1268
(lp3662
S'local_dimshuffle_lift'
p3663
ag1271
asbsg1272
(dp3664
sg1274
g0
(g1387
g5
Ntp3665
Rp3666
(dp3667
g1391
(lp3668
sg1393
(lp3669
I1
aI0
asg1395
(lp3670
I2
asg1397
g1398
sg1399
g588
sg1401
(lp3671
g1403
asg1404
I01
sg1405
(I1
I0
g270
tp3672
sg1407
(dp3673
S'support_code_apply'
p3674
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p3675
ssg1411
(dp3676
I0
(lp3677
I0
assg1414
(lp3678
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p3679
asbsbsg73
g0
(g74
g5
Ntp3680
Rp3681
(dp3682
g78
(I00
I00
I01
tp3683
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag975
ag1797
ag1815
asg798
g801
sg814
(lp3684
g952
asg17
g0
(g18
g5
Ntp3685
Rp3686
(dp3687
g1451
g0
(g809
g5
Ntp3688
Rp3689
(dp3690
g552
(lp3691
g0
(g1456
g5
Ntp3692
Rp3693
(dp3694
g14
S'auto_17175'
p3695
sg16
Nsg17
g0
(g18
g5
Ntp3696
Rp3697
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3698
Rp3699
(dp3700
g14
S'auto_17176'
p3701
sg16
Nsg17
g0
(g18
g5
Ntp3702
Rp3703
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3704
Rp3705
(dp3706
g14
S'auto_17177'
p3707
sg16
Nsg17
g0
(g18
g5
Ntp3708
Rp3709
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3710
Rp3711
(dp3712
g14
S'auto_17178'
p3713
sg16
Nsg17
g0
(g18
g5
Ntp3714
Rp3715
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3716
Rp3717
(dp3718
g14
S'auto_17179'
p3719
sg16
Nsg17
g0
(g18
g5
Ntp3720
Rp3721
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3722
Rp3723
(dp3724
g14
S'auto_17180'
p3725
sg16
Nsg17
g0
(g18
g5
Ntp3726
Rp3727
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3728
Rp3729
(dp3730
g14
S'auto_17181'
p3731
sg16
Nsg17
g0
(g18
g5
Ntp3732
Rp3733
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3734
Rp3735
(dp3736
g14
S'auto_17182'
p3737
sg16
Nsg17
g0
(g18
g5
Ntp3738
Rp3739
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp3740
Rp3741
sg814
(lp3742
g0
(g1456
g5
Ntp3743
Rp3744
(dp3745
g14
S'auto_17183'
p3746
sg16
I0
sg17
g0
(g18
g5
Ntp3747
Rp3748
sg53
Nsg85
g3689
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp3749
Rp3750
(dp3751
g552
(lp3752
g0
(g1456
g5
Ntp3753
Rp3754
(dp3755
g14
S'auto_16734'
p3756
sg16
Nsg17
g0
(g18
g5
Ntp3757
Rp3758
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3759
Rp3760
(dp3761
g14
S'auto_16735'
p3762
sg16
Nsg17
g0
(g18
g5
Ntp3763
Rp3764
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3765
Rp3766
(dp3767
g14
S'auto_16736'
p3768
sg16
Nsg17
g0
(g18
g5
Ntp3769
Rp3770
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3771
Rp3772
(dp3773
g14
S'auto_16737'
p3774
sg16
Nsg17
g0
(g18
g5
Ntp3775
Rp3776
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3777
Rp3778
(dp3779
g14
S'auto_16738'
p3780
sg16
Nsg17
g0
(g18
g5
Ntp3781
Rp3782
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3783
Rp3784
(dp3785
g14
S'auto_16739'
p3786
sg16
Nsg17
g0
(g18
g5
Ntp3787
Rp3788
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3789
Rp3790
(dp3791
g14
S'auto_16740'
p3792
sg16
Nsg17
g0
(g18
g5
Ntp3793
Rp3794
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp3795
Rp3796
(dp3797
g14
S'auto_16741'
p3798
sg16
Nsg17
g0
(g18
g5
Ntp3799
Rp3800
sg53
Nsg85
Nsg73
g1931
sbasg1965
I8
sg53
Nsg1966
(g1931
g1931
g1931
g1931
g1931
g1931
g1931
g1931
tp3801
sg814
(lp3802
g0
(g1456
g5
Ntp3803
Rp3804
(dp3805
g14
S'auto_16749'
p3806
sg16
I0
sg17
g0
(g18
g5
Ntp3807
Rp3808
(dp3809
g22
(lp3810
sbsg53
Nsg85
g0
(g809
g5
Ntp3811
Rp3812
(dp3813
g552
(lp3814
g3754
ag0
(g1456
g5
Ntp3815
Rp3816
(dp3817
g14
S'auto_16748'
p3818
sg16
I0
sg17
g0
(g18
g5
Ntp3819
Rp3820
(dp3821
g22
(lp3822
sbsg53
Nsg85
g0
(g809
g5
Ntp3823
Rp3824
(dp3825
g552
(lp3826
g3760
ag0
(g1456
g5
Ntp3827
Rp3828
(dp3829
g14
S'auto_16747'
p3830
sg16
I0
sg17
g0
(g18
g5
Ntp3831
Rp3832
(dp3833
g22
(lp3834
sbsg53
Nsg85
g0
(g809
g5
Ntp3835
Rp3836
(dp3837
g552
(lp3838
g0
(g1456
g5
Ntp3839
Rp3840
(dp3841
g14
S'auto_16746'
p3842
sg16
I0
sg17
g0
(g18
g5
Ntp3843
Rp3844
(dp3845
g22
(lp3846
sbsg53
Nsg85
g0
(g809
g5
Ntp3847
Rp3848
(dp3849
g552
(lp3850
g0
(g1456
g5
Ntp3851
Rp3852
(dp3853
g14
S'auto_16745'
p3854
sg16
I0
sg17
g0
(g18
g5
Ntp3855
Rp3856
(dp3857
g22
(lp3858
sbsg53
Nsg85
g0
(g809
g5
Ntp3859
Rp3860
(dp3861
g552
(lp3862
g0
(g1456
g5
Ntp3863
Rp3864
(dp3865
g14
S'auto_16744'
p3866
sg16
I0
sg17
g0
(g18
g5
Ntp3867
Rp3868
(dp3869
g22
(lp3870
sbsg53
Nsg85
g0
(g809
g5
Ntp3871
Rp3872
(dp3873
g552
(lp3874
g3766
ag3772
asg17
g0
(g18
g5
Ntp3875
Rp3876
sg814
(lp3877
g3864
asg1274
g1899
sbsg73
g1931
sbag3778
asg17
g0
(g18
g5
Ntp3878
Rp3879
sg814
(lp3880
g3852
asg1274
g0
(ctheano.scalar.basic
Sub
p3881
g5
Ntp3882
Rp3883
(dp3884
g327
ctheano.scalar.basic
upcast_out_nobool
p3885
sg53
S'sub'
p3886
sbsbsg73
g1931
sbag3784
asg17
g0
(g18
g5
Ntp3887
Rp3888
sg814
(lp3889
g3840
asg1274
g0
(ctheano.scalar.basic
TrueDiv
p3890
g5
Ntp3891
Rp3892
(dp3893
g327
g1901
sg53
S'true_div'
p3894
sbsbsg73
g1931
sbasg17
g0
(g18
g5
Ntp3895
Rp3896
sg814
(lp3897
g3828
asg1274
g0
(ctheano.scalar.basic
Sqr
p3898
g5
Ntp3899
Rp3900
(dp3901
g327
ctheano.scalar.basic
same_out
p3902
sg53
S'sqr'
p3903
sbsbsg73
g1931
sbasg17
g0
(g18
g5
Ntp3904
Rp3905
sg814
(lp3906
g3816
asg1274
g3184
sbsg73
g1931
sbag0
(g1456
g5
Ntp3907
Rp3908
(dp3909
g14
S'auto_16743'
p3910
sg16
I0
sg17
g0
(g18
g5
Ntp3911
Rp3912
(dp3913
g22
(lp3914
sbsg53
Nsg85
g0
(g809
g5
Ntp3915
Rp3916
(dp3917
g552
(lp3918
g0
(g1456
g5
Ntp3919
Rp3920
(dp3921
g14
S'auto_16742'
p3922
sg16
I0
sg17
g0
(g18
g5
Ntp3923
Rp3924
(dp3925
g22
(lp3926
sbsg53
Nsg85
g0
(g809
g5
Ntp3927
Rp3928
(dp3929
g552
(lp3930
g3790
ag3796
asg17
g0
(g18
g5
Ntp3931
Rp3932
sg814
(lp3933
g3920
asg1274
g3892
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp3934
Rp3935
sg814
(lp3936
g3908
asg1274
g0
(ctheano.scalar.basic
Log
p3937
g5
Ntp3938
Rp3939
(dp3940
g327
g328
sg53
S'log'
p3941
sbsbsg73
g1931
sbasg17
g0
(g18
g5
Ntp3942
Rp3943
sg814
(lp3944
g3804
asg1274
g1899
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i6)s / %(i7)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = log((npy_float64)V%(id)s_tmp1);\nnpy_float64 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i2)s + %(i3)s;\nnpy_float64 V%(id)s_tmp4;\nV%(id)s_tmp4 = V%(id)s_tmp3 - %(i4)s;\nnpy_float64 V%(id)s_tmp5;\nV%(id)s_tmp5 = V%(id)s_tmp4 / %(i5)s;\nnpy_float64 V%(id)s_tmp6;\nV%(id)s_tmp6 = V%(id)s_tmp5 * V%(id)s_tmp5;\nnpy_float64 V%(id)s_tmp7;\nV%(id)s_tmp7 = %(i1)s * V%(id)s_tmp6;\n%(o0)s = %(i0)s + V%(id)s_tmp7 + V%(id)s_tmp2;\n}\n'
p3945
sg2001
(g1931
tp3946
sg327
g0
(g1486
g5
Ntp3947
Rp3948
(dp3949
g1490
(I2
tp3950
sbsg2007
(lp3951
S'%(nodename)s_subnode0'
p3952
aS'%(nodename)s_subnode1'
p3953
aS'%(nodename)s_subnode2'
p3954
aS'%(nodename)s_subnode3'
p3955
aS'%(nodename)s_subnode4'
p3956
aS'%(nodename)s_subnode5'
p3957
aS'%(nodename)s_subnode6'
p3958
aS'%(nodename)s_subnode7'
p3959
asg2011
I1
sbsbsg1268
(lp3960
g1493
ag1271
asbsg1272
(dp3961
sg1274
g0
(g318
g5
Ntp3962
Rp3963
(dp3964
g53
Nsg322
g3750
sg330
(dp3965
I0
(lp3966
I2
assg332
Nsg333
g0
(g334
g5
Ntp3967
Rp3968
(dp3969
g338
I3713080549410493181
sg339
(dp3970
I0
I2
ssbsg341
I00
sbsbI5
tp3971
asg14
S'auto_16710'
p3972
sg17
g0
(g18
g5
Ntp3973
Rp3974
(dp3975
g22
(lp3976
sbsg85
g2477
sg73
g0
(g74
g5
Ntp3977
Rp3978
(dp3979
g78
(I00
I00
I00
tp3980
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp3981
g960
asg17
g0
(g18
g5
Ntp3982
Rp3983
(dp3984
g1451
g0
(g809
g5
Ntp3985
Rp3986
(dp3987
g552
(lp3988
g0
(g1456
g5
Ntp3989
Rp3990
(dp3991
g14
S'auto_17211'
p3992
sg16
Nsg17
g0
(g18
g5
Ntp3993
Rp3994
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp3995
Rp3996
sg814
(lp3997
g0
(g1456
g5
Ntp3998
Rp3999
(dp4000
g14
S'auto_17212'
p4001
sg16
I0
sg17
g0
(g18
g5
Ntp4002
Rp4003
sg53
Nsg85
g3986
sg73
g1931
sbasg1274
g0
(g3937
g5
Ntp4004
Rp4005
(dp4006
g327
g0
(g1486
g5
Ntp4007
Rp4008
(dp4009
g1490
(I0
tp4010
sbsg53
Nsbsbsg1268
(lp4011
g1493
ag1271
asbsg1272
(dp4012
sg1274
g0
(g318
g5
Ntp4013
Rp4014
(dp4015
g53
Nsg322
g4005
sg330
(dp4016
I0
(lp4017
I0
assg332
(g3941
I1
I1
tp4018
sg333
g0
(g334
g5
Ntp4019
Rp4020
(dp4021
g338
I3713080549408328131
sg339
(dp4022
I0
I0
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp4023
Rp4024
(dp4025
g78
(I00
I00
I00
tp4026
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp4027
g0
(g563
g5
Ntp4028
Rp4029
(dp4030
g16
I0
sg53
Nsg798
g801
sg807
(lp4031
(g0
(g809
g5
Ntp4032
Rp4033
(dp4034
g552
(lp4035
g4029
asg798
g801
sg814
(lp4036
g934
asg17
g0
(g18
g5
Ntp4037
Rp4038
(dp4039
g1268
(lp4040
S'local_max_and_argmax'
p4041
ag1271
asbsg1272
(dp4042
sg1274
g0
(ctheano.tensor.elemwise
CAReduce
p4043
g5
Ntp4044
Rp4045
(dp4046
g322
g0
(ctheano.scalar.basic
Maximum
p4047
g5
Ntp4048
Rp4049
(dp4050
g327
g1901
sg53
S'maximum'
p4051
sbsg1903
(I2
tp4052
sbsbI0
tp4053
asg14
S'auto_15427'
p4054
sg17
g0
(g18
g5
Ntp4055
Rp4056
(dp4057
S'values_eq_approx'
p4058
ctheano.tensor.type
values_eq_approx_remove_inf_nan
p4059
sg22
(lp4060
sbsg85
g956
sg73
g0
(g74
g5
Ntp4061
Rp4062
(dp4063
g78
(I00
I00
I00
tp4064
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4065
Rp4066
(dp4067
g1451
g0
(g809
g5
Ntp4068
Rp4069
(dp4070
g552
(lp4071
g0
(g1456
g5
Ntp4072
Rp4073
(dp4074
g14
S'auto_17219'
p4075
sg16
Nsg17
g0
(g18
g5
Ntp4076
Rp4077
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4078
Rp4079
(dp4080
g14
S'auto_17220'
p4081
sg16
Nsg17
g0
(g18
g5
Ntp4082
Rp4083
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp4084
Rp4085
sg814
(lp4086
g0
(g1456
g5
Ntp4087
Rp4088
(dp4089
g14
S'auto_17221'
p4090
sg16
I0
sg17
g0
(g18
g5
Ntp4091
Rp4092
sg53
Nsg85
g4069
sg73
g1931
sbasg1274
g3883
sbsS'removed_by'
p4093
(lp4094
g1493
ag1493
asg1268
(lp4095
S'local_add_canonizer'
p4096
aS"('Revert', 'inplace_elemwise_optimizer')"
p4097
aS"('Revert', 'inplace_elemwise_optimizer')"
p4098
ag1271
asbsg1272
(dp4099
sg1274
g0
(g318
g5
Ntp4100
Rp4101
(dp4102
g379
g380
sg322
g3883
sg53
S'Elemwise{sub,no_inplace}'
p4103
sg330
(dp4104
sg332
(S'subtract'
p4105
I2
I1
tp4106
sg333
g0
(g334
g5
Ntp4107
Rp4108
(dp4109
g338
I0
sg339
(dp4110
sbsg341
I00
sg307
S"elementwise subtraction\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p4111
sbsbI0
tp4112
a(g948
I0
tp4113
asg14
S'auto_16775'
p4114
sg17
g0
(g18
g5
Ntp4115
Rp4116
(dp4117
g22
(lp4118
sbsg85
g980
sg73
g0
(g74
g5
Ntp4119
Rp4120
(dp4121
g78
(I00
I00
I00
tp4122
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag960
ag944
asg798
g801
sg814
(lp4123
g0
(g563
g5
Ntp4124
Rp4125
(dp4126
g16
I0
sg53
Nsg798
g801
sg807
(lp4127
(g0
(g809
g5
Ntp4128
Rp4129
(dp4130
g552
(lp4131
g4125
asg798
g801
sg814
(lp4132
g0
(g563
g5
Ntp4133
Rp4134
(dp4135
g16
I0
sg53
g936
sg798
g801
sg807
(lp4136
(g0
(g809
g5
Ntp4137
Rp4138
(dp4139
g552
(lp4140
g4134
asg798
g801
sg814
(lp4141
g0
(g563
g5
Ntp4142
Rp4143
(dp4144
g16
I0
sg53
Nsg798
g801
sg807
(lp4145
(g0
(g809
g5
Ntp4146
Rp4147
(dp4148
g552
(lp4149
g4125
ag4143
asg798
g801
sg814
(lp4150
g0
(g563
g5
Ntp4151
Rp4152
(dp4153
g16
I0
sg53
Nsg798
g801
sg807
(lp4154
(g0
(g809
g5
Ntp4155
Rp4156
(dp4157
g552
(lp4158
g4152
asg798
g801
sg814
(lp4159
g0
(g563
g5
Ntp4160
Rp4161
(dp4162
g16
I0
sg53
Nsg798
g801
sg807
(lp4163
(g930
I2
tp4164
asg14
S'auto_15847'
p4165
sg17
g0
(g18
g5
Ntp4166
Rp4167
(dp4168
g22
(lp4169
sbsg85
g4156
sg73
g0
(g74
g5
Ntp4170
Rp4171
(dp4172
g78
(I00
I00
tp4173
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4174
Rp4175
(dp4176
g1268
(lp4177
S'local_log_sum_exp'
p4178
ag1271
asbsg1272
(dp4179
sg1274
g0
(g1893
g5
Ntp4180
Rp4181
(dp4182
g80
g251
sg322
g1899
sg1903
(I2
tp4183
sg1905
g251
sbsbI0
tp4184
asg14
S'auto_16810'
p4185
sg17
g0
(g18
g5
Ntp4186
Rp4187
(dp4188
g22
(lp4189
sbsg85
g4147
sg73
g0
(g74
g5
Ntp4190
Rp4191
(dp4192
g78
(I00
I00
I00
tp4193
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4194
Rp4195
(dp4196
g1451
g0
(g809
g5
Ntp4197
Rp4198
(dp4199
g552
(lp4200
g0
(g1456
g5
Ntp4201
Rp4202
(dp4203
g14
S'auto_17269'
p4204
sg16
Nsg17
g0
(g18
g5
Ntp4205
Rp4206
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4207
Rp4208
(dp4209
g14
S'auto_17270'
p4210
sg16
Nsg17
g0
(g18
g5
Ntp4211
Rp4212
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp4213
Rp4214
sg814
(lp4215
g0
(g1456
g5
Ntp4216
Rp4217
(dp4218
g14
S'auto_17271'
p4219
sg16
I0
sg17
g0
(g18
g5
Ntp4220
Rp4221
sg53
Nsg85
g4198
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp4222
Rp4223
(dp4224
g552
(lp4225
g0
(g1456
g5
Ntp4226
Rp4227
(dp4228
g14
S'auto_16799'
p4229
sg16
Nsg17
g0
(g18
g5
Ntp4230
Rp4231
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4232
Rp4233
(dp4234
g14
S'auto_16800'
p4235
sg16
Nsg17
g0
(g18
g5
Ntp4236
Rp4237
sg53
Nsg85
Nsg73
g1931
sbasg1965
I2
sg53
Nsg1966
(g1931
g1931
tp4238
sg814
(lp4239
g0
(g1456
g5
Ntp4240
Rp4241
(dp4242
g14
S'auto_16802'
p4243
sg16
I0
sg17
g0
(g18
g5
Ntp4244
Rp4245
(dp4246
g22
(lp4247
sbsg53
Nsg85
g0
(g809
g5
Ntp4248
Rp4249
(dp4250
g552
(lp4251
g0
(g1456
g5
Ntp4252
Rp4253
(dp4254
g14
S'auto_16801'
p4255
sg16
I0
sg17
g0
(g18
g5
Ntp4256
Rp4257
(dp4258
g22
(lp4259
sbsg53
Nsg85
g0
(g809
g5
Ntp4260
Rp4261
(dp4262
g552
(lp4263
g4227
ag4233
asg17
g0
(g18
g5
Ntp4264
Rp4265
sg814
(lp4266
g4253
asg1274
g3883
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp4267
Rp4268
sg814
(lp4269
g4241
asg1274
g383
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s - %(i1)s;\n%(o0)s = exp((npy_float64)V%(id)s_tmp1);\n}\n'
p4270
sg2001
(g1931
tp4271
sg327
g0
(g1486
g5
Ntp4272
Rp4273
(dp4274
g1490
(I0
tp4275
sbsg2007
(lp4276
S'%(nodename)s_subnode0'
p4277
aS'%(nodename)s_subnode1'
p4278
asg2011
I1
sbsbsg1268
(lp4279
g1493
ag1271
asbsg1272
(dp4280
sg1274
g0
(g318
g5
Ntp4281
Rp4282
(dp4283
g53
Nsg322
g4223
sg330
(dp4284
I0
(lp4285
I0
assg332
Nsg333
g0
(g334
g5
Ntp4286
Rp4287
(dp4288
g338
I3713080549408328131
sg339
(dp4289
I0
I0
ssbsg341
I00
sbsbI1
tp4290
asg14
S'auto_15839'
p4291
sg17
g0
(g18
g5
Ntp4292
Rp4293
(dp4294
g22
(lp4295
sbsg85
g4138
sg73
g0
(g74
g5
Ntp4296
Rp4297
(dp4298
g78
(I00
I00
I01
tp4299
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4300
Rp4301
(dp4302
g1268
(lp4303
g4178
ag1271
asbsg1272
(dp4304
sg1274
g0
(g1387
g5
Ntp4305
Rp4306
(dp4307
g1391
(lp4308
sg1393
(lp4309
I0
aI1
asg1395
(lp4310
I2
asg1397
g1398
sg1399
(I00
I00
tp4311
sg1401
(lp4312
g1403
asg1404
I01
sg1405
(I0
I1
g270
tp4313
sg1407
(dp4314
S'support_code_apply'
p4315
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p4316
ssg1411
(dp4317
I0
(lp4318
I0
assg1414
(lp4319
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p4320
asbsbI0
tp4321
a(g930
I1
tp4322
asg14
S'auto_16042'
p4323
sg17
g0
(g18
g5
Ntp4324
Rp4325
(dp4326
g22
(lp4327
sbsg85
g4129
sg73
g0
(g74
g5
Ntp4328
Rp4329
(dp4330
g78
(I00
I00
tp4331
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4332
Rp4333
(dp4334
g1268
(lp4335
g4041
ag1271
asbsg1272
(dp4336
sg1274
g0
(g4043
g5
Ntp4337
Rp4338
(dp4339
g322
g4049
sg1903
(I2
tp4340
sbsbI0
tp4341
a(g4147
I0
tp4342
asg14
S'auto_16798'
p4343
sg17
g0
(g18
g5
Ntp4344
Rp4345
(dp4346
g22
(lp4347
sbsg85
g948
sg73
g0
(g74
g5
Ntp4348
Rp4349
(dp4350
g78
(I00
I00
I00
tp4351
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4352
Rp4353
(dp4354
g1451
g0
(g809
g5
Ntp4355
Rp4356
(dp4357
g552
(lp4358
g0
(g1456
g5
Ntp4359
Rp4360
(dp4361
g14
S'auto_17242'
p4362
sg16
Nsg17
g0
(g18
g5
Ntp4363
Rp4364
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4365
Rp4366
(dp4367
g14
S'auto_17243'
p4368
sg16
Nsg17
g0
(g18
g5
Ntp4369
Rp4370
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4371
Rp4372
(dp4373
g14
S'auto_17244'
p4374
sg16
Nsg17
g0
(g18
g5
Ntp4375
Rp4376
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp4377
Rp4378
sg814
(lp4379
g0
(g1456
g5
Ntp4380
Rp4381
(dp4382
g14
S'auto_17245'
p4383
sg16
I0
sg17
g0
(g18
g5
Ntp4384
Rp4385
sg53
Nsg85
g4356
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp4386
Rp4387
(dp4388
g552
(lp4389
g0
(g1456
g5
Ntp4390
Rp4391
(dp4392
g14
S'auto_16784'
p4393
sg16
Nsg17
g0
(g18
g5
Ntp4394
Rp4395
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4396
Rp4397
(dp4398
g14
S'auto_16785'
p4399
sg16
Nsg17
g0
(g18
g5
Ntp4400
Rp4401
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4402
Rp4403
(dp4404
g14
S'auto_16786'
p4405
sg16
Nsg17
g0
(g18
g5
Ntp4406
Rp4407
sg53
Nsg85
Nsg73
g1931
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g1931
tp4408
sg814
(lp4409
g0
(g1456
g5
Ntp4410
Rp4411
(dp4412
g14
S'auto_16788'
p4413
sg16
I0
sg17
g0
(g18
g5
Ntp4414
Rp4415
(dp4416
g22
(lp4417
sbsg53
Nsg85
g0
(g809
g5
Ntp4418
Rp4419
(dp4420
g552
(lp4421
g4391
ag0
(g1456
g5
Ntp4422
Rp4423
(dp4424
g14
S'auto_16787'
p4425
sg16
I0
sg17
g0
(g18
g5
Ntp4426
Rp4427
(dp4428
g22
(lp4429
sbsg53
Nsg85
g0
(g809
g5
Ntp4430
Rp4431
(dp4432
g552
(lp4433
g4397
ag4403
asg17
g0
(g18
g5
Ntp4434
Rp4435
sg814
(lp4436
g4423
asg1274
g1899
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp4437
Rp4438
sg814
(lp4439
g4411
asg1274
g3883
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s + %(i2)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p4440
sg2001
(g1931
tp4441
sg327
g0
(g1486
g5
Ntp4442
Rp4443
(dp4444
g1490
(I0
tp4445
sbsg2007
(lp4446
S'%(nodename)s_subnode0'
p4447
aS'%(nodename)s_subnode1'
p4448
asg2011
I1
sbsbsg1268
(lp4449
g1493
ag1271
asbsg1272
(dp4450
sg1274
g0
(g318
g5
Ntp4451
Rp4452
(dp4453
g53
Nsg322
g4387
sg330
(dp4454
I0
(lp4455
I0
assg332
Nsg333
g0
(g334
g5
Ntp4456
Rp4457
(dp4458
g338
I3713080549408328131
sg339
(dp4459
I0
I0
ssbsg341
I00
sbsbI2
tp4460
asg14
S'auto_14833'
p4461
sg17
g0
(g18
g5
Ntp4462
Rp4463
(dp4464
g22
(lp4465
(lp4466
(g25
I306
g26
S'nade_train( * args[1:] )'
p4467
tp4468
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p4469
tp4470
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p4471
tp4472
a(g37
I36
g38
S'self.recompile()'
p4473
tp4474
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p4475
tp4476
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p4477
tp4478
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p4479
tp4480
a(S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/Utils/theano_helpers.py'
p4481
I53
S'log_sum_exp'
p4482
S'return max_x + T.log(T.sum(T.exp(x - T.shape_padright(max_x, 1)), axis))'
p4483
tp4484
aasbsg85
g939
sg73
g0
(g74
g5
Ntp4485
Rp4486
(dp4487
g78
(I00
I00
I01
tp4488
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4489
Rp4490
(dp4491
g1268
(lp4492
g1271
ag1271
asbsg1272
(dp4493
sg1274
g0
(g1387
g5
Ntp4494
Rp4495
(dp4496
g1391
(lp4497
sg1393
(lp4498
I0
aI1
asg1395
(lp4499
I2
asg1397
g1398
sg1399
(I00
I00
tp4500
sg1401
(lp4501
g1403
asg1404
I01
sg1405
(I0
I1
g270
tp4502
sg1407
(dp4503
S'support_code_apply'
p4504
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p4505
ssg1411
(dp4506
I0
(lp4507
I0
assg1414
(lp4508
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p4509
asbsbI0
tp4510
a(g930
I0
tp4511
asg14
S'auto_16043'
p4512
sg17
g0
(g18
g5
Ntp4513
Rp4514
(dp4515
g22
(lp4516
(lp4517
(g25
I306
g26
S'nade_train( * args[1:] )'
p4518
tp4519
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p4520
tp4521
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p4522
tp4523
a(g37
I36
g38
S'self.recompile()'
p4524
tp4525
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p4526
tp4527
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p4528
tp4529
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p4530
tp4531
a(g4481
I52
g4482
S'max_x = T.max(x, axis)'
p4532
tp4533
aasbsg85
g4033
sg73
g0
(g74
g5
Ntp4534
Rp4535
(dp4536
g78
(I00
I00
tp4537
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag4134
ag4161
ag0
(g843
g5
Ntp4538
Rp4539
(dp4540
g16
Nsg53
Nsg798
g801
sg73
g0
(g74
g5
Ntp4541
Rp4542
(dp4543
g78
(I01
I01
tp4544
sg80
S'float64'
p4545
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp4546
(g930
I3
tp4547
asg14
S'auto_15633'
p4548
sg17
g0
(g18
g5
Ntp4549
Rp4550
(dp4551
g22
(lp4552
(lp4553
(g25
I306
g26
S'nade_train( * args[1:] )'
p4554
tp4555
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p4556
tp4557
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p4558
tp4559
a(g37
I36
g38
S'self.recompile()'
p4560
tp4561
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p4562
tp4563
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p4564
tp4565
a(g874
I210
g875
S'output_mask = constantX(1) - mask  # BxD'
p4566
tp4567
aasg878
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xf0?'
p4568
tp4569
Rp4570
sbsg883
g56
(g57
(I0
tp4571
g59
tp4572
Rp4573
(I1
(I1
I1
tp4574
g66
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
p4575
tp4576
bsbag826
asg798
g801
sg814
(lp4577
g920
asg17
g0
(g18
g5
Ntp4578
Rp4579
(dp4580
g1451
g0
(g809
g5
Ntp4581
Rp4582
(dp4583
g552
(lp4584
g0
(g1456
g5
Ntp4585
Rp4586
(dp4587
g14
S'auto_17285'
p4588
sg16
Nsg17
g0
(g18
g5
Ntp4589
Rp4590
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4591
Rp4592
(dp4593
g14
S'auto_17286'
p4594
sg16
Nsg17
g0
(g18
g5
Ntp4595
Rp4596
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4597
Rp4598
(dp4599
g14
S'auto_17287'
p4600
sg16
Nsg17
g0
(g18
g5
Ntp4601
Rp4602
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4603
Rp4604
(dp4605
g14
S'auto_17288'
p4606
sg16
Nsg17
g0
(g18
g5
Ntp4607
Rp4608
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4609
Rp4610
(dp4611
g14
S'auto_17289'
p4612
sg16
Nsg17
g0
(g18
g5
Ntp4613
Rp4614
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp4615
Rp4616
sg814
(lp4617
g0
(g1456
g5
Ntp4618
Rp4619
(dp4620
g14
S'auto_17290'
p4621
sg16
I0
sg17
g0
(g18
g5
Ntp4622
Rp4623
sg53
Nsg85
g4582
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp4624
Rp4625
(dp4626
g552
(lp4627
g0
(g1456
g5
Ntp4628
Rp4629
(dp4630
g14
S'auto_16811'
p4631
sg16
Nsg17
g0
(g18
g5
Ntp4632
Rp4633
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4634
Rp4635
(dp4636
g14
S'auto_16812'
p4637
sg16
Nsg17
g0
(g18
g5
Ntp4638
Rp4639
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4640
Rp4641
(dp4642
g14
S'auto_16813'
p4643
sg16
Nsg17
g0
(g18
g5
Ntp4644
Rp4645
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4646
Rp4647
(dp4648
g14
S'auto_16814'
p4649
sg16
Nsg17
g0
(g18
g5
Ntp4650
Rp4651
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4652
Rp4653
(dp4654
g14
S'auto_16815'
p4655
sg16
Nsg17
g0
(g18
g5
Ntp4656
Rp4657
sg53
Nsg85
Nsg73
g1931
sbasg1965
I5
sg53
Nsg1966
(g1931
g1931
g1931
g1931
g1931
tp4658
sg814
(lp4659
g0
(g1456
g5
Ntp4660
Rp4661
(dp4662
g14
S'auto_16819'
p4663
sg16
I0
sg17
g0
(g18
g5
Ntp4664
Rp4665
(dp4666
g22
(lp4667
sbsg53
Nsg85
g0
(g809
g5
Ntp4668
Rp4669
(dp4670
g552
(lp4671
g0
(g1456
g5
Ntp4672
Rp4673
(dp4674
g14
S'auto_16818'
p4675
sg16
I0
sg17
g0
(g18
g5
Ntp4676
Rp4677
(dp4678
g22
(lp4679
sbsg53
Nsg85
g0
(g809
g5
Ntp4680
Rp4681
(dp4682
g552
(lp4683
g4629
ag4635
ag0
(g1456
g5
Ntp4684
Rp4685
(dp4686
g14
S'auto_16817'
p4687
sg16
I0
sg17
g0
(g18
g5
Ntp4688
Rp4689
(dp4690
g22
(lp4691
sbsg53
Nsg85
g0
(g809
g5
Ntp4692
Rp4693
(dp4694
g552
(lp4695
g4641
asg17
g0
(g18
g5
Ntp4696
Rp4697
sg814
(lp4698
g4685
asg1274
g3939
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp4699
Rp4700
sg814
(lp4701
g4673
asg1274
g1899
sbsg73
g1931
sbag0
(g1456
g5
Ntp4702
Rp4703
(dp4704
g14
S'auto_16816'
p4705
sg16
I0
sg17
g0
(g18
g5
Ntp4706
Rp4707
(dp4708
g22
(lp4709
sbsg53
Nsg85
g0
(g809
g5
Ntp4710
Rp4711
(dp4712
g552
(lp4713
g4647
ag4653
asg17
g0
(g18
g5
Ntp4714
Rp4715
sg814
(lp4716
g4703
asg1274
g3883
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp4717
Rp4718
sg814
(lp4719
g4661
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i3)s - %(i4)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = log((npy_float64)%(i2)s);\nnpy_float64 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i0)s + %(i1)s + V%(id)s_tmp2;\n%(o0)s = V%(id)s_tmp3 * V%(id)s_tmp1;\n}\n'
p4720
sg2001
(g1931
tp4721
sg327
g0
(g1486
g5
Ntp4722
Rp4723
(dp4724
g1490
(I0
tp4725
sbsg2007
(lp4726
S'%(nodename)s_subnode0'
p4727
aS'%(nodename)s_subnode1'
p4728
aS'%(nodename)s_subnode2'
p4729
aS'%(nodename)s_subnode3'
p4730
asg2011
I1
sbsbsg1268
(lp4731
g1493
ag1271
asbsg1272
(dp4732
sg1274
g0
(g318
g5
Ntp4733
Rp4734
(dp4735
g53
Nsg322
g4625
sg330
(dp4736
I0
(lp4737
I0
assg332
Nsg333
g0
(g334
g5
Ntp4738
Rp4739
(dp4740
g338
I3713080549408328131
sg339
(dp4741
I0
I0
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp4742
Rp4743
(dp4744
g78
(I00
I00
tp4745
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp4746
g891
asg17
g0
(g18
g5
Ntp4747
Rp4748
(dp4749
g1268
(lp4750
g1271
ag1271
asbsg1272
(dp4751
sg1274
g0
(g1893
g5
Ntp4752
Rp4753
(dp4754
g80
g251
sg322
g1899
sg1903
(I1
tp4755
sg1905
g251
sbsbsg73
g0
(g74
g5
Ntp4756
Rp4757
(dp4758
g78
(I00
tp4759
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag836
asg798
g801
sg814
(lp4760
g0
(g563
g5
Ntp4761
Rp4762
(dp4763
g16
I0
sg53
Nsg798
g801
sg807
(lp4764
(S'output'
p4765
I0
tp4766
asg14
S'auto_16852'
p4767
sg17
g0
(g18
g5
Ntp4768
Rp4769
(dp4770
g22
(lp4771
sbsg85
g840
sg73
g0
(g74
g5
Ntp4772
Rp4773
(dp4774
g78
(I00
tp4775
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4776
Rp4777
(dp4778
g1451
g0
(g809
g5
Ntp4779
Rp4780
(dp4781
g552
(lp4782
g0
(g1456
g5
Ntp4783
Rp4784
(dp4785
g14
S'auto_17313'
p4786
sg16
Nsg17
g0
(g18
g5
Ntp4787
Rp4788
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4789
Rp4790
(dp4791
g14
S'auto_17314'
p4792
sg16
Nsg17
g0
(g18
g5
Ntp4793
Rp4794
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4795
Rp4796
(dp4797
g14
S'auto_17315'
p4798
sg16
Nsg17
g0
(g18
g5
Ntp4799
Rp4800
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp4801
Rp4802
sg814
(lp4803
g0
(g1456
g5
Ntp4804
Rp4805
(dp4806
g14
S'auto_17316'
p4807
sg16
I0
sg17
g0
(g18
g5
Ntp4808
Rp4809
sg53
Nsg85
g4780
sg73
g1931
sbasg1274
g0
(g1948
g5
Ntp4810
Rp4811
(dp4812
g552
(lp4813
g0
(g1456
g5
Ntp4814
Rp4815
(dp4816
g14
S'auto_16836'
p4817
sg16
Nsg17
g0
(g18
g5
Ntp4818
Rp4819
(dp4820
S'test_value'
p4821
g879
(g66
S'\x00\x00\x00\x00\x00\x005@'
p4822
tp4823
Rp4824
sbsg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4825
Rp4826
(dp4827
g14
S'auto_16837'
p4828
sg16
Nsg17
g0
(g18
g5
Ntp4829
Rp4830
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp4831
Rp4832
(dp4833
g14
S'auto_16838'
p4834
sg16
Nsg17
g0
(g18
g5
Ntp4835
Rp4836
sg53
Nsg85
Nsg73
g1931
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g1931
tp4837
sg814
(lp4838
g0
(g1456
g5
Ntp4839
Rp4840
(dp4841
g14
S'auto_16841'
p4842
sg16
I0
sg17
g0
(g18
g5
Ntp4843
Rp4844
(dp4845
g22
(lp4846
sbsg53
Nsg85
g0
(g809
g5
Ntp4847
Rp4848
(dp4849
g552
(lp4850
g0
(g1456
g5
Ntp4851
Rp4852
(dp4853
g14
S'auto_16840'
p4854
sg16
I0
sg17
g0
(g18
g5
Ntp4855
Rp4856
(dp4857
g22
(lp4858
sbsg53
Nsg85
g0
(g809
g5
Ntp4859
Rp4860
(dp4861
g552
(lp4862
g4815
ag4826
asg17
g0
(g18
g5
Ntp4863
Rp4864
sg814
(lp4865
g4852
asg1274
g3184
sbsg73
g1931
sbag0
(g1456
g5
Ntp4866
Rp4867
(dp4868
g14
S'auto_16839'
p4869
sg16
I0
sg17
g0
(g18
g5
Ntp4870
Rp4871
(dp4872
g22
(lp4873
sbsg53
Nsg85
g0
(g809
g5
Ntp4874
Rp4875
(dp4876
g552
(lp4877
g4815
ag4832
asg17
g0
(g18
g5
Ntp4878
Rp4879
sg814
(lp4880
g4867
asg1274
g3883
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp4881
Rp4882
sg814
(lp4883
g4840
asg1274
g3892
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s - %(i2)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i0)s * %(i1)s;\n%(o0)s = V%(id)s_tmp2 / V%(id)s_tmp1;\n}\n'
p4884
sg2001
(g1931
tp4885
sg327
g0
(g1486
g5
Ntp4886
Rp4887
(dp4888
g1490
(I1
tp4889
sbsg2007
(lp4890
S'%(nodename)s_subnode0'
p4891
aS'%(nodename)s_subnode1'
p4892
aS'%(nodename)s_subnode2'
p4893
asg2011
I1
sbsbsg1268
(lp4894
g1493
ag1271
asbsg1272
(dp4895
sg1274
g0
(g318
g5
Ntp4896
Rp4897
(dp4898
g53
Nsg322
g4811
sg330
(dp4899
I0
(lp4900
I1
assg332
Nsg333
g0
(g334
g5
Ntp4901
Rp4902
(dp4903
g338
I3713080549409410656
sg339
(dp4904
I0
I1
ssbsg341
I00
sbsbI2
tp4905
asg14
S'auto_14664'
p4906
sg17
g0
(g18
g5
Ntp4907
Rp4908
(dp4909
g22
(lp4910
(lp4911
(g25
I306
g26
S'nade_train( * args[1:] )'
p4912
tp4913
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p4914
tp4915
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p4916
tp4917
a(g37
I36
g38
S'self.recompile()'
p4918
tp4919
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p4920
tp4921
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p4922
tp4923
a(g874
I212
g875
S'd = mask.sum(1)  # d is the 1-based index of the dimension whose value to infer (not the size of the context)'
p4924
tp4925
aasbsg85
g831
sg73
g0
(g74
g5
Ntp4926
Rp4927
(dp4928
g78
(I00
tp4929
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp4930
Rp4931
(dp4932
g1268
(lp4933
g1271
ag1271
asbsg1272
(dp4934
sg1274
g0
(g1893
g5
Ntp4935
Rp4936
(dp4937
g80
g251
sg322
g1899
sg1903
(I1
tp4938
sg1905
g251
sbsbI0
tp4939
a(g2900
I2
tp4940
a(g822
I1
tp4941
a(g930
I4
tp4942
asg14
S'auto_14663'
p4943
sg17
g0
(g18
g5
Ntp4944
Rp4945
(dp4946
g22
(lp4947
(lp4948
(g25
I306
g26
S'nade_train( * args[1:] )'
p4949
tp4950
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p4951
tp4952
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p4953
tp4954
a(g37
I36
g38
S'self.recompile()'
p4955
tp4956
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p4957
tp4958
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p4959
tp4960
a(g874
I209
g875
S'mask = mask.T  # BxD'
p4961
tp4962
aasbsg85
g0
(g809
g5
Ntp4963
Rp4964
(dp4965
g552
(lp4966
g0
(g563
g5
Ntp4967
Rp4968
(dp4969
g16
Nsg53
g593
sg798
g801
sg807
(lp4970
(g4964
I0
tp4971
asg14
S'auto_14651'
p4972
sg17
g0
(g18
g5
Ntp4973
Rp4974
(dp4975
g22
g601
sbsg85
Nsg73
g614
sbasg798
g801
sg814
(lp4976
g826
asg17
g0
(g18
g5
Ntp4977
Rp4978
(dp4979
g1268
(lp4980
g1271
ag1271
asbsg1272
(dp4981
sg1274
g0
(g1387
g5
Ntp4982
Rp4983
(dp4984
g1391
(lp4985
sg1393
(lp4986
I1
aI0
asg1395
(lp4987
sg1397
g1398
sg1399
g616
sg1401
(lp4988
g1403
asg1404
I01
sg1405
(I1
I0
tp4989
sg1407
(dp4990
S'support_code_apply'
p4991
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p4992
ssg1411
(dp4993
I0
(lp4994
I0
assg1414
(lp4995
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p4996
asbsbsg73
g0
(g74
g5
Ntp4997
Rp4998
(dp4999
g78
(I00
I00
tp5000
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp5001
g2933
asg17
g0
(g18
g5
Ntp5002
Rp5003
(dp5004
g1451
g0
(g809
g5
Ntp5005
Rp5006
(dp5007
g552
(lp5008
g0
(g1456
g5
Ntp5009
Rp5010
(dp5011
g14
S'auto_16977'
p5012
sg16
Nsg17
g0
(g18
g5
Ntp5013
Rp5014
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp5015
Rp5016
(dp5017
g14
S'auto_16978'
p5018
sg16
Nsg17
g0
(g18
g5
Ntp5019
Rp5020
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp5021
Rp5022
sg814
(lp5023
g0
(g1456
g5
Ntp5024
Rp5025
(dp5026
g14
S'auto_16979'
p5027
sg16
I0
sg17
g0
(g18
g5
Ntp5028
Rp5029
sg53
Nsg85
g5006
sg73
g1931
sbasg1274
g3184
sbsg4093
(lp5030
g1493
ag1493
asg1268
(lp5031
g1271
aS"('Revert', 'inplace_elemwise_optimizer')"
p5032
aS"('Revert', 'inplace_elemwise_optimizer')"
p5033
ag1271
asbsg1272
(dp5034
sg1274
g0
(g318
g5
Ntp5035
Rp5036
(dp5037
g379
g380
sg322
g3184
sg53
S'Elemwise{mul,no_inplace}'
p5038
sg330
(dp5039
sg332
g1501
sg333
g0
(g334
g5
Ntp5040
Rp5041
(dp5042
g338
I0
sg339
(dp5043
sbsg341
I00
sg307
S"elementwise multiplication\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p5044
sbsbI0
tp5045
asg14
S'auto_14688'
p5046
sg17
g0
(g18
g5
Ntp5047
Rp5048
(dp5049
g22
(lp5050
(lp5051
(g25
I306
g26
S'nade_train( * args[1:] )'
p5052
tp5053
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p5054
tp5055
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p5056
tp5057
a(g37
I36
g38
S'self.recompile()'
p5058
tp5059
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p5060
tp5061
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p5062
tp5063
a(g874
I208
g875
S'x = x.T  # BxD'
p5064
tp5065
aasbsg85
g811
sg73
g0
(g74
g5
Ntp5066
Rp5067
(dp5068
g78
(I00
I00
tp5069
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp5070
Rp5071
(dp5072
g1268
(lp5073
g1271
ag1271
asbsg1272
(dp5074
sg1274
g0
(g1387
g5
Ntp5075
Rp5076
(dp5077
g1391
(lp5078
sg1393
(lp5079
I1
aI0
asg1395
(lp5080
sg1397
g1398
sg1399
g588
sg1401
(lp5081
g1403
asg1404
I01
sg1405
(I1
I0
tp5082
sg1407
(dp5083
S'support_code_apply'
p5084
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p5085
ssg1411
(dp5086
I0
(lp5087
I0
assg1414
(lp5088
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p5089
asbsbI0
tp5090
a(g3655
I0
tp5091
a(g2267
I0
tp5092
asg14
S'auto_14650'
p5093
sg17
g0
(g18
g5
Ntp5094
Rp5095
(dp5096
g22
g571
sbsg85
Nsg73
g586
sbag4968
ag2962
ag3000
ag2856
ag3242
ag3260
ag1205
ag3596
ag1155
ag2510
ag1581
ag1762
asg814
(lp5097
g4762
asS'update_mapping'
p5098
(dp5099
sS'merge_feature'
p5100
g0
(ctheano.gof.opt
MergeFeature
p5101
g5
Ntp5102
Rp5103
(dp5104
S'scheduled'
p5105
(lp5106
sS'nodes_seen'
p5107
c__builtin__
set
p5108
((lp5109
g1577
ag1637
ag1623
ag3592
ag1594
ag1209
ag939
ag1758
ag1160
ag1585
ag1729
ag1177
ag2285
ag1056
ag2823
ag2900
ag971
ag930
ag956
ag3256
ag948
ag4964
ag2477
ag3274
ag3238
ag1691
ag831
ag2809
ag2294
ag1562
ag1122
ag1093
ag2421
ag2852
ag1801
ag2780
ag1186
ag2929
ag1085
ag1682
ag811
ag4033
ag822
ag4147
ag1420
ag4138
ag1810
ag2506
ag2267
ag4129
ag3655
ag1151
ag4156
ag2308
ag1201
ag1261
ag980
ag1247
ag840
ag1553
ag1218
ag2173
ag1169
ag916
ag2439
atp5110
Rp5111
sS'const_sig_inv'
p5112
(itheano.gof.opt
_metadict
p5113
(dp5114
S'd'
p5115
(dp5116
g0
(ctheano.tensor.var
TensorConstantSignature
p5117
g2
(S'TupleType'
p5118
tp5119
Rp5120
(g2984
g2996
tp5121
tp5122
Rp5123
(dp5124
S'has_nan'
p5125
I00
sS'_sum'
p5126
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xf0?'
p5127
tp5128
Rp5129
sS'_no_nan'
p5130
g2996
sbg2981
sg0
(g5117
g5120
(g1011
g1026
tp5131
tp5132
Rp5133
(dp5134
g5125
I00
sg5126
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xe0\xbf'
p5135
tp5136
Rp5137
sg5130
g1026
sbg1008
sg0
(g5117
g5120
(g987
g1003
tp5138
tp5139
Rp5140
(dp5141
g5125
I00
sg5126
g879
(g66
S'\xb4\xbed\xc8\xf1g\xed\xbf'
p5142
tp5143
Rp5144
sg5130
g1003
sbg984
sg0
(g5117
g5120
(g3025
g3064
tp5145
tp5146
Rp5147
(dp5148
g5125
I00
sg5126
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p5149
tp5150
Rp5151
sg5130
g3064
sbg3022
sg0
(g5117
g5120
(g4542
g4573
tp5152
tp5153
Rp5154
(dp5155
g5125
I00
sg5126
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xf0?'
p5156
tp5157
Rp5158
sg5130
g4573
sbg4539
s(g1465
g3387
tp5159
g3252
sg0
(g5117
g5120
(g848
g886
tp5160
tp5161
Rp5162
(dp5163
g5125
I00
sg5126
g879
(g66
S'\x00\x00\x00\x00\x00\x005@'
p5164
tp5165
Rp5166
sg5130
g886
sbg845
ssS'l'
p5167
(lp5168
sbsS'noinput_nodes'
p5169
g0
(ctheano.misc.ordered_set
OrderedSet
p5170
g5
Ntp5171
Rp5172
(dp5173
S'_OrderedSet__root'
p5174
g0
(ctheano.misc.ordered_set
Link
p5175
g5
Ntp5176
Rp5177
(lp5178
g5177
ag5177
absS'_OrderedSet__map'
p5179
(dp5180
sbsS'blacklist'
p5181
(lp5182
sS'seen_constants'
p5183
g5108
((lp5184
I140634603747216
aI140634604850512
aI140634604048848
aI140634603973456
aI140634604043152
aI140634603675280
aI140634604076688
atp5185
Rp5186
sS'const_sig'
p5187
(itheano.gof.opt
_metadict
p5188
(dp5189
g5115
(dp5190
g984
g5140
sg3022
g5147
sg845
g5162
sg3252
g5159
sg2981
g5123
sg1008
g5133
sg4539
g5154
ssg5167
(lp5191
sbsbsS'destroy_handler'
p5192
g0
(ctheano.gof.destroyhandler
DestroyHandler
p5193
g5
Ntp5194
Rp5195
(dp5196
S'impact'
p5197
(dp5198
g2784
g0
(g5170
g5
Ntp5199
Rp5200
(dp5201
g5174
g0
(g5175
g5
Ntp5202
Rp5203
(lp5204
g0
(g5175
g5
Ntp5205
Rp5206
(lp5207
g5203
ag5203
ag2784
abag5206
absg5179
(dp5208
g2784
g5206
ssbsg4125
g0
(g5170
g5
Ntp5209
Rp5210
(dp5211
g5174
g0
(g5175
g5
Ntp5212
Rp5213
(lp5214
g0
(g5175
g5
Ntp5215
Rp5216
(lp5217
g5213
ag5213
ag4125
abag5216
absg5179
(dp5218
g4125
g5216
ssbsg975
g0
(g5170
g5
Ntp5219
Rp5220
(dp5221
g5174
g0
(g5175
g5
Ntp5222
Rp5223
(lp5224
g0
(g5175
g5
Ntp5225
Rp5226
(lp5227
g5223
ag5223
ag975
abag5226
absg5179
(dp5228
g975
g5226
ssbsg2443
g0
(g5170
g5
Ntp5229
Rp5230
(dp5231
g5174
g0
(g5175
g5
Ntp5232
Rp5233
(lp5234
g0
(g5175
g5
Ntp5235
Rp5236
(lp5237
g0
(g5175
g5
Ntp5238
Rp5239
(lp5240
g5233
ag5236
ag2473
abag5233
ag2443
abag5239
absg5179
(dp5241
g2443
g5236
sg2473
g5239
ssbsg934
g0
(g5170
g5
Ntp5242
Rp5243
(dp5244
g5174
g0
(g5175
g5
Ntp5245
Rp5246
(lp5247
g0
(g5175
g5
Ntp5248
Rp5249
(lp5250
g0
(g5175
g5
Ntp5251
Rp5252
(lp5253
g5246
ag5249
ag944
abag5246
ag934
abag5252
absg5179
(dp5254
g944
g5252
sg934
g5249
ssbsg1190
g0
(g5170
g5
Ntp5255
Rp5256
(dp5257
g5174
g0
(g5175
g5
Ntp5258
Rp5259
(lp5260
g0
(g5175
g5
Ntp5261
Rp5262
(lp5263
g5259
ag5259
ag1190
abag5262
absg5179
(dp5264
g1190
g5262
ssbsg952
g0
(g5170
g5
Ntp5265
Rp5266
(dp5267
g5174
g0
(g5175
g5
Ntp5268
Rp5269
(lp5270
g0
(g5175
g5
Ntp5271
Rp5272
(lp5273
g5269
ag5269
ag952
abag5272
absg5179
(dp5274
g952
g5272
ssbsg1165
g0
(g5170
g5
Ntp5275
Rp5276
(dp5277
g5174
g0
(g5175
g5
Ntp5278
Rp5279
(lp5280
g0
(g5175
g5
Ntp5281
Rp5282
(lp5283
g5279
ag5279
ag1165
abag5282
absg5179
(dp5284
g1165
g5282
ssbsg1566
g0
(g5170
g5
Ntp5285
Rp5286
(dp5287
g5174
g0
(g5175
g5
Ntp5288
Rp5289
(lp5290
g0
(g5175
g5
Ntp5291
Rp5292
(lp5293
g5289
ag5289
ag1566
abag5292
absg5179
(dp5294
g1566
g5292
ssbsg2890
g0
(g5170
g5
Ntp5295
Rp5296
(dp5297
g5174
g0
(g5175
g5
Ntp5298
Rp5299
(lp5300
g0
(g5175
g5
Ntp5301
Rp5302
(lp5303
g5299
ag5299
ag2890
abag5302
absg5179
(dp5304
g2890
g5302
ssbsg1060
g0
(g5170
g5
Ntp5305
Rp5306
(dp5307
g5174
g0
(g5175
g5
Ntp5308
Rp5309
(lp5310
g0
(g5175
g5
Ntp5311
Rp5312
(lp5313
g0
(g5175
g5
Ntp5314
Rp5315
(lp5316
g5309
ag5312
ag1031
abag5309
ag1060
abag5315
absg5179
(dp5317
g1031
g5315
sg1060
g5312
ssbsg891
g0
(g5170
g5
Ntp5318
Rp5319
(dp5320
g5174
g0
(g5175
g5
Ntp5321
Rp5322
(lp5323
g0
(g5175
g5
Ntp5324
Rp5325
(lp5326
g5322
ag5322
ag891
abag5325
absg5179
(dp5327
g891
g5325
ssbsg2904
g0
(g5170
g5
Ntp5328
Rp5329
(dp5330
g5174
g0
(g5175
g5
Ntp5331
Rp5332
(lp5333
g0
(g5175
g5
Ntp5334
Rp5335
(lp5336
g5332
ag5332
ag2904
abag5335
absg5179
(dp5337
g2904
g5335
ssbsg1687
g0
(g5170
g5
Ntp5338
Rp5339
(dp5340
g5174
g0
(g5175
g5
Ntp5341
Rp5342
(lp5343
g0
(g5175
g5
Ntp5344
Rp5345
(lp5346
g0
(g5175
g5
Ntp5347
Rp5348
(lp5349
g5342
ag5345
ag1725
abag5342
ag1687
abag5348
absg5179
(dp5350
g1725
g5348
sg1687
g5345
ssbssS'droot'
p5351
(dp5352
g2784
g2784
sg4125
g4125
sg975
g975
sg2443
g2443
sg2473
g2443
sg1190
g1190
sg1725
g1687
sg944
g934
sg1165
g1165
sg1566
g1566
sg2890
g2890
sg1031
g1060
sg1060
g1060
sg934
g934
sg891
g891
sg952
g952
sg2904
g2904
sg1687
g1687
ssS'view_o'
p5353
(dp5354
g3270
g0
(g5170
g5
Ntp5355
Rp5356
(dp5357
g5174
g0
(g5175
g5
Ntp5358
Rp5359
(lp5360
g0
(g5175
g5
Ntp5361
Rp5362
(lp5363
g5359
ag5359
ag3279
abag5362
absg5179
(dp5364
g3279
g5362
ssbsg4134
g0
(g5170
g5
Ntp5365
Rp5366
(dp5367
g5174
g0
(g5175
g5
Ntp5368
Rp5369
(lp5370
g0
(g5175
g5
Ntp5371
Rp5372
(lp5373
g5369
ag5369
ag4143
abag5372
absg5179
(dp5374
g4143
g5372
ssbsg934
g0
(g5170
g5
Ntp5375
Rp5376
(dp5377
g5174
g0
(g5175
g5
Ntp5378
Rp5379
(lp5380
g0
(g5175
g5
Ntp5381
Rp5382
(lp5383
g5379
ag5379
ag944
abag5382
absg5179
(dp5384
g944
g5382
ssbsg1126
g0
(g5170
g5
Ntp5385
Rp5386
(dp5387
g5174
g0
(g5175
g5
Ntp5388
Rp5389
(lp5390
g0
(g5175
g5
Ntp5391
Rp5392
(lp5393
g5389
ag5389
ag1097
abag5392
absg5179
(dp5394
g1097
g5392
ssbsg1205
g0
(g5170
g5
Ntp5395
Rp5396
(dp5397
g5174
g0
(g5175
g5
Ntp5398
Rp5399
(lp5400
g0
(g5175
g5
Ntp5401
Rp5402
(lp5403
g5399
ag5399
ag1214
abag5402
absg5179
(dp5404
g1214
g5402
ssbsg1155
g0
(g5170
g5
Ntp5405
Rp5406
(dp5407
g5174
g0
(g5175
g5
Ntp5408
Rp5409
(lp5410
g0
(g5175
g5
Ntp5411
Rp5412
(lp5413
g5409
ag5409
ag1126
abag5412
absg5179
(dp5414
g1126
g5412
ssbsg2856
g0
(g5170
g5
Ntp5415
Rp5416
(dp5417
g5174
g0
(g5175
g5
Ntp5418
Rp5419
(lp5420
g0
(g5175
g5
Ntp5421
Rp5422
(lp5423
g5419
ag5419
ag2827
abag5422
absg5179
(dp5424
g2827
g5422
ssbsg1762
g0
(g5170
g5
Ntp5425
Rp5426
(dp5427
g5174
g0
(g5175
g5
Ntp5428
Rp5429
(lp5430
g0
(g5175
g5
Ntp5431
Rp5432
(lp5433
g5429
ag5429
ag1733
abag5432
absg5179
(dp5434
g1733
g5432
ssbsg805
g0
(g5170
g5
Ntp5435
Rp5436
(dp5437
g5174
g0
(g5175
g5
Ntp5438
Rp5439
(lp5440
g0
(g5175
g5
Ntp5441
Rp5442
(lp5443
g0
(g5175
g5
Ntp5444
Rp5445
(lp5446
g5439
ag5442
ag817
abag5439
ag3630
abag5445
absg5179
(dp5447
g817
g5445
sg3630
g5442
ssbsg2443
g0
(g5170
g5
Ntp5448
Rp5449
(dp5450
g5174
g0
(g5175
g5
Ntp5451
Rp5452
(lp5453
g0
(g5175
g5
Ntp5454
Rp5455
(lp5456
g5452
ag5452
ag2473
abag5455
absg5179
(dp5457
g2473
g5455
ssbsg1590
g0
(g5170
g5
Ntp5458
Rp5459
(dp5460
g5174
g0
(g5175
g5
Ntp5461
Rp5462
(lp5463
g0
(g5175
g5
Ntp5464
Rp5465
(lp5466
g5462
ag5462
ag1678
abag5465
absg5179
(dp5467
g1678
g5465
ssbsg1060
g0
(g5170
g5
Ntp5468
Rp5469
(dp5470
g5174
g0
(g5175
g5
Ntp5471
Rp5472
(lp5473
g0
(g5175
g5
Ntp5474
Rp5475
(lp5476
g5472
ag5472
ag1031
abag5475
absg5179
(dp5477
g1031
g5475
ssbsg4968
g0
(g5170
g5
Ntp5478
Rp5479
(dp5480
g5174
g0
(g5175
g5
Ntp5481
Rp5482
(lp5483
g0
(g5175
g5
Ntp5484
Rp5485
(lp5486
g5482
ag5482
ag826
abag5485
absg5179
(dp5487
g826
g5485
ssbsg1214
g0
(g5170
g5
Ntp5488
Rp5489
(dp5490
g5174
g0
(g5175
g5
Ntp5491
Rp5492
(lp5493
g0
(g5175
g5
Ntp5494
Rp5495
(lp5496
g5492
ag5492
ag1319
abag5495
absg5179
(dp5497
g1319
g5495
ssbsg3596
g0
(g5170
g5
Ntp5498
Rp5499
(dp5500
g5174
g0
(g5175
g5
Ntp5501
Rp5502
(lp5503
g0
(g5175
g5
Ntp5504
Rp5505
(lp5506
g5502
ag5502
ag3567
abag5505
absg5179
(dp5507
g3567
g5505
ssbsg2510
g0
(g5170
g5
Ntp5508
Rp5509
(dp5510
g5174
g0
(g5175
g5
Ntp5511
Rp5512
(lp5513
g0
(g5175
g5
Ntp5514
Rp5515
(lp5516
g5512
ag5512
ag2481
abag5515
absg5179
(dp5517
g2481
g5515
ssbsg3242
g0
(g5170
g5
Ntp5518
Rp5519
(dp5520
g5174
g0
(g5175
g5
Ntp5521
Rp5522
(lp5523
g0
(g5175
g5
Ntp5524
Rp5525
(lp5526
g5522
ag5522
ag3213
abag5525
absg5179
(dp5527
g3213
g5525
ssbsg3260
g0
(g5170
g5
Ntp5528
Rp5529
(dp5530
g5174
g0
(g5175
g5
Ntp5531
Rp5532
(lp5533
g0
(g5175
g5
Ntp5534
Rp5535
(lp5536
g5532
ag5532
ag3270
abag5535
absg5179
(dp5537
g3270
g5535
ssbsg1581
g0
(g5170
g5
Ntp5538
Rp5539
(dp5540
g5174
g0
(g5175
g5
Ntp5541
Rp5542
(lp5543
g0
(g5175
g5
Ntp5544
Rp5545
(lp5546
g5542
ag5542
ag1590
abag5545
absg5179
(dp5547
g1590
g5545
ssbsg1806
g0
(g5170
g5
Ntp5548
Rp5549
(dp5550
g5174
g0
(g5175
g5
Ntp5551
Rp5552
(lp5553
g0
(g5175
g5
Ntp5554
Rp5555
(lp5556
g5552
ag5552
ag1815
abag5555
absg5179
(dp5557
g1815
g5555
ssbsg1687
g0
(g5170
g5
Ntp5558
Rp5559
(dp5560
g5174
g0
(g5175
g5
Ntp5561
Rp5562
(lp5563
g0
(g5175
g5
Ntp5564
Rp5565
(lp5566
g5562
ag5562
ag1725
abag5565
absg5179
(dp5567
g1725
g5565
ssbssS'view_i'
p5568
(dp5569
g1725
g1687
sg2473
g2443
sg3213
g3242
sg1031
g1060
sg1126
g1155
sg1097
g1126
sg944
g934
sg2827
g2856
sg3567
g3596
sg4143
g4134
sg1678
g1590
sg1815
g1806
sg1214
g1205
sg1319
g1214
sg817
g805
sg1733
g1762
sg3270
g3260
sg826
g4968
sg1590
g1581
sg3279
g3270
sg3630
g805
sg2481
g2510
ssg798
g801
sS'do_imports_on_attach'
p5570
I01
sg807
ccollections
OrderedDict
p5571
((lp5572
(lp5573
g4968
ag5571
((lp5574
(lp5575
g4964
aI1
aatp5576
Rp5577
aa(lp5578
g826
ag5571
((lp5579
(lp5580
g831
aI1
aa(lp5581
g2900
aI1
aa(lp5582
g822
aI1
aa(lp5583
g930
aI1
aatp5584
Rp5585
aa(lp5586
g836
ag5571
((lp5587
(lp5588
g840
aI1
aatp5589
Rp5590
aa(lp5591
g2510
ag5571
((lp5592
(lp5593
g2506
aI1
aatp5594
Rp5595
aa(lp5596
g2481
ag5571
((lp5597
(lp5598
g2477
aI1
aatp5599
Rp5600
aa(lp5601
g1155
ag5571
((lp5602
(lp5603
g1160
aI1
aa(lp5604
g2421
aI1
aa(lp5605
g2308
aI1
aa(lp5606
g1151
aI1
aatp5607
Rp5608
aa(lp5609
g1165
ag5571
((lp5610
(lp5611
g1169
aI1
aa(lp5612
g2285
aI1
aatp5613
Rp5614
aa(lp5615
g2280
ag5571
((lp5616
(lp5617
g1169
aI1
aa(lp5618
g2285
aI1
aatp5619
Rp5620
aa(lp5621
g805
ag5571
((lp5622
(lp5623
g2267
aI1
aa(lp5624
g811
aI1
aa(lp5625
g3655
aI1
aatp5626
Rp5627
aa(lp5628
g1173
ag5571
((lp5629
(lp5630
g1169
aI1
aa(lp5631
g1553
aI1
aa(lp5632
g1177
aI1
aatp5633
Rp5634
aa(lp5635
g2435
ag5571
((lp5636
(lp5637
g2439
aI1
aatp5638
Rp5639
aa(lp5640
g0
(g563
g5
Ntp5641
Rp5642
(dp5643
g16
I0
sg53
Nsg798
g801
sg807
(lp5644
sg14
S'auto_15506'
p5645
sg17
g0
(g18
g5
Ntp5646
Rp5647
(dp5648
g4058
g4059
sg22
(lp5649
sbsg85
g0
(g809
g5
Ntp5650
Rp5651
(dp5652
g552
(lp5653
g1165
ag2280
asg798
g801
sg814
(lp5654
g5642
asg17
g0
(g18
g5
Ntp5655
Rp5656
(dp5657
g4093
(lp5658
g1493
asg1268
(lp5659
S'local_mul_canonizer'
p5660
asbsg1272
(dp5661
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp5662
Rp5663
(dp5664
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag5571
((lp5665
tp5666
Rp5667
aa(lp5668
g2298
ag5571
((lp5669
(lp5670
g2294
aI1
aatp5671
Rp5672
aa(lp5673
g2322
ag5571
((lp5674
(lp5675
g1122
aI1
aatp5676
Rp5677
aa(lp5678
g1126
ag5571
((lp5679
(lp5680
g1122
aI1
aatp5681
Rp5682
aa(lp5683
g1097
ag5571
((lp5684
(lp5685
g1093
aI1
aatp5686
Rp5687
aa(lp5688
g3260
ag5571
((lp5689
(lp5690
g3256
aI1
aatp5691
Rp5692
aa(lp5693
g3252
ag5571
((lp5694
(lp5695
g3256
aI1
aa(lp5696
g3238
aI1
aatp5697
Rp5698
aa(lp5699
g3270
ag5571
((lp5700
(lp5701
g3274
aI1
aatp5702
Rp5703
aa(lp5704
g3279
ag5571
((lp5705
(lp5706
g2780
aI1
aatp5707
Rp5708
aa(lp5709
g3242
ag5571
((lp5710
(lp5711
g3238
aI1
aatp5712
Rp5713
aa(lp5714
g3213
ag5571
((lp5715
(lp5716
g2809
aI1
aatp5717
Rp5718
aa(lp5719
g817
ag5571
((lp5720
(lp5721
g822
aI1
aatp5722
Rp5723
aa(lp5724
g2933
ag5571
((lp5725
(lp5726
g2929
aI1
aatp5727
Rp5728
aa(lp5729
g2962
ag5571
((lp5730
(lp5731
g2929
aI1
aatp5732
Rp5733
aa(lp5734
g2904
ag5571
((lp5735
(lp5736
g2900
aI1
aatp5737
Rp5738
aa(lp5739
g2981
ag5571
((lp5740
(lp5741
g2900
aI2
aatp5742
Rp5743
aa(lp5744
g3000
ag5571
((lp5745
(lp5746
g2900
aI1
aatp5747
Rp5748
aa(lp5749
g0
(g563
g5
Ntp5750
Rp5751
(dp5752
g16
I0
sg53
Nsg798
g801
sg807
(lp5753
sg14
S'auto_15902'
p5754
sg17
g0
(g18
g5
Ntp5755
Rp5756
(dp5757
g22
(lp5758
sbsg85
g0
(g809
g5
Ntp5759
Rp5760
(dp5761
g552
(lp5762
g2904
ag2981
ag826
ag3000
ag2981
asg798
g801
sg814
(lp5763
g5751
asg17
g0
(g18
g5
Ntp5764
Rp5765
(dp5766
g4093
(lp5767
S'LocalOptGroup(local_inplace_gemm,local_inplace_gemv,local_inplace_ger)'
p5768
asg1268
(lp5769
S'GemmOptimizer'
p5770
asbsg1272
(dp5771
sg1274
g0
(g3015
g5
Ntp5772
Rp5773
(dp5774
g1404
I00
sbsbsg73
g2977
sbag5571
((lp5775
tp5776
Rp5777
aa(lp5778
g2856
ag5571
((lp5779
(lp5780
g2852
aI1
aatp5781
Rp5782
aa(lp5783
g2827
ag5571
((lp5784
(lp5785
g2823
aI1
aatp5786
Rp5787
aa(lp5788
g3022
ag5571
((lp5789
(lp5790
g2823
aI1
aa(lp5791
g2780
aI1
aatp5792
Rp5793
aa(lp5794
g0
(g563
g5
Ntp5795
Rp5796
(dp5797
g16
I0
sg53
Nsg798
g801
sg807
(lp5798
sg14
S'auto_16602'
p5799
sg17
g0
(g18
g5
Ntp5800
Rp5801
(dp5802
g22
(lp5803
sbsg85
g0
(g809
g5
Ntp5804
Rp5805
(dp5806
g552
(lp5807
g2827
ag2890
ag3022
asg798
g801
sg814
(lp5808
g5796
asg17
g0
(g18
g5
Ntp5809
Rp5810
(dp5811
g4093
(lp5812
g1493
asg1268
(lp5813
S'FusionOptimizer'
p5814
asbsg1272
(dp5815
sg1274
g0
(g318
g5
Ntp5816
Rp5817
(dp5818
g53
Nsg322
g0
(g1948
g5
Ntp5819
Rp5820
(dp5821
g552
(lp5822
g0
(g1456
g5
Ntp5823
Rp5824
(dp5825
g14
S'auto_16585'
p5826
sg16
Nsg17
g0
(g18
g5
Ntp5827
Rp5828
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp5829
Rp5830
(dp5831
g14
S'auto_16586'
p5832
sg16
Nsg17
g0
(g18
g5
Ntp5833
Rp5834
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp5835
Rp5836
(dp5837
g14
S'auto_16587'
p5838
sg16
Nsg17
g0
(g18
g5
Ntp5839
Rp5840
sg53
Nsg85
Nsg73
g3094
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g3094
tp5841
sg814
(lp5842
g0
(g1456
g5
Ntp5843
Rp5844
(dp5845
g14
S'auto_16591'
p5846
sg16
I0
sg17
g0
(g18
g5
Ntp5847
Rp5848
(dp5849
g22
g3137
sbsg53
Nsg85
g0
(g809
g5
Ntp5850
Rp5851
(dp5852
g552
(lp5853
g0
(g1456
g5
Ntp5854
Rp5855
(dp5856
g14
S'auto_16589'
p5857
sg16
I0
sg17
g0
(g18
g5
Ntp5858
Rp5859
(dp5860
g22
g3149
sbsg53
Nsg85
g0
(g809
g5
Ntp5861
Rp5862
(dp5863
g552
(lp5864
g5824
ag5830
asg17
g0
(g18
g5
Ntp5865
Rp5866
sg814
(lp5867
g5855
asg1274
g1899
sbsg73
g1931
sbag0
(g1456
g5
Ntp5868
Rp5869
(dp5870
g14
S'auto_16590'
p5871
sg16
I0
sg17
g0
(g18
g5
Ntp5872
Rp5873
(dp5874
g22
g3164
sbsg53
Nsg85
g0
(g809
g5
Ntp5875
Rp5876
(dp5877
g552
(lp5878
g5855
ag5836
asg17
g0
(g18
g5
Ntp5879
Rp5880
sg814
(lp5881
g5869
asg1274
g3174
sbsg73
g3178
sbasg17
g0
(g18
g5
Ntp5882
Rp5883
sg814
(lp5884
g5844
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\nnpy_bool V%(id)s_tmp2;\nV%(id)s_tmp2 = (V%(id)s_tmp1 > %(i2)s);\n%(o0)s = V%(id)s_tmp1 * V%(id)s_tmp2;\n}\n'
p5885
sg2001
(g1931
tp5886
sg2007
(lp5887
S'%(nodename)s_subnode0'
p5888
aS'%(nodename)s_subnode1'
p5889
aS'%(nodename)s_subnode2'
p5890
asg2011
I1
sbsg330
(dp5891
sg332
Nsg333
g0
(g334
g5
Ntp5892
Rp5893
(dp5894
g338
I0
sg339
(dp5895
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp5896
Rp5897
(dp5898
g78
(I00
I00
tp5899
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp5900
tp5901
Rp5902
aa(lp5903
g2784
ag5571
((lp5904
(lp5905
g2780
aI1
aatp5906
Rp5907
aa(lp5908
g0
(g563
g5
Ntp5909
Rp5910
(dp5911
g16
I0
sg53
Nsg798
g801
sg807
(lp5912
sg14
S'auto_16576'
p5913
sg17
g0
(g18
g5
Ntp5914
Rp5915
(dp5916
g22
(lp5917
sbsg85
g0
(g809
g5
Ntp5918
Rp5919
(dp5920
g552
(lp5921
g2784
ag3279
ag3022
asg798
g801
sg814
(lp5922
g5910
asg17
g0
(g18
g5
Ntp5923
Rp5924
(dp5925
g4093
(lp5926
g1493
asg1268
(lp5927
g5814
asbsg1272
(dp5928
sg1274
g0
(g318
g5
Ntp5929
Rp5930
(dp5931
g53
Nsg322
g0
(g1948
g5
Ntp5932
Rp5933
(dp5934
g552
(lp5935
g0
(g1456
g5
Ntp5936
Rp5937
(dp5938
g14
S'auto_16559'
p5939
sg16
Nsg17
g0
(g18
g5
Ntp5940
Rp5941
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp5942
Rp5943
(dp5944
g14
S'auto_16560'
p5945
sg16
Nsg17
g0
(g18
g5
Ntp5946
Rp5947
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp5948
Rp5949
(dp5950
g14
S'auto_16561'
p5951
sg16
Nsg17
g0
(g18
g5
Ntp5952
Rp5953
sg53
Nsg85
Nsg73
g3094
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g3094
tp5954
sg814
(lp5955
g0
(g1456
g5
Ntp5956
Rp5957
(dp5958
g14
S'auto_16565'
p5959
sg16
I0
sg17
g0
(g18
g5
Ntp5960
Rp5961
(dp5962
g22
g3479
sbsg53
Nsg85
g0
(g809
g5
Ntp5963
Rp5964
(dp5965
g552
(lp5966
g0
(g1456
g5
Ntp5967
Rp5968
(dp5969
g14
S'auto_16563'
p5970
sg16
I0
sg17
g0
(g18
g5
Ntp5971
Rp5972
(dp5973
g22
g3491
sbsg53
Nsg85
g0
(g809
g5
Ntp5974
Rp5975
(dp5976
g552
(lp5977
g5937
ag5943
asg17
g0
(g18
g5
Ntp5978
Rp5979
sg814
(lp5980
g5968
asg1274
g1899
sbsg73
g1931
sbag0
(g1456
g5
Ntp5981
Rp5982
(dp5983
g14
S'auto_16564'
p5984
sg16
I0
sg17
g0
(g18
g5
Ntp5985
Rp5986
(dp5987
g22
g3506
sbsg53
Nsg85
g0
(g809
g5
Ntp5988
Rp5989
(dp5990
g552
(lp5991
g5968
ag5949
asg17
g0
(g18
g5
Ntp5992
Rp5993
sg814
(lp5994
g5982
asg1274
g3174
sbsg73
g3178
sbasg17
g0
(g18
g5
Ntp5995
Rp5996
sg814
(lp5997
g5957
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\nnpy_bool V%(id)s_tmp2;\nV%(id)s_tmp2 = (V%(id)s_tmp1 > %(i2)s);\n%(o0)s = V%(id)s_tmp1 * V%(id)s_tmp2;\n}\n'
p5998
sg2001
(g1931
tp5999
sg2007
(lp6000
S'%(nodename)s_subnode0'
p6001
aS'%(nodename)s_subnode1'
p6002
aS'%(nodename)s_subnode2'
p6003
asg2011
I1
sbsg330
(dp6004
sg332
Nsg333
g0
(g334
g5
Ntp6005
Rp6006
(dp6007
g338
I0
sg339
(dp6008
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp6009
Rp6010
(dp6011
g78
(I00
I00
tp6012
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6013
tp6014
Rp6015
aa(lp6016
g2443
ag5571
((lp6017
(lp6018
g2439
aI1
aatp6019
Rp6020
aa(lp6021
g2473
ag5571
((lp6022
(lp6023
g2477
aI1
aatp6024
Rp6025
aa(lp6026
g0
(g563
g5
Ntp6027
Rp6028
(dp6029
g16
I0
sg53
Nsg798
g801
sg807
(lp6030
sg14
S'auto_16475'
p6031
sg17
g0
(g18
g5
Ntp6032
Rp6033
(dp6034
g22
(lp6035
sbsg85
g0
(g809
g5
Ntp6036
Rp6037
(dp6038
g552
(lp6039
g2473
ag2481
asg798
g801
sg814
(lp6040
g6028
asg17
g0
(g18
g5
Ntp6041
Rp6042
(dp6043
g4093
(lp6044
g1493
asg1268
(lp6045
g5814
asbsg1272
(dp6046
sg1274
g0
(g318
g5
Ntp6047
Rp6048
(dp6049
g53
Nsg322
g0
(g1948
g5
Ntp6050
Rp6051
(dp6052
g552
(lp6053
g0
(g1456
g5
Ntp6054
Rp6055
(dp6056
g14
S'auto_16464'
p6057
sg16
Nsg17
g0
(g18
g5
Ntp6058
Rp6059
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6060
Rp6061
(dp6062
g14
S'auto_16465'
p6063
sg16
Nsg17
g0
(g18
g5
Ntp6064
Rp6065
sg53
Nsg85
Nsg73
g1931
sbasg1965
I2
sg53
Nsg1966
(g1931
g1931
tp6066
sg814
(lp6067
g0
(g1456
g5
Ntp6068
Rp6069
(dp6070
g14
S'auto_16467'
p6071
sg16
I0
sg17
g0
(g18
g5
Ntp6072
Rp6073
(dp6074
g22
g2597
sbsg53
Nsg85
g0
(g809
g5
Ntp6075
Rp6076
(dp6077
g552
(lp6078
g0
(g1456
g5
Ntp6079
Rp6080
(dp6081
g14
S'auto_16466'
p6082
sg16
I0
sg17
g0
(g18
g5
Ntp6083
Rp6084
(dp6085
g22
g2609
sbsg53
Nsg85
g0
(g809
g5
Ntp6086
Rp6087
(dp6088
g552
(lp6089
g6055
ag6061
asg17
g0
(g18
g5
Ntp6090
Rp6091
sg814
(lp6092
g6080
asg1274
g1899
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6093
Rp6094
sg814
(lp6095
g6069
asg1274
g383
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = exp((npy_float64)V%(id)s_tmp1);\n}\n'
p6096
sg2001
(g1931
tp6097
sg2007
(lp6098
S'%(nodename)s_subnode0'
p6099
aS'%(nodename)s_subnode1'
p6100
asg2011
I1
sbsg330
(dp6101
sg332
Nsg333
g0
(g334
g5
Ntp6102
Rp6103
(dp6104
g338
I0
sg339
(dp6105
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp6106
Rp6107
(dp6108
g78
(I00
I00
I00
tp6109
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6110
tp6111
Rp6112
aa(lp6113
g0
(g563
g5
Ntp6114
Rp6115
(dp6116
g16
I0
sg53
Nsg798
g801
sg807
(lp6117
sg14
S'auto_14780'
p6118
sg17
g0
(g18
g5
Ntp6119
Rp6120
(dp6121
g22
(lp6122
(lp6123
(g25
I306
g26
S'nade_train( * args[1:] )'
p6124
tp6125
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p6126
tp6127
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p6128
tp6129
a(g37
I36
g38
S'self.recompile()'
p6130
tp6131
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p6132
tp6133
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p6134
tp6135
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p6136
tp6137
aasbsg85
g0
(g809
g5
Ntp6138
Rp6139
(dp6140
g552
(lp6141
g975
asg798
g801
sg814
(lp6142
g6115
asg17
g0
(g18
g5
Ntp6143
Rp6144
(dp6145
g4093
(lp6146
g1493
asg1268
(lp6147
g1271
asbsg1272
(dp6148
sg1274
g0
(g318
g5
Ntp6149
Rp6150
(dp6151
g379
g380
sg322
g3939
sg53
S'Elemwise{log,no_inplace}'
p6152
sg330
(dp6153
sg332
g4018
sg333
g0
(g334
g5
Ntp6154
Rp6155
(dp6156
g338
I0
sg339
(dp6157
sbsg341
I00
sg307
S"base e logarithm of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p6158
sbsbsg73
g0
(g74
g5
Ntp6159
Rp6160
(dp6161
g78
(I00
I00
I00
tp6162
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6163
tp6164
Rp6165
aa(lp6166
g1762
ag5571
((lp6167
(lp6168
g1758
aI1
aatp6169
Rp6170
aa(lp6171
g1733
ag5571
((lp6172
(lp6173
g1729
aI1
aatp6174
Rp6175
aa(lp6176
g1581
ag5571
((lp6177
(lp6178
g1577
aI1
aa(lp6179
g2173
aI1
aa(lp6180
g1637
aI1
aa(lp6181
g1585
aI1
aatp6182
Rp6183
aa(lp6184
g1566
ag5571
((lp6185
(lp6186
g1553
aI1
aa(lp6187
g1562
aI1
aatp6188
Rp6189
aa(lp6190
g1557
ag5571
((lp6191
(lp6192
g1553
aI1
aa(lp6193
g1562
aI1
aatp6194
Rp6195
aa(lp6196
g1695
ag5571
((lp6197
(lp6198
g1691
aI1
aatp6199
Rp6200
aa(lp6201
g0
(g563
g5
Ntp6202
Rp6203
(dp6204
g16
I0
sg53
Nsg798
g801
sg807
(lp6205
sg14
S'auto_15611'
p6206
sg17
g0
(g18
g5
Ntp6207
Rp6208
(dp6209
g4058
g4059
sg22
(lp6210
sbsg85
g0
(g809
g5
Ntp6211
Rp6212
(dp6213
g552
(lp6214
g1566
ag1557
asg798
g801
sg814
(lp6215
g6203
asg17
g0
(g18
g5
Ntp6216
Rp6217
(dp6218
g4093
(lp6219
g1493
asg1268
(lp6220
g5660
asbsg1272
(dp6221
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp6222
Rp6223
(dp6224
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag5571
((lp6225
tp6226
Rp6227
aa(lp6228
g1627
ag5571
((lp6229
(lp6230
g1623
aI1
aatp6231
Rp6232
aa(lp6233
g1598
ag5571
((lp6234
(lp6235
g1594
aI1
aatp6236
Rp6237
aa(lp6238
g1590
ag5571
((lp6239
(lp6240
g1594
aI1
aatp6241
Rp6242
aa(lp6243
g1678
ag5571
((lp6244
(lp6245
g1682
aI1
aatp6246
Rp6247
aa(lp6248
g1687
ag5571
((lp6249
(lp6250
g1691
aI1
aatp6251
Rp6252
aa(lp6253
g1725
ag5571
((lp6254
(lp6255
g1729
aI1
aatp6256
Rp6257
aa(lp6258
g0
(g563
g5
Ntp6259
Rp6260
(dp6261
g16
I0
sg53
Nsg798
g801
sg807
(lp6262
sg14
S'auto_16454'
p6263
sg17
g0
(g18
g5
Ntp6264
Rp6265
(dp6266
g22
(lp6267
sbsg85
g0
(g809
g5
Ntp6268
Rp6269
(dp6270
g552
(lp6271
g1725
ag1733
asg798
g801
sg814
(lp6272
g6260
asg17
g0
(g18
g5
Ntp6273
Rp6274
(dp6275
g4093
(lp6276
g1493
asg1268
(lp6277
g5814
asbsg1272
(dp6278
sg1274
g0
(g318
g5
Ntp6279
Rp6280
(dp6281
g53
Nsg322
g0
(g1948
g5
Ntp6282
Rp6283
(dp6284
g552
(lp6285
g0
(g1456
g5
Ntp6286
Rp6287
(dp6288
g14
S'auto_16443'
p6289
sg16
Nsg17
g0
(g18
g5
Ntp6290
Rp6291
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6292
Rp6293
(dp6294
g14
S'auto_16444'
p6295
sg16
Nsg17
g0
(g18
g5
Ntp6296
Rp6297
sg53
Nsg85
Nsg73
g1931
sbasg1965
I2
sg53
Nsg1966
(g1931
g1931
tp6298
sg814
(lp6299
g0
(g1456
g5
Ntp6300
Rp6301
(dp6302
g14
S'auto_16446'
p6303
sg16
I0
sg17
g0
(g18
g5
Ntp6304
Rp6305
(dp6306
g22
g1976
sbsg53
Nsg85
g0
(g809
g5
Ntp6307
Rp6308
(dp6309
g552
(lp6310
g0
(g1456
g5
Ntp6311
Rp6312
(dp6313
g14
S'auto_16445'
p6314
sg16
I0
sg17
g0
(g18
g5
Ntp6315
Rp6316
(dp6317
g22
g1988
sbsg53
Nsg85
g0
(g809
g5
Ntp6318
Rp6319
(dp6320
g552
(lp6321
g6287
ag6293
asg17
g0
(g18
g5
Ntp6322
Rp6323
sg814
(lp6324
g6312
asg1274
g1899
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6325
Rp6326
sg814
(lp6327
g6301
asg1274
g383
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = exp((npy_float64)V%(id)s_tmp1);\n}\n'
p6328
sg2001
(g1931
tp6329
sg2007
(lp6330
S'%(nodename)s_subnode0'
p6331
aS'%(nodename)s_subnode1'
p6332
asg2011
I1
sbsg330
(dp6333
sg332
Nsg333
g0
(g334
g5
Ntp6334
Rp6335
(dp6336
g338
I0
sg339
(dp6337
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp6338
Rp6339
(dp6340
g78
(I00
I00
I00
tp6341
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6342
tp6343
Rp6344
aa(lp6345
g1806
ag5571
((lp6346
(lp6347
g1810
aI1
aatp6348
Rp6349
aa(lp6350
g1815
ag5571
((lp6351
(lp6352
g980
aI1
aatp6353
Rp6354
aa(lp6355
g3630
ag5571
((lp6356
(lp6357
g980
aI1
aatp6358
Rp6359
aa(lp6360
g3596
ag5571
((lp6361
(lp6362
g3592
aI1
aatp6363
Rp6364
aa(lp6365
g3567
ag5571
((lp6366
(lp6367
g980
aI1
aatp6368
Rp6369
aa(lp6370
g1205
ag5571
((lp6371
(lp6372
g1201
aI1
aa(lp6373
g1420
aI1
aa(lp6374
g1261
aI1
aa(lp6375
g1209
aI1
aatp6376
Rp6377
aa(lp6378
g1190
ag5571
((lp6379
(lp6380
g1177
aI1
aa(lp6381
g1186
aI1
aatp6382
Rp6383
aa(lp6384
g1181
ag5571
((lp6385
(lp6386
g1177
aI1
aa(lp6387
g1186
aI1
aatp6388
Rp6389
aa(lp6390
g1514
ag5571
((lp6391
(lp6392
g1056
aI1
aatp6393
Rp6394
aa(lp6395
g0
(g563
g5
Ntp6396
Rp6397
(dp6398
g16
I0
sg53
Nsg798
g801
sg807
(lp6399
sg14
S'auto_15473'
p6400
sg17
g0
(g18
g5
Ntp6401
Rp6402
(dp6403
g4058
g4059
sg22
(lp6404
sbsg85
g0
(g809
g5
Ntp6405
Rp6406
(dp6407
g552
(lp6408
g1190
ag1181
asg798
g801
sg814
(lp6409
g6397
asg17
g0
(g18
g5
Ntp6410
Rp6411
(dp6412
g4093
(lp6413
g1493
asg1268
(lp6414
g5660
asbsg1272
(dp6415
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp6416
Rp6417
(dp6418
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag5571
((lp6419
tp6420
Rp6421
aa(lp6422
g1251
ag5571
((lp6423
(lp6424
g1247
aI1
aatp6425
Rp6426
aa(lp6427
g1222
ag5571
((lp6428
(lp6429
g1218
aI1
aatp6430
Rp6431
aa(lp6432
g1214
ag5571
((lp6433
(lp6434
g1218
aI1
aatp6435
Rp6436
aa(lp6437
g1319
ag5571
((lp6438
(lp6439
g1085
aI1
aatp6440
Rp6441
aa(lp6442
g1060
ag5571
((lp6443
(lp6444
g1056
aI1
aatp6445
Rp6446
aa(lp6447
g1031
ag5571
((lp6448
(lp6449
g980
aI1
aatp6450
Rp6451
aa(lp6452
g984
ag5571
((lp6453
(lp6454
g980
aI1
aatp6455
Rp6456
aa(lp6457
g1008
ag5571
((lp6458
(lp6459
g980
aI1
aatp6460
Rp6461
aa(lp6462
g0
(g563
g5
Ntp6463
Rp6464
(dp6465
g16
I0
sg53
Nsg798
g801
sg807
(lp6466
sg14
S'auto_16396'
p6467
sg17
g0
(g18
g5
Ntp6468
Rp6469
(dp6470
g22
(lp6471
sbsg85
g0
(g809
g5
Ntp6472
Rp6473
(dp6474
g552
(lp6475
g984
ag1008
ag1031
ag3567
ag3630
ag975
ag1797
ag1815
asg798
g801
sg814
(lp6476
g6464
asg17
g0
(g18
g5
Ntp6477
Rp6478
(dp6479
g4093
(lp6480
g1493
asg1268
(lp6481
g5814
asbsg1272
(dp6482
sg1274
g0
(g318
g5
Ntp6483
Rp6484
(dp6485
g53
Nsg322
g0
(g1948
g5
Ntp6486
Rp6487
(dp6488
g552
(lp6489
g0
(g1456
g5
Ntp6490
Rp6491
(dp6492
g14
S'auto_16354'
p6493
sg16
Nsg17
g0
(g18
g5
Ntp6494
Rp6495
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6496
Rp6497
(dp6498
g14
S'auto_16355'
p6499
sg16
Nsg17
g0
(g18
g5
Ntp6500
Rp6501
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6502
Rp6503
(dp6504
g14
S'auto_16356'
p6505
sg16
Nsg17
g0
(g18
g5
Ntp6506
Rp6507
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6508
Rp6509
(dp6510
g14
S'auto_16357'
p6511
sg16
Nsg17
g0
(g18
g5
Ntp6512
Rp6513
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6514
Rp6515
(dp6516
g14
S'auto_16358'
p6517
sg16
Nsg17
g0
(g18
g5
Ntp6518
Rp6519
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6520
Rp6521
(dp6522
g14
S'auto_16359'
p6523
sg16
Nsg17
g0
(g18
g5
Ntp6524
Rp6525
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6526
Rp6527
(dp6528
g14
S'auto_16360'
p6529
sg16
Nsg17
g0
(g18
g5
Ntp6530
Rp6531
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6532
Rp6533
(dp6534
g14
S'auto_16361'
p6535
sg16
Nsg17
g0
(g18
g5
Ntp6536
Rp6537
sg53
Nsg85
Nsg73
g1931
sbasg1965
I8
sg53
Nsg1966
(g1931
g1931
g1931
g1931
g1931
g1931
g1931
g1931
tp6538
sg814
(lp6539
g0
(g1456
g5
Ntp6540
Rp6541
(dp6542
g14
S'auto_16370'
p6543
sg16
I0
sg17
g0
(g18
g5
Ntp6544
Rp6545
(dp6546
g22
g3810
sbsg53
Nsg85
g0
(g809
g5
Ntp6547
Rp6548
(dp6549
g552
(lp6550
g6491
ag0
(g1456
g5
Ntp6551
Rp6552
(dp6553
g14
S'auto_16367'
p6554
sg16
I0
sg17
g0
(g18
g5
Ntp6555
Rp6556
(dp6557
g22
g3822
sbsg53
Nsg85
g0
(g809
g5
Ntp6558
Rp6559
(dp6560
g552
(lp6561
g6497
ag0
(g1456
g5
Ntp6562
Rp6563
(dp6564
g14
S'auto_16366'
p6565
sg16
I0
sg17
g0
(g18
g5
Ntp6566
Rp6567
(dp6568
g22
g3834
sbsg53
Nsg85
g0
(g809
g5
Ntp6569
Rp6570
(dp6571
g552
(lp6572
g0
(g1456
g5
Ntp6573
Rp6574
(dp6575
g14
S'auto_16365'
p6576
sg16
I0
sg17
g0
(g18
g5
Ntp6577
Rp6578
(dp6579
g22
g3846
sbsg53
Nsg85
g0
(g809
g5
Ntp6580
Rp6581
(dp6582
g552
(lp6583
g0
(g1456
g5
Ntp6584
Rp6585
(dp6586
g14
S'auto_16364'
p6587
sg16
I0
sg17
g0
(g18
g5
Ntp6588
Rp6589
(dp6590
g22
g3858
sbsg53
Nsg85
g0
(g809
g5
Ntp6591
Rp6592
(dp6593
g552
(lp6594
g0
(g1456
g5
Ntp6595
Rp6596
(dp6597
g14
S'auto_16363'
p6598
sg16
I0
sg17
g0
(g18
g5
Ntp6599
Rp6600
(dp6601
g22
g3870
sbsg53
Nsg85
g0
(g809
g5
Ntp6602
Rp6603
(dp6604
g552
(lp6605
g6503
ag6509
asg17
g0
(g18
g5
Ntp6606
Rp6607
sg814
(lp6608
g6596
asg1274
g1899
sbsg73
g1931
sbag6515
asg17
g0
(g18
g5
Ntp6609
Rp6610
sg814
(lp6611
g6585
asg1274
g3883
sbsg73
g1931
sbag6521
asg17
g0
(g18
g5
Ntp6612
Rp6613
sg814
(lp6614
g6574
asg1274
g3892
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6615
Rp6616
sg814
(lp6617
g6563
asg1274
g3900
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6618
Rp6619
sg814
(lp6620
g6552
asg1274
g3184
sbsg73
g1931
sbag0
(g1456
g5
Ntp6621
Rp6622
(dp6623
g14
S'auto_16369'
p6624
sg16
I0
sg17
g0
(g18
g5
Ntp6625
Rp6626
(dp6627
g22
g3914
sbsg53
Nsg85
g0
(g809
g5
Ntp6628
Rp6629
(dp6630
g552
(lp6631
g0
(g1456
g5
Ntp6632
Rp6633
(dp6634
g14
S'auto_16368'
p6635
sg16
I0
sg17
g0
(g18
g5
Ntp6636
Rp6637
(dp6638
g22
g3926
sbsg53
Nsg85
g0
(g809
g5
Ntp6639
Rp6640
(dp6641
g552
(lp6642
g6527
ag6533
asg17
g0
(g18
g5
Ntp6643
Rp6644
sg814
(lp6645
g6633
asg1274
g3892
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6646
Rp6647
sg814
(lp6648
g6622
asg1274
g3939
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6649
Rp6650
sg814
(lp6651
g6541
asg1274
g1899
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i6)s / %(i7)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = log((npy_float64)V%(id)s_tmp1);\nnpy_float64 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i2)s + %(i3)s;\nnpy_float64 V%(id)s_tmp4;\nV%(id)s_tmp4 = V%(id)s_tmp3 - %(i4)s;\nnpy_float64 V%(id)s_tmp5;\nV%(id)s_tmp5 = V%(id)s_tmp4 / %(i5)s;\nnpy_float64 V%(id)s_tmp6;\nV%(id)s_tmp6 = V%(id)s_tmp5 * V%(id)s_tmp5;\nnpy_float64 V%(id)s_tmp7;\nV%(id)s_tmp7 = %(i1)s * V%(id)s_tmp6;\n%(o0)s = %(i0)s + V%(id)s_tmp7 + V%(id)s_tmp2;\n}\n'
p6652
sg2001
(g1931
tp6653
sg2007
(lp6654
S'%(nodename)s_subnode0'
p6655
aS'%(nodename)s_subnode1'
p6656
aS'%(nodename)s_subnode2'
p6657
aS'%(nodename)s_subnode3'
p6658
aS'%(nodename)s_subnode4'
p6659
aS'%(nodename)s_subnode5'
p6660
aS'%(nodename)s_subnode6'
p6661
aS'%(nodename)s_subnode7'
p6662
asg2011
I1
sbsg330
(dp6663
sg332
Nsg333
g0
(g334
g5
Ntp6664
Rp6665
(dp6666
g338
I0
sg339
(dp6667
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp6668
Rp6669
(dp6670
g78
(I00
I00
I00
tp6671
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6672
tp6673
Rp6674
aa(lp6675
g4029
ag5571
((lp6676
(lp6677
g4033
aI1
aatp6678
Rp6679
aa(lp6680
g934
ag5571
((lp6681
(lp6682
g939
aI1
aa(lp6683
g930
aI1
aatp6684
Rp6685
aa(lp6686
g944
ag5571
((lp6687
(lp6688
g948
aI1
aatp6689
Rp6690
aa(lp6691
g0
(g563
g5
Ntp6692
Rp6693
(dp6694
g16
I0
sg53
Nsg798
g801
sg807
(lp6695
sg14
S'auto_16186'
p6696
sg17
g0
(g18
g5
Ntp6697
Rp6698
(dp6699
g22
(lp6700
sbsg85
g0
(g809
g5
Ntp6701
Rp6702
(dp6703
g552
(lp6704
g952
ag960
ag944
asg798
g801
sg814
(lp6705
g6693
asg17
g0
(g18
g5
Ntp6706
Rp6707
(dp6708
g4093
(lp6709
g1493
asg1268
(lp6710
g5814
asbsg1272
(dp6711
sg1274
g0
(g318
g5
Ntp6712
Rp6713
(dp6714
g53
Nsg322
g0
(g1948
g5
Ntp6715
Rp6716
(dp6717
g552
(lp6718
g0
(g1456
g5
Ntp6719
Rp6720
(dp6721
g14
S'auto_16172'
p6722
sg16
Nsg17
g0
(g18
g5
Ntp6723
Rp6724
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6725
Rp6726
(dp6727
g14
S'auto_16173'
p6728
sg16
Nsg17
g0
(g18
g5
Ntp6729
Rp6730
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6731
Rp6732
(dp6733
g14
S'auto_16174'
p6734
sg16
Nsg17
g0
(g18
g5
Ntp6735
Rp6736
sg53
Nsg85
Nsg73
g1931
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g1931
tp6737
sg814
(lp6738
g0
(g1456
g5
Ntp6739
Rp6740
(dp6741
g14
S'auto_16176'
p6742
sg16
I0
sg17
g0
(g18
g5
Ntp6743
Rp6744
(dp6745
g22
g4417
sbsg53
Nsg85
g0
(g809
g5
Ntp6746
Rp6747
(dp6748
g552
(lp6749
g6720
ag0
(g1456
g5
Ntp6750
Rp6751
(dp6752
g14
S'auto_16175'
p6753
sg16
I0
sg17
g0
(g18
g5
Ntp6754
Rp6755
(dp6756
g22
g4429
sbsg53
Nsg85
g0
(g809
g5
Ntp6757
Rp6758
(dp6759
g552
(lp6760
g6726
ag6732
asg17
g0
(g18
g5
Ntp6761
Rp6762
sg814
(lp6763
g6751
asg1274
g1899
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6764
Rp6765
sg814
(lp6766
g6740
asg1274
g3883
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s + %(i2)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p6767
sg2001
(g1931
tp6768
sg2007
(lp6769
S'%(nodename)s_subnode0'
p6770
aS'%(nodename)s_subnode1'
p6771
asg2011
I1
sbsg330
(dp6772
sg332
Nsg333
g0
(g334
g5
Ntp6773
Rp6774
(dp6775
g338
I0
sg339
(dp6776
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp6777
Rp6778
(dp6779
g78
(I00
I00
I00
tp6780
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6781
tp6782
Rp6783
aa(lp6784
g4134
ag5571
((lp6785
(lp6786
g4138
aI1
aa(lp6787
g930
aI1
aatp6788
Rp6789
aa(lp6790
g4143
ag5571
((lp6791
(lp6792
g4147
aI1
aatp6793
Rp6794
aa(lp6795
g0
(g563
g5
Ntp6796
Rp6797
(dp6798
g16
I0
sg53
Nsg798
g801
sg807
(lp6799
sg14
S'auto_16164'
p6800
sg17
g0
(g18
g5
Ntp6801
Rp6802
(dp6803
g22
(lp6804
sbsg85
g0
(g809
g5
Ntp6805
Rp6806
(dp6807
g552
(lp6808
g4125
ag4143
asg798
g801
sg814
(lp6809
g6797
asg17
g0
(g18
g5
Ntp6810
Rp6811
(dp6812
g4093
(lp6813
g1493
asg1268
(lp6814
g5814
asbsg1272
(dp6815
sg1274
g0
(g318
g5
Ntp6816
Rp6817
(dp6818
g53
Nsg322
g0
(g1948
g5
Ntp6819
Rp6820
(dp6821
g552
(lp6822
g0
(g1456
g5
Ntp6823
Rp6824
(dp6825
g14
S'auto_16153'
p6826
sg16
Nsg17
g0
(g18
g5
Ntp6827
Rp6828
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6829
Rp6830
(dp6831
g14
S'auto_16154'
p6832
sg16
Nsg17
g0
(g18
g5
Ntp6833
Rp6834
sg53
Nsg85
Nsg73
g1931
sbasg1965
I2
sg53
Nsg1966
(g1931
g1931
tp6835
sg814
(lp6836
g0
(g1456
g5
Ntp6837
Rp6838
(dp6839
g14
S'auto_16156'
p6840
sg16
I0
sg17
g0
(g18
g5
Ntp6841
Rp6842
(dp6843
g22
g4247
sbsg53
Nsg85
g0
(g809
g5
Ntp6844
Rp6845
(dp6846
g552
(lp6847
g0
(g1456
g5
Ntp6848
Rp6849
(dp6850
g14
S'auto_16155'
p6851
sg16
I0
sg17
g0
(g18
g5
Ntp6852
Rp6853
(dp6854
g22
g4259
sbsg53
Nsg85
g0
(g809
g5
Ntp6855
Rp6856
(dp6857
g552
(lp6858
g6824
ag6830
asg17
g0
(g18
g5
Ntp6859
Rp6860
sg814
(lp6861
g6849
asg1274
g3883
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6862
Rp6863
sg814
(lp6864
g6838
asg1274
g383
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s - %(i1)s;\n%(o0)s = exp((npy_float64)V%(id)s_tmp1);\n}\n'
p6865
sg2001
(g1931
tp6866
sg2007
(lp6867
S'%(nodename)s_subnode0'
p6868
aS'%(nodename)s_subnode1'
p6869
asg2011
I1
sbsg330
(dp6870
sg332
Nsg333
g0
(g334
g5
Ntp6871
Rp6872
(dp6873
g338
I0
sg339
(dp6874
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp6875
Rp6876
(dp6877
g78
(I00
I00
I00
tp6878
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp6879
tp6880
Rp6881
aa(lp6882
g4161
ag5571
((lp6883
(lp6884
g930
aI1
aatp6885
Rp6886
aa(lp6887
g4539
ag5571
((lp6888
(lp6889
g930
aI1
aatp6890
Rp6891
aa(lp6892
g0
(g563
g5
Ntp6893
Rp6894
(dp6895
g16
I0
sg53
Nsg798
g801
sg807
(lp6896
sg14
S'auto_16138'
p6897
sg17
g0
(g18
g5
Ntp6898
Rp6899
(dp6900
g22
(lp6901
sbsg85
g0
(g809
g5
Ntp6902
Rp6903
(dp6904
g552
(lp6905
g934
ag4134
ag4161
ag4539
ag826
asg798
g801
sg814
(lp6906
g6894
asg17
g0
(g18
g5
Ntp6907
Rp6908
(dp6909
g4093
(lp6910
g1493
asg1268
(lp6911
g5814
asbsg1272
(dp6912
sg1274
g0
(g318
g5
Ntp6913
Rp6914
(dp6915
g53
Nsg322
g0
(g1948
g5
Ntp6916
Rp6917
(dp6918
g552
(lp6919
g0
(g1456
g5
Ntp6920
Rp6921
(dp6922
g14
S'auto_16113'
p6923
sg16
Nsg17
g0
(g18
g5
Ntp6924
Rp6925
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6926
Rp6927
(dp6928
g14
S'auto_16114'
p6929
sg16
Nsg17
g0
(g18
g5
Ntp6930
Rp6931
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6932
Rp6933
(dp6934
g14
S'auto_16115'
p6935
sg16
Nsg17
g0
(g18
g5
Ntp6936
Rp6937
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6938
Rp6939
(dp6940
g14
S'auto_16116'
p6941
sg16
Nsg17
g0
(g18
g5
Ntp6942
Rp6943
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp6944
Rp6945
(dp6946
g14
S'auto_16117'
p6947
sg16
Nsg17
g0
(g18
g5
Ntp6948
Rp6949
sg53
Nsg85
Nsg73
g1931
sbasg1965
I5
sg53
Nsg1966
(g1931
g1931
g1931
g1931
g1931
tp6950
sg814
(lp6951
g0
(g1456
g5
Ntp6952
Rp6953
(dp6954
g14
S'auto_16122'
p6955
sg16
I0
sg17
g0
(g18
g5
Ntp6956
Rp6957
(dp6958
g22
g4667
sbsg53
Nsg85
g0
(g809
g5
Ntp6959
Rp6960
(dp6961
g552
(lp6962
g0
(g1456
g5
Ntp6963
Rp6964
(dp6965
g14
S'auto_16120'
p6966
sg16
I0
sg17
g0
(g18
g5
Ntp6967
Rp6968
(dp6969
g22
g4679
sbsg53
Nsg85
g0
(g809
g5
Ntp6970
Rp6971
(dp6972
g552
(lp6973
g6921
ag6927
ag0
(g1456
g5
Ntp6974
Rp6975
(dp6976
g14
S'auto_16119'
p6977
sg16
I0
sg17
g0
(g18
g5
Ntp6978
Rp6979
(dp6980
g22
g4691
sbsg53
Nsg85
g0
(g809
g5
Ntp6981
Rp6982
(dp6983
g552
(lp6984
g6933
asg17
g0
(g18
g5
Ntp6985
Rp6986
sg814
(lp6987
g6975
asg1274
g3939
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp6988
Rp6989
sg814
(lp6990
g6964
asg1274
g1899
sbsg73
g1931
sbag0
(g1456
g5
Ntp6991
Rp6992
(dp6993
g14
S'auto_16121'
p6994
sg16
I0
sg17
g0
(g18
g5
Ntp6995
Rp6996
(dp6997
g22
g4709
sbsg53
Nsg85
g0
(g809
g5
Ntp6998
Rp6999
(dp7000
g552
(lp7001
g6939
ag6945
asg17
g0
(g18
g5
Ntp7002
Rp7003
sg814
(lp7004
g6992
asg1274
g3883
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp7005
Rp7006
sg814
(lp7007
g6953
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i3)s - %(i4)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = log((npy_float64)%(i2)s);\nnpy_float64 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i0)s + %(i1)s + V%(id)s_tmp2;\n%(o0)s = V%(id)s_tmp3 * V%(id)s_tmp1;\n}\n'
p7008
sg2001
(g1931
tp7009
sg2007
(lp7010
S'%(nodename)s_subnode0'
p7011
aS'%(nodename)s_subnode1'
p7012
aS'%(nodename)s_subnode2'
p7013
aS'%(nodename)s_subnode3'
p7014
asg2011
I1
sbsg330
(dp7015
sg332
Nsg333
g0
(g334
g5
Ntp7016
Rp7017
(dp7018
g338
I0
sg339
(dp7019
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp7020
Rp7021
(dp7022
g78
(I00
I00
tp7023
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp7024
tp7025
Rp7026
aa(lp7027
g891
ag5571
((lp7028
(lp7029
g840
aI1
aatp7030
Rp7031
aa(lp7032
g845
ag5571
((lp7033
(lp7034
g840
aI1
aatp7035
Rp7036
aa(lp7037
g0
(g563
g5
Ntp7038
Rp7039
(dp7040
g16
I0
sg53
Nsg798
g801
sg807
(lp7041
sg14
S'auto_16071'
p7042
sg17
g0
(g18
g5
Ntp7043
Rp7044
(dp7045
g22
(lp7046
sbsg85
g0
(g809
g5
Ntp7047
Rp7048
(dp7049
g552
(lp7050
g845
ag891
ag836
asg798
g801
sg814
(lp7051
g7039
asg17
g0
(g18
g5
Ntp7052
Rp7053
(dp7054
g4093
(lp7055
g1493
asg1268
(lp7056
g5814
asbsg1272
(dp7057
sg1274
g0
(g318
g5
Ntp7058
Rp7059
(dp7060
g53
Nsg322
g0
(g1948
g5
Ntp7061
Rp7062
(dp7063
g552
(lp7064
g0
(g1456
g5
Ntp7065
Rp7066
(dp7067
g14
S'auto_16055'
p7068
sg16
Nsg17
g0
(g18
g5
Ntp7069
Rp7070
(dp7071
g4821
g4824
sbsg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp7072
Rp7073
(dp7074
g14
S'auto_16056'
p7075
sg16
Nsg17
g0
(g18
g5
Ntp7076
Rp7077
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp7078
Rp7079
(dp7080
g14
S'auto_16057'
p7081
sg16
Nsg17
g0
(g18
g5
Ntp7082
Rp7083
sg53
Nsg85
Nsg73
g1931
sbasg1965
I3
sg53
Nsg1966
(g1931
g1931
g1931
tp7084
sg814
(lp7085
g0
(g1456
g5
Ntp7086
Rp7087
(dp7088
g14
S'auto_16060'
p7089
sg16
I0
sg17
g0
(g18
g5
Ntp7090
Rp7091
(dp7092
g22
g4846
sbsg53
Nsg85
g0
(g809
g5
Ntp7093
Rp7094
(dp7095
g552
(lp7096
g0
(g1456
g5
Ntp7097
Rp7098
(dp7099
g14
S'auto_16059'
p7100
sg16
I0
sg17
g0
(g18
g5
Ntp7101
Rp7102
(dp7103
g22
g4858
sbsg53
Nsg85
g0
(g809
g5
Ntp7104
Rp7105
(dp7106
g552
(lp7107
g7066
ag7073
asg17
g0
(g18
g5
Ntp7108
Rp7109
sg814
(lp7110
g7098
asg1274
g3184
sbsg73
g1931
sbag0
(g1456
g5
Ntp7111
Rp7112
(dp7113
g14
S'auto_16058'
p7114
sg16
I0
sg17
g0
(g18
g5
Ntp7115
Rp7116
(dp7117
g22
g4873
sbsg53
Nsg85
g0
(g809
g5
Ntp7118
Rp7119
(dp7120
g552
(lp7121
g7066
ag7079
asg17
g0
(g18
g5
Ntp7122
Rp7123
sg814
(lp7124
g7112
asg1274
g3883
sbsg73
g1931
sbasg17
g0
(g18
g5
Ntp7125
Rp7126
sg814
(lp7127
g7087
asg1274
g3892
sbsg73
g1931
sbasg1999
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s - %(i2)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i0)s * %(i1)s;\n%(o0)s = V%(id)s_tmp2 / V%(id)s_tmp1;\n}\n'
p7128
sg2001
(g1931
tp7129
sg2007
(lp7130
S'%(nodename)s_subnode0'
p7131
aS'%(nodename)s_subnode1'
p7132
aS'%(nodename)s_subnode2'
p7133
asg2011
I1
sbsg330
(dp7134
sg332
Nsg333
g0
(g334
g5
Ntp7135
Rp7136
(dp7137
g338
I0
sg339
(dp7138
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp7139
Rp7140
(dp7141
g78
(I00
tp7142
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp7143
tp7144
Rp7145
aa(lp7146
g2890
ag5571
((lp7147
(lp7148
g2823
aI1
aatp7149
Rp7150
aa(lp7151
g2290
ag5571
((lp7152
(lp7153
g2294
aI1
aatp7154
Rp7155
aa(lp7156
g0
(g563
g5
Ntp7157
Rp7158
(dp7159
g16
I0
sg53
Nsg798
g801
sg807
(lp7160
sg14
S'auto_16660'
p7161
sg17
g0
(g18
g5
Ntp7162
Rp7163
(dp7164
g22
(lp7165
sbsg85
g0
(g809
g5
Ntp7166
Rp7167
(dp7168
g552
(lp7169
g817
ag826
asg798
g801
sg814
(lp7170
g7158
asg17
g0
(g18
g5
Ntp7171
Rp7172
(dp7173
g4093
(lp7174
S"('Revert', 'inplace_elemwise_optimizer')"
p7175
asg1268
(lp7176
g1493
asbsg1272
(dp7177
sg1274
g0
(g318
g5
Ntp7178
Rp7179
(dp7180
g53
Nsg322
g0
(g1482
g5
Ntp7181
Rp7182
(dp7183
g327
g0
(g1486
g5
Ntp7184
Rp7185
(dp7186
g1490
(I0
tp7187
sbsg53
Nsbsg330
(dp7188
I0
(lp7189
I0
assg332
g1501
sg333
g0
(g334
g5
Ntp7190
Rp7191
(dp7192
g338
Nsg339
(dp7193
I0
I0
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp7194
Rp7195
(dp7196
g78
(I00
I00
tp7197
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp7198
tp7199
Rp7200
aa(lp7201
g0
(g563
g5
Ntp7202
Rp7203
(dp7204
g16
I0
sg53
Nsg798
g801
sg807
(lp7205
sg14
S'auto_16664'
p7206
sg17
g0
(g18
g5
Ntp7207
Rp7208
(dp7209
g22
(lp7210
sbsg85
g0
(g809
g5
Ntp7211
Rp7212
(dp7213
g552
(lp7214
g817
ag826
asg798
g801
sg814
(lp7215
g7203
asg17
g0
(g18
g5
Ntp7216
Rp7217
(dp7218
g4093
(lp7219
S"('Revert', 'inplace_elemwise_optimizer')"
p7220
asg1268
(lp7221
g1493
asbsg1272
(dp7222
sg1274
g0
(g318
g5
Ntp7223
Rp7224
(dp7225
g53
Nsg322
g0
(g1482
g5
Ntp7226
Rp7227
(dp7228
g327
g0
(g1486
g5
Ntp7229
Rp7230
(dp7231
g1490
(I1
tp7232
sbsg53
Nsbsg330
(dp7233
I0
(lp7234
I1
assg332
g1501
sg333
g0
(g334
g5
Ntp7235
Rp7236
(dp7237
g338
Nsg339
(dp7238
I0
I1
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp7239
Rp7240
(dp7241
g78
(I00
I00
tp7242
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp7243
tp7244
Rp7245
aa(lp7246
g2813
ag5571
((lp7247
(lp7248
g2809
aI1
aatp7249
Rp7250
aa(lp7251
g1089
ag5571
((lp7252
(lp7253
g1093
aI1
aa(lp7254
g1682
aI1
aa(lp7255
g1085
aI1
aatp7256
Rp7257
aa(lp7258
g975
ag5571
((lp7259
(lp7260
g971
aI1
aa(lp7261
g980
aI1
aatp7262
Rp7263
aa(lp7264
g960
ag5571
((lp7265
(lp7266
g956
aI1
aa(lp7267
g948
aI1
aatp7268
Rp7269
aa(lp7270
g1650
ag5571
((lp7271
(lp7272
g1623
aI1
aatp7273
Rp7274
aa(lp7275
g1797
ag5571
((lp7276
(lp7277
g1801
aI1
aa(lp7278
g980
aI1
aatp7279
Rp7280
aa(lp7281
g1290
ag5571
((lp7282
(lp7283
g1247
aI1
aatp7284
Rp7285
aa(lp7286
g952
ag5571
((lp7287
(lp7288
g956
aI1
aa(lp7289
g948
aI1
aatp7290
Rp7291
aa(lp7292
g0
(g563
g5
Ntp7293
Rp7294
(dp7295
g16
I0
sg53
Nsg798
g801
sg807
(lp7296
sg14
S'auto_16779'
p7297
sg17
g0
(g18
g5
Ntp7298
Rp7299
(dp7300
g22
(lp7301
sbsg85
g0
(g809
g5
Ntp7302
Rp7303
(dp7304
g552
(lp7305
g952
ag960
asg798
g801
sg814
(lp7306
g7294
asg17
g0
(g18
g5
Ntp7307
Rp7308
(dp7309
g4093
(lp7310
S"('Revert', 'inplace_elemwise_optimizer')"
p7311
asg1268
(lp7312
g1493
asbsg1272
(dp7313
sg1274
g0
(g318
g5
Ntp7314
Rp7315
(dp7316
g53
Nsg322
g0
(g3881
g5
Ntp7317
Rp7318
(dp7319
g327
g0
(g1486
g5
Ntp7320
Rp7321
(dp7322
g1490
(I0
tp7323
sbsg53
Nsbsg330
(dp7324
I0
(lp7325
I0
assg332
g4106
sg333
g0
(g334
g5
Ntp7326
Rp7327
(dp7328
g338
Nsg339
(dp7329
I0
I0
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp7330
Rp7331
(dp7332
g78
(I00
I00
I00
tp7333
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp7334
tp7335
Rp7336
aa(lp7337
g0
(g563
g5
Ntp7338
Rp7339
(dp7340
g16
I0
sg53
Nsg798
g801
sg807
(lp7341
sg14
S'auto_16783'
p7342
sg17
g0
(g18
g5
Ntp7343
Rp7344
(dp7345
g22
(lp7346
sbsg85
g0
(g809
g5
Ntp7347
Rp7348
(dp7349
g552
(lp7350
g952
ag960
asg798
g801
sg814
(lp7351
g7339
asg17
g0
(g18
g5
Ntp7352
Rp7353
(dp7354
g4093
(lp7355
S"('Revert', 'inplace_elemwise_optimizer')"
p7356
asg1268
(lp7357
g1493
asbsg1272
(dp7358
sg1274
g0
(g318
g5
Ntp7359
Rp7360
(dp7361
g53
Nsg322
g0
(g3881
g5
Ntp7362
Rp7363
(dp7364
g327
g0
(g1486
g5
Ntp7365
Rp7366
(dp7367
g1490
(I1
tp7368
sbsg53
Nsbsg330
(dp7369
I0
(lp7370
I1
assg332
g4106
sg333
g0
(g334
g5
Ntp7371
Rp7372
(dp7373
g338
Nsg339
(dp7374
I0
I1
ssbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp7375
Rp7376
(dp7377
g78
(I00
I00
I00
tp7378
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag5571
((lp7379
tp7380
Rp7381
aa(lp7382
g4125
ag5571
((lp7383
(lp7384
g4129
aI1
aa(lp7385
g4147
aI1
aatp7386
Rp7387
aa(lp7388
g4152
ag5571
((lp7389
(lp7390
g4156
aI1
aatp7391
Rp7392
aa(lp7393
g920
ag5571
((lp7394
(lp7395
g916
aI1
aatp7396
Rp7397
aa(lp7398
g4762
ag5571
((lp7399
tp7400
Rp7401
aatp7402
Rp7403
sS'root_destroyer'
p7404
(dp7405
g2784
g2780
sg4125
g4147
sg975
g971
sg2443
g2477
sg934
g930
sg1190
g1186
sg952
g948
sg1165
g2285
sg1566
g1562
sg2890
g2823
sg1060
g980
sg891
g840
sg2904
g2900
sg1687
g1729
ssS'fail_validate'
p7406
g5571
((lp7407
tp7408
Rp7409
sS'debug_all_apps'
p7410
g5108
((lp7411
g3655
ag2900
ag1577
ag1637
ag1085
ag2506
ag2267
ag4129
ag2294
ag1729
ag1160
ag4147
ag1151
ag4138
ag4156
ag1553
ag1122
ag1682
ag1562
ag1801
ag1261
ag2852
ag831
ag2421
ag3592
ag2809
ag2823
ag1186
ag2929
ag1177
ag2285
ag1810
ag948
ag2308
ag916
ag1585
ag3256
ag2173
ag811
ag4033
ag1169
ag4964
ag2477
ag1247
ag3274
ag840
ag822
ag956
ag1093
ag2439
ag930
ag1691
ag1758
ag939
ag1420
ag980
ag1209
ag971
ag1056
ag1201
ag1218
ag2780
ag3238
ag1594
ag1623
atp7412
Rp7413
sS'destroyers'
p7414
g0
(g5170
g5
Ntp7415
Rp7416
(dp7417
g5174
g0
(g5175
g5
Ntp7418
Rp7419
(lp7420
g0
(g5175
g5
Ntp7421
Rp7422
(lp7423
g0
(g5175
g5
Ntp7424
Rp7425
(lp7426
g0
(g5175
g5
Ntp7427
Rp7428
(lp7429
g0
(g5175
g5
Ntp7430
Rp7431
(lp7432
g0
(g5175
g5
Ntp7433
Rp7434
(lp7435
g0
(g5175
g5
Ntp7436
Rp7437
(lp7438
g0
(g5175
g5
Ntp7439
Rp7440
(lp7441
g0
(g5175
g5
Ntp7442
Rp7443
(lp7444
g0
(g5175
g5
Ntp7445
Rp7446
(lp7447
g0
(g5175
g5
Ntp7448
Rp7449
(lp7450
g0
(g5175
g5
Ntp7451
Rp7452
(lp7453
g0
(g5175
g5
Ntp7454
Rp7455
(lp7456
g0
(g5175
g5
Ntp7457
Rp7458
(lp7459
g0
(g5175
g5
Ntp7460
Rp7461
(lp7462
g7419
ag7458
ag2900
abag7455
ag2285
abag7452
ag2823
abag7449
ag2780
abag7446
ag2477
abag7443
ag971
abag7440
ag1562
abag7437
ag1729
abag7434
ag1186
abag7431
ag980
abag7428
ag948
abag7425
ag4147
abag7422
ag930
abag7419
ag840
abag7461
absg5179
(dp7463
g840
g7422
sg948
g7431
sg930
g7425
sg980
g7434
sg2780
g7452
sg1186
g7437
sg2285
g7458
sg1729
g7440
sg2823
g7455
sg2900
g7461
sg4147
g7428
sg2477
g7449
sg1562
g7443
sg971
g7446
ssbsS'algo'
p7464
S'regular'
p7465
sS'stale_droot'
p7466
I00
sbsg53
S'/home/leondong/proj/ccnet/experiment/rnade_release/buml/NADE/OrderlessMoGNADE.py:126'
p7467
sS'execute_callbacks_time'
p7468
F0.023710966110229492
sS'shape_feature'
p7469
g0
(ctheano.tensor.opt
ShapeFeature
p7470
g5
Ntp7471
Rp7472
(dp7473
g5105
(dp7474
sS'shape_of'
p7475
(dp7476
g1251
(tsg4762
(g0
(g563
g5
Ntp7477
Rp7478
(dp7479
g14
S'auto_15369'
p7480
sg16
I0
sg17
g0
(g18
g5
Ntp7481
Rp7482
(dp7483
g22
(lp7484
sbsg53
Nsg85
g0
(g809
g5
Ntp7485
Rp7486
(dp7487
g552
(lp7488
g0
(g563
g5
Ntp7489
Rp7490
(dp7491
g14
S'auto_15364'
p7492
sg16
I0
sg17
g0
(g18
g5
Ntp7493
Rp7494
(dp7495
g22
(lp7496
sbsg53
Nsg85
g0
(g809
g5
Ntp7497
Rp7498
(dp7499
g552
(lp7500
g0
(g563
g5
Ntp7501
Rp7502
(dp7503
g14
S'auto_15338'
p7504
sg16
I0
sg17
g0
(g18
g5
Ntp7505
Rp7506
(dp7507
g22
(lp7508
sbsg53
Nsg85
g0
(g809
g5
Ntp7509
Rp7510
(dp7511
g552
(lp7512
g0
(g563
g5
Ntp7513
Rp7514
(dp7515
g16
I0
sg53
Nsg798
g801
sg807
(lp7516
sg14
S'auto_14793'
p7517
sg17
g0
(g18
g5
Ntp7518
Rp7519
(dp7520
g22
(lp7521
g1523
asbsg85
g0
(g809
g5
Ntp7522
Rp7523
(dp7524
g552
(lp7525
g0
(g843
g5
Ntp7526
Rp7527
(dp7528
g14
S'auto_14678'
p7529
sg16
Nsg17
g0
(g18
g5
Ntp7530
Rp7531
(dp7532
g22
(lp7533
(lp7534
(g25
I306
g26
S'nade_train( * args[1:] )'
p7535
tp7536
a(g29
I221
g30
S'nade = nade_class(n_visible, options.units, l, options.n_components, nonlinearity=options.nonlinearity)'
p7537
tp7538
a(g37
I36
g38
S'self.recompile()'
p7539
tp7540
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p7541
tp7542
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p7543
tp7544
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p7545
tp7546
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p7547
tp7548
aasg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp7549
Rp7550
(dp7551
g78
(tsg80
g3028
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp7552
sg883
g56
(g57
(I0
tp7553
g59
tp7554
Rp7555
(I1
(tg3031
I00
g3059
tp7556
bsbag0
(g563
g5
Ntp7557
Rp7558
(dp7559
g16
I0
sg53
Nsg798
g801
sg807
(lp7560
sg14
S'auto_15726'
p7561
sg17
g0
(g18
g5
Ntp7562
Rp7563
(dp7564
g22
(lp7565
(lp7566
(g25
I306
g26
S'nade_train( * args[1:] )'
p7567
tp7568
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p7569
tp7570
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p7571
tp7572
a(g37
I36
g38
S'self.recompile()'
p7573
tp7574
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p7575
tp7576
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p7577
tp7578
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p7579
tp7580
aasbsg85
g0
(g809
g5
Ntp7581
Rp7582
(dp7583
g552
(lp7584
g1173
asg798
g801
sg814
(lp7585
g7558
asg17
g0
(g18
g5
Ntp7586
Rp7587
(dp7588
g4093
(lp7589
g1546
asg1268
(lp7590
S'local_subtensor_make_vector'
p7591
asbsg1272
(dp7592
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp7593
Rp7594
(dp7595
g78
(I00
tp7596
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp7597
Rp7598
(dp7599
g16
I0
sg53
Nsg798
g801
sg807
(lp7600
sg14
S'auto_15696'
p7601
sg17
g0
(g18
g5
Ntp7602
Rp7603
(dp7604
g22
(lp7605
(lp7606
(g25
I306
g26
S'nade_train( * args[1:] )'
p7607
tp7608
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p7609
tp7610
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p7611
tp7612
a(g37
I36
g38
S'self.recompile()'
p7613
tp7614
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p7615
tp7616
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p7617
tp7618
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p7619
tp7620
aasbsg85
g0
(g809
g5
Ntp7621
Rp7622
(dp7623
g552
(lp7624
g1181
ag1190
asg798
g801
sg814
(lp7625
g7598
asg17
g0
(g18
g5
Ntp7626
Rp7627
(dp7628
g4093
(lp7629
g1546
asg1268
(lp7630
g7591
asbsg1272
(dp7631
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp7632
Rp7633
(dp7634
g78
(I00
tp7635
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp7636
g7514
asg17
g0
(g18
g5
Ntp7637
Rp7638
(dp7639
g4093
(lp7640
g1546
asg1268
(lp7641
g1271
asbsg1272
(dp7642
sg1274
g0
(ctheano.tensor.basic
Join
p7643
g5
Ntp7644
Rp7645
(dp7646
S'view'
p7647
I-1
sbsbsg73
g0
(g74
g5
Ntp7648
Rp7649
(dp7650
g78
(I00
tp7651
sg80
S'int64'
p7652
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g3250
g5
Ntp7653
Rp7654
(dp7655
g14
S'auto_15337'
p7656
sg16
Nsg17
g0
(g18
g5
Ntp7657
Rp7658
(dp7659
g22
(lp7660
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p7661
tp7662
Rp7663
sbasg17
g0
(g18
g5
Ntp7664
Rp7665
sg814
(lp7666
g7502
asg1274
g0
(g3357
g5
Ntp7667
Rp7668
(dp7669
g3361
(g1465
tp7670
sbsbsg73
g0
(g74
g5
Ntp7671
Rp7672
(dp7673
g78
(tsg80
g7652
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp7674
Rp7675
(dp7676
g14
S'auto_15360'
p7677
sg16
Nsg17
g0
(g18
g5
Ntp7678
Rp7679
(dp7680
g22
(lp7681
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp7682
Rp7683
(dp7684
g78
(tsg80
S'int8'
p7685
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp7686
g59
tp7687
Rp7688
(I1
(tg3031
I00
S'\xff'
p7689
tp7690
bsbasg17
g0
(g18
g5
Ntp7691
Rp7692
sg814
(lp7693
g7490
asg1274
g0
(g318
g5
Ntp7694
Rp7695
(dp7696
g379
g380
sg322
g0
(ctheano.scalar.basic
EQ
p7697
g5
Ntp7698
Rp7699
(dp7700
g3176
I01
sg53
Nsbsg53
S'Elemwise{eq,no_inplace}'
p7701
sg330
(dp7702
sg332
(S'equal'
p7703
I2
I1
tp7704
sg333
g0
(g334
g5
Ntp7705
Rp7706
(dp7707
g338
I0
sg339
(dp7708
sbsg341
I00
sg307
S"a == b\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p7709
sbsbsg73
g0
(g74
g5
Ntp7710
Rp7711
(dp7712
g78
(tsg80
g3176
sg82
g63
(S'b1'
p7713
I0
I1
tp7714
Rp7715
(I3
S'|'
p7716
NNNI-1
I-1
I0
tp7717
bsg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp7718
Rp7719
(dp7720
g14
S'auto_15359'
p7721
sg16
I0
sg17
g0
(g18
g5
Ntp7722
Rp7723
(dp7724
g22
(lp7725
sbsg53
Nsg85
g0
(g809
g5
Ntp7726
Rp7727
(dp7728
g552
(lp7729
g0
(g563
g5
Ntp7730
Rp7731
(dp7732
g14
S'auto_15336'
p7733
sg16
I0
sg17
g0
(g18
g5
Ntp7734
Rp7735
(dp7736
g22
(lp7737
sbsg53
Nsg85
g0
(g809
g5
Ntp7738
Rp7739
(dp7740
g552
(lp7741
g0
(g563
g5
Ntp7742
Rp7743
(dp7744
g14
S'auto_15010'
p7745
sg16
I0
sg17
g0
(g18
g5
Ntp7746
Rp7747
(dp7748
g22
(lp7749
sbsg53
Nsg85
g0
(g809
g5
Ntp7750
Rp7751
(dp7752
g552
(lp7753
g0
(g563
g5
Ntp7754
Rp7755
(dp7756
g14
S'auto_15005'
p7757
sg16
I0
sg17
g0
(g18
g5
Ntp7758
Rp7759
(dp7760
g22
(lp7761
sbsg53
Nsg85
g0
(g809
g5
Ntp7762
Rp7763
(dp7764
g552
(lp7765
g0
(g563
g5
Ntp7766
Rp7767
(dp7768
g14
S'auto_14982'
p7769
sg16
I0
sg17
g0
(g18
g5
Ntp7770
Rp7771
(dp7772
g22
(lp7773
sbsg53
Nsg85
g0
(g809
g5
Ntp7774
Rp7775
(dp7776
g552
(lp7777
g0
(g563
g5
Ntp7778
Rp7779
(dp7780
g16
I0
sg53
Nsg798
g801
sg807
(lp7781
sg14
S'auto_14816'
p7782
sg17
g0
(g18
g5
Ntp7783
Rp7784
(dp7785
g22
(lp7786
(lp7787
(g25
I306
g26
S'nade_train( * args[1:] )'
p7788
tp7789
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p7790
tp7791
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p7792
tp7793
a(g37
I36
g38
S'self.recompile()'
p7794
tp7795
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p7796
tp7797
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p7798
tp7799
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p7800
tp7801
aasbsg85
g0
(g809
g5
Ntp7802
Rp7803
(dp7804
g552
(lp7805
g1173
ag0
(g563
g5
Ntp7806
Rp7807
(dp7808
g16
I0
sg53
Nsg798
g801
sg807
(lp7809
sg14
S'auto_14874'
p7810
sg17
g0
(g18
g5
Ntp7811
Rp7812
(dp7813
g22
(lp7814
sbsg85
g0
(g809
g5
Ntp7815
Rp7816
(dp7817
g552
(lp7818
g3242
asg798
g801
sg814
(lp7819
g7807
asg17
g0
(g18
g5
Ntp7820
Rp7821
(dp7822
g4093
(lp7823
S'local_useless_reshape'
p7824
asg1268
(lp7825
g1270
asbsg1272
(dp7826
sg1274
g0
(g1275
g5
Ntp7827
Rp7828
(dp7829
g1279
I2
sbsbsg73
g1281
sbasg798
g801
sg814
(lp7830
g7779
asg17
g0
(g18
g5
Ntp7831
Rp7832
(dp7833
g4093
(lp7834
S'MergeOptimizer'
p7835
asg1268
(lp7836
g1271
asbsg1272
(dp7837
sg1274
g0
(g1308
g5
Ntp7838
Rp7839
(dp7840
g80
S'int64'
p7841
sbsbsg73
g0
(g74
g5
Ntp7842
Rp7843
(dp7844
g78
(I00
tp7845
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g3250
g5
Ntp7846
Rp7847
(dp7848
g14
S'auto_14981'
p7849
sg16
Nsg17
g0
(g18
g5
Ntp7850
Rp7851
(dp7852
g22
(lp7853
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p7854
tp7855
Rp7856
sbasg17
g0
(g18
g5
Ntp7857
Rp7858
sg814
(lp7859
g7767
asg1274
g0
(g3357
g5
Ntp7860
Rp7861
(dp7862
g3361
(g1465
tp7863
sbsbsg73
g0
(g74
g5
Ntp7864
Rp7865
(dp7866
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp7867
Rp7868
(dp7869
g14
S'auto_15001'
p7870
sg16
Nsg17
g0
(g18
g5
Ntp7871
Rp7872
(dp7873
g22
(lp7874
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp7875
Rp7876
(dp7877
g78
(tsg80
S'int8'
p7878
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp7879
g59
tp7880
Rp7881
(I1
(tg3031
I00
g7689
tp7882
bsbasg17
g0
(g18
g5
Ntp7883
Rp7884
sg814
(lp7885
g7755
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp7886
Rp7887
(dp7888
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp7889
Rp7890
(dp7891
g14
S'auto_15000'
p7892
sg16
I0
sg17
g0
(g18
g5
Ntp7893
Rp7894
(dp7895
g22
(lp7896
sbsg53
Nsg85
g0
(g809
g5
Ntp7897
Rp7898
(dp7899
g552
(lp7900
g0
(g563
g5
Ntp7901
Rp7902
(dp7903
g14
S'auto_14980'
p7904
sg16
I0
sg17
g0
(g18
g5
Ntp7905
Rp7906
(dp7907
g22
(lp7908
sbsg53
Nsg85
g0
(g809
g5
Ntp7909
Rp7910
(dp7911
g552
(lp7912
g1173
ag7807
asg17
g0
(g18
g5
Ntp7913
Rp7914
sg814
(lp7915
g7902
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp7916
Rp7917
(dp7918
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp7919
Rp7920
(dp7921
g14
S'auto_14996'
p7922
sg16
I0
sg17
g0
(g18
g5
Ntp7923
Rp7924
(dp7925
g22
(lp7926
sbsg53
Nsg85
g0
(g809
g5
Ntp7927
Rp7928
(dp7929
g552
(lp7930
g0
(g563
g5
Ntp7931
Rp7932
(dp7933
g14
S'auto_14991'
p7934
sg16
I0
sg17
g0
(g18
g5
Ntp7935
Rp7936
(dp7937
g22
(lp7938
sbsg53
Nsg85
g0
(g809
g5
Ntp7939
Rp7940
(dp7941
g552
(lp7942
g0
(g563
g5
Ntp7943
Rp7944
(dp7945
g14
S'auto_14988'
p7946
sg16
I0
sg17
g0
(g18
g5
Ntp7947
Rp7948
(dp7949
g22
(lp7950
sbsg53
Nsg85
g0
(g809
g5
Ntp7951
Rp7952
(dp7953
g552
(lp7954
g7767
ag0
(g563
g5
Ntp7955
Rp7956
(dp7957
g14
S'auto_14984'
p7958
sg16
I0
sg17
g0
(g18
g5
Ntp7959
Rp7960
(dp7961
g22
(lp7962
sbsg53
Nsg85
g0
(g809
g5
Ntp7963
Rp7964
(dp7965
g552
(lp7966
g7779
ag0
(g3250
g5
Ntp7967
Rp7968
(dp7969
g14
S'auto_14983'
p7970
sg16
Nsg17
g0
(g18
g5
Ntp7971
Rp7972
(dp7973
g22
(lp7974
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p7975
tp7976
Rp7977
sbasg17
g0
(g18
g5
Ntp7978
Rp7979
sg814
(lp7980
g7956
asg1274
g0
(g3357
g5
Ntp7981
Rp7982
(dp7983
g3361
(g1465
tp7984
sbsbsg73
g0
(g74
g5
Ntp7985
Rp7986
(dp7987
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp7988
Rp7989
sg814
(lp7990
g7944
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp7991
Rp7992
(dp7993
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp7994
Rp7995
sg814
(lp7996
g7932
asg1274
g0
(g318
g5
Ntp7997
Rp7998
(dp7999
g379
g380
sg322
g0
(ctheano.scalar.basic
Neg
p8000
g5
Ntp8001
Rp8002
(dp8003
g327
ctheano.scalar.basic
same_out_nobool
p8004
sg53
S'neg'
p8005
sbsg53
S'Elemwise{neg,no_inplace}'
p8006
sg330
(dp8007
sg332
(S'negative'
p8008
I1
I1
tp8009
sg333
g0
(g334
g5
Ntp8010
Rp8011
(dp8012
g338
I0
sg339
(dp8013
sbsg341
I00
sg307
S"-a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p8014
sbsbsg73
g0
(g74
g5
Ntp8015
Rp8016
(dp8017
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp8018
Rp8019
(dp8020
g14
S'auto_14992'
p8021
sg16
Nsg17
g0
(g18
g5
Ntp8022
Rp8023
(dp8024
g22
(lp8025
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp8026
Rp8027
(dp8028
g78
(tsg80
S'int8'
p8029
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp8030
g59
tp8031
Rp8032
(I1
(tg3031
I00
S'\x01'
p8033
tp8034
bsbasg17
g0
(g18
g5
Ntp8035
Rp8036
sg814
(lp8037
g7920
asg1274
g0
(g318
g5
Ntp8038
Rp8039
(dp8040
g379
g380
sg322
g4049
sg53
S'Elemwise{maximum,no_inplace}'
p8041
sg330
(dp8042
sg332
(g4051
I2
I1
tp8043
sg333
g0
(g334
g5
Ntp8044
Rp8045
(dp8046
g338
I0
sg339
(dp8047
sbsg341
I00
sg307
S"elemwise maximum. See max for the maximum in one tensor\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p8048
sbsbsg73
g0
(g74
g5
Ntp8049
Rp8050
(dp8051
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8052
Rp8053
sg814
(lp8054
g7890
asg1274
g0
(g318
g5
Ntp8055
Rp8056
(dp8057
g379
g380
sg322
g0
(ctheano.scalar.basic
IntDiv
p8058
g5
Ntp8059
Rp8060
(dp8061
g327
g1901
sg53
S'int_div'
p8062
sbsg53
S'Elemwise{int_div,no_inplace}'
p8063
sg330
(dp8064
sg332
(S'floor_divide'
p8065
I2
I1
tp8066
sg333
g0
(g334
g5
Ntp8067
Rp8068
(dp8069
g338
I0
sg339
(dp8070
sbsg341
I00
sg307
S"elementwise [floor] division (inverse of multiplication)\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p8071
sbsbsg73
g0
(g74
g5
Ntp8072
Rp8073
(dp8074
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag7767
asg17
g0
(g18
g5
Ntp8075
Rp8076
sg814
(lp8077
g7743
asg1274
g0
(g318
g5
Ntp8078
Rp8079
(dp8080
g379
g380
sg322
g0
(ctheano.scalar.basic
Switch
p8081
g5
Ntp8082
Rp8083
(dp8084
g53
Nsbsg53
S'Elemwise{switch,no_inplace}'
p8085
sg330
(dp8086
sg332
(S'where'
p8087
I3
I1
tp8088
sg333
g0
(g334
g5
Ntp8089
Rp8090
(dp8091
g338
I0
sg339
(dp8092
sbsg341
I00
sg307
S"if cond then ift else iff\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p8093
sbsbsg73
g0
(g74
g5
Ntp8094
Rp8095
(dp8096
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp8097
Rp8098
(dp8099
g14
S'auto_15332'
p8100
sg16
I0
sg17
g0
(g18
g5
Ntp8101
Rp8102
(dp8103
g22
(lp8104
sbsg53
Nsg85
g0
(g809
g5
Ntp8105
Rp8106
(dp8107
g552
(lp8108
g0
(g563
g5
Ntp8109
Rp8110
(dp8111
g14
S'auto_15327'
p8112
sg16
I0
sg17
g0
(g18
g5
Ntp8113
Rp8114
(dp8115
g22
(lp8116
sbsg53
Nsg85
g0
(g809
g5
Ntp8117
Rp8118
(dp8119
g552
(lp8120
g0
(g563
g5
Ntp8121
Rp8122
(dp8123
g14
S'auto_15296'
p8124
sg16
I0
sg17
g0
(g18
g5
Ntp8125
Rp8126
(dp8127
g22
(lp8128
sbsg53
Nsg85
g0
(g809
g5
Ntp8129
Rp8130
(dp8131
g552
(lp8132
g1222
ag0
(g3250
g5
Ntp8133
Rp8134
(dp8135
g14
S'auto_15295'
p8136
sg16
Nsg17
g0
(g18
g5
Ntp8137
Rp8138
(dp8139
g22
(lp8140
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p8141
tp8142
Rp8143
sbasg17
g0
(g18
g5
Ntp8144
Rp8145
sg814
(lp8146
g8122
asg1274
g0
(g3357
g5
Ntp8147
Rp8148
(dp8149
g3361
(g1465
tp8150
sbsbsg73
g0
(g74
g5
Ntp8151
Rp8152
(dp8153
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp8154
Rp8155
(dp8156
g14
S'auto_15323'
p8157
sg16
Nsg17
g0
(g18
g5
Ntp8158
Rp8159
(dp8160
g22
(lp8161
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp8162
Rp8163
(dp8164
g78
(tsg80
S'int8'
p8165
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp8166
g59
tp8167
Rp8168
(I1
(tg3031
I00
g7689
tp8169
bsbasg17
g0
(g18
g5
Ntp8170
Rp8171
sg814
(lp8172
g8110
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp8173
Rp8174
(dp8175
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp8176
Rp8177
(dp8178
g14
S'auto_15312'
p8179
sg16
I0
sg17
g0
(g18
g5
Ntp8180
Rp8181
(dp8182
g22
(lp8183
sbsg53
Nsg85
g0
(g809
g5
Ntp8184
Rp8185
(dp8186
g552
(lp8187
g0
(g563
g5
Ntp8188
Rp8189
(dp8190
g14
S'auto_15292'
p8191
sg16
I0
sg17
g0
(g18
g5
Ntp8192
Rp8193
(dp8194
g22
(lp8195
sbsg53
Nsg85
g0
(g809
g5
Ntp8196
Rp8197
(dp8198
g552
(lp8199
g1251
ag1181
ag1190
asg17
g0
(g18
g5
Ntp8200
Rp8201
sg814
(lp8202
g8189
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp8203
Rp8204
(dp8205
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp8206
Rp8207
(dp8208
g14
S'auto_15308'
p8209
sg16
I0
sg17
g0
(g18
g5
Ntp8210
Rp8211
(dp8212
g22
(lp8213
sbsg53
Nsg85
g0
(g809
g5
Ntp8214
Rp8215
(dp8216
g552
(lp8217
g0
(g563
g5
Ntp8218
Rp8219
(dp8220
g14
S'auto_15303'
p8221
sg16
I0
sg17
g0
(g18
g5
Ntp8222
Rp8223
(dp8224
g22
(lp8225
sbsg53
Nsg85
g0
(g809
g5
Ntp8226
Rp8227
(dp8228
g552
(lp8229
g0
(g563
g5
Ntp8230
Rp8231
(dp8232
g14
S'auto_15300'
p8233
sg16
I0
sg17
g0
(g18
g5
Ntp8234
Rp8235
(dp8236
g22
(lp8237
sbsg53
Nsg85
g0
(g809
g5
Ntp8238
Rp8239
(dp8240
g552
(lp8241
g0
(g563
g5
Ntp8242
Rp8243
(dp8244
g14
S'auto_15294'
p8245
sg16
I0
sg17
g0
(g18
g5
Ntp8246
Rp8247
(dp8248
g22
(lp8249
sbsg53
Nsg85
g0
(g809
g5
Ntp8250
Rp8251
(dp8252
g552
(lp8253
g1222
ag0
(g3250
g5
Ntp8254
Rp8255
(dp8256
g14
S'auto_15293'
p8257
sg16
Nsg17
g0
(g18
g5
Ntp8258
Rp8259
(dp8260
g22
(lp8261
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p8262
tp8263
Rp8264
sbasg17
g0
(g18
g5
Ntp8265
Rp8266
sg814
(lp8267
g8243
asg1274
g0
(g3357
g5
Ntp8268
Rp8269
(dp8270
g3361
(g1465
tp8271
sbsbsg73
g0
(g74
g5
Ntp8272
Rp8273
(dp8274
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag8122
asg17
g0
(g18
g5
Ntp8275
Rp8276
sg814
(lp8277
g8231
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp8278
Rp8279
(dp8280
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8281
Rp8282
sg814
(lp8283
g8219
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp8284
Rp8285
(dp8286
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp8287
Rp8288
(dp8289
g14
S'auto_15304'
p8290
sg16
Nsg17
g0
(g18
g5
Ntp8291
Rp8292
(dp8293
g22
(lp8294
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp8295
Rp8296
(dp8297
g78
(tsg80
S'int8'
p8298
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp8299
g59
tp8300
Rp8301
(I1
(tg3031
I00
g8033
tp8302
bsbasg17
g0
(g18
g5
Ntp8303
Rp8304
sg814
(lp8305
g8207
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp8306
Rp8307
(dp8308
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8309
Rp8310
sg814
(lp8311
g8177
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp8312
Rp8313
(dp8314
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag8122
asg17
g0
(g18
g5
Ntp8315
Rp8316
sg814
(lp8317
g8098
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp8318
Rp8319
(dp8320
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8321
Rp8322
sg814
(lp8323
g7731
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp8324
Rp8325
(dp8326
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp8327
Rp8328
(dp8329
g14
S'auto_15355'
p8330
sg16
I0
sg17
g0
(g18
g5
Ntp8331
Rp8332
(dp8333
g22
(lp8334
sbsg53
Nsg85
g0
(g809
g5
Ntp8335
Rp8336
(dp8337
g552
(lp8338
g0
(g563
g5
Ntp8339
Rp8340
(dp8341
g14
S'auto_15350'
p8342
sg16
I0
sg17
g0
(g18
g5
Ntp8343
Rp8344
(dp8345
g22
(lp8346
sbsg53
Nsg85
g0
(g809
g5
Ntp8347
Rp8348
(dp8349
g552
(lp8350
g0
(g563
g5
Ntp8351
Rp8352
(dp8353
g14
S'auto_15347'
p8354
sg16
I0
sg17
g0
(g18
g5
Ntp8355
Rp8356
(dp8357
g22
(lp8358
sbsg53
Nsg85
g0
(g809
g5
Ntp8359
Rp8360
(dp8361
g552
(lp8362
g7502
ag0
(g563
g5
Ntp8363
Rp8364
(dp8365
g14
S'auto_15340'
p8366
sg16
I0
sg17
g0
(g18
g5
Ntp8367
Rp8368
(dp8369
g22
(lp8370
sbsg53
Nsg85
g0
(g809
g5
Ntp8371
Rp8372
(dp8373
g552
(lp8374
g7514
ag0
(g3250
g5
Ntp8375
Rp8376
(dp8377
g14
S'auto_15339'
p8378
sg16
Nsg17
g0
(g18
g5
Ntp8379
Rp8380
(dp8381
g22
(lp8382
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p8383
tp8384
Rp8385
sbasg17
g0
(g18
g5
Ntp8386
Rp8387
sg814
(lp8388
g8364
asg1274
g0
(g3357
g5
Ntp8389
Rp8390
(dp8391
g3361
(g1465
tp8392
sbsbsg73
g0
(g74
g5
Ntp8393
Rp8394
(dp8395
g78
(tsg80
g7652
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp8396
Rp8397
(dp8398
g14
S'auto_15342'
p8399
sg16
I0
sg17
g0
(g18
g5
Ntp8400
Rp8401
(dp8402
g22
(lp8403
sbsg53
Nsg85
g0
(g809
g5
Ntp8404
Rp8405
(dp8406
g552
(lp8407
g7514
ag0
(g3250
g5
Ntp8408
Rp8409
(dp8410
g14
S'auto_15341'
p8411
sg16
Nsg17
g0
(g18
g5
Ntp8412
Rp8413
(dp8414
g22
(lp8415
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p8416
tp8417
Rp8418
sbasg17
g0
(g18
g5
Ntp8419
Rp8420
sg814
(lp8421
g8397
asg1274
g0
(g3357
g5
Ntp8422
Rp8423
(dp8424
g3361
(g1465
tp8425
sbsbsg73
g0
(g74
g5
Ntp8426
Rp8427
(dp8428
g78
(tsg80
g7652
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8429
Rp8430
sg814
(lp8431
g8352
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp8432
Rp8433
(dp8434
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8435
Rp8436
sg814
(lp8437
g8340
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp8438
Rp8439
(dp8440
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp8441
Rp8442
(dp8443
g14
S'auto_15351'
p8444
sg16
Nsg17
g0
(g18
g5
Ntp8445
Rp8446
(dp8447
g22
(lp8448
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp8449
Rp8450
(dp8451
g78
(tsg80
S'int8'
p8452
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp8453
g59
tp8454
Rp8455
(I1
(tg3031
I00
g8033
tp8456
bsbasg17
g0
(g18
g5
Ntp8457
Rp8458
sg814
(lp8459
g8328
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp8460
Rp8461
(dp8462
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp8463
Rp8464
sg814
(lp8465
g7719
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp8466
Rp8467
(dp8468
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag7502
asg17
g0
(g18
g5
Ntp8469
Rp8470
sg814
(lp8471
g7478
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp8472
Rp8473
(dp8474
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp8475
sg0
(g563
g5
Ntp8476
Rp8477
(dp8478
g16
I0
sg53
Nsg798
g801
sg807
(lp8479
sg14
S'auto_15465'
p8480
sg17
g0
(g18
g5
Ntp8481
Rp8482
(dp8483
g22
(lp8484
(lp8485
(g25
I306
g26
S'nade_train( * args[1:] )'
p8486
tp8487
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8488
tp8489
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8490
tp8491
a(g37
I36
g38
S'self.recompile()'
p8492
tp8493
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8494
tp8495
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8496
tp8497
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p8498
tp8499
aasbsg85
g0
(g809
g5
Ntp8500
Rp8501
(dp8502
g552
(lp8503
g0
(g843
g5
Ntp8504
Rp8505
(dp8506
g14
S'auto_15636'
p8507
sg16
Nsg17
g0
(g18
g5
Ntp8508
Rp8509
(dp8510
g22
(lp8511
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp8512
Rp8513
(dp8514
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsg807
(lp8515
sg883
g56
(g57
(I0
tp8516
g59
tp8517
Rp8518
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p8519
tp8520
bsbag0
(g563
g5
Ntp8521
Rp8522
(dp8523
g16
I0
sg53
Nsg798
g801
sg807
(lp8524
sg14
S'auto_14804'
p8525
sg17
g0
(g18
g5
Ntp8526
Rp8527
(dp8528
g4058
g4059
sg22
(lp8529
(lp8530
(g25
I306
g26
S'nade_train( * args[1:] )'
p8531
tp8532
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8533
tp8534
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8535
tp8536
a(g37
I36
g38
S'self.recompile()'
p8537
tp8538
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8539
tp8540
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8541
tp8542
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p8543
tp8544
aasbsg85
g0
(g809
g5
Ntp8545
Rp8546
(dp8547
g552
(lp8548
g0
(g563
g5
Ntp8549
Rp8550
(dp8551
g16
I0
sg53
Nsg798
g801
sg807
(lp8552
sg14
S'auto_15474'
p8553
sg17
g0
(g18
g5
Ntp8554
Rp8555
(dp8556
g22
(lp8557
(lp8558
(g25
I306
g26
S'nade_train( * args[1:] )'
p8559
tp8560
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8561
tp8562
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8563
tp8564
a(g37
I36
g38
S'self.recompile()'
p8565
tp8566
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8567
tp8568
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8569
tp8570
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p8571
tp8572
aasbsg85
g0
(g809
g5
Ntp8573
Rp8574
(dp8575
g552
(lp8576
g1251
ag1181
ag1190
asg798
g801
sg814
(lp8577
g8550
asg17
g0
(g18
g5
Ntp8578
Rp8579
(dp8580
g4093
(lp8581
g7591
asg1268
(lp8582
g1270
asbsg1272
(dp8583
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp8584
Rp8585
(dp8586
g78
(I00
tp8587
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag3252
asg798
g801
sg814
(lp8588
g8522
asg17
g0
(g18
g5
Ntp8589
Rp8590
(dp8591
g4093
(lp8592
g7591
asg1268
(lp8593
g1271
asbsg1272
(dp8594
sg1274
g0
(g3357
g5
Ntp8595
Rp8596
(dp8597
g3361
(g1465
tp8598
sbsbsg73
g0
(g74
g5
Ntp8599
Rp8600
(dp8601
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp8602
g8477
asg17
g0
(g18
g5
Ntp8603
Rp8604
(dp8605
g4093
(lp8606
g5660
asg1268
(lp8607
S'local_upcast_elemwise_constant_inputs'
p8608
asbsg1272
(dp8609
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp8610
Rp8611
(dp8612
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp8613
Rp8614
(dp8615
g16
I0
sg53
Nsg798
g801
sg807
(lp8616
sg14
S'auto_14837'
p8617
sg17
g0
(g18
g5
Ntp8618
Rp8619
(dp8620
g22
(lp8621
(lp8622
(g25
I306
g26
S'nade_train( * args[1:] )'
p8623
tp8624
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8625
tp8626
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8627
tp8628
a(g37
I36
g38
S'self.recompile()'
p8629
tp8630
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8631
tp8632
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8633
tp8634
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p8635
tp8636
a(g4481
I53
g4482
S'return max_x + T.log(T.sum(T.exp(x - T.shape_padright(max_x, 1)), axis))'
p8637
tp8638
aasbsg85
g0
(g809
g5
Ntp8639
Rp8640
(dp8641
g552
(lp8642
g0
(g563
g5
Ntp8643
Rp8644
(dp8645
g16
I0
sg53
Nsg798
g801
sg807
(lp8646
sg14
S'auto_14836'
p8647
sg17
g0
(g18
g5
Ntp8648
Rp8649
(dp8650
g22
(lp8651
(lp8652
(g25
I306
g26
S'nade_train( * args[1:] )'
p8653
tp8654
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8655
tp8656
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8657
tp8658
a(g37
I36
g38
S'self.recompile()'
p8659
tp8660
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8661
tp8662
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8663
tp8664
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p8665
tp8666
a(g4481
I53
g4482
S'return max_x + T.log(T.sum(T.exp(x - T.shape_padright(max_x, 1)), axis))'
p8667
tp8668
aasbsg85
g0
(g809
g5
Ntp8669
Rp8670
(dp8671
g552
(lp8672
g0
(g563
g5
Ntp8673
Rp8674
(dp8675
g16
I0
sg53
Nsg798
g801
sg807
(lp8676
sg14
S'auto_14835'
p8677
sg17
g0
(g18
g5
Ntp8678
Rp8679
(dp8680
g22
(lp8681
(lp8682
(g25
I306
g26
S'nade_train( * args[1:] )'
p8683
tp8684
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8685
tp8686
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8687
tp8688
a(g37
I36
g38
S'self.recompile()'
p8689
tp8690
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8691
tp8692
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8693
tp8694
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p8695
tp8696
a(g4481
I53
g4482
S'return max_x + T.log(T.sum(T.exp(x - T.shape_padright(max_x, 1)), axis))'
p8697
tp8698
aasbsg85
g0
(g809
g5
Ntp8699
Rp8700
(dp8701
g552
(lp8702
g0
(g563
g5
Ntp8703
Rp8704
(dp8705
g16
I0
sg53
Nsg798
g801
sg807
(lp8706
sg14
S'auto_15415'
p8707
sg17
g0
(g18
g5
Ntp8708
Rp8709
(dp8710
g4058
g4059
sg22
(lp8711
sbsg85
g0
(g809
g5
Ntp8712
Rp8713
(dp8714
g552
(lp8715
g0
(g563
g5
Ntp8716
Rp8717
(dp8718
g16
I0
sg53
Nsg798
g801
sg807
(lp8719
sg14
S'auto_15407'
p8720
sg17
g0
(g18
g5
Ntp8721
Rp8722
(dp8723
g22
(lp8724
sbsg85
g0
(g809
g5
Ntp8725
Rp8726
(dp8727
g552
(lp8728
g984
ag0
(g563
g5
Ntp8729
Rp8730
(dp8731
g16
I0
sg53
Nsg798
g801
sg807
(lp8732
sg14
S'auto_14827'
p8733
sg17
g0
(g18
g5
Ntp8734
Rp8735
(dp8736
g22
(lp8737
(lp8738
(g25
I306
g26
S'nade_train( * args[1:] )'
p8739
tp8740
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8741
tp8742
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8743
tp8744
a(g37
I36
g38
S'self.recompile()'
p8745
tp8746
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8747
tp8748
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8749
tp8750
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p8751
tp8752
aasbsg85
g0
(g809
g5
Ntp8753
Rp8754
(dp8755
g552
(lp8756
g1008
ag0
(g563
g5
Ntp8757
Rp8758
(dp8759
g16
I0
sg53
Nsg798
g801
sg807
(lp8760
sg14
S'auto_14823'
p8761
sg17
g0
(g18
g5
Ntp8762
Rp8763
(dp8764
g22
(lp8765
(lp8766
(g25
I306
g26
S'nade_train( * args[1:] )'
p8767
tp8768
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8769
tp8770
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8771
tp8772
a(g37
I36
g38
S'self.recompile()'
p8773
tp8774
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8775
tp8776
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8777
tp8778
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p8779
tp8780
aasbsg85
g0
(g809
g5
Ntp8781
Rp8782
(dp8783
g552
(lp8784
g0
(g563
g5
Ntp8785
Rp8786
(dp8787
g16
I0
sg53
Nsg798
g801
sg807
(lp8788
sg14
S'auto_14822'
p8789
sg17
g0
(g18
g5
Ntp8790
Rp8791
(dp8792
g22
(lp8793
(lp8794
(g25
I306
g26
S'nade_train( * args[1:] )'
p8795
tp8796
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8797
tp8798
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8799
tp8800
a(g37
I36
g38
S'self.recompile()'
p8801
tp8802
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8803
tp8804
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8805
tp8806
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p8807
tp8808
aasbsg85
g0
(g809
g5
Ntp8809
Rp8810
(dp8811
g552
(lp8812
g0
(g563
g5
Ntp8813
Rp8814
(dp8815
g16
I0
sg53
Nsg798
g801
sg807
(lp8816
sg14
S'auto_14821'
p8817
sg17
g0
(g18
g5
Ntp8818
Rp8819
(dp8820
g22
(lp8821
(lp8822
(g25
I306
g26
S'nade_train( * args[1:] )'
p8823
tp8824
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8825
tp8826
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8827
tp8828
a(g37
I36
g38
S'self.recompile()'
p8829
tp8830
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8831
tp8832
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8833
tp8834
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p8835
tp8836
aasbsg85
g0
(g809
g5
Ntp8837
Rp8838
(dp8839
g552
(lp8840
g0
(g563
g5
Ntp8841
Rp8842
(dp8843
g16
I0
sg53
Nsg798
g801
sg807
(lp8844
sg14
S'auto_14820'
p8845
sg17
g0
(g18
g5
Ntp8846
Rp8847
(dp8848
g22
(lp8849
(lp8850
(g25
I306
g26
S'nade_train( * args[1:] )'
p8851
tp8852
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8853
tp8854
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8855
tp8856
a(g37
I36
g38
S'self.recompile()'
p8857
tp8858
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8859
tp8860
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8861
tp8862
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p8863
tp8864
aasbsg85
g0
(g809
g5
Ntp8865
Rp8866
(dp8867
g552
(lp8868
g1031
ag3567
asg798
g801
sg814
(lp8869
g8842
asg17
g0
(g18
g5
Ntp8870
Rp8871
(dp8872
g4093
(lp8873
g5814
asg1268
(lp8874
g1271
asbsg1272
(dp8875
sg1274
g0
(g318
g5
Ntp8876
Rp8877
(dp8878
g379
g380
sg322
g1899
sg53
S'Elemwise{add,no_inplace}'
p8879
sg330
(dp8880
sg332
(g1902
I2
I1
tp8881
sg333
g0
(g334
g5
Ntp8882
Rp8883
(dp8884
g338
I0
sg339
(dp8885
sbsg341
I00
sg307
S"elementwise addition\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p8886
sbsbsg73
g0
(g74
g5
Ntp8887
Rp8888
(dp8889
g78
(I00
I00
I00
tp8890
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag3630
asg798
g801
sg814
(lp8891
g8814
asg17
g0
(g18
g5
Ntp8892
Rp8893
(dp8894
g4093
(lp8895
g5814
asg1268
(lp8896
g1271
asbsg1272
(dp8897
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp8898
Rp8899
(dp8900
g78
(I00
I00
I00
tp8901
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp8902
Rp8903
(dp8904
g16
I0
sg53
Nsg798
g801
sg807
(lp8905
sg14
S'auto_14779'
p8906
sg17
g0
(g18
g5
Ntp8907
Rp8908
(dp8909
g22
(lp8910
(lp8911
(g25
I306
g26
S'nade_train( * args[1:] )'
p8912
tp8913
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8914
tp8915
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8916
tp8917
a(g37
I36
g38
S'self.recompile()'
p8918
tp8919
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8920
tp8921
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8922
tp8923
a(g874
I224
g875
S'Sigma = T.exp(z_sigma)  # + 1e-6 #BxDxC'
p8924
tp8925
aasbsg85
g0
(g809
g5
Ntp8926
Rp8927
(dp8928
g552
(lp8929
g0
(g563
g5
Ntp8930
Rp8931
(dp8932
g16
I0
sg53
Nsg798
g801
sg807
(lp8933
sg14
S'auto_14778'
p8934
sg17
g0
(g18
g5
Ntp8935
Rp8936
(dp8937
g22
(lp8938
(lp8939
(g25
I306
g26
S'nade_train( * args[1:] )'
p8940
tp8941
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p8942
tp8943
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p8944
tp8945
a(g37
I36
g38
S'self.recompile()'
p8946
tp8947
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p8948
tp8949
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p8950
tp8951
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p8952
tp8953
aasbsg85
g0
(g809
g5
Ntp8954
Rp8955
(dp8956
g552
(lp8957
g2473
ag2481
asg798
g801
sg814
(lp8958
g8931
asg17
g0
(g18
g5
Ntp8959
Rp8960
(dp8961
g4093
(lp8962
g5814
asg1268
(lp8963
g1271
asbsg1272
(dp8964
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp8965
Rp8966
(dp8967
g78
(I00
I00
I00
tp8968
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp8969
g8903
asg17
g0
(g18
g5
Ntp8970
Rp8971
(dp8972
g4093
(lp8973
g5814
asg1268
(lp8974
g1271
asbsg1272
(dp8975
sg1274
g377
sbsg73
g0
(g74
g5
Ntp8976
Rp8977
(dp8978
g78
(I00
I00
I00
tp8979
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp8980
g8786
asg17
g0
(g18
g5
Ntp8981
Rp8982
(dp8983
g4093
(lp8984
g5814
asg1268
(lp8985
g1271
asbsg1272
(dp8986
sg1274
g0
(g318
g5
Ntp8987
Rp8988
(dp8989
g379
g380
sg322
g3892
sg53
S'Elemwise{true_div,no_inplace}'
p8990
sg330
(dp8991
sg332
(S'true_divide'
p8992
I2
I1
tp8993
sg333
g0
(g334
g5
Ntp8994
Rp8995
(dp8996
g338
I0
sg339
(dp8997
sbsg341
I00
sg307
S"elementwise [true] division (inverse of multiplication)\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p8998
sbsbsg73
g0
(g74
g5
Ntp8999
Rp9000
(dp9001
g78
(I00
I00
I00
tp9002
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9003
g8758
asg17
g0
(g18
g5
Ntp9004
Rp9005
(dp9006
g4093
(lp9007
g5814
asg1268
(lp9008
g1271
asbsg1272
(dp9009
sg1274
g0
(g318
g5
Ntp9010
Rp9011
(dp9012
g379
g380
sg322
g3900
sg53
S'Elemwise{sqr,no_inplace}'
p9013
sg330
(dp9014
sg332
(S'square'
p9015
I1
I1
tp9016
sg333
g0
(g334
g5
Ntp9017
Rp9018
(dp9019
g338
I0
sg339
(dp9020
sbsg341
I00
sg307
S"square of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p9021
sbsbsg73
g0
(g74
g5
Ntp9022
Rp9023
(dp9024
g78
(I00
I00
I00
tp9025
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9026
g8730
asg17
g0
(g18
g5
Ntp9027
Rp9028
(dp9029
g4093
(lp9030
g5814
asg1268
(lp9031
g1271
asbsg1272
(dp9032
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp9033
Rp9034
(dp9035
g78
(I00
I00
I00
tp9036
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9037
Rp9038
(dp9039
g16
I0
sg53
Nsg798
g801
sg807
(lp9040
sg14
S'auto_14737'
p9041
sg17
g0
(g18
g5
Ntp9042
Rp9043
(dp9044
g22
(lp9045
(lp9046
(g25
I306
g26
S'nade_train( * args[1:] )'
p9047
tp9048
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p9049
tp9050
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p9051
tp9052
a(g37
I36
g38
S'self.recompile()'
p9053
tp9054
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p9055
tp9056
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p9057
tp9058
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p9059
tp9060
aasbsg85
g0
(g809
g5
Ntp9061
Rp9062
(dp9063
g552
(lp9064
g0
(g563
g5
Ntp9065
Rp9066
(dp9067
g16
I0
sg53
Nsg798
g801
sg807
(lp9068
sg14
S'auto_14736'
p9069
sg17
g0
(g18
g5
Ntp9070
Rp9071
(dp9072
g22
(lp9073
(lp9074
(g25
I306
g26
S'nade_train( * args[1:] )'
p9075
tp9076
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p9077
tp9078
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p9079
tp9080
a(g37
I36
g38
S'self.recompile()'
p9081
tp9082
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p9083
tp9084
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p9085
tp9086
a(g874
I222
g875
S'Alpha = temp / T.shape_padright(temp.sum(2))  # BxDxC'
p9087
tp9088
aasbsg85
g0
(g809
g5
Ntp9089
Rp9090
(dp9091
g552
(lp9092
g0
(g563
g5
Ntp9093
Rp9094
(dp9095
g16
I0
sg53
Nsg798
g801
sg807
(lp9096
sg14
S'auto_14733'
p9097
sg17
g0
(g18
g5
Ntp9098
Rp9099
(dp9100
g22
(lp9101
(lp9102
(g25
I306
g26
S'nade_train( * args[1:] )'
p9103
tp9104
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p9105
tp9106
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p9107
tp9108
a(g37
I36
g38
S'self.recompile()'
p9109
tp9110
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p9111
tp9112
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p9113
tp9114
a(g874
I220
g875
S'temp = T.exp(z_alpha)  # + 1e-6'
p9115
tp9116
aasbsg85
g0
(g809
g5
Ntp9117
Rp9118
(dp9119
g552
(lp9120
g0
(g563
g5
Ntp9121
Rp9122
(dp9123
g16
I0
sg53
Nsg798
g801
sg807
(lp9124
sg14
S'auto_14732'
p9125
sg17
g0
(g18
g5
Ntp9126
Rp9127
(dp9128
g22
(lp9129
(lp9130
(g25
I306
g26
S'nade_train( * args[1:] )'
p9131
tp9132
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p9133
tp9134
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p9135
tp9136
a(g37
I36
g38
S'self.recompile()'
p9137
tp9138
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p9139
tp9140
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p9141
tp9142
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p9143
tp9144
aasbsg85
g0
(g809
g5
Ntp9145
Rp9146
(dp9147
g552
(lp9148
g1725
ag1733
asg798
g801
sg814
(lp9149
g9122
asg17
g0
(g18
g5
Ntp9150
Rp9151
(dp9152
g4093
(lp9153
g5814
asg1268
(lp9154
g1271
asbsg1272
(dp9155
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp9156
Rp9157
(dp9158
g78
(I00
I00
I00
tp9159
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9160
g9094
asg17
g0
(g18
g5
Ntp9161
Rp9162
(dp9163
g4093
(lp9164
g5814
asg1268
(lp9165
g1271
asbsg1272
(dp9166
sg1274
g377
sbsg73
g0
(g74
g5
Ntp9167
Rp9168
(dp9169
g78
(I00
I00
I00
tp9170
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag1815
asg798
g801
sg814
(lp9171
g9066
asg17
g0
(g18
g5
Ntp9172
Rp9173
(dp9174
g4093
(lp9175
g5814
asg1268
(lp9176
g1271
asbsg1272
(dp9177
sg1274
g8988
sbsg73
g0
(g74
g5
Ntp9178
Rp9179
(dp9180
g78
(I00
I00
I00
tp9181
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9182
g9038
asg17
g0
(g18
g5
Ntp9183
Rp9184
(dp9185
g4093
(lp9186
g5814
asg1268
(lp9187
g1271
asbsg1272
(dp9188
sg1274
g6150
sbsg73
g0
(g74
g5
Ntp9189
Rp9190
(dp9191
g78
(I00
I00
I00
tp9192
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9193
g8717
asg17
g0
(g18
g5
Ntp9194
Rp9195
(dp9196
g4093
(lp9197
g5814
asg1268
(lp9198
g4096
asbsg1272
(dp9199
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp9200
Rp9201
(dp9202
g78
(I00
I00
I00
tp9203
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9204
Rp9205
(dp9206
g16
I0
sg53
Nsg798
g801
sg807
(lp9207
sg14
S'auto_15411'
p9208
sg17
g0
(g18
g5
Ntp9209
Rp9210
(dp9211
g22
(lp9212
sbsg85
g0
(g809
g5
Ntp9213
Rp9214
(dp9215
g552
(lp9216
g6115
ag944
asg798
g801
sg814
(lp9217
g9205
asg17
g0
(g18
g5
Ntp9218
Rp9219
(dp9220
g4093
(lp9221
g5814
asg1268
(lp9222
g4096
asbsg1272
(dp9223
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp9224
Rp9225
(dp9226
g78
(I00
I00
I00
tp9227
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9228
g8704
asg17
g0
(g18
g5
Ntp9229
Rp9230
(dp9231
g4093
(lp9232
g5814
asg1268
(lp9233
g4096
asbsg1272
(dp9234
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp9235
Rp9236
(dp9237
g78
(I00
I00
I00
tp9238
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9239
g8674
asg17
g0
(g18
g5
Ntp9240
Rp9241
(dp9242
g4093
(lp9243
g4178
asg1268
(lp9244
g1271
asbsg1272
(dp9245
sg1274
g377
sbsg73
g0
(g74
g5
Ntp9246
Rp9247
(dp9248
g78
(I00
I00
I00
tp9249
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9250
g8644
asg17
g0
(g18
g5
Ntp9251
Rp9252
(dp9253
g4093
(lp9254
g4178
asg1268
(lp9255
g1271
asbsg1272
(dp9256
sg1274
g0
(g1893
g5
Ntp9257
Rp9258
(dp9259
g80
g251
sg322
g1899
sg1903
(I2
tp9260
sg1905
g251
sbsbsg73
g0
(g74
g5
Ntp9261
Rp9262
(dp9263
g78
(I00
I00
tp9264
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9265
g8614
asg17
g0
(g18
g5
Ntp9266
Rp9267
(dp9268
g4093
(lp9269
g4178
asg1268
(lp9270
g1271
asbsg1272
(dp9271
sg1274
g6150
sbsg73
g0
(g74
g5
Ntp9272
Rp9273
(dp9274
g78
(I00
I00
tp9275
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g0
(g563
g5
Ntp9276
Rp9277
(dp9278
g14
S'auto_15379'
p9279
sg16
I0
sg17
g0
(g18
g5
Ntp9280
Rp9281
(dp9282
g22
(lp9283
sbsg53
Nsg85
g0
(g809
g5
Ntp9284
Rp9285
(dp9286
g552
(lp9287
g0
(g563
g5
Ntp9288
Rp9289
(dp9290
g14
S'auto_15374'
p9291
sg16
I0
sg17
g0
(g18
g5
Ntp9292
Rp9293
(dp9294
g22
(lp9295
sbsg53
Nsg85
g0
(g809
g5
Ntp9296
Rp9297
(dp9298
g552
(lp9299
g8364
ag0
(g843
g5
Ntp9300
Rp9301
(dp9302
g14
S'auto_15370'
p9303
sg16
Nsg17
g0
(g18
g5
Ntp9304
Rp9305
(dp9306
g22
(lp9307
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9308
Rp9309
(dp9310
g78
(tsg80
S'int8'
p9311
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9312
g59
tp9313
Rp9314
(I1
(tg3031
I00
g7689
tp9315
bsbasg17
g0
(g18
g5
Ntp9316
Rp9317
sg814
(lp9318
g9289
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp9319
Rp9320
(dp9321
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag7719
ag8364
asg17
g0
(g18
g5
Ntp9322
Rp9323
sg814
(lp9324
g9277
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp9325
Rp9326
(dp9327
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp9328
sg8903
(g0
(g563
g5
Ntp9329
Rp9330
(dp9331
g14
S'auto_15213'
p9332
sg16
I0
sg17
g0
(g18
g5
Ntp9333
Rp9334
(dp9335
g22
(lp9336
sbsg53
Nsg85
g0
(g809
g5
Ntp9337
Rp9338
(dp9339
g552
(lp9340
g0
(g563
g5
Ntp9341
Rp9342
(dp9343
g14
S'auto_15208'
p9344
sg16
I0
sg17
g0
(g18
g5
Ntp9345
Rp9346
(dp9347
g22
(lp9348
sbsg53
Nsg85
g0
(g809
g5
Ntp9349
Rp9350
(dp9351
g552
(lp9352
g0
(g563
g5
Ntp9353
Rp9354
(dp9355
g14
S'auto_15182'
p9356
sg16
I0
sg17
g0
(g18
g5
Ntp9357
Rp9358
(dp9359
g22
(lp9360
sbsg53
Nsg85
g0
(g809
g5
Ntp9361
Rp9362
(dp9363
g552
(lp9364
g0
(g563
g5
Ntp9365
Rp9366
(dp9367
g16
I0
sg53
Nsg798
g801
sg807
(lp9368
sg14
S'auto_14751'
p9369
sg17
g0
(g18
g5
Ntp9370
Rp9371
(dp9372
g22
(lp9373
g2680
asbsg85
g0
(g809
g5
Ntp9374
Rp9375
(dp9376
g552
(lp9377
g7527
ag7558
ag0
(g563
g5
Ntp9378
Rp9379
(dp9380
g16
I0
sg53
Nsg798
g801
sg807
(lp9381
sg14
S'auto_15728'
p9382
sg17
g0
(g18
g5
Ntp9383
Rp9384
(dp9385
g22
(lp9386
(lp9387
(g25
I306
g26
S'nade_train( * args[1:] )'
p9388
tp9389
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p9390
tp9391
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p9392
tp9393
a(g37
I36
g38
S'self.recompile()'
p9394
tp9395
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p9396
tp9397
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p9398
tp9399
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p9400
tp9401
aasbsg85
g0
(g809
g5
Ntp9402
Rp9403
(dp9404
g552
(lp9405
g2280
ag1165
asg798
g801
sg814
(lp9406
g9379
asg17
g0
(g18
g5
Ntp9407
Rp9408
(dp9409
g4093
(lp9410
g1546
asg1268
(lp9411
g7591
asbsg1272
(dp9412
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp9413
Rp9414
(dp9415
g78
(I00
tp9416
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp9417
g9366
asg17
g0
(g18
g5
Ntp9418
Rp9419
(dp9420
g4093
(lp9421
g1546
asg1268
(lp9422
g1271
asbsg1272
(dp9423
sg1274
g7645
sbsg73
g0
(g74
g5
Ntp9424
Rp9425
(dp9426
g78
(I00
tp9427
sg80
S'int64'
p9428
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g3250
g5
Ntp9429
Rp9430
(dp9431
g14
S'auto_15181'
p9432
sg16
Nsg17
g0
(g18
g5
Ntp9433
Rp9434
(dp9435
g22
(lp9436
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p9437
tp9438
Rp9439
sbasg17
g0
(g18
g5
Ntp9440
Rp9441
sg814
(lp9442
g9354
asg1274
g0
(g3357
g5
Ntp9443
Rp9444
(dp9445
g3361
(g1465
tp9446
sbsbsg73
g0
(g74
g5
Ntp9447
Rp9448
(dp9449
g78
(tsg80
g9428
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp9450
Rp9451
(dp9452
g14
S'auto_15204'
p9453
sg16
Nsg17
g0
(g18
g5
Ntp9454
Rp9455
(dp9456
g22
(lp9457
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9458
Rp9459
(dp9460
g78
(tsg80
S'int8'
p9461
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9462
g59
tp9463
Rp9464
(I1
(tg3031
I00
g7689
tp9465
bsbasg17
g0
(g18
g5
Ntp9466
Rp9467
sg814
(lp9468
g9342
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp9469
Rp9470
(dp9471
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9472
Rp9473
(dp9474
g14
S'auto_15203'
p9475
sg16
I0
sg17
g0
(g18
g5
Ntp9476
Rp9477
(dp9478
g22
(lp9479
sbsg53
Nsg85
g0
(g809
g5
Ntp9480
Rp9481
(dp9482
g552
(lp9483
g0
(g563
g5
Ntp9484
Rp9485
(dp9486
g14
S'auto_15180'
p9487
sg16
I0
sg17
g0
(g18
g5
Ntp9488
Rp9489
(dp9490
g22
(lp9491
sbsg53
Nsg85
g0
(g809
g5
Ntp9492
Rp9493
(dp9494
g552
(lp9495
g7743
ag0
(g563
g5
Ntp9496
Rp9497
(dp9498
g14
S'auto_15176'
p9499
sg16
I0
sg17
g0
(g18
g5
Ntp9500
Rp9501
(dp9502
g22
(lp9503
sbsg53
Nsg85
g0
(g809
g5
Ntp9504
Rp9505
(dp9506
g552
(lp9507
g0
(g563
g5
Ntp9508
Rp9509
(dp9510
g14
S'auto_15171'
p9511
sg16
I0
sg17
g0
(g18
g5
Ntp9512
Rp9513
(dp9514
g22
(lp9515
sbsg53
Nsg85
g0
(g809
g5
Ntp9516
Rp9517
(dp9518
g552
(lp9519
g0
(g563
g5
Ntp9520
Rp9521
(dp9522
g14
S'auto_15140'
p9523
sg16
I0
sg17
g0
(g18
g5
Ntp9524
Rp9525
(dp9526
g22
(lp9527
sbsg53
Nsg85
g0
(g809
g5
Ntp9528
Rp9529
(dp9530
g552
(lp9531
g2322
ag0
(g3250
g5
Ntp9532
Rp9533
(dp9534
g14
S'auto_15139'
p9535
sg16
Nsg17
g0
(g18
g5
Ntp9536
Rp9537
(dp9538
g22
(lp9539
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p9540
tp9541
Rp9542
sbasg17
g0
(g18
g5
Ntp9543
Rp9544
sg814
(lp9545
g9521
asg1274
g0
(g3357
g5
Ntp9546
Rp9547
(dp9548
g3361
(g1465
tp9549
sbsbsg73
g0
(g74
g5
Ntp9550
Rp9551
(dp9552
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp9553
Rp9554
(dp9555
g14
S'auto_15167'
p9556
sg16
Nsg17
g0
(g18
g5
Ntp9557
Rp9558
(dp9559
g22
(lp9560
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9561
Rp9562
(dp9563
g78
(tsg80
S'int8'
p9564
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9565
g59
tp9566
Rp9567
(I1
(tg3031
I00
g7689
tp9568
bsbasg17
g0
(g18
g5
Ntp9569
Rp9570
sg814
(lp9571
g9509
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp9572
Rp9573
(dp9574
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9575
Rp9576
(dp9577
g14
S'auto_15156'
p9578
sg16
I0
sg17
g0
(g18
g5
Ntp9579
Rp9580
(dp9581
g22
(lp9582
sbsg53
Nsg85
g0
(g809
g5
Ntp9583
Rp9584
(dp9585
g552
(lp9586
g0
(g563
g5
Ntp9587
Rp9588
(dp9589
g14
S'auto_15136'
p9590
sg16
I0
sg17
g0
(g18
g5
Ntp9591
Rp9592
(dp9593
g22
(lp9594
sbsg53
Nsg85
g0
(g809
g5
Ntp9595
Rp9596
(dp9597
g552
(lp9598
g2298
ag2280
ag1165
asg17
g0
(g18
g5
Ntp9599
Rp9600
sg814
(lp9601
g9588
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp9602
Rp9603
(dp9604
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9605
Rp9606
(dp9607
g14
S'auto_15152'
p9608
sg16
I0
sg17
g0
(g18
g5
Ntp9609
Rp9610
(dp9611
g22
(lp9612
sbsg53
Nsg85
g0
(g809
g5
Ntp9613
Rp9614
(dp9615
g552
(lp9616
g0
(g563
g5
Ntp9617
Rp9618
(dp9619
g14
S'auto_15147'
p9620
sg16
I0
sg17
g0
(g18
g5
Ntp9621
Rp9622
(dp9623
g22
(lp9624
sbsg53
Nsg85
g0
(g809
g5
Ntp9625
Rp9626
(dp9627
g552
(lp9628
g0
(g563
g5
Ntp9629
Rp9630
(dp9631
g14
S'auto_15144'
p9632
sg16
I0
sg17
g0
(g18
g5
Ntp9633
Rp9634
(dp9635
g22
(lp9636
sbsg53
Nsg85
g0
(g809
g5
Ntp9637
Rp9638
(dp9639
g552
(lp9640
g0
(g563
g5
Ntp9641
Rp9642
(dp9643
g14
S'auto_15138'
p9644
sg16
I0
sg17
g0
(g18
g5
Ntp9645
Rp9646
(dp9647
g22
(lp9648
sbsg53
Nsg85
g0
(g809
g5
Ntp9649
Rp9650
(dp9651
g552
(lp9652
g2322
ag0
(g3250
g5
Ntp9653
Rp9654
(dp9655
g14
S'auto_15137'
p9656
sg16
Nsg17
g0
(g18
g5
Ntp9657
Rp9658
(dp9659
g22
(lp9660
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p9661
tp9662
Rp9663
sbasg17
g0
(g18
g5
Ntp9664
Rp9665
sg814
(lp9666
g9642
asg1274
g0
(g3357
g5
Ntp9667
Rp9668
(dp9669
g3361
(g1465
tp9670
sbsbsg73
g0
(g74
g5
Ntp9671
Rp9672
(dp9673
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag9521
asg17
g0
(g18
g5
Ntp9674
Rp9675
sg814
(lp9676
g9630
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp9677
Rp9678
(dp9679
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp9680
Rp9681
sg814
(lp9682
g9618
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp9683
Rp9684
(dp9685
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp9686
Rp9687
(dp9688
g14
S'auto_15148'
p9689
sg16
Nsg17
g0
(g18
g5
Ntp9690
Rp9691
(dp9692
g22
(lp9693
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9694
Rp9695
(dp9696
g78
(tsg80
S'int8'
p9697
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9698
g59
tp9699
Rp9700
(I1
(tg3031
I00
g8033
tp9701
bsbasg17
g0
(g18
g5
Ntp9702
Rp9703
sg814
(lp9704
g9606
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp9705
Rp9706
(dp9707
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp9708
Rp9709
sg814
(lp9710
g9576
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp9711
Rp9712
(dp9713
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag9521
asg17
g0
(g18
g5
Ntp9714
Rp9715
sg814
(lp9716
g9497
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp9717
Rp9718
(dp9719
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp9720
Rp9721
sg814
(lp9722
g9485
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp9723
Rp9724
(dp9725
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9726
Rp9727
(dp9728
g14
S'auto_15199'
p9729
sg16
I0
sg17
g0
(g18
g5
Ntp9730
Rp9731
(dp9732
g22
(lp9733
sbsg53
Nsg85
g0
(g809
g5
Ntp9734
Rp9735
(dp9736
g552
(lp9737
g0
(g563
g5
Ntp9738
Rp9739
(dp9740
g14
S'auto_15194'
p9741
sg16
I0
sg17
g0
(g18
g5
Ntp9742
Rp9743
(dp9744
g22
(lp9745
sbsg53
Nsg85
g0
(g809
g5
Ntp9746
Rp9747
(dp9748
g552
(lp9749
g0
(g563
g5
Ntp9750
Rp9751
(dp9752
g14
S'auto_15191'
p9753
sg16
I0
sg17
g0
(g18
g5
Ntp9754
Rp9755
(dp9756
g22
(lp9757
sbsg53
Nsg85
g0
(g809
g5
Ntp9758
Rp9759
(dp9760
g552
(lp9761
g9354
ag0
(g563
g5
Ntp9762
Rp9763
(dp9764
g14
S'auto_15184'
p9765
sg16
I0
sg17
g0
(g18
g5
Ntp9766
Rp9767
(dp9768
g22
(lp9769
sbsg53
Nsg85
g0
(g809
g5
Ntp9770
Rp9771
(dp9772
g552
(lp9773
g9366
ag0
(g3250
g5
Ntp9774
Rp9775
(dp9776
g14
S'auto_15183'
p9777
sg16
Nsg17
g0
(g18
g5
Ntp9778
Rp9779
(dp9780
g22
(lp9781
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p9782
tp9783
Rp9784
sbasg17
g0
(g18
g5
Ntp9785
Rp9786
sg814
(lp9787
g9763
asg1274
g0
(g3357
g5
Ntp9788
Rp9789
(dp9790
g3361
(g1465
tp9791
sbsbsg73
g0
(g74
g5
Ntp9792
Rp9793
(dp9794
g78
(tsg80
g9428
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp9795
Rp9796
(dp9797
g14
S'auto_15186'
p9798
sg16
I0
sg17
g0
(g18
g5
Ntp9799
Rp9800
(dp9801
g22
(lp9802
sbsg53
Nsg85
g0
(g809
g5
Ntp9803
Rp9804
(dp9805
g552
(lp9806
g9366
ag0
(g3250
g5
Ntp9807
Rp9808
(dp9809
g14
S'auto_15185'
p9810
sg16
Nsg17
g0
(g18
g5
Ntp9811
Rp9812
(dp9813
g22
(lp9814
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p9815
tp9816
Rp9817
sbasg17
g0
(g18
g5
Ntp9818
Rp9819
sg814
(lp9820
g9796
asg1274
g0
(g3357
g5
Ntp9821
Rp9822
(dp9823
g3361
(g1465
tp9824
sbsbsg73
g0
(g74
g5
Ntp9825
Rp9826
(dp9827
g78
(tsg80
g9428
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp9828
Rp9829
sg814
(lp9830
g9751
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp9831
Rp9832
(dp9833
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp9834
Rp9835
sg814
(lp9836
g9739
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp9837
Rp9838
(dp9839
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp9840
Rp9841
(dp9842
g14
S'auto_15195'
p9843
sg16
Nsg17
g0
(g18
g5
Ntp9844
Rp9845
(dp9846
g22
(lp9847
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9848
Rp9849
(dp9850
g78
(tsg80
S'int8'
p9851
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9852
g59
tp9853
Rp9854
(I1
(tg3031
I00
g8033
tp9855
bsbasg17
g0
(g18
g5
Ntp9856
Rp9857
sg814
(lp9858
g9727
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp9859
Rp9860
(dp9861
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp9862
Rp9863
sg814
(lp9864
g9473
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp9865
Rp9866
(dp9867
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag9354
asg17
g0
(g18
g5
Ntp9868
Rp9869
sg814
(lp9870
g9330
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp9871
Rp9872
(dp9873
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg0
(g563
g5
Ntp9874
Rp9875
(dp9876
g14
S'auto_15223'
p9877
sg16
I0
sg17
g0
(g18
g5
Ntp9878
Rp9879
(dp9880
g22
(lp9881
sbsg53
Nsg85
g0
(g809
g5
Ntp9882
Rp9883
(dp9884
g552
(lp9885
g0
(g563
g5
Ntp9886
Rp9887
(dp9888
g14
S'auto_15218'
p9889
sg16
I0
sg17
g0
(g18
g5
Ntp9890
Rp9891
(dp9892
g22
(lp9893
sbsg53
Nsg85
g0
(g809
g5
Ntp9894
Rp9895
(dp9896
g552
(lp9897
g9763
ag0
(g843
g5
Ntp9898
Rp9899
(dp9900
g14
S'auto_15214'
p9901
sg16
Nsg17
g0
(g18
g5
Ntp9902
Rp9903
(dp9904
g22
(lp9905
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9906
Rp9907
(dp9908
g78
(tsg80
S'int8'
p9909
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9910
g59
tp9911
Rp9912
(I1
(tg3031
I00
g7689
tp9913
bsbasg17
g0
(g18
g5
Ntp9914
Rp9915
sg814
(lp9916
g9887
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp9917
Rp9918
(dp9919
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag9473
ag9763
asg17
g0
(g18
g5
Ntp9920
Rp9921
sg814
(lp9922
g9875
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp9923
Rp9924
(dp9925
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg0
(g563
g5
Ntp9926
Rp9927
(dp9928
g14
S'auto_15233'
p9929
sg16
I0
sg17
g0
(g18
g5
Ntp9930
Rp9931
(dp9932
g22
(lp9933
sbsg53
Nsg85
g0
(g809
g5
Ntp9934
Rp9935
(dp9936
g552
(lp9937
g0
(g563
g5
Ntp9938
Rp9939
(dp9940
g14
S'auto_15228'
p9941
sg16
I0
sg17
g0
(g18
g5
Ntp9942
Rp9943
(dp9944
g22
(lp9945
sbsg53
Nsg85
g0
(g809
g5
Ntp9946
Rp9947
(dp9948
g552
(lp9949
g9796
ag0
(g843
g5
Ntp9950
Rp9951
(dp9952
g14
S'auto_15224'
p9953
sg16
Nsg17
g0
(g18
g5
Ntp9954
Rp9955
(dp9956
g22
(lp9957
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9958
Rp9959
(dp9960
g78
(tsg80
S'int8'
p9961
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9962
g59
tp9963
Rp9964
(I1
(tg3031
I00
g7689
tp9965
bsbasg17
g0
(g18
g5
Ntp9966
Rp9967
sg814
(lp9968
g9939
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp9969
Rp9970
(dp9971
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag9473
ag9796
asg17
g0
(g18
g5
Ntp9972
Rp9973
sg814
(lp9974
g9927
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp9975
Rp9976
(dp9977
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp9978
sg9379
(g0
(g843
g5
Ntp9979
Rp9980
(dp9981
g14
S'auto_15730'
p9982
sg16
Nsg17
g0
(g18
g5
Ntp9983
Rp9984
(dp9985
g22
(lp9986
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp9987
Rp9988
(dp9989
g78
(tsg80
S'int64'
p9990
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp9991
g59
tp9992
Rp9993
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p9994
tp9995
bsbtp9996
sg0
(g563
g5
Ntp9997
Rp9998
(dp9999
g16
I0
sg53
Nsg798
g801
sg807
(lp10000
sg14
S'auto_14667'
p10001
sg17
g0
(g18
g5
Ntp10002
Rp10003
(dp10004
g22
(lp10005
(lp10006
(g25
I306
g26
S'nade_train( * args[1:] )'
p10007
tp10008
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10009
tp10010
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10011
tp10012
a(g37
I36
g38
S'self.recompile()'
p10013
tp10014
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10015
tp10016
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10017
tp10018
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p10019
tp10020
aasbsg85
g0
(g809
g5
Ntp10021
Rp10022
(dp10023
g552
(lp10024
g845
ag836
asg798
g801
sg814
(lp10025
g9998
asg17
g0
(g18
g5
Ntp10026
Rp10027
(dp10028
g4093
(lp10029
g5814
asg1268
(lp10030
g1271
asbsg1272
(dp10031
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp10032
Rp10033
(dp10034
g78
(I00
tp10035
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g0
(g563
g5
Ntp10036
Rp10037
(dp10038
g14
S'auto_14845'
p10039
sg16
I0
sg17
g0
(g18
g5
Ntp10040
Rp10041
(dp10042
g22
(lp10043
sbsg53
Nsg85
g0
(g809
g5
Ntp10044
Rp10045
(dp10046
g552
(lp10047
g4968
asg17
g0
(g18
g5
Ntp10048
Rp10049
sg814
(lp10050
g10037
asg1274
g0
(g1275
g5
Ntp10051
Rp10052
(dp10053
g1279
I1
sbsbsg73
g1281
sbtp10054
sg0
(g563
g5
Ntp10055
Rp10056
(dp10057
g16
I1
sg53
S'argmax'
p10058
sg798
g801
sg807
(lp10059
sg14
S'auto_14832'
p10060
sg17
g0
(g18
g5
Ntp10061
Rp10062
(dp10063
g22
(lp10064
(lp10065
(g25
I306
g26
S'nade_train( * args[1:] )'
p10066
tp10067
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10068
tp10069
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10070
tp10071
a(g37
I36
g38
S'self.recompile()'
p10072
tp10073
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10074
tp10075
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10076
tp10077
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p10078
tp10079
a(g4481
I52
g4482
S'max_x = T.max(x, axis)'
p10080
tp10081
aasbsg85
g0
(g809
g5
Ntp10082
Rp10083
(dp10084
g552
(lp10085
g4029
asg798
g801
sg814
(lp10086
g0
(g563
g5
Ntp10087
Rp10088
(dp10089
g16
I0
sg53
g936
sg798
g801
sg807
(lp10090
sg14
S'auto_14831'
p10091
sg17
g0
(g18
g5
Ntp10092
Rp10093
(dp10094
g22
(lp10095
g4517
asbsg85
g10083
sg73
g0
(g74
g5
Ntp10096
Rp10097
(dp10098
g78
g4500
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag10056
asg17
g0
(g18
g5
Ntp10099
Rp10100
(dp10101
g4093
(lp10102
g4041
asg1268
(lp10103
g1271
asbsg1272
(dp10104
sg1274
g0
(ctheano.tensor.basic
MaxAndArgmax
p10105
g5
Ntp10106
Rp10107
(dp10108
g1903
(I2
tp10109
sbsbsg73
g0
(g74
g5
Ntp10110
Rp10111
(dp10112
g78
(I00
I00
tp10113
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(g7478
g9277
tp10114
sg0
(g563
g5
Ntp10115
Rp10116
(dp10117
g16
I0
sg53
Nsg798
g801
sg807
(lp10118
sg14
S'auto_14811'
p10119
sg17
g0
(g18
g5
Ntp10120
Rp10121
(dp10122
g22
(lp10123
(lp10124
(g25
I306
g26
S'nade_train( * args[1:] )'
p10125
tp10126
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10127
tp10128
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10129
tp10130
a(g37
I36
g38
S'self.recompile()'
p10131
tp10132
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10133
tp10134
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10135
tp10136
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p10137
tp10138
aasbsg85
g0
(g809
g5
Ntp10139
Rp10140
(dp10141
g552
(lp10142
g0
(g843
g5
Ntp10143
Rp10144
(dp10145
g14
S'auto_14711'
p10146
sg16
Nsg17
g0
(g18
g5
Ntp10147
Rp10148
(dp10149
g22
(lp10150
(lp10151
(g25
I306
g26
S'nade_train( * args[1:] )'
p10152
tp10153
a(g29
I221
g30
S'nade = nade_class(n_visible, options.units, l, options.n_components, nonlinearity=options.nonlinearity)'
p10154
tp10155
a(g37
I36
g38
S'self.recompile()'
p10156
tp10157
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10158
tp10159
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10160
tp10161
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10162
tp10163
aasg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10164
Rp10165
(dp10166
g78
(tsg80
S'int8'
p10167
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp10168
sg883
g56
(g57
(I0
tp10169
g59
tp10170
Rp10171
(I1
(tg3031
I00
g8033
tp10172
bsbag0
(g563
g5
Ntp10173
Rp10174
(dp10175
g16
I0
sg53
Nsg798
g801
sg807
(lp10176
sg14
S'auto_14810'
p10177
sg17
g0
(g18
g5
Ntp10178
Rp10179
(dp10180
g4058
g4059
sg22
(lp10181
(lp10182
(g25
I306
g26
S'nade_train( * args[1:] )'
p10183
tp10184
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10185
tp10186
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10187
tp10188
a(g37
I36
g38
S'self.recompile()'
p10189
tp10190
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10191
tp10192
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10193
tp10194
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p10195
tp10196
aasbsg85
g0
(g809
g5
Ntp10197
Rp10198
(dp10199
g552
(lp10200
g0
(g563
g5
Ntp10201
Rp10202
(dp10203
g16
I0
sg53
Nsg798
g801
sg807
(lp10204
sg14
S'auto_15612'
p10205
sg17
g0
(g18
g5
Ntp10206
Rp10207
(dp10208
g22
(lp10209
(lp10210
(g25
I306
g26
S'nade_train( * args[1:] )'
p10211
tp10212
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10213
tp10214
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10215
tp10216
a(g37
I36
g38
S'self.recompile()'
p10217
tp10218
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10219
tp10220
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10221
tp10222
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10223
tp10224
aasbsg85
g0
(g809
g5
Ntp10225
Rp10226
(dp10227
g552
(lp10228
g1173
ag7807
asg798
g801
sg814
(lp10229
g10202
asg17
g0
(g18
g5
Ntp10230
Rp10231
(dp10232
g4093
(lp10233
g7824
asg1268
(lp10234
g1270
asbsg1272
(dp10235
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp10236
Rp10237
(dp10238
g78
(I00
tp10239
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g3250
g5
Ntp10240
Rp10241
(dp10242
g14
S'auto_14709'
p10243
sg16
Nsg17
g0
(g18
g5
Ntp10244
Rp10245
(dp10246
g22
(lp10247
(lp10248
(g25
I306
g26
S'nade_train( * args[1:] )'
p10249
tp10250
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10251
tp10252
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10253
tp10254
a(g37
I36
g38
S'self.recompile()'
p10255
tp10256
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10257
tp10258
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10259
tp10260
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10261
tp10262
aasbsg53
Nsg73
g1465
sg807
(lp10263
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p10264
tp10265
Rp10266
sbasg798
g801
sg814
(lp10267
g10174
asg17
g0
(g18
g5
Ntp10268
Rp10269
(dp10270
g4093
(lp10271
g7591
asg1268
(lp10272
g1271
asbsg1272
(dp10273
sg1274
g0
(g3357
g5
Ntp10274
Rp10275
(dp10276
g3361
(g1465
tp10277
sbsbsg73
g0
(g74
g5
Ntp10278
Rp10279
(dp10280
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp10281
g10116
asg17
g0
(g18
g5
Ntp10282
Rp10283
(dp10284
g4093
(lp10285
g8608
asg1268
(lp10286
g1271
asbsg1272
(dp10287
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp10288
Rp10289
(dp10290
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg1687
(g1173
g0
(g563
g5
Ntp10291
Rp10292
(dp10293
g14
S'auto_14975'
p10294
sg16
I0
sg17
g0
(g18
g5
Ntp10295
Rp10296
(dp10297
g22
(lp10298
sbsg53
Nsg85
g0
(g809
g5
Ntp10299
Rp10300
(dp10301
g552
(lp10302
g0
(g563
g5
Ntp10303
Rp10304
(dp10305
g14
S'auto_14970'
p10306
sg16
I0
sg17
g0
(g18
g5
Ntp10307
Rp10308
(dp10309
g22
(lp10310
sbsg53
Nsg85
g0
(g809
g5
Ntp10311
Rp10312
(dp10313
g552
(lp10314
g0
(g563
g5
Ntp10315
Rp10316
(dp10317
g14
S'auto_14939'
p10318
sg16
I0
sg17
g0
(g18
g5
Ntp10319
Rp10320
(dp10321
g22
(lp10322
sbsg53
Nsg85
g0
(g809
g5
Ntp10323
Rp10324
(dp10325
g552
(lp10326
g1598
ag0
(g3250
g5
Ntp10327
Rp10328
(dp10329
g14
S'auto_14938'
p10330
sg16
Nsg17
g0
(g18
g5
Ntp10331
Rp10332
(dp10333
g22
(lp10334
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p10335
tp10336
Rp10337
sbasg17
g0
(g18
g5
Ntp10338
Rp10339
sg814
(lp10340
g10316
asg1274
g0
(g3357
g5
Ntp10341
Rp10342
(dp10343
g3361
(g1465
tp10344
sbsbsg73
g0
(g74
g5
Ntp10345
Rp10346
(dp10347
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp10348
Rp10349
(dp10350
g14
S'auto_14966'
p10351
sg16
Nsg17
g0
(g18
g5
Ntp10352
Rp10353
(dp10354
g22
(lp10355
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10356
Rp10357
(dp10358
g78
(tsg80
S'int8'
p10359
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10360
g59
tp10361
Rp10362
(I1
(tg3031
I00
g7689
tp10363
bsbasg17
g0
(g18
g5
Ntp10364
Rp10365
sg814
(lp10366
g10304
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp10367
Rp10368
(dp10369
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp10370
Rp10371
(dp10372
g14
S'auto_14955'
p10373
sg16
I0
sg17
g0
(g18
g5
Ntp10374
Rp10375
(dp10376
g22
(lp10377
sbsg53
Nsg85
g0
(g809
g5
Ntp10378
Rp10379
(dp10380
g552
(lp10381
g0
(g563
g5
Ntp10382
Rp10383
(dp10384
g14
S'auto_14935'
p10385
sg16
I0
sg17
g0
(g18
g5
Ntp10386
Rp10387
(dp10388
g22
(lp10389
sbsg53
Nsg85
g0
(g809
g5
Ntp10390
Rp10391
(dp10392
g552
(lp10393
g1627
ag1557
ag1566
asg17
g0
(g18
g5
Ntp10394
Rp10395
sg814
(lp10396
g10383
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp10397
Rp10398
(dp10399
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp10400
Rp10401
(dp10402
g14
S'auto_14951'
p10403
sg16
I0
sg17
g0
(g18
g5
Ntp10404
Rp10405
(dp10406
g22
(lp10407
sbsg53
Nsg85
g0
(g809
g5
Ntp10408
Rp10409
(dp10410
g552
(lp10411
g0
(g563
g5
Ntp10412
Rp10413
(dp10414
g14
S'auto_14946'
p10415
sg16
I0
sg17
g0
(g18
g5
Ntp10416
Rp10417
(dp10418
g22
(lp10419
sbsg53
Nsg85
g0
(g809
g5
Ntp10420
Rp10421
(dp10422
g552
(lp10423
g0
(g563
g5
Ntp10424
Rp10425
(dp10426
g14
S'auto_14943'
p10427
sg16
I0
sg17
g0
(g18
g5
Ntp10428
Rp10429
(dp10430
g22
(lp10431
sbsg53
Nsg85
g0
(g809
g5
Ntp10432
Rp10433
(dp10434
g552
(lp10435
g0
(g563
g5
Ntp10436
Rp10437
(dp10438
g14
S'auto_14937'
p10439
sg16
I0
sg17
g0
(g18
g5
Ntp10440
Rp10441
(dp10442
g22
(lp10443
sbsg53
Nsg85
g0
(g809
g5
Ntp10444
Rp10445
(dp10446
g552
(lp10447
g1598
ag0
(g3250
g5
Ntp10448
Rp10449
(dp10450
g14
S'auto_14936'
p10451
sg16
Nsg17
g0
(g18
g5
Ntp10452
Rp10453
(dp10454
g22
(lp10455
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p10456
tp10457
Rp10458
sbasg17
g0
(g18
g5
Ntp10459
Rp10460
sg814
(lp10461
g10437
asg1274
g0
(g3357
g5
Ntp10462
Rp10463
(dp10464
g3361
(g1465
tp10465
sbsbsg73
g0
(g74
g5
Ntp10466
Rp10467
(dp10468
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag10316
asg17
g0
(g18
g5
Ntp10469
Rp10470
sg814
(lp10471
g10425
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp10472
Rp10473
(dp10474
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp10475
Rp10476
sg814
(lp10477
g10413
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp10478
Rp10479
(dp10480
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp10481
Rp10482
(dp10483
g14
S'auto_14947'
p10484
sg16
Nsg17
g0
(g18
g5
Ntp10485
Rp10486
(dp10487
g22
(lp10488
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10489
Rp10490
(dp10491
g78
(tsg80
S'int8'
p10492
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10493
g59
tp10494
Rp10495
(I1
(tg3031
I00
g8033
tp10496
bsbasg17
g0
(g18
g5
Ntp10497
Rp10498
sg814
(lp10499
g10401
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp10500
Rp10501
(dp10502
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp10503
Rp10504
sg814
(lp10505
g10371
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp10506
Rp10507
(dp10508
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag10316
asg17
g0
(g18
g5
Ntp10509
Rp10510
sg814
(lp10511
g10292
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp10512
Rp10513
(dp10514
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp10515
sg5910
(g1173
g7807
tp10516
sg2784
(g1173
g7807
tp10517
sg6115
(g9330
g9875
g9927
tp10518
sg1290
(tsg0
(g843
g5
Ntp10519
Rp10520
(dp10521
g14
S'auto_15417'
p10522
sg16
Nsg17
g0
(g18
g5
Ntp10523
Rp10524
(dp10525
g22
(lp10526
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10527
Rp10528
(dp10529
g78
(tsg80
S'float64'
p10530
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp10531
sg883
g56
(g57
(I0
tp10532
g59
tp10533
Rp10534
(I1
(tg66
I00
S'\xb4\xbed\xc8\xf1g\xed\xbf'
p10535
tp10536
bsb(tsg0
(g563
g5
Ntp10537
Rp10538
(dp10539
g16
I0
sg53
Nsg798
g801
sg807
(lp10540
sg14
S'auto_14717'
p10541
sg17
g0
(g18
g5
Ntp10542
Rp10543
(dp10544
g22
(lp10545
(lp10546
(g25
I306
g26
S'nade_train( * args[1:] )'
p10547
tp10548
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10549
tp10550
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10551
tp10552
a(g37
I36
g38
S'self.recompile()'
p10553
tp10554
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10555
tp10556
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10557
tp10558
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10559
tp10560
aasbsg85
g0
(g809
g5
Ntp10561
Rp10562
(dp10563
g552
(lp10564
g10144
ag0
(g563
g5
Ntp10565
Rp10566
(dp10567
g16
I0
sg53
Nsg798
g801
sg807
(lp10568
sg14
S'auto_14716'
p10569
sg17
g0
(g18
g5
Ntp10570
Rp10571
(dp10572
g4058
g4059
sg22
(lp10573
(lp10574
(g25
I306
g26
S'nade_train( * args[1:] )'
p10575
tp10576
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10577
tp10578
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10579
tp10580
a(g37
I36
g38
S'self.recompile()'
p10581
tp10582
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10583
tp10584
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10585
tp10586
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10587
tp10588
aasbsg85
g0
(g809
g5
Ntp10589
Rp10590
(dp10591
g552
(lp10592
g0
(g563
g5
Ntp10593
Rp10594
(dp10595
g16
I0
sg53
Nsg798
g801
sg807
(lp10596
sg14
S'auto_15614'
p10597
sg17
g0
(g18
g5
Ntp10598
Rp10599
(dp10600
g22
(lp10601
(lp10602
(g25
I306
g26
S'nade_train( * args[1:] )'
p10603
tp10604
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10605
tp10606
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10607
tp10608
a(g37
I36
g38
S'self.recompile()'
p10609
tp10610
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10611
tp10612
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10613
tp10614
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10615
tp10616
aasbsg85
g0
(g809
g5
Ntp10617
Rp10618
(dp10619
g552
(lp10620
g1627
ag1557
ag1566
asg798
g801
sg814
(lp10621
g10594
asg17
g0
(g18
g5
Ntp10622
Rp10623
(dp10624
g4093
(lp10625
g7591
asg1268
(lp10626
g1270
asbsg1272
(dp10627
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp10628
Rp10629
(dp10630
g78
(I00
tp10631
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag3252
asg798
g801
sg814
(lp10632
g10566
asg17
g0
(g18
g5
Ntp10633
Rp10634
(dp10635
g4093
(lp10636
g7591
asg1268
(lp10637
g1271
asbsg1272
(dp10638
sg1274
g0
(g3357
g5
Ntp10639
Rp10640
(dp10641
g3361
(g1465
tp10642
sbsbsg73
g0
(g74
g5
Ntp10643
Rp10644
(dp10645
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp10646
g10538
asg17
g0
(g18
g5
Ntp10647
Rp10648
(dp10649
g4093
(lp10650
g8608
asg1268
(lp10651
g1271
asbsg1272
(dp10652
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp10653
Rp10654
(dp10655
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg6203
(tsg6397
(tsg0
(g563
g5
Ntp10656
Rp10657
(dp10658
g16
I0
sg53
Nsg798
g801
sg807
(lp10659
sg14
S'auto_14704'
p10660
sg17
g0
(g18
g5
Ntp10661
Rp10662
(dp10663
g22
(lp10664
g1704
asbsg85
g0
(g809
g5
Ntp10665
Rp10666
(dp10667
g552
(lp10668
g7527
ag7558
ag0
(g563
g5
Ntp10669
Rp10670
(dp10671
g16
I0
sg53
Nsg798
g801
sg807
(lp10672
sg14
S'auto_15709'
p10673
sg17
g0
(g18
g5
Ntp10674
Rp10675
(dp10676
g22
(lp10677
(lp10678
(g25
I306
g26
S'nade_train( * args[1:] )'
p10679
tp10680
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p10681
tp10682
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p10683
tp10684
a(g37
I36
g38
S'self.recompile()'
p10685
tp10686
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p10687
tp10688
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p10689
tp10690
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p10691
tp10692
aasbsg85
g0
(g809
g5
Ntp10693
Rp10694
(dp10695
g552
(lp10696
g1557
ag1566
asg798
g801
sg814
(lp10697
g10670
asg17
g0
(g18
g5
Ntp10698
Rp10699
(dp10700
g4093
(lp10701
g1546
asg1268
(lp10702
g7591
asbsg1272
(dp10703
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp10704
Rp10705
(dp10706
g78
(I00
tp10707
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp10708
g10657
asg17
g0
(g18
g5
Ntp10709
Rp10710
(dp10711
g4093
(lp10712
g1546
asg1268
(lp10713
g1271
asbsg1272
(dp10714
sg1274
g7645
sbsg73
g0
(g74
g5
Ntp10715
Rp10716
(dp10717
g78
(I00
tp10718
sg80
S'int64'
p10719
sg82
g1286
sg83
I00
sg53
Nsbsb(g0
(g563
g5
Ntp10720
Rp10721
(dp10722
g14
S'auto_14929'
p10723
sg16
I0
sg17
g0
(g18
g5
Ntp10724
Rp10725
(dp10726
g22
(lp10727
sbsg53
Nsg85
g0
(g809
g5
Ntp10728
Rp10729
(dp10730
g552
(lp10731
g0
(g563
g5
Ntp10732
Rp10733
(dp10734
g14
S'auto_14924'
p10735
sg16
I0
sg17
g0
(g18
g5
Ntp10736
Rp10737
(dp10738
g22
(lp10739
sbsg53
Nsg85
g0
(g809
g5
Ntp10740
Rp10741
(dp10742
g552
(lp10743
g0
(g843
g5
Ntp10744
Rp10745
(dp10746
g14
S'auto_14920'
p10747
sg16
Nsg17
g0
(g18
g5
Ntp10748
Rp10749
(dp10750
g22
(lp10751
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10752
Rp10753
(dp10754
g78
(tsg80
S'int8'
p10755
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10756
g59
tp10757
Rp10758
(I1
(tg3031
I00
g3059
tp10759
bsbag0
(g563
g5
Ntp10760
Rp10761
(dp10762
g14
S'auto_14915'
p10763
sg16
I0
sg17
g0
(g18
g5
Ntp10764
Rp10765
(dp10766
g22
(lp10767
sbsg53
Nsg85
g0
(g809
g5
Ntp10768
Rp10769
(dp10770
g552
(lp10771
g0
(g563
g5
Ntp10772
Rp10773
(dp10774
g14
S'auto_14905'
p10775
sg16
I0
sg17
g0
(g18
g5
Ntp10776
Rp10777
(dp10778
g22
(lp10779
sbsg53
Nsg85
g0
(g809
g5
Ntp10780
Rp10781
(dp10782
g552
(lp10783
g7527
ag0
(g843
g5
Ntp10784
Rp10785
(dp10786
g14
S'auto_14901'
p10787
sg16
Nsg17
g0
(g18
g5
Ntp10788
Rp10789
(dp10790
g22
(lp10791
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10792
Rp10793
(dp10794
g78
(tsg80
S'int8'
p10795
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10796
g59
tp10797
Rp10798
(I1
(tg3031
I00
g3059
tp10799
bsbasg17
g0
(g18
g5
Ntp10800
Rp10801
sg814
(lp10802
g10773
asg1274
g0
(g318
g5
Ntp10803
Rp10804
(dp10805
g379
g380
sg322
g0
(ctheano.scalar.basic
GE
p10806
g5
Ntp10807
Rp10808
(dp10809
g3176
I01
sg53
Nsbsg53
S'Elemwise{ge,no_inplace}'
p10810
sg330
(dp10811
sg332
(S'greater_equal'
p10812
I2
I1
tp10813
sg333
g0
(g334
g5
Ntp10814
Rp10815
(dp10816
g338
I0
sg339
(dp10817
sbsg341
I00
sg307
S"a >= b\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p10818
sbsbsg73
g0
(g74
g5
Ntp10819
Rp10820
(dp10821
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag7527
ag0
(g563
g5
Ntp10822
Rp10823
(dp10824
g14
S'auto_14910'
p10825
sg16
I0
sg17
g0
(g18
g5
Ntp10826
Rp10827
(dp10828
g22
(lp10829
sbsg53
Nsg85
g0
(g809
g5
Ntp10830
Rp10831
(dp10832
g552
(lp10833
g7527
ag0
(g843
g5
Ntp10834
Rp10835
(dp10836
g14
S'auto_14906'
p10837
sg16
Nsg17
g0
(g18
g5
Ntp10838
Rp10839
(dp10840
g22
(lp10841
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10842
Rp10843
(dp10844
g78
(tsg80
S'int8'
p10845
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10846
g59
tp10847
Rp10848
(I1
(tg3031
I00
g8033
tp10849
bsbasg17
g0
(g18
g5
Ntp10850
Rp10851
sg814
(lp10852
g10823
asg1274
g8877
sbsg73
g0
(g74
g5
Ntp10853
Rp10854
(dp10855
g78
(tsg80
g3096
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp10856
Rp10857
sg814
(lp10858
g10761
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp10859
Rp10860
(dp10861
g78
(tsg80
g3096
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp10862
Rp10863
sg814
(lp10864
g10733
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp10865
Rp10866
(dp10867
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp10868
Rp10869
(dp10870
g14
S'auto_14919'
p10871
sg16
I0
sg17
g0
(g18
g5
Ntp10872
Rp10873
(dp10874
g22
(lp10875
sbsg53
Nsg85
g0
(g809
g5
Ntp10876
Rp10877
(dp10878
g552
(lp10879
g0
(g563
g5
Ntp10880
Rp10881
(dp10882
g14
S'auto_14900'
p10883
sg16
I0
sg17
g0
(g18
g5
Ntp10884
Rp10885
(dp10886
g22
(lp10887
sbsg53
Nsg85
g0
(g809
g5
Ntp10888
Rp10889
(dp10890
g552
(lp10891
g0
(g563
g5
Ntp10892
Rp10893
(dp10894
g14
S'auto_14895'
p10895
sg16
I0
sg17
g0
(g18
g5
Ntp10896
Rp10897
(dp10898
g22
(lp10899
sbsg53
Nsg85
g0
(g809
g5
Ntp10900
Rp10901
(dp10902
g552
(lp10903
g0
(g563
g5
Ntp10904
Rp10905
(dp10906
g14
S'auto_14888'
p10907
sg16
I0
sg17
g0
(g18
g5
Ntp10908
Rp10909
(dp10910
g22
(lp10911
sbsg53
Nsg85
g0
(g809
g5
Ntp10912
Rp10913
(dp10914
g552
(lp10915
g0
(g843
g5
Ntp10916
Rp10917
(dp10918
g14
S'auto_14883'
p10919
sg16
Nsg17
g0
(g18
g5
Ntp10920
Rp10921
(dp10922
g22
(lp10923
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10924
Rp10925
(dp10926
g78
(tsg80
S'int64'
p10927
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10928
g59
tp10929
Rp10930
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p10931
tp10932
bsbag0
(g843
g5
Ntp10933
Rp10934
(dp10935
g14
S'auto_14884'
p10936
sg16
Nsg17
g0
(g18
g5
Ntp10937
Rp10938
(dp10939
g22
(lp10940
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10941
Rp10942
(dp10943
g78
(tsg80
S'int64'
p10944
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10945
g59
tp10946
Rp10947
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p10948
tp10949
bsbasg17
g0
(g18
g5
Ntp10950
Rp10951
sg814
(lp10952
g10905
asg1274
g0
(g318
g5
Ntp10953
Rp10954
(dp10955
g379
g380
sg322
g0
(ctheano.scalar.basic
LT
p10956
g5
Ntp10957
Rp10958
(dp10959
g3176
I01
sg53
Nsbsg53
S'Elemwise{lt,no_inplace}'
p10960
sg330
(dp10961
sg332
(S'less'
p10962
I2
I1
tp10963
sg333
g0
(g334
g5
Ntp10964
Rp10965
(dp10966
g338
I0
sg339
(dp10967
sbsg341
I00
sg307
S"a < b\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p10968
sbsbsg73
g0
(g74
g5
Ntp10969
Rp10970
(dp10971
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp10972
Rp10973
(dp10974
g14
S'auto_14889'
p10975
sg16
Nsg17
g0
(g18
g5
Ntp10976
Rp10977
(dp10978
g22
(lp10979
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10980
Rp10981
(dp10982
g78
(tsg80
S'int64'
p10983
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp10984
g59
tp10985
Rp10986
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p10987
tp10988
bsbag0
(g843
g5
Ntp10989
Rp10990
(dp10991
g14
S'auto_14890'
p10992
sg16
Nsg17
g0
(g18
g5
Ntp10993
Rp10994
(dp10995
g22
(lp10996
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp10997
Rp10998
(dp10999
g78
(tsg80
S'int64'
p11000
sg82
g1286
sg83
I00
sg53
Nsbsg883
g10947
sbasg17
g0
(g18
g5
Ntp11001
Rp11002
sg814
(lp11003
g10893
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp11004
Rp11005
(dp11006
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp11007
Rp11008
(dp11009
g14
S'auto_14896'
p11010
sg16
Nsg17
g0
(g18
g5
Ntp11011
Rp11012
(dp11013
g22
(lp11014
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11015
Rp11016
(dp11017
g78
(tsg80
S'int8'
p11018
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11019
g59
tp11020
Rp11021
(I1
(tg3031
I00
g3059
tp11022
bsbasg17
g0
(g18
g5
Ntp11023
Rp11024
sg814
(lp11025
g10881
asg1274
g4101
sbsg73
g0
(g74
g5
Ntp11026
Rp11027
(dp11028
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp11029
Rp11030
(dp11031
g14
S'auto_14869'
p11032
sg16
I0
sg17
g0
(g18
g5
Ntp11033
Rp11034
(dp11035
g22
(lp11036
sbsg53
Nsg85
g0
(g809
g5
Ntp11037
Rp11038
(dp11039
g552
(lp11040
g0
(g843
g5
Ntp11041
Rp11042
(dp11043
g14
S'auto_14865'
p11044
sg16
Nsg17
g0
(g18
g5
Ntp11045
Rp11046
(dp11047
g22
(lp11048
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11049
Rp11050
(dp11051
g78
(tsg80
S'int64'
p11052
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11053
g59
tp11054
Rp11055
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p11056
tp11057
bsbag0
(g563
g5
Ntp11058
Rp11059
(dp11060
g14
S'auto_14864'
p11061
sg16
I0
sg17
g0
(g18
g5
Ntp11062
Rp11063
(dp11064
g22
(lp11065
sbsg53
Nsg85
g0
(g809
g5
Ntp11066
Rp11067
(dp11068
g552
(lp11069
g0
(g563
g5
Ntp11070
Rp11071
(dp11072
g14
S'auto_14857'
p11073
sg16
I0
sg17
g0
(g18
g5
Ntp11074
Rp11075
(dp11076
g22
(lp11077
sbsg53
Nsg85
g0
(g809
g5
Ntp11078
Rp11079
(dp11080
g552
(lp11081
g0
(g843
g5
Ntp11082
Rp11083
(dp11084
g14
S'auto_14852'
p11085
sg16
Nsg17
g0
(g18
g5
Ntp11086
Rp11087
(dp11088
g22
(lp11089
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11090
Rp11091
(dp11092
g78
(tsg80
S'int64'
p11093
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11094
g59
tp11095
Rp11096
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p11097
tp11098
bsbag0
(g843
g5
Ntp11099
Rp11100
(dp11101
g14
S'auto_14853'
p11102
sg16
Nsg17
g0
(g18
g5
Ntp11103
Rp11104
(dp11105
g22
(lp11106
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11107
Rp11108
(dp11109
g78
(tsg80
S'int64'
p11110
sg82
g1286
sg83
I00
sg53
Nsbsg883
g11055
sbasg17
g0
(g18
g5
Ntp11111
Rp11112
sg814
(lp11113
g11071
asg1274
g10954
sbsg73
g0
(g74
g5
Ntp11114
Rp11115
(dp11116
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp11117
Rp11118
(dp11119
g14
S'auto_14858'
p11120
sg16
Nsg17
g0
(g18
g5
Ntp11121
Rp11122
(dp11123
g22
(lp11124
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11125
Rp11126
(dp11127
g78
(tsg80
S'int64'
p11128
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11129
g59
tp11130
Rp11131
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p11132
tp11133
bsbag0
(g843
g5
Ntp11134
Rp11135
(dp11136
g14
S'auto_14859'
p11137
sg16
Nsg17
g0
(g18
g5
Ntp11138
Rp11139
(dp11140
g22
(lp11141
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11142
Rp11143
(dp11144
g78
(tsg80
S'int64'
p11145
sg82
g1286
sg83
I00
sg53
Nsbsg883
g11055
sbasg17
g0
(g18
g5
Ntp11146
Rp11147
sg814
(lp11148
g11059
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp11149
Rp11150
(dp11151
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp11152
Rp11153
sg814
(lp11154
g11030
asg1274
g4101
sbsg73
g0
(g74
g5
Ntp11155
Rp11156
(dp11157
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp11158
Rp11159
sg814
(lp11160
g10869
asg1274
g8877
sbsg73
g0
(g74
g5
Ntp11161
Rp11162
(dp11163
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag10881
asg17
g0
(g18
g5
Ntp11164
Rp11165
sg814
(lp11166
g10721
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp11167
Rp11168
(dp11169
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp11170
sg0
(g563
g5
Ntp11171
Rp11172
(dp11173
g16
I0
sg53
Nsg798
g801
sg807
(lp11174
sg14
S'auto_14781'
p11175
sg17
g0
(g18
g5
Ntp11176
Rp11177
(dp11178
g22
(lp11179
g3639
asbsg85
g0
(g809
g5
Ntp11180
Rp11181
(dp11182
g552
(lp11183
g817
asg798
g801
sg814
(lp11184
g11172
asg17
g0
(g18
g5
Ntp11185
Rp11186
(dp11187
g4093
(lp11188
g3663
asg1268
(lp11189
g1271
asbsg1272
(dp11190
sg1274
g0
(g1387
g5
Ntp11191
Rp11192
(dp11193
g1391
(lp11194
sg1393
(lp11195
I0
aI1
asg1395
(lp11196
I2
asg1397
g1398
sg1399
g5069
sg1401
(lp11197
g1403
asg1404
I01
sg1405
(I0
I1
g270
tp11198
sg1407
(dp11199
S'support_code_apply'
p11200
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p11201
ssg1411
(dp11202
I0
(lp11203
I0
assg1414
(lp11204
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p11205
asbsbsg73
g0
(g74
g5
Ntp11206
Rp11207
(dp11208
g78
(I00
I00
I01
tp11209
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g0
(g563
g5
Ntp11210
Rp11211
(dp11212
g14
S'auto_14878'
p11213
sg16
I0
sg17
g0
(g18
g5
Ntp11214
Rp11215
(dp11216
g22
(lp11217
sbsg53
Nsg85
g0
(g809
g5
Ntp11218
Rp11219
(dp11220
g552
(lp11221
g805
asg17
g0
(g18
g5
Ntp11222
Rp11223
sg814
(lp11224
g11211
asg1274
g0
(g1275
g5
Ntp11225
Rp11226
(dp11227
g1279
I0
sbsbsg73
g1281
sbg0
(g843
g5
Ntp11228
Rp11229
(dp11230
g14
S'auto_14843'
p11231
sg16
Nsg17
g0
(g18
g5
Ntp11232
Rp11233
(dp11234
g22
(lp11235
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11236
Rp11237
(dp11238
g78
(tsg80
S'int64'
p11239
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11240
g59
tp11241
Rp11242
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p11243
tp11244
bsbtp11245
sg0
(g843
g5
Ntp11246
Rp11247
(dp11248
g14
S'auto_14669'
p11249
sg16
Nsg17
g0
(g18
g5
Ntp11250
Rp11251
(dp11252
g22
(lp11253
(lp11254
(g25
I306
g26
S'nade_train( * args[1:] )'
p11255
tp11256
a(g29
I221
g30
S'nade = nade_class(n_visible, options.units, l, options.n_components, nonlinearity=options.nonlinearity)'
p11257
tp11258
a(g37
I36
g38
S'self.recompile()'
p11259
tp11260
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p11261
tp11262
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p11263
tp11264
a(g874
I210
g875
S'output_mask = constantX(1) - mask  # BxD'
p11265
tp11266
a(g4481
I43
S'constantX'
p11267
S'return theano.tensor.constant(np.asarray(value, dtype=floatX))'
p11268
tp11269
aasg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11270
Rp11271
(dp11272
g78
(tsg80
g4545
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp11273
sg883
g56
(g57
(I0
tp11274
g59
tp11275
Rp11276
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
p11277
tp11278
bsb(tsg944
(g7478
g9277
g11229
tp11279
sg1598
(g0
(g843
g5
Ntp11280
Rp11281
(dp11282
g14
S'auto_14930'
p11283
sg16
Nsg17
g0
(g18
g5
Ntp11284
Rp11285
(dp11286
g22
(lp11287
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11288
Rp11289
(dp11290
g78
(tsg80
S'int64'
p11291
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11292
g59
tp11293
Rp11294
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p11295
tp11296
bsbtp11297
sg934
(g7478
g9277
tp11298
sg0
(g563
g5
Ntp11299
Rp11300
(dp11301
g16
I0
sg53
Nsg798
g801
sg807
(lp11302
sg14
S'auto_15460'
p11303
sg17
g0
(g18
g5
Ntp11304
Rp11305
(dp11306
g22
(lp11307
sbsg85
g0
(g809
g5
Ntp11308
Rp11309
(dp11310
g552
(lp11311
g10144
asg798
g801
sg814
(lp11312
g11300
asg17
g0
(g18
g5
Ntp11313
Rp11314
(dp11315
g1451
g0
(g809
g5
Ntp11316
Rp11317
(dp11318
g552
(lp11319
g0
(g1456
g5
Ntp11320
Rp11321
(dp11322
g14
S'auto_15634'
p11323
sg16
Nsg17
g0
(g18
g5
Ntp11324
Rp11325
sg53
Nsg85
Nsg73
g3094
sbasg17
g0
(g18
g5
Ntp11326
Rp11327
sg814
(lp11328
g0
(g1456
g5
Ntp11329
Rp11330
(dp11331
g14
S'auto_15635'
p11332
sg16
I0
sg17
g0
(g18
g5
Ntp11333
Rp11334
sg53
Nsg85
g11317
sg73
g1465
sbasg1274
g0
(ctheano.scalar.basic
Cast
p11335
g5
Ntp11336
Rp11337
(dp11338
g327
g0
(ctheano.scalar.basic
specific_out
p11339
g5
Ntp11340
Rp11341
(dp11342
S'spec'
p11343
(g1465
tp11344
sbsS'o_type'
p11345
g1465
sg53
S'convert_to_int64'
p11346
sS'ctor'
p11347
cnumpy
int64
p11348
sbsbsg4093
(lp11349
g3663
aS'constant_folding'
p11350
asg1268
(lp11351
g8608
ag7835
asbsg1272
(dp11352
sg1274
g0
(g318
g5
Ntp11353
Rp11354
(dp11355
g379
S'tensor.basic'
p11356
sg53
Nsg322
g11337
sg330
(dp11357
sg332
Nsg333
g0
(g334
g5
Ntp11358
Rp11359
(dp11360
g338
I0
sg339
(dp11361
sbsS'__oplist_tags'
p11362
(lp11363
S'casting'
p11364
asg341
I00
sbsbsg73
g8513
sb(tsg0
(g563
g5
Ntp11365
Rp11366
(dp11367
g16
I0
sg53
Nsg798
g801
sg807
(lp11368
sg14
S'auto_14805'
p11369
sg17
g0
(g18
g5
Ntp11370
Rp11371
(dp11372
g22
(lp11373
g8485
asbsg85
g0
(g809
g5
Ntp11374
Rp11375
(dp11376
g552
(lp11377
g10144
ag8522
asg798
g801
sg814
(lp11378
g11366
asg17
g0
(g18
g5
Ntp11379
Rp11380
(dp11381
g4093
(lp11382
g8608
asg1268
(lp11383
g1271
asbsg1272
(dp11384
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp11385
Rp11386
(dp11387
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg5751
(g1173
g0
(g563
g5
Ntp11388
Rp11389
(dp11390
g14
S'auto_14881'
p11391
sg16
I0
sg17
g0
(g18
g5
Ntp11392
Rp11393
(dp11394
g22
(lp11395
sbsg53
Nsg85
g0
(g809
g5
Ntp11396
Rp11397
(dp11398
g552
(lp11399
g2962
asg17
g0
(g18
g5
Ntp11400
Rp11401
sg814
(lp11402
g11389
asg1274
g0
(g1275
g5
Ntp11403
Rp11404
(dp11405
g1279
I1
sbsbsg73
g1281
sbtp11406
sg3567
(g11229
g0
(g563
g5
Ntp11407
Rp11408
(dp11409
g14
S'auto_15234'
p11410
sg16
I0
sg17
g0
(g18
g5
Ntp11411
Rp11412
(dp11413
g22
(lp11414
sbsg53
Nsg85
g0
(g809
g5
Ntp11415
Rp11416
(dp11417
g552
(lp11418
g3596
asg17
g0
(g18
g5
Ntp11419
Rp11420
sg814
(lp11421
g11408
asg1274
g0
(g1275
g5
Ntp11422
Rp11423
(dp11424
g1279
I0
sbsbsg73
g1281
sbg0
(g563
g5
Ntp11425
Rp11426
(dp11427
g14
S'auto_15235'
p11428
sg16
I0
sg17
g0
(g18
g5
Ntp11429
Rp11430
(dp11431
g22
(lp11432
sbsg53
Nsg85
g0
(g809
g5
Ntp11433
Rp11434
(dp11435
g552
(lp11436
g3596
asg17
g0
(g18
g5
Ntp11437
Rp11438
sg814
(lp11439
g11426
asg1274
g0
(g1275
g5
Ntp11440
Rp11441
(dp11442
g1279
I1
sbsbsg73
g1281
sbtp11443
sg4134
(g7478
g9277
tp11444
sg0
(g563
g5
Ntp11445
Rp11446
(dp11447
g16
I0
sg53
Nsg798
g801
sg807
(lp11448
sg14
S'auto_14814'
p11449
sg17
g0
(g18
g5
Ntp11450
Rp11451
(dp11452
g4058
g4059
sg22
(lp11453
(lp11454
(g25
I306
g26
S'nade_train( * args[1:] )'
p11455
tp11456
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p11457
tp11458
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p11459
tp11460
a(g37
I36
g38
S'self.recompile()'
p11461
tp11462
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p11463
tp11464
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p11465
tp11466
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p11467
tp11468
aasbsg85
g0
(g809
g5
Ntp11469
Rp11470
(dp11471
g552
(lp11472
g10202
ag3252
asg798
g801
sg814
(lp11473
g11446
asg17
g0
(g18
g5
Ntp11474
Rp11475
(dp11476
g4093
(lp11477
g7591
asg1268
(lp11478
g1271
asbsg1272
(dp11479
sg1274
g0
(g3357
g5
Ntp11480
Rp11481
(dp11482
g3361
(g1465
tp11483
sbsbsg73
g0
(g74
g5
Ntp11484
Rp11485
(dp11486
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp11487
Rp11488
(dp11489
g16
I0
sg53
Nsg798
g801
sg807
(lp11490
sg14
S'auto_15589'
p11491
sg17
g0
(g18
g5
Ntp11492
Rp11493
(dp11494
g22
(lp11495
sbsg85
g0
(g809
g5
Ntp11496
Rp11497
(dp11498
g552
(lp11499
g11300
asg798
g801
sg814
(lp11500
g11488
asg17
g0
(g18
g5
Ntp11501
Rp11502
(dp11503
g4093
(lp11504
g3663
asg1268
(lp11505
g8608
asbsg1272
(dp11506
sg1274
g0
(g1387
g5
Ntp11507
Rp11508
(dp11509
g1391
(lp11510
sg1393
(lp11511
sg1395
(lp11512
sg1397
g1398
sg1399
(tsg1401
(lp11513
g1403
asg1404
I01
sg1405
(tsg1407
(dp11514
S'support_code_apply'
p11515
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p11516
ssg1411
(dp11517
I0
(lp11518
I0
assg1414
(lp11519
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p11520
asbsbsg73
g0
(g74
g5
Ntp11521
Rp11522
(dp11523
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg9366
(g0
(g563
g5
Ntp11524
Rp11525
(dp11526
g14
S'auto_15130'
p11527
sg16
I0
sg17
g0
(g18
g5
Ntp11528
Rp11529
(dp11530
g22
(lp11531
sbsg53
Nsg85
g0
(g809
g5
Ntp11532
Rp11533
(dp11534
g552
(lp11535
g0
(g563
g5
Ntp11536
Rp11537
(dp11538
g14
S'auto_15125'
p11539
sg16
I0
sg17
g0
(g18
g5
Ntp11540
Rp11541
(dp11542
g22
(lp11543
sbsg53
Nsg85
g0
(g809
g5
Ntp11544
Rp11545
(dp11546
g552
(lp11547
g0
(g843
g5
Ntp11548
Rp11549
(dp11550
g14
S'auto_15121'
p11551
sg16
Nsg17
g0
(g18
g5
Ntp11552
Rp11553
(dp11554
g22
(lp11555
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11556
Rp11557
(dp11558
g78
(tsg80
S'int8'
p11559
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11560
g59
tp11561
Rp11562
(I1
(tg3031
I00
g3059
tp11563
bsbag0
(g563
g5
Ntp11564
Rp11565
(dp11566
g14
S'auto_15116'
p11567
sg16
I0
sg17
g0
(g18
g5
Ntp11568
Rp11569
(dp11570
g22
(lp11571
sbsg53
Nsg85
g0
(g809
g5
Ntp11572
Rp11573
(dp11574
g552
(lp11575
g0
(g563
g5
Ntp11576
Rp11577
(dp11578
g14
S'auto_15106'
p11579
sg16
I0
sg17
g0
(g18
g5
Ntp11580
Rp11581
(dp11582
g22
(lp11583
sbsg53
Nsg85
g0
(g809
g5
Ntp11584
Rp11585
(dp11586
g552
(lp11587
g7527
ag0
(g843
g5
Ntp11588
Rp11589
(dp11590
g14
S'auto_15102'
p11591
sg16
Nsg17
g0
(g18
g5
Ntp11592
Rp11593
(dp11594
g22
(lp11595
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11596
Rp11597
(dp11598
g78
(tsg80
S'int8'
p11599
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11600
g59
tp11601
Rp11602
(I1
(tg3031
I00
g3059
tp11603
bsbasg17
g0
(g18
g5
Ntp11604
Rp11605
sg814
(lp11606
g11577
asg1274
g10804
sbsg73
g0
(g74
g5
Ntp11607
Rp11608
(dp11609
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag7527
ag0
(g563
g5
Ntp11610
Rp11611
(dp11612
g14
S'auto_15111'
p11613
sg16
I0
sg17
g0
(g18
g5
Ntp11614
Rp11615
(dp11616
g22
(lp11617
sbsg53
Nsg85
g0
(g809
g5
Ntp11618
Rp11619
(dp11620
g552
(lp11621
g7527
ag0
(g843
g5
Ntp11622
Rp11623
(dp11624
g14
S'auto_15107'
p11625
sg16
Nsg17
g0
(g18
g5
Ntp11626
Rp11627
(dp11628
g22
(lp11629
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11630
Rp11631
(dp11632
g78
(tsg80
S'int8'
p11633
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11634
g59
tp11635
Rp11636
(I1
(tg3031
I00
g8033
tp11637
bsbasg17
g0
(g18
g5
Ntp11638
Rp11639
sg814
(lp11640
g11611
asg1274
g8877
sbsg73
g0
(g74
g5
Ntp11641
Rp11642
(dp11643
g78
(tsg80
g3096
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp11644
Rp11645
sg814
(lp11646
g11565
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp11647
Rp11648
(dp11649
g78
(tsg80
g3096
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp11650
Rp11651
sg814
(lp11652
g11537
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp11653
Rp11654
(dp11655
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp11656
Rp11657
(dp11658
g14
S'auto_15120'
p11659
sg16
I0
sg17
g0
(g18
g5
Ntp11660
Rp11661
(dp11662
g22
(lp11663
sbsg53
Nsg85
g0
(g809
g5
Ntp11664
Rp11665
(dp11666
g552
(lp11667
g10881
ag0
(g563
g5
Ntp11668
Rp11669
(dp11670
g14
S'auto_15101'
p11671
sg16
I0
sg17
g0
(g18
g5
Ntp11672
Rp11673
(dp11674
g22
(lp11675
sbsg53
Nsg85
g0
(g809
g5
Ntp11676
Rp11677
(dp11678
g552
(lp11679
g0
(g843
g5
Ntp11680
Rp11681
(dp11682
g14
S'auto_15097'
p11683
sg16
Nsg17
g0
(g18
g5
Ntp11684
Rp11685
(dp11686
g22
(lp11687
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11688
Rp11689
(dp11690
g78
(tsg80
S'int64'
p11691
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11692
g59
tp11693
Rp11694
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p11695
tp11696
bsbag0
(g563
g5
Ntp11697
Rp11698
(dp11699
g14
S'auto_15096'
p11700
sg16
I0
sg17
g0
(g18
g5
Ntp11701
Rp11702
(dp11703
g22
(lp11704
sbsg53
Nsg85
g0
(g809
g5
Ntp11705
Rp11706
(dp11707
g552
(lp11708
g0
(g563
g5
Ntp11709
Rp11710
(dp11711
g14
S'auto_15089'
p11712
sg16
I0
sg17
g0
(g18
g5
Ntp11713
Rp11714
(dp11715
g22
(lp11716
sbsg53
Nsg85
g0
(g809
g5
Ntp11717
Rp11718
(dp11719
g552
(lp11720
g0
(g843
g5
Ntp11721
Rp11722
(dp11723
g14
S'auto_15084'
p11724
sg16
Nsg17
g0
(g18
g5
Ntp11725
Rp11726
(dp11727
g22
(lp11728
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11729
Rp11730
(dp11731
g78
(tsg80
S'int64'
p11732
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11733
g59
tp11734
Rp11735
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p11736
tp11737
bsbag0
(g843
g5
Ntp11738
Rp11739
(dp11740
g14
S'auto_15085'
p11741
sg16
Nsg17
g0
(g18
g5
Ntp11742
Rp11743
(dp11744
g22
(lp11745
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11746
Rp11747
(dp11748
g78
(tsg80
S'int64'
p11749
sg82
g1286
sg83
I00
sg53
Nsbsg883
g11694
sbasg17
g0
(g18
g5
Ntp11750
Rp11751
sg814
(lp11752
g11710
asg1274
g10954
sbsg73
g0
(g74
g5
Ntp11753
Rp11754
(dp11755
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp11756
Rp11757
(dp11758
g14
S'auto_15090'
p11759
sg16
Nsg17
g0
(g18
g5
Ntp11760
Rp11761
(dp11762
g22
(lp11763
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11764
Rp11765
(dp11766
g78
(tsg80
S'int64'
p11767
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp11768
g59
tp11769
Rp11770
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p11771
tp11772
bsbag0
(g843
g5
Ntp11773
Rp11774
(dp11775
g14
S'auto_15091'
p11776
sg16
Nsg17
g0
(g18
g5
Ntp11777
Rp11778
(dp11779
g22
(lp11780
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp11781
Rp11782
(dp11783
g78
(tsg80
S'int64'
p11784
sg82
g1286
sg83
I00
sg53
Nsbsg883
g11694
sbasg17
g0
(g18
g5
Ntp11785
Rp11786
sg814
(lp11787
g11698
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp11788
Rp11789
(dp11790
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp11791
Rp11792
sg814
(lp11793
g11669
asg1274
g4101
sbsg73
g0
(g74
g5
Ntp11794
Rp11795
(dp11796
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp11797
Rp11798
sg814
(lp11799
g11657
asg1274
g8877
sbsg73
g0
(g74
g5
Ntp11800
Rp11801
(dp11802
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag10881
asg17
g0
(g18
g5
Ntp11803
Rp11804
sg814
(lp11805
g11525
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp11806
Rp11807
(dp11808
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp11809
sg0
(g563
g5
Ntp11810
Rp11811
(dp11812
g16
I0
sg53
Nsg798
g801
sg807
(lp11813
sg14
S'auto_15502'
p11814
sg17
g0
(g18
g5
Ntp11815
Rp11816
(dp11817
g22
(lp11818
(lp11819
(g25
I306
g26
S'nade_train( * args[1:] )'
p11820
tp11821
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p11822
tp11823
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p11824
tp11825
a(g37
I36
g38
S'self.recompile()'
p11826
tp11827
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p11828
tp11829
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p11830
tp11831
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p11832
tp11833
aasbsg85
g0
(g809
g5
Ntp11834
Rp11835
(dp11836
g552
(lp11837
g8505
ag0
(g563
g5
Ntp11838
Rp11839
(dp11840
g16
I0
sg53
Nsg798
g801
sg807
(lp11841
sg14
S'auto_14762'
p11842
sg17
g0
(g18
g5
Ntp11843
Rp11844
(dp11845
g4058
g4059
sg22
(lp11846
(lp11847
(g25
I306
g26
S'nade_train( * args[1:] )'
p11848
tp11849
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p11850
tp11851
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p11852
tp11853
a(g37
I36
g38
S'self.recompile()'
p11854
tp11855
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p11856
tp11857
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p11858
tp11859
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p11860
tp11861
aasbsg85
g0
(g809
g5
Ntp11862
Rp11863
(dp11864
g552
(lp11865
g0
(g563
g5
Ntp11866
Rp11867
(dp11868
g16
I0
sg53
Nsg798
g801
sg807
(lp11869
sg14
S'auto_15507'
p11870
sg17
g0
(g18
g5
Ntp11871
Rp11872
(dp11873
g22
(lp11874
(lp11875
(g25
I306
g26
S'nade_train( * args[1:] )'
p11876
tp11877
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p11878
tp11879
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p11880
tp11881
a(g37
I36
g38
S'self.recompile()'
p11882
tp11883
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p11884
tp11885
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p11886
tp11887
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p11888
tp11889
aasbsg85
g0
(g809
g5
Ntp11890
Rp11891
(dp11892
g552
(lp11893
g2298
ag2280
ag1165
asg798
g801
sg814
(lp11894
g11867
asg17
g0
(g18
g5
Ntp11895
Rp11896
(dp11897
g4093
(lp11898
g7591
asg1268
(lp11899
g1270
asbsg1272
(dp11900
sg1274
g1549
sbsg73
g0
(g74
g5
Ntp11901
Rp11902
(dp11903
g78
(I00
tp11904
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag3252
asg798
g801
sg814
(lp11905
g11839
asg17
g0
(g18
g5
Ntp11906
Rp11907
(dp11908
g4093
(lp11909
g7591
asg1268
(lp11910
g1271
asbsg1272
(dp11911
sg1274
g0
(g3357
g5
Ntp11912
Rp11913
(dp11914
g3361
(g1465
tp11915
sbsbsg73
g0
(g74
g5
Ntp11916
Rp11917
(dp11918
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp11919
g11811
asg17
g0
(g18
g5
Ntp11920
Rp11921
(dp11922
g4093
(lp11923
g5660
asg1268
(lp11924
g8608
asbsg1272
(dp11925
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp11926
Rp11927
(dp11928
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp11929
Rp11930
(dp11931
g16
I0
sg53
Nsg798
g801
sg807
(lp11932
sg14
S'auto_14671'
p11933
sg17
g0
(g18
g5
Ntp11934
Rp11935
(dp11936
g22
(lp11937
(lp11938
(g25
I306
g26
S'nade_train( * args[1:] )'
p11939
tp11940
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p11941
tp11942
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p11943
tp11944
a(g37
I36
g38
S'self.recompile()'
p11945
tp11946
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p11947
tp11948
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p11949
tp11950
a(g874
I210
g875
S'output_mask = constantX(1) - mask  # BxD'
p11951
tp11952
aasbsg85
g0
(g809
g5
Ntp11953
Rp11954
(dp11955
g552
(lp11956
g4539
ag826
asg798
g801
sg814
(lp11957
g11930
asg17
g0
(g18
g5
Ntp11958
Rp11959
(dp11960
g4093
(lp11961
g5814
asg1268
(lp11962
g1271
asbsg1272
(dp11963
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp11964
Rp11965
(dp11966
g78
(I00
I00
tp11967
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g10037
g0
(g563
g5
Ntp11968
Rp11969
(dp11970
g14
S'auto_14844'
p11971
sg16
I0
sg17
g0
(g18
g5
Ntp11972
Rp11973
(dp11974
g22
(lp11975
sbsg53
Nsg85
g0
(g809
g5
Ntp11976
Rp11977
(dp11978
g552
(lp11979
g4968
asg17
g0
(g18
g5
Ntp11980
Rp11981
sg814
(lp11982
g11969
asg1274
g0
(g1275
g5
Ntp11983
Rp11984
(dp11985
g1279
I0
sbsbsg73
g1281
sbtp11986
sg1725
(g0
(g563
g5
Ntp11987
Rp11988
(dp11989
g14
S'auto_15057'
p11990
sg16
I0
sg17
g0
(g18
g5
Ntp11991
Rp11992
(dp11993
g22
(lp11994
sbsg53
Nsg85
g0
(g809
g5
Ntp11995
Rp11996
(dp11997
g552
(lp11998
g0
(g563
g5
Ntp11999
Rp12000
(dp12001
g14
S'auto_15052'
p12002
sg16
I0
sg17
g0
(g18
g5
Ntp12003
Rp12004
(dp12005
g22
(lp12006
sbsg53
Nsg85
g0
(g809
g5
Ntp12007
Rp12008
(dp12009
g552
(lp12010
g0
(g563
g5
Ntp12011
Rp12012
(dp12013
g14
S'auto_15026'
p12014
sg16
I0
sg17
g0
(g18
g5
Ntp12015
Rp12016
(dp12017
g22
(lp12018
sbsg53
Nsg85
g0
(g809
g5
Ntp12019
Rp12020
(dp12021
g552
(lp12022
g10657
ag0
(g3250
g5
Ntp12023
Rp12024
(dp12025
g14
S'auto_15025'
p12026
sg16
Nsg17
g0
(g18
g5
Ntp12027
Rp12028
(dp12029
g22
(lp12030
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p12031
tp12032
Rp12033
sbasg17
g0
(g18
g5
Ntp12034
Rp12035
sg814
(lp12036
g12012
asg1274
g0
(g3357
g5
Ntp12037
Rp12038
(dp12039
g3361
(g1465
tp12040
sbsbsg73
g0
(g74
g5
Ntp12041
Rp12042
(dp12043
g78
(tsg80
g10719
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp12044
Rp12045
(dp12046
g14
S'auto_15048'
p12047
sg16
Nsg17
g0
(g18
g5
Ntp12048
Rp12049
(dp12050
g22
(lp12051
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12052
Rp12053
(dp12054
g78
(tsg80
S'int8'
p12055
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp12056
g59
tp12057
Rp12058
(I1
(tg3031
I00
g7689
tp12059
bsbasg17
g0
(g18
g5
Ntp12060
Rp12061
sg814
(lp12062
g12000
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp12063
Rp12064
(dp12065
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp12066
Rp12067
(dp12068
g14
S'auto_15047'
p12069
sg16
I0
sg17
g0
(g18
g5
Ntp12070
Rp12071
(dp12072
g22
(lp12073
sbsg53
Nsg85
g0
(g809
g5
Ntp12074
Rp12075
(dp12076
g552
(lp12077
g0
(g563
g5
Ntp12078
Rp12079
(dp12080
g14
S'auto_15024'
p12081
sg16
I0
sg17
g0
(g18
g5
Ntp12082
Rp12083
(dp12084
g22
(lp12085
sbsg53
Nsg85
g0
(g809
g5
Ntp12086
Rp12087
(dp12088
g552
(lp12089
g7743
ag10292
asg17
g0
(g18
g5
Ntp12090
Rp12091
sg814
(lp12092
g12079
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp12093
Rp12094
(dp12095
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp12096
Rp12097
(dp12098
g14
S'auto_15043'
p12099
sg16
I0
sg17
g0
(g18
g5
Ntp12100
Rp12101
(dp12102
g22
(lp12103
sbsg53
Nsg85
g0
(g809
g5
Ntp12104
Rp12105
(dp12106
g552
(lp12107
g0
(g563
g5
Ntp12108
Rp12109
(dp12110
g14
S'auto_15038'
p12111
sg16
I0
sg17
g0
(g18
g5
Ntp12112
Rp12113
(dp12114
g22
(lp12115
sbsg53
Nsg85
g0
(g809
g5
Ntp12116
Rp12117
(dp12118
g552
(lp12119
g0
(g563
g5
Ntp12120
Rp12121
(dp12122
g14
S'auto_15035'
p12123
sg16
I0
sg17
g0
(g18
g5
Ntp12124
Rp12125
(dp12126
g22
(lp12127
sbsg53
Nsg85
g0
(g809
g5
Ntp12128
Rp12129
(dp12130
g552
(lp12131
g12012
ag0
(g563
g5
Ntp12132
Rp12133
(dp12134
g14
S'auto_15028'
p12135
sg16
I0
sg17
g0
(g18
g5
Ntp12136
Rp12137
(dp12138
g22
(lp12139
sbsg53
Nsg85
g0
(g809
g5
Ntp12140
Rp12141
(dp12142
g552
(lp12143
g10657
ag0
(g3250
g5
Ntp12144
Rp12145
(dp12146
g14
S'auto_15027'
p12147
sg16
Nsg17
g0
(g18
g5
Ntp12148
Rp12149
(dp12150
g22
(lp12151
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p12152
tp12153
Rp12154
sbasg17
g0
(g18
g5
Ntp12155
Rp12156
sg814
(lp12157
g12133
asg1274
g0
(g3357
g5
Ntp12158
Rp12159
(dp12160
g3361
(g1465
tp12161
sbsbsg73
g0
(g74
g5
Ntp12162
Rp12163
(dp12164
g78
(tsg80
g10719
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp12165
Rp12166
(dp12167
g14
S'auto_15030'
p12168
sg16
I0
sg17
g0
(g18
g5
Ntp12169
Rp12170
(dp12171
g22
(lp12172
sbsg53
Nsg85
g0
(g809
g5
Ntp12173
Rp12174
(dp12175
g552
(lp12176
g10657
ag0
(g3250
g5
Ntp12177
Rp12178
(dp12179
g14
S'auto_15029'
p12180
sg16
Nsg17
g0
(g18
g5
Ntp12181
Rp12182
(dp12183
g22
(lp12184
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p12185
tp12186
Rp12187
sbasg17
g0
(g18
g5
Ntp12188
Rp12189
sg814
(lp12190
g12166
asg1274
g0
(g3357
g5
Ntp12191
Rp12192
(dp12193
g3361
(g1465
tp12194
sbsbsg73
g0
(g74
g5
Ntp12195
Rp12196
(dp12197
g78
(tsg80
g10719
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp12198
Rp12199
sg814
(lp12200
g12121
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp12201
Rp12202
(dp12203
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp12204
Rp12205
sg814
(lp12206
g12109
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp12207
Rp12208
(dp12209
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp12210
Rp12211
(dp12212
g14
S'auto_15039'
p12213
sg16
Nsg17
g0
(g18
g5
Ntp12214
Rp12215
(dp12216
g22
(lp12217
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12218
Rp12219
(dp12220
g78
(tsg80
S'int8'
p12221
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp12222
g59
tp12223
Rp12224
(I1
(tg3031
I00
g8033
tp12225
bsbasg17
g0
(g18
g5
Ntp12226
Rp12227
sg814
(lp12228
g12097
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp12229
Rp12230
(dp12231
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp12232
Rp12233
sg814
(lp12234
g12067
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp12235
Rp12236
(dp12237
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag12012
asg17
g0
(g18
g5
Ntp12238
Rp12239
sg814
(lp12240
g11988
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp12241
Rp12242
(dp12243
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg0
(g563
g5
Ntp12244
Rp12245
(dp12246
g14
S'auto_15067'
p12247
sg16
I0
sg17
g0
(g18
g5
Ntp12248
Rp12249
(dp12250
g22
(lp12251
sbsg53
Nsg85
g0
(g809
g5
Ntp12252
Rp12253
(dp12254
g552
(lp12255
g0
(g563
g5
Ntp12256
Rp12257
(dp12258
g14
S'auto_15062'
p12259
sg16
I0
sg17
g0
(g18
g5
Ntp12260
Rp12261
(dp12262
g22
(lp12263
sbsg53
Nsg85
g0
(g809
g5
Ntp12264
Rp12265
(dp12266
g552
(lp12267
g12133
ag0
(g843
g5
Ntp12268
Rp12269
(dp12270
g14
S'auto_15058'
p12271
sg16
Nsg17
g0
(g18
g5
Ntp12272
Rp12273
(dp12274
g22
(lp12275
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12276
Rp12277
(dp12278
g78
(tsg80
S'int8'
p12279
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp12280
g59
tp12281
Rp12282
(I1
(tg3031
I00
g7689
tp12283
bsbasg17
g0
(g18
g5
Ntp12284
Rp12285
sg814
(lp12286
g12257
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp12287
Rp12288
(dp12289
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag12067
ag12133
asg17
g0
(g18
g5
Ntp12290
Rp12291
sg814
(lp12292
g12245
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp12293
Rp12294
(dp12295
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg0
(g563
g5
Ntp12296
Rp12297
(dp12298
g14
S'auto_15077'
p12299
sg16
I0
sg17
g0
(g18
g5
Ntp12300
Rp12301
(dp12302
g22
(lp12303
sbsg53
Nsg85
g0
(g809
g5
Ntp12304
Rp12305
(dp12306
g552
(lp12307
g0
(g563
g5
Ntp12308
Rp12309
(dp12310
g14
S'auto_15072'
p12311
sg16
I0
sg17
g0
(g18
g5
Ntp12312
Rp12313
(dp12314
g22
(lp12315
sbsg53
Nsg85
g0
(g809
g5
Ntp12316
Rp12317
(dp12318
g552
(lp12319
g12166
ag0
(g843
g5
Ntp12320
Rp12321
(dp12322
g14
S'auto_15068'
p12323
sg16
Nsg17
g0
(g18
g5
Ntp12324
Rp12325
(dp12326
g22
(lp12327
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12328
Rp12329
(dp12330
g78
(tsg80
S'int8'
p12331
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp12332
g59
tp12333
Rp12334
(I1
(tg3031
I00
g7689
tp12335
bsbasg17
g0
(g18
g5
Ntp12336
Rp12337
sg814
(lp12338
g12309
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp12339
Rp12340
(dp12341
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag12067
ag12166
asg17
g0
(g18
g5
Ntp12342
Rp12343
sg814
(lp12344
g12297
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp12345
Rp12346
(dp12347
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp12348
sg1214
(g1251
g1181
g1190
tp12349
sg0
(g563
g5
Ntp12350
Rp12351
(dp12352
g16
I0
sg53
Nsg798
g801
sg807
(lp12353
sg14
S'auto_15897'
p12354
sg17
g0
(g18
g5
Ntp12355
Rp12356
(dp12357
g22
(lp12358
sbsg85
g0
(g809
g5
Ntp12359
Rp12360
(dp12361
g552
(lp12362
g0
(g843
g5
Ntp12363
Rp12364
(dp12365
g14
S'auto_15894'
p12366
sg16
Nsg17
g0
(g18
g5
Ntp12367
Rp12368
(dp12369
g22
(lp12370
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12371
Rp12372
(dp12373
g78
(tsg80
S'float32'
p12374
sg82
g63
(S'f4'
p12375
I0
I1
tp12376
Rp12377
(I3
S'<'
p12378
NNNI-1
I-1
I0
tp12379
bsg83
I00
sg53
Nsbsg807
(lp12380
sg883
g56
(g57
(I0
tp12381
g59
tp12382
Rp12383
(I1
(tg12377
I00
S'\x00\x00\x80?'
p12384
tp12385
bsbasg798
g801
sg814
(lp12386
g12351
asg17
g0
(g18
g5
Ntp12387
Rp12388
(dp12389
g1451
g0
(g809
g5
Ntp12390
Rp12391
(dp12392
g552
(lp12393
g0
(g1456
g5
Ntp12394
Rp12395
(dp12396
g14
S'auto_16018'
p12397
sg16
Nsg17
g0
(g18
g5
Ntp12398
Rp12399
sg53
Nsg85
Nsg73
g0
(g1463
g5
Ntp12400
Rp12401
(dp12402
g80
S'float32'
p12403
sbsbasg17
g0
(g18
g5
Ntp12404
Rp12405
sg814
(lp12406
g0
(g1456
g5
Ntp12407
Rp12408
(dp12409
g14
S'auto_16019'
p12410
sg16
I0
sg17
g0
(g18
g5
Ntp12411
Rp12412
sg53
Nsg85
g12391
sg73
g1931
sbasg1274
g0
(g11335
g5
Ntp12413
Rp12414
(dp12415
g327
g0
(g11339
g5
Ntp12416
Rp12417
(dp12418
g11343
(g1931
tp12419
sbsg11345
g1931
sg53
S'convert_to_float64'
p12420
sg11347
cnumpy
float64
p12421
sbsbsg4093
(lp12422
g11350
asg1268
(lp12423
g5770
asbsg1272
(dp12424
sg1274
g0
(g318
g5
Ntp12425
Rp12426
(dp12427
g379
g11356
sg53
Nsg322
g12414
sg330
(dp12428
sg332
Nsg333
g0
(g334
g5
Ntp12429
Rp12430
(dp12431
g338
I0
sg339
(dp12432
sbsg11362
(lp12433
g11364
asg341
I00
sbsbsg73
g0
(g74
g5
Ntp12434
Rp12435
(dp12436
g78
(tsg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp12437
Rp12438
(dp12439
g16
I0
sg53
Nsg798
g801
sg807
(lp12440
sg14
S'auto_15395'
p12441
sg17
g0
(g18
g5
Ntp12442
Rp12443
(dp12444
g22
(lp12445
sbsg85
g0
(g809
g5
Ntp12446
Rp12447
(dp12448
g552
(lp12449
g845
ag891
asg798
g801
sg814
(lp12450
g12438
asg17
g0
(g18
g5
Ntp12451
Rp12452
(dp12453
g4093
(lp12454
g5814
asg1268
(lp12455
g5660
asbsg1272
(dp12456
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp12457
Rp12458
(dp12459
g78
(I00
tp12460
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
tp12461
sg0
(g563
g5
Ntp12462
Rp12463
(dp12464
g16
I0
sg53
Nsg798
g801
sg807
(lp12465
sg14
S'auto_15607'
p12466
sg17
g0
(g18
g5
Ntp12467
Rp12468
(dp12469
g22
(lp12470
g10546
asbsg85
g0
(g809
g5
Ntp12471
Rp12472
(dp12473
g552
(lp12474
g8505
ag10566
asg798
g801
sg814
(lp12475
g12463
asg17
g0
(g18
g5
Ntp12476
Rp12477
(dp12478
g4093
(lp12479
g5660
asg1268
(lp12480
g8608
asbsg1272
(dp12481
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp12482
Rp12483
(dp12484
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp12485
Rp12486
(dp12487
g16
I0
sg53
Nsg798
g801
sg807
(lp12488
sg14
S'auto_14758'
p12489
sg17
g0
(g18
g5
Ntp12490
Rp12491
(dp12492
g22
(lp12493
(lp12494
(g25
I306
g26
S'nade_train( * args[1:] )'
p12495
tp12496
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p12497
tp12498
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p12499
tp12500
a(g37
I36
g38
S'self.recompile()'
p12501
tp12502
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p12503
tp12504
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p12505
tp12506
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p12507
tp12508
aasbsg85
g0
(g809
g5
Ntp12509
Rp12510
(dp12511
g552
(lp12512
g10144
ag0
(g563
g5
Ntp12513
Rp12514
(dp12515
g16
I0
sg53
Nsg798
g801
sg807
(lp12516
sg14
S'auto_14757'
p12517
sg17
g0
(g18
g5
Ntp12518
Rp12519
(dp12520
g22
(lp12521
(lp12522
(g25
I306
g26
S'nade_train( * args[1:] )'
p12523
tp12524
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p12525
tp12526
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p12527
tp12528
a(g37
I36
g38
S'self.recompile()'
p12529
tp12530
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p12531
tp12532
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p12533
tp12534
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p12535
tp12536
aasbsg85
g0
(g809
g5
Ntp12537
Rp12538
(dp12539
g552
(lp12540
g11867
ag10241
asg798
g801
sg814
(lp12541
g12514
asg17
g0
(g18
g5
Ntp12542
Rp12543
(dp12544
g4093
(lp12545
g7591
asg1268
(lp12546
g1271
asbsg1272
(dp12547
sg1274
g0
(g3357
g5
Ntp12548
Rp12549
(dp12550
g3361
(g1465
tp12551
sbsbsg73
g0
(g74
g5
Ntp12552
Rp12553
(dp12554
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp12555
g12486
asg17
g0
(g18
g5
Ntp12556
Rp12557
(dp12558
g4093
(lp12559
g5660
asg1268
(lp12560
g1271
asbsg1272
(dp12561
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp12562
Rp12563
(dp12564
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp12565
Rp12566
(dp12567
g16
I0
sg53
Nsg798
g801
sg807
(lp12568
sg14
S'auto_15406'
p12569
sg17
g0
(g18
g5
Ntp12570
Rp12571
(dp12572
g22
(lp12573
sbsg85
g0
(g809
g5
Ntp12574
Rp12575
(dp12576
g552
(lp12577
g0
(g843
g5
Ntp12578
Rp12579
(dp12580
g14
S'auto_15401'
p12581
sg16
Nsg17
g0
(g18
g5
Ntp12582
Rp12583
(dp12584
g22
(lp12585
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12586
Rp12587
(dp12588
g78
(tsg80
g990
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp12589
sg883
g56
(g57
(I0
tp12590
g59
tp12591
Rp12592
(I1
(tg66
I00
S'\xb4\xbed\xc8\xf1g\xed\xbf'
p12593
tp12594
bsbasg798
g801
sg814
(lp12595
g12566
asg17
g0
(g18
g5
Ntp12596
Rp12597
(dp12598
g4093
(lp12599
g11350
asg1268
(lp12600
g4096
ag1271
asbsg1272
(dp12601
sg1274
g0
(g1387
g5
Ntp12602
Rp12603
(dp12604
g1391
(lp12605
sg1393
(lp12606
sg1395
(lp12607
I0
aI1
aI2
asg1397
g1398
sg1399
(tsg1401
(lp12608
g1403
asg1404
I01
sg1405
(g270
g270
g270
tp12609
sg1407
(dp12610
S'support_code_apply'
p12611
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p12612
ssg1411
(dp12613
I0
(lp12614
I0
assg1414
(lp12615
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p12616
asbsbsg73
g987
sb(g11229
g11229
g11229
tp12617
sg0
(g563
g5
Ntp12618
Rp12619
(dp12620
g16
I0
sg53
Nsg798
g801
sg807
(lp12621
sg14
S'auto_14815'
p12622
sg17
g0
(g18
g5
Ntp12623
Rp12624
(dp12625
g22
(lp12626
(lp12627
(g25
I306
g26
S'nade_train( * args[1:] )'
p12628
tp12629
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p12630
tp12631
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p12632
tp12633
a(g37
I36
g38
S'self.recompile()'
p12634
tp12635
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p12636
tp12637
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p12638
tp12639
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p12640
tp12641
aasbsg85
g0
(g809
g5
Ntp12642
Rp12643
(dp12644
g552
(lp12645
g10144
ag11446
asg798
g801
sg814
(lp12646
g12619
asg17
g0
(g18
g5
Ntp12647
Rp12648
(dp12649
g4093
(lp12650
g8608
asg1268
(lp12651
g1271
asbsg1272
(dp12652
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp12653
Rp12654
(dp12655
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg2890
(g1173
g11389
tp12656
sg4161
(g7478
g9277
tp12657
sg1733
(g11229
g0
(g563
g5
Ntp12658
Rp12659
(dp12660
g14
S'auto_14846'
p12661
sg16
I0
sg17
g0
(g18
g5
Ntp12662
Rp12663
(dp12664
g22
(lp12665
sbsg53
Nsg85
g0
(g809
g5
Ntp12666
Rp12667
(dp12668
g552
(lp12669
g1762
asg17
g0
(g18
g5
Ntp12670
Rp12671
sg814
(lp12672
g12659
asg1274
g0
(g1275
g5
Ntp12673
Rp12674
(dp12675
g1279
I0
sbsbsg73
g1281
sbg0
(g563
g5
Ntp12676
Rp12677
(dp12678
g14
S'auto_14847'
p12679
sg16
I0
sg17
g0
(g18
g5
Ntp12680
Rp12681
(dp12682
g22
(lp12683
sbsg53
Nsg85
g0
(g809
g5
Ntp12684
Rp12685
(dp12686
g552
(lp12687
g1762
asg17
g0
(g18
g5
Ntp12688
Rp12689
sg814
(lp12690
g12677
asg1274
g0
(g1275
g5
Ntp12691
Rp12692
(dp12693
g1279
I1
sbsbsg73
g1281
sbtp12694
sg0
(g563
g5
Ntp12695
Rp12696
(dp12697
g16
I0
sg53
Nsg798
g801
sg807
(lp12698
sg14
S'auto_15438'
p12699
sg17
g0
(g18
g5
Ntp12700
Rp12701
(dp12702
g22
(lp12703
sbsg85
g0
(g809
g5
Ntp12704
Rp12705
(dp12706
g552
(lp12707
g0
(g843
g5
Ntp12708
Rp12709
(dp12710
g14
S'auto_15434'
p12711
sg16
Nsg17
g0
(g18
g5
Ntp12712
Rp12713
(dp12714
g22
(lp12715
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12716
Rp12717
(dp12718
g78
(tsg80
S'float64'
p12719
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp12720
sg883
g56
(g57
(I0
tp12721
g59
tp12722
Rp12723
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x00\xf0\xbf'
p12724
tp12725
bsbasg798
g801
sg814
(lp12726
g12696
asg17
g0
(g18
g5
Ntp12727
Rp12728
(dp12729
g4093
(lp12730
g11350
asg1268
(lp12731
S'local_neg_to_mul'
p12732
ag1271
asbsg1272
(dp12733
sg1274
g0
(g1387
g5
Ntp12734
Rp12735
(dp12736
g1391
(lp12737
sg1393
(lp12738
sg1395
(lp12739
I0
aI1
aI2
asg1397
g1398
sg1399
(tsg1401
(lp12740
g1403
asg1404
I01
sg1405
(g270
g270
g270
tp12741
sg1407
(dp12742
S'support_code_apply'
p12743
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p12744
ssg1411
(dp12745
I0
(lp12746
I0
assg1414
(lp12747
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p12748
asbsbsg73
g0
(g74
g5
Ntp12749
Rp12750
(dp12751
g78
(I01
I01
I01
tp12752
sg80
g12719
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g11229
g11229
tp12753
sg0
(g563
g5
Ntp12754
Rp12755
(dp12756
g16
I0
sg53
Nsg798
g801
sg807
(lp12757
sg14
S'auto_14784'
p12758
sg17
g0
(g18
g5
Ntp12759
Rp12760
(dp12761
g22
(lp12762
g8558
asbsg85
g0
(g809
g5
Ntp12763
Rp12764
(dp12765
g552
(lp12766
g1214
asg798
g801
sg814
(lp12767
g12755
asg17
g0
(g18
g5
Ntp12768
Rp12769
(dp12770
g4093
(lp12771
g1270
asg1268
(lp12772
g1271
asbsg1272
(dp12773
sg1274
g0
(ctheano.compile.ops
Shape
p12774
g5
Ntp12775
Rp12776
sbsg73
g0
(g74
g5
Ntp12777
Rp12778
(dp12779
g78
(I00
tp12780
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(g0
(g843
g5
Ntp12781
Rp12782
(dp12783
g14
S'auto_15239'
p12784
sg16
Nsg17
g0
(g18
g5
Ntp12785
Rp12786
(dp12787
g22
(lp12788
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12789
Rp12790
(dp12791
g78
(tsg80
S'int64'
p12792
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp12793
g59
tp12794
Rp12795
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p12796
tp12797
bsbtp12798
sg0
(g843
g5
Ntp12799
Rp12800
(dp12801
g14
S'auto_15660'
p12802
sg16
Nsg17
g0
(g18
g5
Ntp12803
Rp12804
(dp12805
g22
(lp12806
sg878
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xf0\xbf'
p12807
tp12808
Rp12809
sbsg53
Nsg73
g12750
sg807
(lp12810
sg883
g56
(g57
(I0
tp12811
g59
tp12812
Rp12813
(I1
(I1
I1
I1
tp12814
g66
I00
S'\x00\x00\x00\x00\x00\x00\xf0\xbf'
p12815
tp12816
bsb(g11229
g11229
g11229
tp12817
sg0
(g563
g5
Ntp12818
Rp12819
(dp12820
g16
I0
sg53
Nsg798
g801
sg807
(lp12821
sg14
S'auto_15855'
p12822
sg17
g0
(g18
g5
Ntp12823
Rp12824
(dp12825
g22
(lp12826
(lp12827
(g25
I306
g26
S'nade_train( * args[1:] )'
p12828
tp12829
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p12830
tp12831
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p12832
tp12833
a(g37
I36
g38
S'self.recompile()'
p12834
tp12835
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p12836
tp12837
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p12838
tp12839
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p12840
tp12841
aasbsg85
g0
(g809
g5
Ntp12842
Rp12843
(dp12844
g552
(lp12845
g826
ag3000
asg798
g801
sg814
(lp12846
g12819
asg17
g0
(g18
g5
Ntp12847
Rp12848
(dp12849
g4093
(lp12850
g5770
asg1268
(lp12851
g2086
asbsg1272
(dp12852
sg1274
g2090
sbsg73
g0
(g74
g5
Ntp12853
Rp12854
(dp12855
g78
(I00
I00
tp12856
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g10037
g0
(g563
g5
Ntp12857
Rp12858
(dp12859
g14
S'auto_14877'
p12860
sg16
I0
sg17
g0
(g18
g5
Ntp12861
Rp12862
(dp12863
g22
(lp12864
sbsg53
Nsg85
g0
(g809
g5
Ntp12865
Rp12866
(dp12867
g552
(lp12868
g3000
asg17
g0
(g18
g5
Ntp12869
Rp12870
sg814
(lp12871
g12858
asg1274
g0
(g1275
g5
Ntp12872
Rp12873
(dp12874
g1279
I1
sbsbsg73
g1281
sbtp12875
sg1566
(tsg7779
(g0
(g843
g5
Ntp12876
Rp12877
(dp12878
g14
S'auto_14976'
p12879
sg16
Nsg17
g0
(g18
g5
Ntp12880
Rp12881
(dp12882
g22
(lp12883
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp12884
Rp12885
(dp12886
g78
(tsg80
S'int64'
p12887
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp12888
g59
tp12889
Rp12890
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p12891
tp12892
bsbtp12893
sg0
(g563
g5
Ntp12894
Rp12895
(dp12896
g16
I0
sg53
Nsg798
g801
sg807
(lp12897
sg14
S'auto_16513'
p12898
sg17
g0
(g18
g5
Ntp12899
Rp12900
(dp12901
g22
(lp12902
sbsg85
g0
(g809
g5
Ntp12903
Rp12904
(dp12905
g552
(lp12906
g0
(g563
g5
Ntp12907
Rp12908
(dp12909
g16
I0
sg53
Nsg798
g801
sg807
(lp12910
sg14
S'auto_15911'
p12911
sg17
g0
(g18
g5
Ntp12912
Rp12913
(dp12914
g4058
g4059
sg22
(lp12915
sbsg85
g0
(g809
g5
Ntp12916
Rp12917
(dp12918
g552
(lp12919
g2827
ag5751
asg798
g801
sg814
(lp12920
g12908
asg17
g0
(g18
g5
Ntp12921
Rp12922
(dp12923
g4093
(lp12924
g5814
asg1268
(lp12925
g5770
asbsg1272
(dp12926
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp12927
Rp12928
(dp12929
g78
(I00
I00
tp12930
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag3022
asg798
g801
sg814
(lp12931
g12895
asg17
g0
(g18
g5
Ntp12932
Rp12933
(dp12934
g4093
(lp12935
g5814
asg1268
(lp12936
g5814
asbsg1272
(dp12937
sg1274
g0
(g318
g5
Ntp12938
Rp12939
(dp12940
g53
Nsg322
g0
(g1948
g5
Ntp12941
Rp12942
(dp12943
g552
(lp12944
g0
(g1456
g5
Ntp12945
Rp12946
(dp12947
g14
S'auto_16502'
p12948
sg16
Nsg17
g0
(g18
g5
Ntp12949
Rp12950
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp12951
Rp12952
(dp12953
g14
S'auto_16503'
p12954
sg16
Nsg17
g0
(g18
g5
Ntp12955
Rp12956
(dp12957
g4821
g879
(g3031
g3059
tp12958
Rp12959
sbsg53
Nsg85
Nsg73
g3094
sbasg1965
I2
sg53
Nsg1966
(g1931
g3094
tp12960
sg814
(lp12961
g0
(g1456
g5
Ntp12962
Rp12963
(dp12964
g14
S'auto_16505'
p12965
sg16
I0
sg17
g0
(g18
g5
Ntp12966
Rp12967
(dp12968
g22
g3137
sbsg53
Nsg85
g0
(g809
g5
Ntp12969
Rp12970
(dp12971
g552
(lp12972
g12946
ag0
(g1456
g5
Ntp12973
Rp12974
(dp12975
g14
S'auto_16504'
p12976
sg16
I0
sg17
g0
(g18
g5
Ntp12977
Rp12978
(dp12979
g22
g3164
sbsg53
Nsg85
g0
(g809
g5
Ntp12980
Rp12981
(dp12982
g552
(lp12983
g12946
ag12952
asg17
g0
(g18
g5
Ntp12984
Rp12985
sg814
(lp12986
g12974
asg1274
g3174
sbsg73
g3178
sbasg17
g0
(g18
g5
Ntp12987
Rp12988
sg814
(lp12989
g12963
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_bool V%(id)s_tmp1;\nV%(id)s_tmp1 = (%(i0)s > %(i1)s);\n%(o0)s = %(i0)s * V%(id)s_tmp1;\n}\n'
p12990
sg2001
(g1931
tp12991
sg2007
(lp12992
S'%(nodename)s_subnode0'
p12993
aS'%(nodename)s_subnode1'
p12994
asg2011
I1
sbsg330
(dp12995
sg332
Nsg333
g0
(g334
g5
Ntp12996
Rp12997
(dp12998
g338
Nsg339
(dp12999
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp13000
Rp13001
(dp13002
g78
(I00
I00
tp13003
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g11389
tp13004
sg805
(g11211
g1173
tp13005
sg0
(g843
g5
Ntp13006
Rp13007
(dp13008
g14
S'auto_15599'
p13009
sg16
Nsg17
g0
(g18
g5
Ntp13010
Rp13011
(dp13012
g22
(lp13013
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp13014
Rp13015
(dp13016
g78
(tsg80
S'int8'
p13017
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp13018
sg883
g56
(g57
(I0
tp13019
g59
tp13020
Rp13021
(I1
(tg3031
I00
g8033
tp13022
bsb(tsg8505
(tsg4968
(g11969
g10037
tp13023
sg845
(g11229
tp13024
sg0
(g563
g5
Ntp13025
Rp13026
(dp13027
g16
I0
sg53
Nsg798
g801
sg807
(lp13028
sg14
S'auto_14754'
p13029
sg17
g0
(g18
g5
Ntp13030
Rp13031
(dp13032
g22
(lp13033
(lp13034
(g25
I306
g26
S'nade_train( * args[1:] )'
p13035
tp13036
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13037
tp13038
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13039
tp13040
a(g37
I36
g38
S'self.recompile()'
p13041
tp13042
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13043
tp13044
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13045
tp13046
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p13047
tp13048
aasbsg85
g0
(g809
g5
Ntp13049
Rp13050
(dp13051
g552
(lp13052
g11867
ag0
(g3250
g5
Ntp13053
Rp13054
(dp13055
g14
S'auto_14706'
p13056
sg16
Nsg17
g0
(g18
g5
Ntp13057
Rp13058
(dp13059
g22
(lp13060
(lp13061
(g25
I306
g26
S'nade_train( * args[1:] )'
p13062
tp13063
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13064
tp13065
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13066
tp13067
a(g37
I36
g38
S'self.recompile()'
p13068
tp13069
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13070
tp13071
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13072
tp13073
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p13074
tp13075
aasbsg53
Nsg73
g1465
sg807
(lp13076
sg883
g879
(g1286
S'\xfe\xff\xff\xff\xff\xff\xff\xff'
p13077
tp13078
Rp13079
sbasg798
g801
sg814
(lp13080
g13026
asg17
g0
(g18
g5
Ntp13081
Rp13082
(dp13083
g4093
(lp13084
g7591
asg1268
(lp13085
g1271
asbsg1272
(dp13086
sg1274
g0
(g3357
g5
Ntp13087
Rp13088
(dp13089
g3361
(g1465
tp13090
sbsbsg73
g0
(g74
g5
Ntp13091
Rp13092
(dp13093
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg826
(g10037
g11969
tp13094
sg2962
(g0
(g563
g5
Ntp13095
Rp13096
(dp13097
g14
S'auto_14880'
p13098
sg16
I0
sg17
g0
(g18
g5
Ntp13099
Rp13100
(dp13101
g22
(lp13102
sbsg53
Nsg85
g0
(g809
g5
Ntp13103
Rp13104
(dp13105
g552
(lp13106
g2962
asg17
g0
(g18
g5
Ntp13107
Rp13108
sg814
(lp13109
g13096
asg1274
g0
(g1275
g5
Ntp13110
Rp13111
(dp13112
g1279
I0
sbsbsg73
g1281
sbg11389
tp13113
sg0
(g563
g5
Ntp13114
Rp13115
(dp13116
g16
I0
sg53
Nsg798
g801
sg807
(lp13117
sg14
S'auto_14674'
p13118
sg17
g0
(g18
g5
Ntp13119
Rp13120
(dp13121
g22
(lp13122
g10602
asbsg85
g0
(g809
g5
Ntp13123
Rp13124
(dp13125
g552
(lp13126
g1590
asg798
g801
sg814
(lp13127
g13115
asg17
g0
(g18
g5
Ntp13128
Rp13129
(dp13130
g4093
(lp13131
g1270
asg1268
(lp13132
g1271
asbsg1272
(dp13133
sg1274
g12776
sbsg73
g12778
sb(g0
(g843
g5
Ntp13134
Rp13135
(dp13136
g14
S'auto_14851'
p13137
sg16
Nsg17
g0
(g18
g5
Ntp13138
Rp13139
(dp13140
g22
(lp13141
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp13142
Rp13143
(dp13144
g78
(tsg80
S'int64'
p13145
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp13146
g59
tp13147
Rp13148
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p13149
tp13150
bsbtp13151
sg0
(g843
g5
Ntp13152
Rp13153
(dp13154
g14
S'auto_16028'
p13155
sg16
Nsg17
g0
(g18
g5
Ntp13156
Rp13157
(dp13158
g22
(lp13159
sg878
g879
(g12377
S'\x00\x00\x80?'
p13160
tp13161
Rp13162
sbsg53
Nsg73
g0
(g74
g5
Ntp13163
Rp13164
(dp13165
g78
(I01
I01
tp13166
sg80
S'float32'
p13167
sg82
g12377
sg83
I00
sg53
Nsbsg807
(lp13168
sg883
g56
(g57
(I0
tp13169
g59
tp13170
Rp13171
(I1
(I1
I1
tp13172
g12377
I00
S'\x00\x00\x80?'
p13173
tp13174
bsb(g11229
g11229
tp13175
sg10566
(tsg3000
(g0
(g563
g5
Ntp13176
Rp13177
(dp13178
g14
S'auto_14876'
p13179
sg16
I0
sg17
g0
(g18
g5
Ntp13180
Rp13181
(dp13182
g22
(lp13183
sbsg53
Nsg85
g0
(g809
g5
Ntp13184
Rp13185
(dp13186
g552
(lp13187
g3000
asg17
g0
(g18
g5
Ntp13188
Rp13189
sg814
(lp13190
g13177
asg1274
g0
(g1275
g5
Ntp13191
Rp13192
(dp13193
g1279
I0
sbsbsg73
g1281
sbg12858
tp13194
sg0
(g563
g5
Ntp13195
Rp13196
(dp13197
g16
I0
sg53
Nsg798
g801
sg807
(lp13198
sg14
S'auto_15497'
p13199
sg17
g0
(g18
g5
Ntp13200
Rp13201
(dp13202
g22
(lp13203
sbsg85
g0
(g809
g5
Ntp13204
Rp13205
(dp13206
g552
(lp13207
g10144
asg798
g801
sg814
(lp13208
g13196
asg17
g0
(g18
g5
Ntp13209
Rp13210
(dp13211
g4093
(lp13212
g7835
asg1268
(lp13213
g8608
asbsg1272
(dp13214
sg1274
g11354
sbsg73
g0
(g74
g5
Ntp13215
Rp13216
(dp13217
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg1581
(g1557
g1627
g1566
tp13218
sg2290
(tsg2856
(g0
(g563
g5
Ntp13219
Rp13220
(dp13221
g14
S'auto_14875'
p13222
sg16
I0
sg17
g0
(g18
g5
Ntp13223
Rp13224
(dp13225
g22
(lp13226
sbsg53
Nsg85
g0
(g809
g5
Ntp13227
Rp13228
(dp13229
g552
(lp13230
g2856
asg17
g0
(g18
g5
Ntp13231
Rp13232
sg814
(lp13233
g13220
asg1274
g0
(g1275
g5
Ntp13234
Rp13235
(dp13236
g1279
I0
sbsbsg73
g1281
sbtp13237
sg1008
(g11229
g11229
g11229
tp13238
sg0
(g3250
g5
Ntp13239
Rp13240
(dp13241
g14
S'auto_14675'
p13242
sg16
Nsg17
g0
(g18
g5
Ntp13243
Rp13244
(dp13245
g22
(lp13246
(lp13247
(g25
I306
g26
S'nade_train( * args[1:] )'
p13248
tp13249
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13250
tp13251
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13252
tp13253
a(g37
I36
g38
S'self.recompile()'
p13254
tp13255
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13256
tp13257
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13258
tp13259
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p13260
tp13261
aasbsg53
Nsg73
g1465
sg807
(lp13262
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p13263
tp13264
Rp13265
sb(tsg1590
(g1627
g1557
g1566
tp13266
sg0
(g3250
g5
Ntp13267
Rp13268
(dp13269
g14
S'auto_14676'
p13270
sg16
Nsg17
g0
(g18
g5
Ntp13271
Rp13272
(dp13273
g22
(lp13274
(lp13275
(g25
I306
g26
S'nade_train( * args[1:] )'
p13276
tp13277
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13278
tp13279
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13280
tp13281
a(g37
I36
g38
S'self.recompile()'
p13282
tp13283
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13284
tp13285
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13286
tp13287
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p13288
tp13289
aasbsg53
Nsg73
g1465
sg807
(lp13290
sg883
g879
(g1286
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p13291
tp13292
Rp13293
sb(tsg3022
(g11229
g11229
tp13294
sg0
(g563
g5
Ntp13295
Rp13296
(dp13297
g16
I0
sg53
Nsg798
g801
sg807
(lp13298
sg14
S'auto_15602'
p13299
sg17
g0
(g18
g5
Ntp13300
Rp13301
(dp13302
g22
(lp13303
sbsg85
g0
(g809
g5
Ntp13304
Rp13305
(dp13306
g552
(lp13307
g10144
asg798
g801
sg814
(lp13308
g13296
asg17
g0
(g18
g5
Ntp13309
Rp13310
(dp13311
g4093
(lp13312
g7835
asg1268
(lp13313
g8608
asbsg1272
(dp13314
sg1274
g11354
sbsg73
g0
(g74
g5
Ntp13315
Rp13316
(dp13317
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp13318
Rp13319
(dp13320
g16
I0
sg53
Nsg798
g801
sg807
(lp13321
sg14
S'auto_14677'
p13322
sg17
g0
(g18
g5
Ntp13323
Rp13324
(dp13325
g22
(lp13326
g10678
asbsg85
g0
(g809
g5
Ntp13327
Rp13328
(dp13329
g552
(lp13330
g10594
ag13240
ag13268
asg798
g801
sg814
(lp13331
g13319
asg17
g0
(g18
g5
Ntp13332
Rp13333
(dp13334
g4093
(lp13335
g7591
asg1268
(lp13336
g1271
asbsg1272
(dp13337
sg1274
g0
(g3357
g5
Ntp13338
Rp13339
(dp13340
g3361
(g2
(S'SliceType'
p13341
tp13342
Rp13343
(g1465
g1465
Ntp13344
Rp13345
tp13346
sbsbsg73
g0
(g74
g5
Ntp13347
Rp13348
(dp13349
g78
(I00
tp13350
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(g11030
tp13351
sg952
(g7478
g9277
g0
(g563
g5
Ntp13352
Rp13353
(dp13354
g14
S'auto_15389'
p13355
sg16
I0
sg17
g0
(g18
g5
Ntp13356
Rp13357
(dp13358
g22
(lp13359
sbsg53
Nsg85
g0
(g809
g5
Ntp13360
Rp13361
(dp13362
g552
(lp13363
g0
(g563
g5
Ntp13364
Rp13365
(dp13366
g14
S'auto_15384'
p13367
sg16
I0
sg17
g0
(g18
g5
Ntp13368
Rp13369
(dp13370
g22
(lp13371
sbsg53
Nsg85
g0
(g809
g5
Ntp13372
Rp13373
(dp13374
g552
(lp13375
g8397
ag0
(g843
g5
Ntp13376
Rp13377
(dp13378
g14
S'auto_15380'
p13379
sg16
Nsg17
g0
(g18
g5
Ntp13380
Rp13381
(dp13382
g22
(lp13383
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp13384
Rp13385
(dp13386
g78
(tsg80
S'int8'
p13387
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp13388
g59
tp13389
Rp13390
(I1
(tg3031
I00
g7689
tp13391
bsbasg17
g0
(g18
g5
Ntp13392
Rp13393
sg814
(lp13394
g13365
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp13395
Rp13396
(dp13397
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag7719
ag8397
asg17
g0
(g18
g5
Ntp13398
Rp13399
sg814
(lp13400
g13353
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp13401
Rp13402
(dp13403
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp13404
sg8717
(g7478
g9277
g13353
tp13405
sg0
(g843
g5
Ntp13406
Rp13407
(dp13408
g14
S'auto_15585'
p13409
sg16
Nsg17
g0
(g18
g5
Ntp13410
Rp13411
(dp13412
g22
(lp13413
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp13414
Rp13415
(dp13416
g78
(tsg80
S'int8'
p13417
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp13418
sg883
g56
(g57
(I0
tp13419
g59
tp13420
Rp13421
(I1
(tg3031
I00
g8033
tp13422
bsb(tsg1205
(g1181
g1251
g1190
tp13423
sg7203
(g1173
g11211
tp13424
sg12514
(tsg12908
(g1173
g11389
tp13425
sg3596
(g11408
g11426
tp13426
sg7294
(g7478
g9277
g13353
tp13427
sg9122
(g11988
g12245
g12297
tp13428
sg1060
(g1173
g8098
tp13429
sg1155
(g2280
g2298
g1165
tp13430
sg2322
(g0
(g843
g5
Ntp13431
Rp13432
(dp13433
g14
S'auto_15131'
p13434
sg16
Nsg17
g0
(g18
g5
Ntp13435
Rp13436
(dp13437
g22
(lp13438
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp13439
Rp13440
(dp13441
g78
(tsg80
S'int64'
p13442
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp13443
g59
tp13444
Rp13445
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p13446
tp13447
bsbtp13448
sg4539
(g11229
g11229
tp13449
sg1762
(g12659
g12677
tp13450
sg2510
(g0
(g563
g5
Ntp13451
Rp13452
(dp13453
g14
S'auto_15078'
p13454
sg16
I0
sg17
g0
(g18
g5
Ntp13455
Rp13456
(dp13457
g22
(lp13458
sbsg53
Nsg85
g0
(g809
g5
Ntp13459
Rp13460
(dp13461
g552
(lp13462
g2510
asg17
g0
(g18
g5
Ntp13463
Rp13464
sg814
(lp13465
g13452
asg1274
g0
(g1275
g5
Ntp13466
Rp13467
(dp13468
g1279
I0
sbsbsg73
g1281
sbg0
(g563
g5
Ntp13469
Rp13470
(dp13471
g14
S'auto_15079'
p13472
sg16
I0
sg17
g0
(g18
g5
Ntp13473
Rp13474
(dp13475
g22
(lp13476
sbsg53
Nsg85
g0
(g809
g5
Ntp13477
Rp13478
(dp13479
g552
(lp13480
g2510
asg17
g0
(g18
g5
Ntp13481
Rp13482
sg814
(lp13483
g13470
asg1274
g0
(g1275
g5
Ntp13484
Rp13485
(dp13486
g1279
I1
sbsbsg73
g1281
sbtp13487
sg7527
(tsg12709
(tsg0
(g563
g5
Ntp13488
Rp13489
(dp13490
g16
I0
sg53
Nsg798
g801
sg807
(lp13491
sg14
S'auto_14679'
p13492
sg17
g0
(g18
g5
Ntp13493
Rp13494
(dp13495
g22
(lp13496
g3042
asbsg85
g0
(g809
g5
Ntp13497
Rp13498
(dp13499
g552
(lp13500
g7527
asg798
g801
sg814
(lp13501
g13489
asg17
g0
(g18
g5
Ntp13502
Rp13503
(dp13504
g4093
(lp13505
g11350
asg1268
(lp13506
g1271
ag1271
asbsg1272
(dp13507
sg1274
g0
(g1387
g5
Ntp13508
Rp13509
(dp13510
g1391
(lp13511
sg1393
(lp13512
sg1395
(lp13513
I0
aI1
asg1397
g1398
sg1399
(tsg1401
(lp13514
g1403
asg1404
I01
sg1405
(g270
g270
tp13515
sg1407
(dp13516
S'support_code_apply'
p13517
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p13518
ssg1411
(dp13519
I0
(lp13520
I0
assg1414
(lp13521
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p13522
asbsbsg73
g3025
sb(g11229
g11229
tp13523
sg0
(g563
g5
Ntp13524
Rp13525
(dp13526
g16
I0
sg53
Nsg798
g801
sg807
(lp13527
sg14
S'auto_15603'
p13528
sg17
g0
(g18
g5
Ntp13529
Rp13530
(dp13531
g22
(lp13532
sbsg85
g0
(g809
g5
Ntp13533
Rp13534
(dp13535
g552
(lp13536
g11300
asg798
g801
sg814
(lp13537
g13525
asg17
g0
(g18
g5
Ntp13538
Rp13539
(dp13540
g4093
(lp13541
g3663
asg1268
(lp13542
g8608
asbsg1272
(dp13543
sg1274
g0
(g1387
g5
Ntp13544
Rp13545
(dp13546
g1391
(lp13547
sg1393
(lp13548
sg1395
(lp13549
sg1397
g1398
sg1399
(tsg1401
(lp13550
g1403
asg1404
I01
sg1405
(tsg1407
(dp13551
S'support_code_apply'
p13552
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p13553
ssg1411
(dp13554
I0
(lp13555
I0
assg1414
(lp13556
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p13557
asbsbsg73
g0
(g74
g5
Ntp13558
Rp13559
(dp13560
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp13561
Rp13562
(dp13563
g16
I0
sg53
Nsg798
g801
sg807
(lp13564
sg14
S'auto_14759'
p13565
sg17
g0
(g18
g5
Ntp13566
Rp13567
(dp13568
g22
(lp13569
(lp13570
(g25
I306
g26
S'nade_train( * args[1:] )'
p13571
tp13572
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13573
tp13574
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13575
tp13576
a(g37
I36
g38
S'self.recompile()'
p13577
tp13578
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13579
tp13580
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13581
tp13582
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p13583
tp13584
aasbsg85
g0
(g809
g5
Ntp13585
Rp13586
(dp13587
g552
(lp13588
g12486
ag13026
asg798
g801
sg814
(lp13589
g13562
asg17
g0
(g18
g5
Ntp13590
Rp13591
(dp13592
g4093
(lp13593
g5660
asg1268
(lp13594
g1271
asbsg1272
(dp13595
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp13596
Rp13597
(dp13598
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp13599
Rp13600
(dp13601
g16
I0
sg53
Nsg798
g801
sg807
(lp13602
sg14
S'auto_15893'
p13603
sg17
g0
(g18
g5
Ntp13604
Rp13605
(dp13606
g22
(lp13607
sbsg85
g0
(g809
g5
Ntp13608
Rp13609
(dp13610
g552
(lp13611
g0
(g843
g5
Ntp13612
Rp13613
(dp13614
g14
S'auto_15890'
p13615
sg16
Nsg17
g0
(g18
g5
Ntp13616
Rp13617
(dp13618
g22
(lp13619
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp13620
Rp13621
(dp13622
g78
(tsg80
S'float32'
p13623
sg82
g12377
sg83
I00
sg53
Nsbsg807
(lp13624
sg883
g56
(g57
(I0
tp13625
g59
tp13626
Rp13627
(I1
(tg12377
I00
S'\x00\x00\x80?'
p13628
tp13629
bsbasg798
g801
sg814
(lp13630
g13600
asg17
g0
(g18
g5
Ntp13631
Rp13632
(dp13633
g1451
g0
(g809
g5
Ntp13634
Rp13635
(dp13636
g552
(lp13637
g0
(g1456
g5
Ntp13638
Rp13639
(dp13640
g14
S'auto_16015'
p13641
sg16
Nsg17
g0
(g18
g5
Ntp13642
Rp13643
sg53
Nsg85
Nsg73
g12401
sbasg17
g0
(g18
g5
Ntp13644
Rp13645
sg814
(lp13646
g0
(g1456
g5
Ntp13647
Rp13648
(dp13649
g14
S'auto_16016'
p13650
sg16
I0
sg17
g0
(g18
g5
Ntp13651
Rp13652
sg53
Nsg85
g13635
sg73
g1931
sbasg1274
g12414
sbsg4093
(lp13653
g11350
asg1268
(lp13654
g5770
asbsg1272
(dp13655
sg1274
g12426
sbsg73
g2984
sb(tsg0
(g563
g5
Ntp13656
Rp13657
(dp13658
g16
I0
sg53
Nsg798
g801
sg807
(lp13659
sg14
S'auto_14792'
p13660
sg17
g0
(g18
g5
Ntp13661
Rp13662
(dp13663
g22
(lp13664
g7566
asbsg85
g0
(g809
g5
Ntp13665
Rp13666
(dp13667
g552
(lp13668
g10202
ag3252
ag13240
asg798
g801
sg814
(lp13669
g13657
asg17
g0
(g18
g5
Ntp13670
Rp13671
(dp13672
g4093
(lp13673
g7591
asg1268
(lp13674
g1271
asbsg1272
(dp13675
sg1274
g0
(g3357
g5
Ntp13676
Rp13677
(dp13678
g3361
(g13343
(g1465
g1465
Ntp13679
Rp13680
tp13681
sbsbsg73
g0
(g74
g5
Ntp13682
Rp13683
(dp13684
g78
(I00
tp13685
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(g10881
tp13686
sg0
(g563
g5
Ntp13687
Rp13688
(dp13689
g16
I0
sg53
Nsg798
g801
sg807
(lp13690
sg14
S'auto_14839'
p13691
sg17
g0
(g18
g5
Ntp13692
Rp13693
(dp13694
g22
(lp13695
(lp13696
(g25
I306
g26
S'nade_train( * args[1:] )'
p13697
tp13698
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13699
tp13700
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13701
tp13702
a(g37
I36
g38
S'self.recompile()'
p13703
tp13704
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13705
tp13706
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13707
tp13708
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p13709
tp13710
aasbsg85
g0
(g809
g5
Ntp13711
Rp13712
(dp13713
g552
(lp13714
g0
(g563
g5
Ntp13715
Rp13716
(dp13717
g16
I0
sg53
Nsg798
g801
sg807
(lp13718
sg14
S'auto_16048'
p13719
sg17
g0
(g18
g5
Ntp13720
Rp13721
(dp13722
g22
(lp13723
(lp13724
(g25
I306
g26
S'nade_train( * args[1:] )'
p13725
tp13726
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13727
tp13728
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13729
tp13730
a(g37
I36
g38
S'self.recompile()'
p13731
tp13732
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13733
tp13734
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13735
tp13736
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p13737
tp13738
a(g4481
I53
g4482
S'return max_x + T.log(T.sum(T.exp(x - T.shape_padright(max_x, 1)), axis))'
p13739
tp13740
aasbsg85
g0
(g809
g5
Ntp13741
Rp13742
(dp13743
g552
(lp13744
g934
ag4134
ag0
(g563
g5
Ntp13745
Rp13746
(dp13747
g16
I0
sg53
Nsg798
g801
sg807
(lp13748
sg14
S'auto_15850'
p13749
sg17
g0
(g18
g5
Ntp13750
Rp13751
(dp13752
g22
(lp13753
sbsg85
g0
(g809
g5
Ntp13754
Rp13755
(dp13756
g552
(lp13757
g4161
asg798
g801
sg814
(lp13758
g13746
asg17
g0
(g18
g5
Ntp13759
Rp13760
(dp13761
g4093
(lp13762
g5814
asg1268
(lp13763
g4178
asbsg1272
(dp13764
sg1274
g6150
sbsg73
g0
(g74
g5
Ntp13765
Rp13766
(dp13767
g78
(I00
I00
tp13768
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp13769
g13716
asg17
g0
(g18
g5
Ntp13770
Rp13771
(dp13772
g4093
(lp13773
g5814
asg1268
(lp13774
g5814
asbsg1272
(dp13775
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp13776
Rp13777
(dp13778
g78
(I00
I00
tp13779
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag11930
asg798
g801
sg814
(lp13780
g13688
asg17
g0
(g18
g5
Ntp13781
Rp13782
(dp13783
g4093
(lp13784
g5814
asg1268
(lp13785
g1271
asbsg1272
(dp13786
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp13787
Rp13788
(dp13789
g78
(I00
I00
tp13790
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
tp13791
sg9205
(g9330
g9875
g9927
tp13792
sg13746
(g7478
g9277
tp13793
sg0
(g563
g5
Ntp13794
Rp13795
(dp13796
g16
I0
sg53
Nsg798
g801
sg807
(lp13797
sg14
S'auto_14763'
p13798
sg17
g0
(g18
g5
Ntp13799
Rp13800
(dp13801
g22
(lp13802
g11819
asbsg85
g0
(g809
g5
Ntp13803
Rp13804
(dp13805
g552
(lp13806
g10144
ag11839
asg798
g801
sg814
(lp13807
g13795
asg17
g0
(g18
g5
Ntp13808
Rp13809
(dp13810
g4093
(lp13811
g8608
asg1268
(lp13812
g1271
asbsg1272
(dp13813
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp13814
Rp13815
(dp13816
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg3252
(tsg1165
(tsg0
(g563
g5
Ntp13817
Rp13818
(dp13819
g16
I0
sg53
Nsg798
g801
sg807
(lp13820
sg14
S'auto_14817'
p13821
sg17
g0
(g18
g5
Ntp13822
Rp13823
(dp13824
g22
(lp13825
(lp13826
(g25
I306
g26
S'nade_train( * args[1:] )'
p13827
tp13828
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13829
tp13830
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13831
tp13832
a(g37
I36
g38
S'self.recompile()'
p13833
tp13834
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13835
tp13836
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13837
tp13838
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p13839
tp13840
aasbsg85
g0
(g809
g5
Ntp13841
Rp13842
(dp13843
g552
(lp13844
g0
(g563
g5
Ntp13845
Rp13846
(dp13847
g16
I0
sg53
Nsg798
g801
sg807
(lp13848
sg14
S'auto_14699'
p13849
sg17
g0
(g18
g5
Ntp13850
Rp13851
(dp13852
g22
(lp13853
(lp13854
(g25
I306
g26
S'nade_train( * args[1:] )'
p13855
tp13856
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13857
tp13858
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13859
tp13860
a(g37
I36
g38
S'self.recompile()'
p13861
tp13862
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13863
tp13864
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13865
tp13866
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p13867
tp13868
aasbsg85
g0
(g809
g5
Ntp13869
Rp13870
(dp13871
g552
(lp13872
g0
(g563
g5
Ntp13873
Rp13874
(dp13875
g16
I0
sg53
Nsg798
g801
sg807
(lp13876
sg14
S'auto_14698'
p13877
sg17
g0
(g18
g5
Ntp13878
Rp13879
(dp13880
g22
(lp13881
(lp13882
(g25
I306
g26
S'nade_train( * args[1:] )'
p13883
tp13884
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13885
tp13886
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13887
tp13888
a(g37
I36
g38
S'self.recompile()'
p13889
tp13890
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13891
tp13892
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13893
tp13894
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p13895
tp13896
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p13897
tp13898
aasbsg85
g0
(g809
g5
Ntp13899
Rp13900
(dp13901
g552
(lp13902
g0
(g563
g5
Ntp13903
Rp13904
(dp13905
g16
I0
sg53
Nsg798
g801
sg807
(lp13906
sg14
S'auto_14696'
p13907
sg17
g0
(g18
g5
Ntp13908
Rp13909
(dp13910
g22
(lp13911
(lp13912
(g25
I306
g26
S'nade_train( * args[1:] )'
p13913
tp13914
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13915
tp13916
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13917
tp13918
a(g37
I36
g38
S'self.recompile()'
p13919
tp13920
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13921
tp13922
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13923
tp13924
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p13925
tp13926
aasbsg85
g0
(g809
g5
Ntp13927
Rp13928
(dp13929
g552
(lp13930
g2784
ag3279
asg798
g801
sg814
(lp13931
g13904
asg17
g0
(g18
g5
Ntp13932
Rp13933
(dp13934
g4093
(lp13935
g5814
asg1268
(lp13936
g1271
asbsg1272
(dp13937
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp13938
Rp13939
(dp13940
g78
(I00
I00
tp13941
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp13942
Rp13943
(dp13944
g16
I0
sg53
Nsg798
g801
sg807
(lp13945
sg14
S'auto_14697'
p13946
sg17
g0
(g18
g5
Ntp13947
Rp13948
(dp13949
g22
(lp13950
(lp13951
(g25
I306
g26
S'nade_train( * args[1:] )'
p13952
tp13953
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p13954
tp13955
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p13956
tp13957
a(g37
I36
g38
S'self.recompile()'
p13958
tp13959
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p13960
tp13961
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p13962
tp13963
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p13964
tp13965
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p13966
tp13967
aasbsg85
g0
(g809
g5
Ntp13968
Rp13969
(dp13970
g552
(lp13971
g13904
ag3022
asg798
g801
sg814
(lp13972
g13943
asg17
g0
(g18
g5
Ntp13973
Rp13974
(dp13975
g4093
(lp13976
g5814
asg1268
(lp13977
g1271
asbsg1272
(dp13978
sg1274
g0
(g318
g5
Ntp13979
Rp13980
(dp13981
g379
g380
sg322
g3174
sg53
S'Elemwise{gt,no_inplace}'
p13982
sg330
(dp13983
sg332
(S'greater'
p13984
I2
I1
tp13985
sg333
g0
(g334
g5
Ntp13986
Rp13987
(dp13988
g338
I0
sg339
(dp13989
sbsg341
I00
sg307
S"a > b\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Note\n    ----\n    | Elemwise(add) represents + on tensors (x + y)\n    | Elemwise(add, {0 : 0}) represents the += operation (x += y)\n    | Elemwise(add, {0 : 1}) represents += on the second argument (y += x)\n    | Elemwise(mul)(rand(10, 5), rand(1, 5)) the second input is completed along the first dimension to match the first input\n    | Elemwise(true_div)(rand(10, 5), rand(10, 1)) same but along the second dimension\n    | Elemwise(int_div)(rand(1, 5), rand(10, 1)) the output has size (10, 5)\n    | Elemwise(log)(rand(3, 4, 5))\n\n    "
p13990
sbsbsg73
g0
(g74
g5
Ntp13991
Rp13992
(dp13993
g78
(I00
I00
tp13994
sg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp13995
g13874
asg17
g0
(g18
g5
Ntp13996
Rp13997
(dp13998
g4093
(lp13999
g5814
asg1268
(lp14000
g1271
asbsg1272
(dp14001
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp14002
Rp14003
(dp14004
g78
(I00
I00
tp14005
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp14006
g13846
asg17
g0
(g18
g5
Ntp14007
Rp14008
(dp14009
g4093
(lp14010
g1270
asg1268
(lp14011
g1271
asbsg1272
(dp14012
sg1274
g0
(g1387
g5
Ntp14013
Rp14014
(dp14015
g1391
(lp14016
sg1393
(lp14017
I0
aI1
asg1395
(lp14018
sg1397
g1398
sg1399
(I00
I00
tp14019
sg1401
(lp14020
g1403
asg1404
I01
sg1405
(I0
I1
tp14021
sg1407
(dp14022
S'support_code_apply'
p14023
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14024
ssg1411
(dp14025
I0
(lp14026
I0
assg1414
(lp14027
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14028
asbsbsg73
g0
(g74
g5
Ntp14029
Rp14030
(dp14031
g78
(I00
I00
tp14032
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag7779
asg798
g801
sg814
(lp14033
g13818
asg17
g0
(g18
g5
Ntp14034
Rp14035
(dp14036
g4093
(lp14037
S'local_useless_dimshuffle_in_reshape'
p14038
asg1268
(lp14039
g1271
asbsg1272
(dp14040
sg1274
g0
(g1352
g5
Ntp14041
Rp14042
(dp14043
g1356
I2
sbsbsg73
g0
(g74
g5
Ntp14044
Rp14045
(dp14046
g78
(I00
I00
tp14047
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7743
g0
(g563
g5
Ntp14048
Rp14049
(dp14050
g14
S'auto_15020'
p14051
sg16
I0
sg17
g0
(g18
g5
Ntp14052
Rp14053
(dp14054
g22
(lp14055
sbsg53
Nsg85
g0
(g809
g5
Ntp14056
Rp14057
(dp14058
g552
(lp14059
g0
(g563
g5
Ntp14060
Rp14061
(dp14062
g14
S'auto_15015'
p14063
sg16
I0
sg17
g0
(g18
g5
Ntp14064
Rp14065
(dp14066
g22
(lp14067
sbsg53
Nsg85
g0
(g809
g5
Ntp14068
Rp14069
(dp14070
g552
(lp14071
g7956
ag0
(g843
g5
Ntp14072
Rp14073
(dp14074
g14
S'auto_15011'
p14075
sg16
Nsg17
g0
(g18
g5
Ntp14076
Rp14077
(dp14078
g22
(lp14079
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14080
Rp14081
(dp14082
g78
(tsg80
S'int8'
p14083
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14084
g59
tp14085
Rp14086
(I1
(tg3031
I00
g7689
tp14087
bsbasg17
g0
(g18
g5
Ntp14088
Rp14089
sg814
(lp14090
g14061
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp14091
Rp14092
(dp14093
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag7890
ag7956
asg17
g0
(g18
g5
Ntp14094
Rp14095
sg814
(lp14096
g14049
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp14097
Rp14098
(dp14099
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp14100
sg8758
(g7478
g9277
g13353
tp14101
sg1557
(tsg0
(g843
g5
Ntp14102
Rp14103
(dp14104
g14
S'auto_16037'
p14105
sg16
Nsg17
g0
(g18
g5
Ntp14106
Rp14107
(dp14108
g22
(lp14109
sg878
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xf0?'
p14110
tp14111
Rp14112
sbsg53
Nsg73
g0
(g74
g5
Ntp14113
Rp14114
(dp14115
g78
(I01
I01
tp14116
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp14117
sg883
g56
(g57
(I0
tp14118
g59
tp14119
Rp14120
(I1
(I1
I1
tp14121
g66
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
p14122
tp14123
bsb(g11229
g11229
tp14124
sg1514
(g0
(g843
g5
Ntp14125
Rp14126
(dp14127
g14
S'auto_15756'
p14128
sg16
Nsg17
g0
(g18
g5
Ntp14129
Rp14130
(dp14131
g22
(lp14132
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14133
Rp14134
(dp14135
g78
(tsg80
S'int64'
p14136
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14137
g59
tp14138
Rp14139
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p14140
tp14141
bsbtp14142
sg0
(g563
g5
Ntp14143
Rp14144
(dp14145
g16
I0
sg53
Nsg798
g801
sg807
(lp14146
sg14
S'auto_15906'
p14147
sg17
g0
(g18
g5
Ntp14148
Rp14149
(dp14150
g22
(lp14151
sbsg85
g0
(g809
g5
Ntp14152
Rp14153
(dp14154
g552
(lp14155
g0
(g563
g5
Ntp14156
Rp14157
(dp14158
g16
I0
sg53
Nsg798
g801
sg807
(lp14159
sg14
S'auto_15901'
p14160
sg17
g0
(g18
g5
Ntp14161
Rp14162
(dp14163
g22
(lp14164
sbsg85
g0
(g809
g5
Ntp14165
Rp14166
(dp14167
g552
(lp14168
g0
(g843
g5
Ntp14169
Rp14170
(dp14171
g14
S'auto_15898'
p14172
sg16
Nsg17
g0
(g18
g5
Ntp14173
Rp14174
(dp14175
g22
(lp14176
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14177
Rp14178
(dp14179
g78
(tsg80
g13167
sg82
g12377
sg83
I00
sg53
Nsbsg807
(lp14180
sg883
g56
(g57
(I0
tp14181
g59
tp14182
Rp14183
(I1
(tg12377
I00
S'\x00\x00\x80?'
p14184
tp14185
bsbasg798
g801
sg814
(lp14186
g14157
asg17
g0
(g18
g5
Ntp14187
Rp14188
(dp14189
g4093
(lp14190
g3663
asg1268
(lp14191
g5770
asbsg1272
(dp14192
sg1274
g12426
sbsg73
g0
(g74
g5
Ntp14193
Rp14194
(dp14195
g78
(tsg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp14196
g14144
asg17
g0
(g18
g5
Ntp14197
Rp14198
(dp14199
g4093
(lp14200
g3663
asg1268
(lp14201
g5770
asbsg1272
(dp14202
sg1274
g0
(g1387
g5
Ntp14203
Rp14204
(dp14205
g1391
(lp14206
sg1393
(lp14207
sg1395
(lp14208
I0
aI1
asg1397
g1398
sg1399
(tsg1401
(lp14209
g1403
asg1404
I01
sg1405
(g270
g270
tp14210
sg1407
(dp14211
S'support_code_apply'
p14212
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14213
ssg1411
(dp14214
I0
(lp14215
I0
assg1414
(lp14216
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14217
asbsbsg73
g0
(g74
g5
Ntp14218
Rp14219
(dp14220
g78
(I01
I01
tp14221
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g11229
tp14222
sg0
(g563
g5
Ntp14223
Rp14224
(dp14225
g16
I0
sg53
Nsg798
g801
sg807
(lp14226
sg14
S'auto_14710'
p14227
sg17
g0
(g18
g5
Ntp14228
Rp14229
(dp14230
g22
(lp14231
(lp14232
(g25
I306
g26
S'nade_train( * args[1:] )'
p14233
tp14234
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14235
tp14236
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14237
tp14238
a(g37
I36
g38
S'self.recompile()'
p14239
tp14240
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14241
tp14242
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14243
tp14244
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p14245
tp14246
aasbsg85
g0
(g809
g5
Ntp14247
Rp14248
(dp14249
g552
(lp14250
g10594
ag10241
asg798
g801
sg814
(lp14251
g14224
asg17
g0
(g18
g5
Ntp14252
Rp14253
(dp14254
g4093
(lp14255
g7591
asg1268
(lp14256
g1271
asbsg1272
(dp14257
sg1274
g0
(g3357
g5
Ntp14258
Rp14259
(dp14260
g3361
(g1465
tp14261
sbsbsg73
g0
(g74
g5
Ntp14262
Rp14263
(dp14264
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg5642
(tsg0
(g563
g5
Ntp14265
Rp14266
(dp14267
g16
I0
sg53
Nsg798
g801
sg807
(lp14268
sg14
S'auto_14745'
p14269
sg17
g0
(g18
g5
Ntp14270
Rp14271
(dp14272
g22
(lp14273
g9387
asbsg85
g0
(g809
g5
Ntp14274
Rp14275
(dp14276
g552
(lp14277
g11867
ag13240
ag13268
asg798
g801
sg814
(lp14278
g14266
asg17
g0
(g18
g5
Ntp14279
Rp14280
(dp14281
g4093
(lp14282
g7591
asg1268
(lp14283
g1271
asbsg1272
(dp14284
sg1274
g0
(g3357
g5
Ntp14285
Rp14286
(dp14287
g3361
(g13343
(g1465
g1465
Ntp14288
Rp14289
tp14290
sbsbsg73
g0
(g74
g5
Ntp14291
Rp14292
(dp14293
g78
(I00
tp14294
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(g11669
tp14295
sg836
(g10037
tp14296
sg2298
(tsg0
(g563
g5
Ntp14297
Rp14298
(dp14299
g16
I0
sg53
Nsg798
g801
sg807
(lp14300
sg14
S'auto_14825'
p14301
sg17
g0
(g18
g5
Ntp14302
Rp14303
(dp14304
g22
(lp14305
(lp14306
(g25
I306
g26
S'nade_train( * args[1:] )'
p14307
tp14308
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14309
tp14310
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14311
tp14312
a(g37
I36
g38
S'self.recompile()'
p14313
tp14314
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14315
tp14316
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14317
tp14318
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p14319
tp14320
aasbsg85
g0
(g809
g5
Ntp14321
Rp14322
(dp14323
g552
(lp14324
g0
(g843
g5
Ntp14325
Rp14326
(dp14327
g14
S'auto_14824'
p14328
sg16
Nsg17
g0
(g18
g5
Ntp14329
Rp14330
(dp14331
g22
(lp14332
(lp14333
(g25
I306
g26
S'nade_train( * args[1:] )'
p14334
tp14335
a(g29
I221
g30
S'nade = nade_class(n_visible, options.units, l, options.n_components, nonlinearity=options.nonlinearity)'
p14336
tp14337
a(g37
I36
g38
S'self.recompile()'
p14338
tp14339
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14340
tp14341
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14342
tp14343
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p14344
tp14345
a(g4481
I43
g11267
S'return theano.tensor.constant(np.asarray(value, dtype=floatX))'
p14346
tp14347
aasg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14348
Rp14349
(dp14350
g78
(tsg80
S'float64'
p14351
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp14352
sg883
g56
(g57
(I0
tp14353
g59
tp14354
Rp14355
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x00\xe0?'
p14356
tp14357
bsbasg798
g801
sg814
(lp14358
g14298
asg17
g0
(g18
g5
Ntp14359
Rp14360
(dp14361
g4093
(lp14362
g3663
asg1268
(lp14363
g1271
asbsg1272
(dp14364
sg1274
g7998
sbsg73
g0
(g74
g5
Ntp14365
Rp14366
(dp14367
g78
(tsg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(tsg13054
(tsg7514
(g0
(g563
g5
Ntp14368
Rp14369
(dp14370
g14
S'auto_15286'
p14371
sg16
I0
sg17
g0
(g18
g5
Ntp14372
Rp14373
(dp14374
g22
(lp14375
sbsg53
Nsg85
g0
(g809
g5
Ntp14376
Rp14377
(dp14378
g552
(lp14379
g0
(g563
g5
Ntp14380
Rp14381
(dp14382
g14
S'auto_15281'
p14383
sg16
I0
sg17
g0
(g18
g5
Ntp14384
Rp14385
(dp14386
g22
(lp14387
sbsg53
Nsg85
g0
(g809
g5
Ntp14388
Rp14389
(dp14390
g552
(lp14391
g0
(g843
g5
Ntp14392
Rp14393
(dp14394
g14
S'auto_15277'
p14395
sg16
Nsg17
g0
(g18
g5
Ntp14396
Rp14397
(dp14398
g22
(lp14399
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14400
Rp14401
(dp14402
g78
(tsg80
S'int8'
p14403
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14404
g59
tp14405
Rp14406
(I1
(tg3031
I00
g3059
tp14407
bsbag0
(g563
g5
Ntp14408
Rp14409
(dp14410
g14
S'auto_15272'
p14411
sg16
I0
sg17
g0
(g18
g5
Ntp14412
Rp14413
(dp14414
g22
(lp14415
sbsg53
Nsg85
g0
(g809
g5
Ntp14416
Rp14417
(dp14418
g552
(lp14419
g0
(g563
g5
Ntp14420
Rp14421
(dp14422
g14
S'auto_15262'
p14423
sg16
I0
sg17
g0
(g18
g5
Ntp14424
Rp14425
(dp14426
g22
(lp14427
sbsg53
Nsg85
g0
(g809
g5
Ntp14428
Rp14429
(dp14430
g552
(lp14431
g7527
ag0
(g843
g5
Ntp14432
Rp14433
(dp14434
g14
S'auto_15258'
p14435
sg16
Nsg17
g0
(g18
g5
Ntp14436
Rp14437
(dp14438
g22
(lp14439
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14440
Rp14441
(dp14442
g78
(tsg80
S'int8'
p14443
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14444
g59
tp14445
Rp14446
(I1
(tg3031
I00
g3059
tp14447
bsbasg17
g0
(g18
g5
Ntp14448
Rp14449
sg814
(lp14450
g14421
asg1274
g10804
sbsg73
g0
(g74
g5
Ntp14451
Rp14452
(dp14453
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag7527
ag0
(g563
g5
Ntp14454
Rp14455
(dp14456
g14
S'auto_15267'
p14457
sg16
I0
sg17
g0
(g18
g5
Ntp14458
Rp14459
(dp14460
g22
(lp14461
sbsg53
Nsg85
g0
(g809
g5
Ntp14462
Rp14463
(dp14464
g552
(lp14465
g7527
ag0
(g843
g5
Ntp14466
Rp14467
(dp14468
g14
S'auto_15263'
p14469
sg16
Nsg17
g0
(g18
g5
Ntp14470
Rp14471
(dp14472
g22
(lp14473
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14474
Rp14475
(dp14476
g78
(tsg80
S'int8'
p14477
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14478
g59
tp14479
Rp14480
(I1
(tg3031
I00
g8033
tp14481
bsbasg17
g0
(g18
g5
Ntp14482
Rp14483
sg814
(lp14484
g14455
asg1274
g8877
sbsg73
g0
(g74
g5
Ntp14485
Rp14486
(dp14487
g78
(tsg80
g3096
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp14488
Rp14489
sg814
(lp14490
g14409
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp14491
Rp14492
(dp14493
g78
(tsg80
g3096
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp14494
Rp14495
sg814
(lp14496
g14381
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp14497
Rp14498
(dp14499
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp14500
Rp14501
(dp14502
g14
S'auto_15276'
p14503
sg16
I0
sg17
g0
(g18
g5
Ntp14504
Rp14505
(dp14506
g22
(lp14507
sbsg53
Nsg85
g0
(g809
g5
Ntp14508
Rp14509
(dp14510
g552
(lp14511
g10881
ag0
(g563
g5
Ntp14512
Rp14513
(dp14514
g14
S'auto_15257'
p14515
sg16
I0
sg17
g0
(g18
g5
Ntp14516
Rp14517
(dp14518
g22
(lp14519
sbsg53
Nsg85
g0
(g809
g5
Ntp14520
Rp14521
(dp14522
g552
(lp14523
g0
(g843
g5
Ntp14524
Rp14525
(dp14526
g14
S'auto_15253'
p14527
sg16
Nsg17
g0
(g18
g5
Ntp14528
Rp14529
(dp14530
g22
(lp14531
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14532
Rp14533
(dp14534
g78
(tsg80
S'int64'
p14535
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14536
g59
tp14537
Rp14538
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p14539
tp14540
bsbag0
(g563
g5
Ntp14541
Rp14542
(dp14543
g14
S'auto_15252'
p14544
sg16
I0
sg17
g0
(g18
g5
Ntp14545
Rp14546
(dp14547
g22
(lp14548
sbsg53
Nsg85
g0
(g809
g5
Ntp14549
Rp14550
(dp14551
g552
(lp14552
g0
(g563
g5
Ntp14553
Rp14554
(dp14555
g14
S'auto_15245'
p14556
sg16
I0
sg17
g0
(g18
g5
Ntp14557
Rp14558
(dp14559
g22
(lp14560
sbsg53
Nsg85
g0
(g809
g5
Ntp14561
Rp14562
(dp14563
g552
(lp14564
g0
(g843
g5
Ntp14565
Rp14566
(dp14567
g14
S'auto_15240'
p14568
sg16
Nsg17
g0
(g18
g5
Ntp14569
Rp14570
(dp14571
g22
(lp14572
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14573
Rp14574
(dp14575
g78
(tsg80
S'int64'
p14576
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14577
g59
tp14578
Rp14579
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p14580
tp14581
bsbag0
(g843
g5
Ntp14582
Rp14583
(dp14584
g14
S'auto_15241'
p14585
sg16
Nsg17
g0
(g18
g5
Ntp14586
Rp14587
(dp14588
g22
(lp14589
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14590
Rp14591
(dp14592
g78
(tsg80
S'int64'
p14593
sg82
g1286
sg83
I00
sg53
Nsbsg883
g14538
sbasg17
g0
(g18
g5
Ntp14594
Rp14595
sg814
(lp14596
g14554
asg1274
g10954
sbsg73
g0
(g74
g5
Ntp14597
Rp14598
(dp14599
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp14600
Rp14601
(dp14602
g14
S'auto_15246'
p14603
sg16
Nsg17
g0
(g18
g5
Ntp14604
Rp14605
(dp14606
g22
(lp14607
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14608
Rp14609
(dp14610
g78
(tsg80
S'int64'
p14611
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp14612
g59
tp14613
Rp14614
(I1
(tg1286
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p14615
tp14616
bsbag0
(g843
g5
Ntp14617
Rp14618
(dp14619
g14
S'auto_15247'
p14620
sg16
Nsg17
g0
(g18
g5
Ntp14621
Rp14622
(dp14623
g22
(lp14624
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14625
Rp14626
(dp14627
g78
(tsg80
S'int64'
p14628
sg82
g1286
sg83
I00
sg53
Nsbsg883
g14538
sbasg17
g0
(g18
g5
Ntp14629
Rp14630
sg814
(lp14631
g14542
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp14632
Rp14633
(dp14634
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp14635
Rp14636
sg814
(lp14637
g14513
asg1274
g4101
sbsg73
g0
(g74
g5
Ntp14638
Rp14639
(dp14640
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp14641
Rp14642
sg814
(lp14643
g14501
asg1274
g8877
sbsg73
g0
(g74
g5
Ntp14644
Rp14645
(dp14646
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag10881
asg17
g0
(g18
g5
Ntp14647
Rp14648
sg814
(lp14649
g14369
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp14650
Rp14651
(dp14652
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbtp14653
sg1650
(tsg11839
(tsg2981
(tsg2280
(tsg6464
(g7478
g9277
g13353
tp14654
sg0
(g563
g5
Ntp14655
Rp14656
(dp14657
g16
I0
sg53
Nsg798
g801
sg807
(lp14658
sg14
S'auto_14730'
p14659
sg17
g0
(g18
g5
Ntp14660
Rp14661
(dp14662
g22
(lp14663
g2063
asbsg85
g0
(g809
g5
Ntp14664
Rp14665
(dp14666
g552
(lp14667
g13874
ag1678
asg798
g801
sg814
(lp14668
g14656
asg17
g0
(g18
g5
Ntp14669
Rp14670
(dp14671
g4093
(lp14672
g2086
asg1268
(lp14673
g1271
asbsg1272
(dp14674
sg1274
g0
(ctheano.tensor.basic
Dot
p14675
g5
Ntp14676
Rp14677
sbsg73
g0
(g74
g5
Ntp14678
Rp14679
(dp14680
g78
(I00
I00
tp14681
sg80
g2048
sg82
g66
sg83
I00
sg53
Nsbsb(g7743
g10292
tp14682
sg8786
(g7478
g9277
g13353
tp14683
sg0
(g563
g5
Ntp14684
Rp14685
(dp14686
g16
I0
sg53
Nsg798
g801
sg807
(lp14687
sg14
S'auto_14666'
p14688
sg17
g0
(g18
g5
Ntp14689
Rp14690
(dp14691
g22
(lp14692
g859
asbsg85
g0
(g809
g5
Ntp14693
Rp14694
(dp14695
g552
(lp14696
g0
(g843
g5
Ntp14697
Rp14698
(dp14699
g14
S'auto_14665'
p14700
sg16
Nsg17
g0
(g18
g5
Ntp14701
Rp14702
(dp14703
g22
(lp14704
(lp14705
(g25
I306
g26
S'nade_train( * args[1:] )'
p14706
tp14707
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14708
tp14709
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14710
tp14711
a(g37
I36
g38
S'self.recompile()'
p14712
tp14713
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14714
tp14715
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14716
tp14717
a(g874
I211
g875
S'D = constantX(self.n_visible)'
p14718
tp14719
a(g4481
I43
g11267
S'return theano.tensor.constant(np.asarray(value, dtype=floatX))'
p14720
tp14721
aasg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14722
Rp14723
(dp14724
g78
(tsg80
g851
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp14725
sg883
g56
(g57
(I0
tp14726
g59
tp14727
Rp14728
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x005@'
p14729
tp14730
bsbasg798
g801
sg814
(lp14731
g14685
asg17
g0
(g18
g5
Ntp14732
Rp14733
(dp14734
g4093
(lp14735
g11350
asg1268
(lp14736
g1271
ag1271
asbsg1272
(dp14737
sg1274
g0
(g1387
g5
Ntp14738
Rp14739
(dp14740
g1391
(lp14741
sg1393
(lp14742
sg1395
(lp14743
I0
asg1397
g1398
sg1399
(tsg1401
(lp14744
g1403
asg1404
I01
sg1405
(g270
tp14745
sg1407
(dp14746
S'support_code_apply'
p14747
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14748
ssg1411
(dp14749
I0
(lp14750
I0
assg1414
(lp14751
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14752
asbsbsg73
g848
sb(g11229
tp14753
sg6260
(g11988
g12245
g12297
tp14754
sg0
(g563
g5
Ntp14755
Rp14756
(dp14757
g16
I0
sg53
Nsg798
g801
sg807
(lp14758
sg14
S'auto_14834'
p14759
sg17
g0
(g18
g5
Ntp14760
Rp14761
(dp14762
g22
(lp14763
(lp14764
(g25
I306
g26
S'nade_train( * args[1:] )'
p14765
tp14766
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14767
tp14768
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14769
tp14770
a(g37
I36
g38
S'self.recompile()'
p14771
tp14772
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14773
tp14774
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14775
tp14776
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p14777
tp14778
a(g4481
I53
g4482
S'return max_x + T.log(T.sum(T.exp(x - T.shape_padright(max_x, 1)), axis))'
p14779
tp14780
aasbsg85
g0
(g809
g5
Ntp14781
Rp14782
(dp14783
g552
(lp14784
g0
(g563
g5
Ntp14785
Rp14786
(dp14787
g16
I0
sg53
Nsg798
g801
sg807
(lp14788
sg14
S'auto_14830'
p14789
sg17
g0
(g18
g5
Ntp14790
Rp14791
(dp14792
g22
(lp14793
(lp14794
(g25
I306
g26
S'nade_train( * args[1:] )'
p14795
tp14796
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14797
tp14798
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14799
tp14800
a(g37
I36
g38
S'self.recompile()'
p14801
tp14802
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14803
tp14804
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14805
tp14806
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p14807
tp14808
aasbsg85
g0
(g809
g5
Ntp14809
Rp14810
(dp14811
g552
(lp14812
g0
(g563
g5
Ntp14813
Rp14814
(dp14815
g16
I0
sg53
Nsg798
g801
sg807
(lp14816
sg14
S'auto_14829'
p14817
sg17
g0
(g18
g5
Ntp14818
Rp14819
(dp14820
g22
(lp14821
(lp14822
(g25
I306
g26
S'nade_train( * args[1:] )'
p14823
tp14824
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14825
tp14826
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14827
tp14828
a(g37
I36
g38
S'self.recompile()'
p14829
tp14830
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14831
tp14832
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14833
tp14834
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p14835
tp14836
aasbsg85
g0
(g809
g5
Ntp14837
Rp14838
(dp14839
g552
(lp14840
g0
(g563
g5
Ntp14841
Rp14842
(dp14843
g16
I0
sg53
Nsg798
g801
sg807
(lp14844
sg14
S'auto_14828'
p14845
sg17
g0
(g18
g5
Ntp14846
Rp14847
(dp14848
g22
(lp14849
(lp14850
(g25
I306
g26
S'nade_train( * args[1:] )'
p14851
tp14852
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14853
tp14854
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14855
tp14856
a(g37
I36
g38
S'self.recompile()'
p14857
tp14858
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14859
tp14860
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14861
tp14862
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p14863
tp14864
aasbsg85
g0
(g809
g5
Ntp14865
Rp14866
(dp14867
g552
(lp14868
g8730
ag6115
asg798
g801
sg814
(lp14869
g14842
asg17
g0
(g18
g5
Ntp14870
Rp14871
(dp14872
g4093
(lp14873
g4096
asg1268
(lp14874
g1271
asbsg1272
(dp14875
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp14876
Rp14877
(dp14878
g78
(I00
I00
I00
tp14879
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp14880
Rp14881
(dp14882
g16
I0
sg53
Nsg798
g801
sg807
(lp14883
sg14
S'auto_14739'
p14884
sg17
g0
(g18
g5
Ntp14885
Rp14886
(dp14887
g22
(lp14888
(lp14889
(g25
I306
g26
S'nade_train( * args[1:] )'
p14890
tp14891
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p14892
tp14893
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p14894
tp14895
a(g37
I36
g38
S'self.recompile()'
p14896
tp14897
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14898
tp14899
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14900
tp14901
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p14902
tp14903
aasbsg85
g0
(g809
g5
Ntp14904
Rp14905
(dp14906
g552
(lp14907
g0
(g843
g5
Ntp14908
Rp14909
(dp14910
g14
S'auto_14738'
p14911
sg16
Nsg17
g0
(g18
g5
Ntp14912
Rp14913
(dp14914
g22
(lp14915
(lp14916
(g25
I306
g26
S'nade_train( * args[1:] )'
p14917
tp14918
a(g29
I221
g30
S'nade = nade_class(n_visible, options.units, l, options.n_components, nonlinearity=options.nonlinearity)'
p14919
tp14920
a(g37
I36
g38
S'self.recompile()'
p14921
tp14922
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p14923
tp14924
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p14925
tp14926
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p14927
tp14928
a(g4481
I43
g11267
S'return theano.tensor.constant(np.asarray(value, dtype=floatX))'
p14929
tp14930
aasg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp14931
Rp14932
(dp14933
g78
(tsg80
S'float64'
p14934
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp14935
sg883
g56
(g57
(I0
tp14936
g59
tp14937
Rp14938
(I1
(tg66
I00
S'\xb4\xbed\xc8\xf1g\xed?'
p14939
tp14940
bsbasg798
g801
sg814
(lp14941
g14881
asg17
g0
(g18
g5
Ntp14942
Rp14943
(dp14944
g4093
(lp14945
g4096
asg1268
(lp14946
g1271
asbsg1272
(dp14947
sg1274
g0
(g1387
g5
Ntp14948
Rp14949
(dp14950
g1391
(lp14951
sg1393
(lp14952
sg1395
(lp14953
I0
aI1
aI2
asg1397
g1398
sg1399
(tsg1401
(lp14954
g1403
asg1404
I01
sg1405
(g270
g270
g270
tp14955
sg1407
(dp14956
S'support_code_apply'
p14957
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14958
ssg1411
(dp14959
I0
(lp14960
I0
assg1414
(lp14961
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p14962
asbsbsg73
g0
(g74
g5
Ntp14963
Rp14964
(dp14965
g78
(I01
I01
I01
tp14966
sg80
g14934
sg82
g66
sg83
I00
sg53
Nsbsbasg798
g801
sg814
(lp14967
g14814
asg17
g0
(g18
g5
Ntp14968
Rp14969
(dp14970
g4093
(lp14971
g4096
asg1268
(lp14972
g1271
asbsg1272
(dp14973
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp14974
Rp14975
(dp14976
g78
(I00
I00
I00
tp14977
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag9038
asg798
g801
sg814
(lp14978
g14786
asg17
g0
(g18
g5
Ntp14979
Rp14980
(dp14981
g4093
(lp14982
g4096
asg1268
(lp14983
g1271
asbsg1272
(dp14984
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp14985
Rp14986
(dp14987
g78
(I00
I00
I00
tp14988
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag944
asg798
g801
sg814
(lp14989
g14756
asg17
g0
(g18
g5
Ntp14990
Rp14991
(dp14992
g4093
(lp14993
g4096
asg1268
(lp14994
g1271
asbsg1272
(dp14995
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp14996
Rp14997
(dp14998
g78
(I00
I00
I00
tp14999
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
g13353
tp15000
sg1797
(g11988
g12245
g12297
tp15001
sg0
(g563
g5
Ntp15002
Rp15003
(dp15004
g16
I0
sg53
Nsg798
g801
sg807
(lp15005
sg14
S'auto_15423'
p15006
sg17
g0
(g18
g5
Ntp15007
Rp15008
(dp15009
g22
(lp15010
sbsg85
g0
(g809
g5
Ntp15011
Rp15012
(dp15013
g552
(lp15014
g12566
ag8730
ag9038
asg798
g801
sg814
(lp15015
g15003
asg17
g0
(g18
g5
Ntp15016
Rp15017
(dp15018
g4093
(lp15019
g7835
asg1268
(lp15020
g4096
asbsg1272
(dp15021
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp15022
Rp15023
(dp15024
g78
(I00
I00
I00
tp15025
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
g13353
tp15026
sg0
(g563
g5
Ntp15027
Rp15028
(dp15029
g16
I0
sg53
Nsg798
g801
sg807
(lp15030
sg14
S'auto_14826'
p15031
sg17
g0
(g18
g5
Ntp15032
Rp15033
(dp15034
g22
(lp15035
(lp15036
(g25
I306
g26
S'nade_train( * args[1:] )'
p15037
tp15038
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15039
tp15040
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15041
tp15042
a(g37
I36
g38
S'self.recompile()'
p15043
tp15044
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15045
tp15046
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15047
tp15048
a(g874
I231
g875
S'Phi = -constantX(0.5) * T.sqr((Mu - T.shape_padright(x)) / Sigma) - T.log(Sigma) - constantX(0.5 * np.log(2 * np.pi))  # BxDxC'
p15049
tp15050
aasbsg85
g0
(g809
g5
Ntp15051
Rp15052
(dp15053
g552
(lp15054
g14298
asg798
g801
sg814
(lp15055
g15028
asg17
g0
(g18
g5
Ntp15056
Rp15057
(dp15058
g4093
(lp15059
g3663
asg1268
(lp15060
g1271
asbsg1272
(dp15061
sg1274
g0
(g1387
g5
Ntp15062
Rp15063
(dp15064
g1391
(lp15065
sg1393
(lp15066
sg1395
(lp15067
I0
aI1
aI2
asg1397
g1398
sg1399
(tsg1401
(lp15068
g1403
asg1404
I01
sg1405
(g270
g270
g270
tp15069
sg1407
(dp15070
S'support_code_apply'
p15071
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15072
ssg1411
(dp15073
I0
(lp15074
I0
assg1414
(lp15075
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15076
asbsbsg73
g0
(g74
g5
Ntp15077
Rp15078
(dp15079
g78
(I01
I01
I01
tp15080
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g11229
g11229
tp15081
sg6028
(g9330
g9875
g9927
tp15082
sg0
(g563
g5
Ntp15083
Rp15084
(dp15085
g16
I0
sg53
Nsg798
g801
sg807
(lp15086
sg14
S'auto_15394'
p15087
sg17
g0
(g18
g5
Ntp15088
Rp15089
(dp15090
g22
(lp15091
sbsg85
g0
(g809
g5
Ntp15092
Rp15093
(dp15094
g552
(lp15095
g14698
asg798
g801
sg814
(lp15096
g15084
asg17
g0
(g18
g5
Ntp15097
Rp15098
(dp15099
g4093
(lp15100
g7835
asg1268
(lp15101
g5660
asbsg1272
(dp15102
sg1274
g0
(g1387
g5
Ntp15103
Rp15104
(dp15105
g1391
(lp15106
sg1393
(lp15107
sg1395
(lp15108
I0
asg1397
g1398
sg1399
(tsg1401
(lp15109
g1403
asg1404
I01
sg1405
(g270
tp15110
sg1407
(dp15111
S'support_code_apply'
p15112
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15113
ssg1411
(dp15114
I0
(lp15115
I0
assg1414
(lp15116
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15117
asbsbsg73
g0
(g74
g5
Ntp15118
Rp15119
(dp15120
g78
(I01
tp15121
sg80
S'float64'
p15122
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
tp15123
sg1173
(tsg0
(g563
g5
Ntp15124
Rp15125
(dp15126
g16
I0
sg53
Nsg798
g801
sg807
(lp15127
sg14
S'auto_15593'
p15128
sg17
g0
(g18
g5
Ntp15129
Rp15130
(dp15131
g22
(lp15132
g10124
asbsg85
g0
(g809
g5
Ntp15133
Rp15134
(dp15135
g552
(lp15136
g8505
ag10174
asg798
g801
sg814
(lp15137
g15125
asg17
g0
(g18
g5
Ntp15138
Rp15139
(dp15140
g4093
(lp15141
g5660
asg1268
(lp15142
g8608
asbsg1272
(dp15143
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp15144
Rp15145
(dp15146
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg13846
(g1173
g7807
tp15147
sg1097
(g0
(g563
g5
Ntp15148
Rp15149
(dp15150
g14
S'auto_15166'
p15151
sg16
I0
sg17
g0
(g18
g5
Ntp15152
Rp15153
(dp15154
g22
(lp15155
sbsg53
Nsg85
g0
(g809
g5
Ntp15156
Rp15157
(dp15158
g552
(lp15159
g0
(g563
g5
Ntp15160
Rp15161
(dp15162
g14
S'auto_15161'
p15163
sg16
I0
sg17
g0
(g18
g5
Ntp15164
Rp15165
(dp15166
g22
(lp15167
sbsg53
Nsg85
g0
(g809
g5
Ntp15168
Rp15169
(dp15170
g552
(lp15171
g9642
ag0
(g843
g5
Ntp15172
Rp15173
(dp15174
g14
S'auto_15157'
p15175
sg16
Nsg17
g0
(g18
g5
Ntp15176
Rp15177
(dp15178
g22
(lp15179
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15180
Rp15181
(dp15182
g78
(tsg80
S'int8'
p15183
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp15184
g59
tp15185
Rp15186
(I1
(tg3031
I00
g7689
tp15187
bsbasg17
g0
(g18
g5
Ntp15188
Rp15189
sg814
(lp15190
g15161
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp15191
Rp15192
(dp15193
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag9576
ag9642
asg17
g0
(g18
g5
Ntp15194
Rp15195
sg814
(lp15196
g15149
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp15197
Rp15198
(dp15199
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg9497
tp15200
sg8704
(g7478
g9277
g13353
tp15201
sg975
(g9330
g9875
g9927
tp15202
sg3213
(g0
(g563
g5
Ntp15203
Rp15204
(dp15205
g14
S'auto_14873'
p15206
sg16
I0
sg17
g0
(g18
g5
Ntp15207
Rp15208
(dp15209
g22
(lp15210
sbsg53
Nsg85
g0
(g809
g5
Ntp15211
Rp15212
(dp15213
g552
(lp15214
g3242
asg17
g0
(g18
g5
Ntp15215
Rp15216
sg814
(lp15217
g15204
asg1274
g0
(g1275
g5
Ntp15218
Rp15219
(dp15220
g1279
I1
sbsbsg73
g1281
sbg7807
tp15221
sg10670
(g0
(g843
g5
Ntp15222
Rp15223
(dp15224
g14
S'auto_15711'
p15225
sg16
Nsg17
g0
(g18
g5
Ntp15226
Rp15227
(dp15228
g22
(lp15229
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15230
Rp15231
(dp15232
g78
(tsg80
S'int64'
p15233
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp15234
g59
tp15235
Rp15236
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p15237
tp15238
bsbtp15239
sg8814
(g7478
g9277
g13353
tp15240
sg0
(g563
g5
Ntp15241
Rp15242
(dp15243
g16
I0
sg53
Nsg798
g801
sg807
(lp15244
sg14
S'auto_14842'
p15245
sg17
g0
(g18
g5
Ntp15246
Rp15247
(dp15248
g22
(lp15249
(lp15250
(g25
I306
g26
S'nade_train( * args[1:] )'
p15251
tp15252
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15253
tp15254
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15255
tp15256
a(g37
I36
g38
S'self.recompile()'
p15257
tp15258
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15259
tp15260
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15261
tp15262
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p15263
tp15264
aasbsg85
g0
(g809
g5
Ntp15265
Rp15266
(dp15267
g552
(lp15268
g0
(g563
g5
Ntp15269
Rp15270
(dp15271
g16
I0
sg53
Nsg798
g801
sg807
(lp15272
sg14
S'auto_14841'
p15273
sg17
g0
(g18
g5
Ntp15274
Rp15275
(dp15276
g22
(lp15277
(lp15278
(g25
I306
g26
S'nade_train( * args[1:] )'
p15279
tp15280
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15281
tp15282
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15283
tp15284
a(g37
I36
g38
S'self.recompile()'
p15285
tp15286
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15287
tp15288
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15289
tp15290
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p15291
tp15292
aasbsg85
g0
(g809
g5
Ntp15293
Rp15294
(dp15295
g552
(lp15296
g891
ag14685
asg798
g801
sg814
(lp15297
g15270
asg17
g0
(g18
g5
Ntp15298
Rp15299
(dp15300
g4093
(lp15301
g5660
asg1268
(lp15302
g1271
asbsg1272
(dp15303
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp15304
Rp15305
(dp15306
g78
(I00
tp15307
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag9998
asg798
g801
sg814
(lp15308
g15242
asg17
g0
(g18
g5
Ntp15309
Rp15310
(dp15311
g4093
(lp15312
g5660
asg1268
(lp15313
g1271
asbsg1272
(dp15314
sg1274
g8988
sbsg73
g0
(g74
g5
Ntp15315
Rp15316
(dp15317
g78
(I00
tp15318
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
tp15319
sg0
(g563
g5
Ntp15320
Rp15321
(dp15322
g16
I0
sg53
Nsg798
g801
sg807
(lp15323
sg14
S'auto_14700'
p15324
sg17
g0
(g18
g5
Ntp15325
Rp15326
(dp15327
g22
(lp15328
g10210
asbsg85
g0
(g809
g5
Ntp15329
Rp15330
(dp15331
g552
(lp15332
g13846
asg798
g801
sg814
(lp15333
g15321
asg17
g0
(g18
g5
Ntp15334
Rp15335
(dp15336
g4093
(lp15337
g1270
asg1268
(lp15338
g1271
asbsg1272
(dp15339
sg1274
g12776
sbsg73
g12778
sb(g0
(g843
g5
Ntp15340
Rp15341
(dp15342
g14
S'auto_14882'
p15343
sg16
Nsg17
g0
(g18
g5
Ntp15344
Rp15345
(dp15346
g22
(lp15347
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15348
Rp15349
(dp15350
g78
(tsg80
S'int64'
p15351
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp15352
g59
tp15353
Rp15354
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p15355
tp15356
bsbtp15357
sg4029
(g7478
g9277
g13353
tp15358
sg3630
(g1173
g11211
g11229
tp15359
sg7039
(g7478
tp15360
sg0
(g563
g5
Ntp15361
Rp15362
(dp15363
g16
I0
sg53
Nsg798
g801
sg807
(lp15364
sg14
S'auto_14796'
p15365
sg17
g0
(g18
g5
Ntp15366
Rp15367
(dp15368
g22
(lp15369
(lp15370
(g25
I306
g26
S'nade_train( * args[1:] )'
p15371
tp15372
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15373
tp15374
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15375
tp15376
a(g37
I36
g38
S'self.recompile()'
p15377
tp15378
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15379
tp15380
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15381
tp15382
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p15383
tp15384
aasbsg85
g0
(g809
g5
Ntp15385
Rp15386
(dp15387
g552
(lp15388
g8550
ag13054
asg798
g801
sg814
(lp15389
g15362
asg17
g0
(g18
g5
Ntp15390
Rp15391
(dp15392
g4093
(lp15393
g7591
asg1268
(lp15394
g1271
asbsg1272
(dp15395
sg1274
g0
(g3357
g5
Ntp15396
Rp15397
(dp15398
g3361
(g1465
tp15399
sbsbsg73
g0
(g74
g5
Ntp15400
Rp15401
(dp15402
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp15403
Rp15404
(dp15405
g16
I0
sg53
Nsg798
g801
sg807
(lp15406
sg14
S'auto_15430'
p15407
sg17
g0
(g18
g5
Ntp15408
Rp15409
(dp15410
g22
(lp15411
g15036
asbsg85
g0
(g809
g5
Ntp15412
Rp15413
(dp15414
g552
(lp15415
g14326
asg798
g801
sg814
(lp15416
g15404
asg17
g0
(g18
g5
Ntp15417
Rp15418
(dp15419
g4093
(lp15420
g11350
asg1268
(lp15421
g3663
ag1271
asbsg1272
(dp15422
sg1274
g0
(g1387
g5
Ntp15423
Rp15424
(dp15425
g1391
(lp15426
sg1393
(lp15427
sg1395
(lp15428
I0
aI1
aI2
asg1397
g1398
sg1399
(tsg1401
(lp15429
g1403
asg1404
I01
sg1405
g15069
sg1407
(dp15430
S'support_code_apply'
p15431
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15432
ssg1411
(dp15433
I0
(lp15434
I0
assg1414
(lp15435
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15436
asbsbsg73
g0
(g74
g5
Ntp15437
Rp15438
(dp15439
g78
(I01
I01
I01
tp15440
sg80
g14351
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g11229
g11229
tp15441
sg14842
(g7478
g9277
g13353
tp15442
sg0
(g563
g5
Ntp15443
Rp15444
(dp15445
g16
I0
sg53
g936
sg798
g801
sg807
(lp15446
sg14
S'auto_15837'
p15447
sg17
g0
(g18
g5
Ntp15448
Rp15449
(dp15450
g22
(lp15451
sbsg85
g0
(g809
g5
Ntp15452
Rp15453
(dp15454
g552
(lp15455
g8704
asg798
g801
sg814
(lp15456
g15444
ag0
(g563
g5
Ntp15457
Rp15458
(dp15459
g16
I1
sg53
g10058
sg798
g801
sg807
(lp15460
sg14
S'auto_15838'
p15461
sg17
g0
(g18
g5
Ntp15462
Rp15463
(dp15464
g22
(lp15465
sbsg85
g15453
sg73
g0
(g74
g5
Ntp15466
Rp15467
(dp15468
g78
(I00
I00
tp15469
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp15470
Rp15471
(dp15472
g4093
(lp15473
g4041
asg1268
(lp15474
g4178
asbsg1272
(dp15475
sg1274
g0
(g10105
g5
Ntp15476
Rp15477
(dp15478
g1903
(I2
tp15479
sbsbsg73
g0
(g74
g5
Ntp15480
Rp15481
(dp15482
g78
g4311
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
tp15483
sg12364
(tsg4152
(g7478
g9277
g13353
tp15484
sg1181
(tsg9094
(g11988
g12245
g12297
tp15485
sg891
(g7478
tp15486
sg10202
(g0
(g843
g5
Ntp15487
Rp15488
(dp15489
g14
S'auto_15613'
p15490
sg16
Nsg17
g0
(g18
g5
Ntp15491
Rp15492
(dp15493
g22
(lp15494
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15495
Rp15496
(dp15497
g78
(tsg80
S'int64'
p15498
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp15499
g59
tp15500
Rp15501
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p15502
tp15503
bsbtp15504
sg0
(g563
g5
Ntp15505
Rp15506
(dp15507
g16
I0
sg53
Nsg798
g801
sg807
(lp15508
sg14
S'auto_15433'
p15509
sg17
g0
(g18
g5
Ntp15510
Rp15511
(dp15512
g22
(lp15513
sbsg85
g0
(g809
g5
Ntp15514
Rp15515
(dp15516
g552
(lp15517
g15404
asg798
g801
sg814
(lp15518
g15506
asg17
g0
(g18
g5
Ntp15519
Rp15520
(dp15521
g4093
(lp15522
g12732
asg1268
(lp15523
g3663
asbsg1272
(dp15524
sg1274
g7998
sbsg73
g0
(g74
g5
Ntp15525
Rp15526
(dp15527
g78
(I01
I01
I01
tp15528
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g11229
g11229
tp15529
sg1627
(tsg14814
(g7478
g9277
g13353
tp15530
sg0
(g563
g5
Ntp15531
Rp15532
(dp15533
g16
I0
sg53
Nsg798
g801
sg807
(lp15534
sg14
S'auto_14707'
p15535
sg17
g0
(g18
g5
Ntp15536
Rp15537
(dp15538
g22
(lp15539
(lp15540
(g25
I306
g26
S'nade_train( * args[1:] )'
p15541
tp15542
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15543
tp15544
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15545
tp15546
a(g37
I36
g38
S'self.recompile()'
p15547
tp15548
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15549
tp15550
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15551
tp15552
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p15553
tp15554
aasbsg85
g0
(g809
g5
Ntp15555
Rp15556
(dp15557
g552
(lp15558
g10594
ag13054
asg798
g801
sg814
(lp15559
g15532
asg17
g0
(g18
g5
Ntp15560
Rp15561
(dp15562
g4093
(lp15563
g7591
asg1268
(lp15564
g1271
asbsg1272
(dp15565
sg1274
g0
(g3357
g5
Ntp15566
Rp15567
(dp15568
g3361
(g1465
tp15569
sbsbsg73
g0
(g74
g5
Ntp15570
Rp15571
(dp15572
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg2827
(g11229
g13220
tp15573
sg7598
(g0
(g843
g5
Ntp15574
Rp15575
(dp15576
g14
S'auto_15698'
p15577
sg16
Nsg17
g0
(g18
g5
Ntp15578
Rp15579
(dp15580
g22
(lp15581
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15582
Rp15583
(dp15584
g78
(tsg80
S'int64'
p15585
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp15586
g59
tp15587
Rp15588
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p15589
tp15590
bsbtp15591
sg1806
(g11988
g12245
tp15592
sg0
(g563
g5
Ntp15593
Rp15594
(dp15595
g16
I0
sg53
Nsg798
g801
sg807
(lp15596
sg14
S'auto_15997'
p15597
sg17
g0
(g18
g5
Ntp15598
Rp15599
(dp15600
g22
(lp15601
sbsg85
g0
(g809
g5
Ntp15602
Rp15603
(dp15604
g552
(lp15605
g14170
asg798
g801
sg814
(lp15606
g15594
asg17
g0
(g18
g5
Ntp15607
Rp15608
(dp15609
g4093
(lp15610
g11350
asg1268
(lp15611
g3663
ag1271
asbsg1272
(dp15612
sg1274
g0
(g1387
g5
Ntp15613
Rp15614
(dp15615
g1391
(lp15616
sg1393
(lp15617
sg1395
(lp15618
I0
aI1
asg1397
g1398
sg1399
(tsg1401
(lp15619
g1403
asg1404
I01
sg1405
g14210
sg1407
(dp15620
S'support_code_apply'
p15621
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15622
ssg1411
(dp15623
I0
(lp15624
I0
assg1414
(lp15625
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15626
asbsbsg73
g13164
sb(g11229
g11229
tp15627
sg0
(g563
g5
Ntp15628
Rp15629
(dp15630
g16
I0
sg53
Nsg798
g801
sg807
(lp15631
sg14
S'auto_15583'
p15632
sg17
g0
(g18
g5
Ntp15633
Rp15634
(dp15635
g22
(lp15636
g12627
asbsg85
g0
(g809
g5
Ntp15637
Rp15638
(dp15639
g552
(lp15640
g8505
ag11446
asg798
g801
sg814
(lp15641
g15629
asg17
g0
(g18
g5
Ntp15642
Rp15643
(dp15644
g4093
(lp15645
g5660
asg1268
(lp15646
g8608
asbsg1272
(dp15647
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp15648
Rp15649
(dp15650
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg2813
(g1173
g11389
tp15651
sg0
(g563
g5
Ntp15652
Rp15653
(dp15654
g16
I0
sg53
Nsg798
g801
sg807
(lp15655
sg14
S'auto_15854'
p15656
sg17
g0
(g18
g5
Ntp15657
Rp15658
(dp15659
g22
(lp15660
sbsg85
g0
(g809
g5
Ntp15661
Rp15662
(dp15663
g552
(lp15664
g4134
ag13746
asg798
g801
sg814
(lp15665
g15653
asg17
g0
(g18
g5
Ntp15666
Rp15667
(dp15668
g4093
(lp15669
g5814
asg1268
(lp15670
g4178
asbsg1272
(dp15671
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp15672
Rp15673
(dp15674
g78
(I00
I00
tp15675
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
tp15676
sg5796
(g1173
g11389
tp15677
sg14786
(g7478
g9277
g13353
tp15678
sg3270
(g0
(g563
g5
Ntp15679
Rp15680
(dp15681
g14
S'auto_14871'
p15682
sg16
I0
sg17
g0
(g18
g5
Ntp15683
Rp15684
(dp15685
g22
(lp15686
sbsg53
Nsg85
g0
(g809
g5
Ntp15687
Rp15688
(dp15689
g552
(lp15690
g3260
asg17
g0
(g18
g5
Ntp15691
Rp15692
sg814
(lp15693
g15680
asg1274
g0
(g1275
g5
Ntp15694
Rp15695
(dp15696
g1279
I1
sbsbsg73
g1281
sbtp15697
sg0
(g563
g5
Ntp15698
Rp15699
(dp15700
g16
I0
sg53
Nsg798
g801
sg807
(lp15701
sg14
S'auto_14687'
p15702
sg17
g0
(g18
g5
Ntp15703
Rp15704
(dp15705
g22
(lp15706
g12827
asbsg85
g0
(g809
g5
Ntp15707
Rp15708
(dp15709
g552
(lp15710
g826
ag3000
asg798
g801
sg814
(lp15711
g15699
asg17
g0
(g18
g5
Ntp15712
Rp15713
(dp15714
g4093
(lp15715
g2086
asg1268
(lp15716
g1271
asbsg1272
(dp15717
sg1274
g14677
sbsg73
g0
(g74
g5
Ntp15718
Rp15719
(dp15720
g78
(I00
I00
tp15721
sg80
S'float64'
p15722
sg82
g66
sg83
I00
sg53
Nsbsb(g10037
g12858
tp15723
sg1815
(g11988
g12245
g11229
tp15724
sg0
(g563
g5
Ntp15725
Rp15726
(dp15727
g16
I0
sg53
Nsg798
g801
sg807
(lp15728
sg14
S'auto_15498'
p15729
sg17
g0
(g18
g5
Ntp15730
Rp15731
(dp15732
g22
(lp15733
sbsg85
g0
(g809
g5
Ntp15734
Rp15735
(dp15736
g552
(lp15737
g11300
asg798
g801
sg814
(lp15738
g15726
asg17
g0
(g18
g5
Ntp15739
Rp15740
(dp15741
g4093
(lp15742
g3663
asg1268
(lp15743
g8608
asbsg1272
(dp15744
sg1274
g0
(g1387
g5
Ntp15745
Rp15746
(dp15747
g1391
(lp15748
sg1393
(lp15749
sg1395
(lp15750
sg1397
g1398
sg1399
(tsg1401
(lp15751
g1403
asg1404
I01
sg1405
(tsg1407
(dp15752
S'support_code_apply'
p15753
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15754
ssg1411
(dp15755
I0
(lp15756
I0
assg1414
(lp15757
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15758
asbsbsg73
g0
(g74
g5
Ntp15759
Rp15760
(dp15761
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp15762
Rp15763
(dp15764
g16
I0
sg53
Nsg798
g801
sg807
(lp15765
sg14
S'auto_14799'
p15766
sg17
g0
(g18
g5
Ntp15767
Rp15768
(dp15769
g22
(lp15770
(lp15771
(g25
I306
g26
S'nade_train( * args[1:] )'
p15772
tp15773
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15774
tp15775
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15776
tp15777
a(g37
I36
g38
S'self.recompile()'
p15778
tp15779
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15780
tp15781
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15782
tp15783
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p15784
tp15785
aasbsg85
g0
(g809
g5
Ntp15786
Rp15787
(dp15788
g552
(lp15789
g8550
ag10241
asg798
g801
sg814
(lp15790
g15763
asg17
g0
(g18
g5
Ntp15791
Rp15792
(dp15793
g4093
(lp15794
g7591
asg1268
(lp15795
g1271
asbsg1272
(dp15796
sg1274
g0
(g3357
g5
Ntp15797
Rp15798
(dp15799
g3361
(g1465
tp15800
sbsbsg73
g0
(g74
g5
Ntp15801
Rp15802
(dp15803
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg10088
(g7478
g9277
tp15804
sg6693
(g7478
g9277
g13353
tp15805
sg0
(g563
g5
Ntp15806
Rp15807
(dp15808
g16
I0
sg53
Nsg798
g801
sg807
(lp15809
sg14
S'auto_14670'
p15810
sg17
g0
(g18
g5
Ntp15811
Rp15812
(dp15813
g22
(lp15814
g4553
asbsg85
g0
(g809
g5
Ntp15815
Rp15816
(dp15817
g552
(lp15818
g11247
asg798
g801
sg814
(lp15819
g15807
asg17
g0
(g18
g5
Ntp15820
Rp15821
(dp15822
g4093
(lp15823
g11350
asg1268
(lp15824
g1271
ag1271
asbsg1272
(dp15825
sg1274
g0
(g1387
g5
Ntp15826
Rp15827
(dp15828
g1391
(lp15829
sg1393
(lp15830
sg1395
(lp15831
I0
aI1
asg1397
g1398
sg1399
(tsg1401
(lp15832
g1403
asg1404
I01
sg1405
(g270
g270
tp15833
sg1407
(dp15834
S'support_code_apply'
p15835
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15836
ssg1411
(dp15837
I0
(lp15838
I0
assg1414
(lp15839
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15840
asbsbsg73
g4542
sb(g11229
g11229
tp15841
sg1031
(g7478
g9277
g13353
tp15842
sg817
(g1173
g11211
tp15843
sg9066
(g11988
g12245
g12297
tp15844
sg8550
(g0
(g843
g5
Ntp15845
Rp15846
(dp15847
g14
S'auto_15475'
p15848
sg16
Nsg17
g0
(g18
g5
Ntp15849
Rp15850
(dp15851
g22
(lp15852
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15853
Rp15854
(dp15855
g78
(tsg80
S'int64'
p15856
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp15857
g59
tp15858
Rp15859
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p15860
tp15861
bsbtp15862
sg0
(g843
g5
Ntp15863
Rp15864
(dp15865
g14
S'auto_15457'
p15866
sg16
Nsg17
g0
(g18
g5
Ntp15867
Rp15868
(dp15869
g22
(lp15870
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15871
Rp15872
(dp15873
g78
(tsg80
S'int8'
p15874
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp15875
sg883
g56
(g57
(I0
tp15876
g59
tp15877
Rp15878
(I1
(tg3031
I00
g8033
tp15879
bsb(tsg0
(g563
g5
Ntp15880
Rp15881
(dp15882
g16
I0
sg53
Nsg798
g801
sg807
(lp15883
sg14
S'auto_15579'
p15884
sg17
g0
(g18
g5
Ntp15885
Rp15886
(dp15887
g22
(lp15888
sbsg85
g0
(g809
g5
Ntp15889
Rp15890
(dp15891
g552
(lp15892
g11300
asg798
g801
sg814
(lp15893
g15881
asg17
g0
(g18
g5
Ntp15894
Rp15895
(dp15896
g4093
(lp15897
g3663
asg1268
(lp15898
g8608
asbsg1272
(dp15899
sg1274
g0
(g1387
g5
Ntp15900
Rp15901
(dp15902
g1391
(lp15903
sg1393
(lp15904
sg1395
(lp15905
sg1397
g1398
sg1399
(tsg1401
(lp15906
g1403
asg1404
I01
sg1405
(tsg1407
(dp15907
S'support_code_apply'
p15908
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15909
ssg1411
(dp15910
I0
(lp15911
I0
assg1414
(lp15912
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p15913
asbsbsg73
g0
(g74
g5
Ntp15914
Rp15915
(dp15916
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp15917
Rp15918
(dp15919
g16
I0
sg53
Nsg798
g801
sg807
(lp15920
sg14
S'auto_14800'
p15921
sg17
g0
(g18
g5
Ntp15922
Rp15923
(dp15924
g22
(lp15925
(lp15926
(g25
I306
g26
S'nade_train( * args[1:] )'
p15927
tp15928
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p15929
tp15930
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p15931
tp15932
a(g37
I36
g38
S'self.recompile()'
p15933
tp15934
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p15935
tp15936
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p15937
tp15938
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p15939
tp15940
aasbsg85
g0
(g809
g5
Ntp15941
Rp15942
(dp15943
g552
(lp15944
g10144
ag15763
asg798
g801
sg814
(lp15945
g15918
asg17
g0
(g18
g5
Ntp15946
Rp15947
(dp15948
g4093
(lp15949
g5660
asg1268
(lp15950
g1271
asbsg1272
(dp15951
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp15952
Rp15953
(dp15954
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg3242
(g0
(g563
g5
Ntp15955
Rp15956
(dp15957
g14
S'auto_14872'
p15958
sg16
I0
sg17
g0
(g18
g5
Ntp15959
Rp15960
(dp15961
g22
(lp15962
sbsg53
Nsg85
g0
(g809
g5
Ntp15963
Rp15964
(dp15965
g552
(lp15966
g3242
asg17
g0
(g18
g5
Ntp15967
Rp15968
sg814
(lp15969
g15956
asg1274
g0
(g1275
g5
Ntp15970
Rp15971
(dp15972
g1279
I0
sbsbsg73
g1281
sbg15204
g7807
tp15973
sg2933
(g1173
g11211
tp15974
sg9038
(g11988
g12245
g12297
tp15975
sg0
(g843
g5
Ntp15976
Rp15977
(dp15978
g14
S'auto_15494'
p15979
sg16
Nsg17
g0
(g18
g5
Ntp15980
Rp15981
(dp15982
g22
(lp15983
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp15984
Rp15985
(dp15986
g78
(tsg80
S'int8'
p15987
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp15988
sg883
g56
(g57
(I0
tp15989
g59
tp15990
Rp15991
(I1
(tg3031
I00
g8033
tp15992
bsb(tsg0
(g563
g5
Ntp15993
Rp15994
(dp15995
g16
I0
sg53
Nsg798
g801
sg807
(lp15996
sg14
S'auto_15469'
p15997
sg17
g0
(g18
g5
Ntp15998
Rp15999
(dp16000
g22
(lp16001
sbsg85
g0
(g809
g5
Ntp16002
Rp16003
(dp16004
g552
(lp16005
g10144
asg798
g801
sg814
(lp16006
g15994
asg17
g0
(g18
g5
Ntp16007
Rp16008
(dp16009
g4093
(lp16010
g7835
asg1268
(lp16011
g3663
asbsg1272
(dp16012
sg1274
g11354
sbsg73
g0
(g74
g5
Ntp16013
Rp16014
(dp16015
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg1089
(g1173
g7807
tp16016
sg0
(g563
g5
Ntp16017
Rp16018
(dp16019
g16
I0
sg53
Nsg798
g801
sg807
(lp16020
sg14
S'auto_14801'
p16021
sg17
g0
(g18
g5
Ntp16022
Rp16023
(dp16024
g22
(lp16025
(lp16026
(g25
I306
g26
S'nade_train( * args[1:] )'
p16027
tp16028
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p16029
tp16030
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p16031
tp16032
a(g37
I36
g38
S'self.recompile()'
p16033
tp16034
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p16035
tp16036
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p16037
tp16038
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p16039
tp16040
aasbsg85
g0
(g809
g5
Ntp16041
Rp16042
(dp16043
g552
(lp16044
g15918
ag15362
asg798
g801
sg814
(lp16045
g16018
asg17
g0
(g18
g5
Ntp16046
Rp16047
(dp16048
g4093
(lp16049
g5660
asg1268
(lp16050
g1271
asbsg1272
(dp16051
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp16052
Rp16053
(dp16054
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg14326
(tsg0
(g563
g5
Ntp16055
Rp16056
(dp16057
g16
I0
sg53
Nsg798
g801
sg807
(lp16058
sg14
S'auto_14818'
p16059
sg17
g0
(g18
g5
Ntp16060
Rp16061
(dp16062
g22
(lp16063
g1069
asbsg85
g0
(g809
g5
Ntp16064
Rp16065
(dp16066
g552
(lp16067
g13874
ag1319
asg798
g801
sg814
(lp16068
g16056
asg17
g0
(g18
g5
Ntp16069
Rp16070
(dp16071
g4093
(lp16072
g2086
asg1268
(lp16073
g1271
asbsg1272
(dp16074
sg1274
g14677
sbsg73
g0
(g74
g5
Ntp16075
Rp16076
(dp16077
g78
(I00
I00
tp16078
sg80
g3565
sg82
g66
sg83
I00
sg53
Nsbsb(g7743
g8098
tp16079
sg0
(g563
g5
Ntp16080
Rp16081
(dp16082
g16
I0
sg53
Nsg798
g801
sg807
(lp16083
sg14
S'auto_14690'
p16084
sg17
g0
(g18
g5
Ntp16085
Rp16086
(dp16087
g22
(lp16088
g2913
asbsg85
g0
(g809
g5
Ntp16089
Rp16090
(dp16091
g552
(lp16092
g2933
ag2962
asg798
g801
sg814
(lp16093
g16081
asg17
g0
(g18
g5
Ntp16094
Rp16095
(dp16096
g4093
(lp16097
g2086
asg1268
(lp16098
g1271
asbsg1272
(dp16099
sg1274
g14677
sbsg73
g0
(g74
g5
Ntp16100
Rp16101
(dp16102
g78
(I00
I00
tp16103
sg80
S'float64'
p16104
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g11389
tp16105
sg7158
(g1173
g11211
tp16106
sg14909
(tsg14881
(g11229
g11229
g11229
tp16107
sg984
(g11229
g11229
g11229
tp16108
sg14170
(tsg4143
(g7478
g9277
g11229
tp16109
sg12579
(tsg0
(g563
g5
Ntp16110
Rp16111
(dp16112
g16
I0
sg53
Nsg798
g801
sg807
(lp16113
sg14
S'auto_14691'
p16114
sg17
g0
(g18
g5
Ntp16115
Rp16116
(dp16117
g22
(lp16118
(lp16119
(g25
I306
g26
S'nade_train( * args[1:] )'
p16120
tp16121
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p16122
tp16123
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p16124
tp16125
a(g37
I36
g38
S'self.recompile()'
p16126
tp16127
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p16128
tp16129
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p16130
tp16131
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p16132
tp16133
aasbsg85
g0
(g809
g5
Ntp16134
Rp16135
(dp16136
g552
(lp16137
g2904
ag12819
asg798
g801
sg814
(lp16138
g16111
asg17
g0
(g18
g5
Ntp16139
Rp16140
(dp16141
g4093
(lp16142
g5770
asg1268
(lp16143
g1271
asbsg1272
(dp16144
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp16145
Rp16146
(dp16147
g78
(I00
I00
tp16148
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g11389
tp16149
sg7558
(g11229
tp16150
sg8674
(g7478
g9277
g13353
tp16151
sg1190
(tsg15270
(g7478
tp16152
sg15458
(g7478
g9277
tp16153
sg4125
(g7478
g9277
g13353
tp16154
sg2481
(g11229
g13452
g13470
tp16155
sg7807
(tsg3260
(g0
(g563
g5
Ntp16156
Rp16157
(dp16158
g14
S'auto_14870'
p16159
sg16
I0
sg17
g0
(g18
g5
Ntp16160
Rp16161
(dp16162
g22
(lp16163
sbsg53
Nsg85
g0
(g809
g5
Ntp16164
Rp16165
(dp16166
g552
(lp16167
g3260
asg17
g0
(g18
g5
Ntp16168
Rp16169
sg814
(lp16170
g16157
asg1274
g0
(g1275
g5
Ntp16171
Rp16172
(dp16173
g1279
I0
sbsbsg73
g1281
sbg15680
tp16174
sg0
(g563
g5
Ntp16175
Rp16176
(dp16177
g16
I0
sg53
Nsg798
g801
sg807
(lp16178
sg14
S'auto_14692'
p16179
sg17
g0
(g18
g5
Ntp16180
Rp16181
(dp16182
g22
(lp16183
(lp16184
(g25
I306
g26
S'nade_train( * args[1:] )'
p16185
tp16186
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p16187
tp16188
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p16189
tp16190
a(g37
I36
g38
S'self.recompile()'
p16191
tp16192
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p16193
tp16194
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p16195
tp16196
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p16197
tp16198
aasbsg85
g0
(g809
g5
Ntp16199
Rp16200
(dp16201
g552
(lp16202
g16111
ag2827
asg798
g801
sg814
(lp16203
g16176
asg17
g0
(g18
g5
Ntp16204
Rp16205
(dp16206
g4093
(lp16207
g5770
asg1268
(lp16208
g1271
asbsg1272
(dp16209
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp16210
Rp16211
(dp16212
g78
(I00
I00
tp16213
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g11389
tp16214
sg13716
(g7478
g9277
tp16215
sg8644
(g7478
g9277
tp16216
sg0
(g563
g5
Ntp16217
Rp16218
(dp16219
g16
I0
sg53
Nsg798
g801
sg807
(lp16220
sg14
S'auto_15578'
p16221
sg17
g0
(g18
g5
Ntp16222
Rp16223
(dp16224
g22
(lp16225
sbsg85
g0
(g809
g5
Ntp16226
Rp16227
(dp16228
g552
(lp16229
g10144
asg798
g801
sg814
(lp16230
g16218
asg17
g0
(g18
g5
Ntp16231
Rp16232
(dp16233
g4093
(lp16234
g7835
asg1268
(lp16235
g8608
asbsg1272
(dp16236
sg1274
g11354
sbsg73
g0
(g74
g5
Ntp16237
Rp16238
(dp16239
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp16240
Rp16241
(dp16242
g16
I0
sg53
Nsg798
g801
sg807
(lp16243
sg14
S'auto_15588'
p16244
sg17
g0
(g18
g5
Ntp16245
Rp16246
(dp16247
g22
(lp16248
sbsg85
g0
(g809
g5
Ntp16249
Rp16250
(dp16251
g552
(lp16252
g10144
asg798
g801
sg814
(lp16253
g16241
asg17
g0
(g18
g5
Ntp16254
Rp16255
(dp16256
g4093
(lp16257
g7835
asg1268
(lp16258
g8608
asbsg1272
(dp16259
sg1274
g11354
sbsg73
g0
(g74
g5
Ntp16260
Rp16261
(dp16262
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg7339
(g7478
g9277
g13353
tp16263
sg8522
(tsg0
(g563
g5
Ntp16264
Rp16265
(dp16266
g16
I0
sg53
Nsg798
g801
sg807
(lp16267
sg14
S'auto_16000'
p16268
sg17
g0
(g18
g5
Ntp16269
Rp16270
(dp16271
g22
(lp16272
sbsg85
g0
(g809
g5
Ntp16273
Rp16274
(dp16275
g552
(lp16276
g13153
asg798
g801
sg814
(lp16277
g16265
asg17
g0
(g18
g5
Ntp16278
Rp16279
(dp16280
g1451
g0
(g809
g5
Ntp16281
Rp16282
(dp16283
g552
(lp16284
g0
(g1456
g5
Ntp16285
Rp16286
(dp16287
g14
S'auto_16029'
p16288
sg16
Nsg17
g0
(g18
g5
Ntp16289
Rp16290
sg53
Nsg85
Nsg73
g12401
sbasg17
g0
(g18
g5
Ntp16291
Rp16292
sg814
(lp16293
g0
(g1456
g5
Ntp16294
Rp16295
(dp16296
g14
S'auto_16030'
p16297
sg16
I0
sg17
g0
(g18
g5
Ntp16298
Rp16299
sg53
Nsg85
g16282
sg73
g1931
sbasg1274
g12414
sbsg4093
(lp16300
g11350
asg1268
(lp16301
g3663
ag1271
asbsg1272
(dp16302
sg1274
g12426
sbsg73
g14114
sb(g11229
g11229
tp16303
sg1126
(g2298
g2280
g1165
tp16304
sg1695
(g0
(g843
g5
Ntp16305
Rp16306
(dp16307
g14
S'auto_15774'
p16308
sg16
Nsg17
g0
(g18
g5
Ntp16309
Rp16310
(dp16311
g22
(lp16312
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16313
Rp16314
(dp16315
g78
(tsg80
S'int64'
p16316
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16317
g59
tp16318
Rp16319
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p16320
tp16321
bsbtp16322
sg0
(g563
g5
Ntp16323
Rp16324
(dp16325
g16
I0
sg53
Nsg798
g801
sg807
(lp16326
sg14
S'auto_15843'
p16327
sg17
g0
(g18
g5
Ntp16328
Rp16329
(dp16330
g22
(lp16331
sbsg85
g0
(g809
g5
Ntp16332
Rp16333
(dp16334
g552
(lp16335
g8704
ag4143
asg798
g801
sg814
(lp16336
g16324
asg17
g0
(g18
g5
Ntp16337
Rp16338
(dp16339
g4093
(lp16340
g5814
asg1268
(lp16341
g4178
asbsg1272
(dp16342
sg1274
g4101
sbsg73
g0
(g74
g5
Ntp16343
Rp16344
(dp16345
g78
(I00
I00
I00
tp16346
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
g13353
tp16347
sg0
(g563
g5
Ntp16348
Rp16349
(dp16350
g16
I0
sg53
Nsg798
g801
sg807
(lp16351
sg14
S'auto_14693'
p16352
sg17
g0
(g18
g5
Ntp16353
Rp16354
(dp16355
g22
(lp16356
(lp16357
(g25
I306
g26
S'nade_train( * args[1:] )'
p16358
tp16359
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p16360
tp16361
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p16362
tp16363
a(g37
I36
g38
S'self.recompile()'
p16364
tp16365
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p16366
tp16367
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p16368
tp16369
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p16370
tp16371
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p16372
tp16373
aasbsg85
g0
(g809
g5
Ntp16374
Rp16375
(dp16376
g552
(lp16377
g12908
ag3022
asg798
g801
sg814
(lp16378
g16349
asg17
g0
(g18
g5
Ntp16379
Rp16380
(dp16381
g4093
(lp16382
g5814
asg1268
(lp16383
g1271
asbsg1272
(dp16384
sg1274
g13980
sbsg73
g0
(g74
g5
Ntp16385
Rp16386
(dp16387
g78
(I00
I00
tp16388
sg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsb(g1173
g11389
tp16389
sg11867
(g0
(g843
g5
Ntp16390
Rp16391
(dp16392
g14
S'auto_15508'
p16393
sg16
Nsg17
g0
(g18
g5
Ntp16394
Rp16395
(dp16396
g22
(lp16397
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16398
Rp16399
(dp16400
g78
(tsg80
S'int64'
p16401
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16402
g59
tp16403
Rp16404
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p16405
tp16406
bsbtp16407
sg10241
(tsg6894
(g7478
g9277
tp16408
sg14157
(tsg0
(g563
g5
Ntp16409
Rp16410
(dp16411
g16
I0
sg53
Nsg798
g801
sg807
(lp16412
sg14
S'auto_15846'
p16413
sg17
g0
(g18
g5
Ntp16414
Rp16415
(dp16416
g22
(lp16417
sbsg85
g0
(g809
g5
Ntp16418
Rp16419
(dp16420
g552
(lp16421
g16324
asg798
g801
sg814
(lp16422
g16410
asg17
g0
(g18
g5
Ntp16423
Rp16424
(dp16425
g4093
(lp16426
g5814
asg1268
(lp16427
g4178
asbsg1272
(dp16428
sg1274
g377
sbsg73
g0
(g74
g5
Ntp16429
Rp16430
(dp16431
g78
(I00
I00
I00
tp16432
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
g13353
tp16433
sg0
(g563
g5
Ntp16434
Rp16435
(dp16436
g16
I0
sg53
Nsg798
g801
sg807
(lp16437
sg14
S'auto_14742'
p16438
sg17
g0
(g18
g5
Ntp16439
Rp16440
(dp16441
g22
(lp16442
g11875
asbsg85
g0
(g809
g5
Ntp16443
Rp16444
(dp16445
g552
(lp16446
g1126
asg798
g801
sg814
(lp16447
g16435
asg17
g0
(g18
g5
Ntp16448
Rp16449
(dp16450
g4093
(lp16451
g1270
asg1268
(lp16452
g1271
asbsg1272
(dp16453
sg1274
g12776
sbsg73
g12778
sb(g0
(g843
g5
Ntp16454
Rp16455
(dp16456
g14
S'auto_15083'
p16457
sg16
Nsg17
g0
(g18
g5
Ntp16458
Rp16459
(dp16460
g22
(lp16461
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16462
Rp16463
(dp16464
g78
(tsg80
S'int64'
p16465
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16466
g59
tp16467
Rp16468
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p16469
tp16470
bsbtp16471
sg1678
(g0
(g563
g5
Ntp16472
Rp16473
(dp16474
g14
S'auto_14965'
p16475
sg16
I0
sg17
g0
(g18
g5
Ntp16476
Rp16477
(dp16478
g22
(lp16479
sbsg53
Nsg85
g0
(g809
g5
Ntp16480
Rp16481
(dp16482
g552
(lp16483
g0
(g563
g5
Ntp16484
Rp16485
(dp16486
g14
S'auto_14960'
p16487
sg16
I0
sg17
g0
(g18
g5
Ntp16488
Rp16489
(dp16490
g22
(lp16491
sbsg53
Nsg85
g0
(g809
g5
Ntp16492
Rp16493
(dp16494
g552
(lp16495
g10437
ag0
(g843
g5
Ntp16496
Rp16497
(dp16498
g14
S'auto_14956'
p16499
sg16
Nsg17
g0
(g18
g5
Ntp16500
Rp16501
(dp16502
g22
(lp16503
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16504
Rp16505
(dp16506
g78
(tsg80
S'int8'
p16507
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16508
g59
tp16509
Rp16510
(I1
(tg3031
I00
g7689
tp16511
bsbasg17
g0
(g18
g5
Ntp16512
Rp16513
sg814
(lp16514
g16485
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp16515
Rp16516
(dp16517
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag10371
ag10437
asg17
g0
(g18
g5
Ntp16518
Rp16519
sg814
(lp16520
g16473
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp16521
Rp16522
(dp16523
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg10292
tp16524
sg0
(g563
g5
Ntp16525
Rp16526
(dp16527
g16
I0
sg53
Nsg798
g801
sg807
(lp16528
sg14
S'auto_14694'
p16529
sg17
g0
(g18
g5
Ntp16530
Rp16531
(dp16532
g22
(lp16533
(lp16534
(g25
I306
g26
S'nade_train( * args[1:] )'
p16535
tp16536
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p16537
tp16538
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p16539
tp16540
a(g37
I36
g38
S'self.recompile()'
p16541
tp16542
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p16543
tp16544
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p16545
tp16546
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p16547
tp16548
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p16549
tp16550
aasbsg85
g0
(g809
g5
Ntp16551
Rp16552
(dp16553
g552
(lp16554
g12908
ag16349
asg798
g801
sg814
(lp16555
g16526
asg17
g0
(g18
g5
Ntp16556
Rp16557
(dp16558
g4093
(lp16559
g5814
asg1268
(lp16560
g1271
asbsg1272
(dp16561
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp16562
Rp16563
(dp16564
g78
(I00
I00
tp16565
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g11389
tp16566
sg0
(g563
g5
Ntp16567
Rp16568
(dp16569
g16
I0
sg53
Nsg798
g801
sg807
(lp16570
sg14
S'auto_14838'
p16571
sg17
g0
(g18
g5
Ntp16572
Rp16573
(dp16574
g22
(lp16575
g13724
asbsg85
g0
(g809
g5
Ntp16576
Rp16577
(dp16578
g552
(lp16579
g934
ag15653
asg798
g801
sg814
(lp16580
g16568
asg17
g0
(g18
g5
Ntp16581
Rp16582
(dp16583
g4093
(lp16584
g5814
asg1268
(lp16585
g1271
asbsg1272
(dp16586
sg1274
g8877
sbsg73
g0
(g74
g5
Ntp16587
Rp16588
(dp16589
g78
(I00
I00
tp16590
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
g9277
tp16591
sg0
(g843
g5
Ntp16592
Rp16593
(dp16594
g14
S'auto_16020'
p16595
sg16
Nsg17
g0
(g18
g5
Ntp16596
Rp16597
(dp16598
g22
(lp16599
sg878
Nsbsg53
Nsg73
g12435
sg807
(lp16600
sg883
g56
(g57
(I0
tp16601
g59
tp16602
Rp16603
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
p16604
tp16605
bsb(tsg3279
(g11229
g15680
tp16606
sg0
(g563
g5
Ntp16607
Rp16608
(dp16609
g16
I0
sg53
Nsg798
g801
sg807
(lp16610
sg14
S'auto_15525'
p16611
sg17
g0
(g18
g5
Ntp16612
Rp16613
(dp16614
g22
(lp16615
g13826
asbsg85
g0
(g809
g5
Ntp16616
Rp16617
(dp16618
g552
(lp16619
g13874
ag10202
asg798
g801
sg814
(lp16620
g16608
asg17
g0
(g18
g5
Ntp16621
Rp16622
(dp16623
g4093
(lp16624
g7824
asg1268
(lp16625
g14038
asbsg1272
(dp16626
sg1274
g0
(g1352
g5
Ntp16627
Rp16628
(dp16629
g1356
I2
sbsbsg73
g0
(g74
g5
Ntp16630
Rp16631
(dp16632
g78
(I00
I00
tp16633
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7743
g14049
tp16634
sg2435
(g0
(g843
g5
Ntp16635
Rp16636
(dp16637
g14
S'auto_15792'
p16638
sg16
Nsg17
g0
(g18
g5
Ntp16639
Rp16640
(dp16641
g22
(lp16642
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16643
Rp16644
(dp16645
g78
(tsg80
S'int64'
p16646
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16647
g59
tp16648
Rp16649
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p16650
tp16651
bsbtp16652
sg0
(g843
g5
Ntp16653
Rp16654
(dp16655
g14
S'auto_15575'
p16656
sg16
Nsg17
g0
(g18
g5
Ntp16657
Rp16658
(dp16659
g22
(lp16660
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16661
Rp16662
(dp16663
g78
(tsg80
S'int8'
p16664
sg82
g3031
sg83
I00
sg53
Nsbsg807
(lp16665
sg883
g56
(g57
(I0
tp16666
g59
tp16667
Rp16668
(I1
(tg3031
I00
g8033
tp16669
bsb(tsg1222
(g0
(g843
g5
Ntp16670
Rp16671
(dp16672
g14
S'auto_15287'
p16673
sg16
Nsg17
g0
(g18
g5
Ntp16674
Rp16675
(dp16676
g22
(lp16677
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16678
Rp16679
(dp16680
g78
(tsg80
S'int64'
p16681
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16682
g59
tp16683
Rp16684
(I1
(tg1286
I00
S'\x02\x00\x00\x00\x00\x00\x00\x00'
p16685
tp16686
bsbtp16687
sg0
(g563
g5
Ntp16688
Rp16689
(dp16690
g16
I0
sg53
Nsg798
g801
sg807
(lp16691
sg14
S'auto_15399'
p16692
sg17
g0
(g18
g5
Ntp16693
Rp16694
(dp16695
g4058
g4059
sg22
(lp16696
sbsg85
g0
(g809
g5
Ntp16697
Rp16698
(dp16699
g552
(lp16700
g12438
ag9998
asg798
g801
sg814
(lp16701
g16689
asg17
g0
(g18
g5
Ntp16702
Rp16703
(dp16704
g4093
(lp16705
g5814
asg1268
(lp16706
g5660
asbsg1272
(dp16707
sg1274
g8988
sbsg73
g0
(g74
g5
Ntp16708
Rp16709
(dp16710
g78
(I00
tp16711
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g7478
tp16712
sg0
(g563
g5
Ntp16713
Rp16714
(dp16715
g16
I0
sg53
Nsg798
g801
sg807
(lp16716
sg14
S'auto_15439'
p16717
sg17
g0
(g18
g5
Ntp16718
Rp16719
(dp16720
g22
(lp16721
sbsg85
g0
(g809
g5
Ntp16722
Rp16723
(dp16724
g552
(lp16725
g12800
ag0
(g843
g5
Ntp16726
Rp16727
(dp16728
g14
S'auto_15652'
p16729
sg16
Nsg17
g0
(g18
g5
Ntp16730
Rp16731
(dp16732
g22
(lp16733
g15036
asg878
g879
(g66
S'\x00\x00\x00\x00\x00\x00\xe0?'
p16734
tp16735
Rp16736
sbsg53
Nsg73
g15438
sg807
(lp16737
sg883
g56
(g57
(I0
tp16738
g59
tp16739
Rp16740
(I1
(I1
I1
I1
tp16741
g66
I00
S'\x00\x00\x00\x00\x00\x00\xe0?'
p16742
tp16743
bsbasg798
g801
sg814
(lp16744
g16714
asg17
g0
(g18
g5
Ntp16745
Rp16746
(dp16747
g1451
g0
(g809
g5
Ntp16748
Rp16749
(dp16750
g552
(lp16751
g0
(g1456
g5
Ntp16752
Rp16753
(dp16754
g14
S'auto_15661'
p16755
sg16
Nsg17
g0
(g18
g5
Ntp16756
Rp16757
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp16758
Rp16759
(dp16760
g14
S'auto_15662'
p16761
sg16
Nsg17
g0
(g18
g5
Ntp16762
Rp16763
sg53
Nsg85
Nsg73
g1931
sbasg17
g0
(g18
g5
Ntp16764
Rp16765
sg814
(lp16766
g0
(g1456
g5
Ntp16767
Rp16768
(dp16769
g14
S'auto_15663'
p16770
sg16
I0
sg17
g0
(g18
g5
Ntp16771
Rp16772
sg53
Nsg85
g16749
sg73
g1931
sbasg1274
g3184
sbsg4093
(lp16773
g11350
asg1268
(lp16774
g12732
ag1271
asbsg1272
(dp16775
sg1274
g5036
sbsg73
g1011
sb(g11229
g11229
g11229
tp16776
sg0
(g563
g5
Ntp16777
Rp16778
(dp16779
g16
I0
sg53
Nsg798
g801
sg807
(lp16780
sg14
S'auto_14695'
p16781
sg17
g0
(g18
g5
Ntp16782
Rp16783
(dp16784
g22
(lp16785
g2793
asbsg85
g0
(g809
g5
Ntp16786
Rp16787
(dp16788
g552
(lp16789
g16526
ag3213
asg798
g801
sg814
(lp16790
g16778
asg17
g0
(g18
g5
Ntp16791
Rp16792
(dp16793
g4093
(lp16794
g2086
asg1268
(lp16795
g1271
asbsg1272
(dp16796
sg1274
g14677
sbsg73
g0
(g74
g5
Ntp16797
Rp16798
(dp16799
g78
(I00
I00
tp16800
sg80
S'float64'
p16801
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g7807
tp16802
sg13613
(tsg0
(g563
g5
Ntp16803
Rp16804
(dp16805
g16
I0
sg53
Nsg798
g801
sg807
(lp16806
sg14
S'auto_15422'
p16807
sg17
g0
(g18
g5
Ntp16808
Rp16809
(dp16810
g22
(lp16811
sbsg85
g0
(g809
g5
Ntp16812
Rp16813
(dp16814
g552
(lp16815
g12579
asg798
g801
sg814
(lp16816
g16804
asg17
g0
(g18
g5
Ntp16817
Rp16818
(dp16819
g4093
(lp16820
g7835
asg1268
(lp16821
g4096
asbsg1272
(dp16822
sg1274
g0
(g1387
g5
Ntp16823
Rp16824
(dp16825
g1391
(lp16826
sg1393
(lp16827
sg1395
(lp16828
I0
aI1
aI2
asg1397
g1398
sg1399
(tsg1401
(lp16829
g1403
asg1404
I01
sg1405
(g270
g270
g270
tp16830
sg1407
(dp16831
S'support_code_apply'
p16832
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p16833
ssg1411
(dp16834
I0
(lp16835
I0
assg1414
(lp16836
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p16837
asbsbsg73
g0
(g74
g5
Ntp16838
Rp16839
(dp16840
g78
(I01
I01
I01
tp16841
sg80
g10530
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g11229
g11229
tp16842
sg10144
(tsg2443
(g1173
g9497
tp16843
sg0
(g563
g5
Ntp16844
Rp16845
(dp16846
g16
I0
sg53
Nsg798
g801
sg807
(lp16847
sg14
S'auto_15461'
p16848
sg17
g0
(g18
g5
Ntp16849
Rp16850
(dp16851
g22
(lp16852
sbsg85
g0
(g809
g5
Ntp16853
Rp16854
(dp16855
g552
(lp16856
g11300
asg798
g801
sg814
(lp16857
g16845
asg17
g0
(g18
g5
Ntp16858
Rp16859
(dp16860
g4093
(lp16861
g3663
asg1268
(lp16862
g8608
asbsg1272
(dp16863
sg1274
g0
(g1387
g5
Ntp16864
Rp16865
(dp16866
g1391
(lp16867
sg1393
(lp16868
sg1395
(lp16869
sg1397
g1398
sg1399
(tsg1401
(lp16870
g1403
asg1404
I01
sg1405
(tsg1407
(dp16871
S'support_code_apply'
p16872
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p16873
ssg1411
(dp16874
I0
(lp16875
I0
assg1414
(lp16876
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p16877
asbsbsg73
g0
(g74
g5
Ntp16878
Rp16879
(dp16880
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g563
g5
Ntp16881
Rp16882
(dp16883
g16
I0
sg53
Nsg798
g801
sg807
(lp16884
sg14
S'auto_14712'
p16885
sg17
g0
(g18
g5
Ntp16886
Rp16887
(dp16888
g22
(lp16889
(lp16890
(g25
I306
g26
S'nade_train( * args[1:] )'
p16891
tp16892
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p16893
tp16894
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p16895
tp16896
a(g37
I36
g38
S'self.recompile()'
p16897
tp16898
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p16899
tp16900
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p16901
tp16902
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p16903
tp16904
aasbsg85
g0
(g809
g5
Ntp16905
Rp16906
(dp16907
g552
(lp16908
g10144
ag14224
asg798
g801
sg814
(lp16909
g16882
asg17
g0
(g18
g5
Ntp16910
Rp16911
(dp16912
g4093
(lp16913
g5660
asg1268
(lp16914
g1271
asbsg1272
(dp16915
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp16916
Rp16917
(dp16918
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg1319
(g0
(g563
g5
Ntp16919
Rp16920
(dp16921
g14
S'auto_15322'
p16922
sg16
I0
sg17
g0
(g18
g5
Ntp16923
Rp16924
(dp16925
g22
(lp16926
sbsg53
Nsg85
g0
(g809
g5
Ntp16927
Rp16928
(dp16929
g552
(lp16930
g0
(g563
g5
Ntp16931
Rp16932
(dp16933
g14
S'auto_15317'
p16934
sg16
I0
sg17
g0
(g18
g5
Ntp16935
Rp16936
(dp16937
g22
(lp16938
sbsg53
Nsg85
g0
(g809
g5
Ntp16939
Rp16940
(dp16941
g552
(lp16942
g8243
ag0
(g843
g5
Ntp16943
Rp16944
(dp16945
g14
S'auto_15313'
p16946
sg16
Nsg17
g0
(g18
g5
Ntp16947
Rp16948
(dp16949
g22
(lp16950
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp16951
Rp16952
(dp16953
g78
(tsg80
S'int8'
p16954
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp16955
g59
tp16956
Rp16957
(I1
(tg3031
I00
g7689
tp16958
bsbasg17
g0
(g18
g5
Ntp16959
Rp16960
sg814
(lp16961
g16932
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp16962
Rp16963
(dp16964
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag8177
ag8243
asg17
g0
(g18
g5
Ntp16965
Rp16966
sg814
(lp16967
g16920
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp16968
Rp16969
(dp16970
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg8098
tp16971
sg14698
(tsg13904
(g1173
g7807
tp16972
sg0
(g563
g5
Ntp16973
Rp16974
(dp16975
g16
I0
sg53
Nsg798
g801
sg807
(lp16976
sg14
S'auto_14776'
p16977
sg17
g0
(g18
g5
Ntp16978
Rp16979
(dp16980
g22
(lp16981
g2452
asbsg85
g0
(g809
g5
Ntp16982
Rp16983
(dp16984
g552
(lp16985
g13874
ag1097
asg798
g801
sg814
(lp16986
g16974
asg17
g0
(g18
g5
Ntp16987
Rp16988
(dp16989
g4093
(lp16990
g2086
asg1268
(lp16991
g1271
asbsg1272
(dp16992
sg1274
g14677
sbsg73
g0
(g74
g5
Ntp16993
Rp16994
(dp16995
g78
(I00
I00
tp16996
sg80
g2665
sg82
g66
sg83
I00
sg53
Nsbsb(g7743
g9497
tp16997
sg0
(g563
g5
Ntp16998
Rp16999
(dp17000
g16
I0
sg53
Nsg798
g801
sg807
(lp17001
sg14
S'auto_15907'
p17002
sg17
g0
(g18
g5
Ntp17003
Rp17004
(dp17005
g22
(lp17006
sbsg85
g0
(g809
g5
Ntp17007
Rp17008
(dp17009
g552
(lp17010
g14103
ag2827
asg798
g801
sg814
(lp17011
g16999
asg17
g0
(g18
g5
Ntp17012
Rp17013
(dp17014
g4093
(lp17015
S'local_mul_specialize'
p17016
asg1268
(lp17017
g5770
asbsg1272
(dp17018
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp17019
Rp17020
(dp17021
g78
(I01
I00
tp17022
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g11229
g13220
tp17023
sg0
(g563
g5
Ntp17024
Rp17025
(dp17026
g16
I0
sg53
Nsg798
g801
sg807
(lp17027
sg14
S'auto_16493'
p17028
sg17
g0
(g18
g5
Ntp17029
Rp17030
(dp17031
g22
(lp17032
sbsg85
g0
(g809
g5
Ntp17033
Rp17034
(dp17035
g552
(lp17036
g13904
ag3022
asg798
g801
sg814
(lp17037
g17025
asg17
g0
(g18
g5
Ntp17038
Rp17039
(dp17040
g4093
(lp17041
g5814
asg1268
(lp17042
g5814
asbsg1272
(dp17043
sg1274
g0
(g318
g5
Ntp17044
Rp17045
(dp17046
g53
Nsg322
g0
(g1948
g5
Ntp17047
Rp17048
(dp17049
g552
(lp17050
g0
(g1456
g5
Ntp17051
Rp17052
(dp17053
g14
S'auto_16482'
p17054
sg16
Nsg17
g0
(g18
g5
Ntp17055
Rp17056
sg53
Nsg85
Nsg73
g1931
sbag0
(g1456
g5
Ntp17057
Rp17058
(dp17059
g14
S'auto_16483'
p17060
sg16
Nsg17
g0
(g18
g5
Ntp17061
Rp17062
(dp17063
g4821
g879
(g3031
g3059
tp17064
Rp17065
sbsg53
Nsg85
Nsg73
g3094
sbasg1965
I2
sg53
Nsg1966
(g1931
g3094
tp17066
sg814
(lp17067
g0
(g1456
g5
Ntp17068
Rp17069
(dp17070
g14
S'auto_16485'
p17071
sg16
I0
sg17
g0
(g18
g5
Ntp17072
Rp17073
(dp17074
g22
g3479
sbsg53
Nsg85
g0
(g809
g5
Ntp17075
Rp17076
(dp17077
g552
(lp17078
g17052
ag0
(g1456
g5
Ntp17079
Rp17080
(dp17081
g14
S'auto_16484'
p17082
sg16
I0
sg17
g0
(g18
g5
Ntp17083
Rp17084
(dp17085
g22
g3506
sbsg53
Nsg85
g0
(g809
g5
Ntp17086
Rp17087
(dp17088
g552
(lp17089
g17052
ag17058
asg17
g0
(g18
g5
Ntp17090
Rp17091
sg814
(lp17092
g17080
asg1274
g3174
sbsg73
g3178
sbasg17
g0
(g18
g5
Ntp17093
Rp17094
sg814
(lp17095
g17069
asg1274
g3184
sbsg73
g1931
sbasg1999
S'{\nnpy_bool V%(id)s_tmp1;\nV%(id)s_tmp1 = (%(i0)s > %(i1)s);\n%(o0)s = %(i0)s * V%(id)s_tmp1;\n}\n'
p17096
sg2001
(g1931
tp17097
sg2007
(lp17098
S'%(nodename)s_subnode0'
p17099
aS'%(nodename)s_subnode1'
p17100
asg2011
I1
sbsg330
(dp17101
sg332
Nsg333
g0
(g334
g5
Ntp17102
Rp17103
(dp17104
g338
Nsg339
(dp17105
sbsg341
I00
sbsbsg73
g0
(g74
g5
Ntp17106
Rp17107
(dp17108
g78
(I00
I00
tp17109
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsb(g1173
g7807
tp17110
sg2904
(g1173
g11389
tp17111
sg8730
(g7478
g9277
g13353
tp17112
sg0
(g563
g5
Ntp17113
Rp17114
(dp17115
g16
I0
sg53
Nsg798
g801
sg807
(lp17116
sg14
S'auto_14713'
p17117
sg17
g0
(g18
g5
Ntp17118
Rp17119
(dp17120
g22
(lp17121
(lp17122
(g25
I306
g26
S'nade_train( * args[1:] )'
p17123
tp17124
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p17125
tp17126
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p17127
tp17128
a(g37
I36
g38
S'self.recompile()'
p17129
tp17130
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p17131
tp17132
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p17133
tp17134
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p17135
tp17136
aasbsg85
g0
(g809
g5
Ntp17137
Rp17138
(dp17139
g552
(lp17140
g16882
ag15532
asg798
g801
sg814
(lp17141
g17114
asg17
g0
(g18
g5
Ntp17142
Rp17143
(dp17144
g4093
(lp17145
g5660
asg1268
(lp17146
g1271
asbsg1272
(dp17147
sg1274
g5036
sbsg73
g0
(g74
g5
Ntp17148
Rp17149
(dp17150
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(tsg0
(g843
g5
Ntp17151
Rp17152
(dp17153
g14
S'auto_15390'
p17154
sg16
Nsg17
g0
(g18
g5
Ntp17155
Rp17156
(dp17157
g22
(lp17158
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp17159
Rp17160
(dp17161
g78
(tsg80
g15122
sg82
g66
sg83
I00
sg53
Nsbsg807
(lp17162
sg883
g56
(g57
(I0
tp17163
g59
tp17164
Rp17165
(I1
(tg66
I00
S'\x00\x00\x00\x00\x00\x005@'
p17166
tp17167
bsb(tsg13943
(g1173
g7807
tp17168
sg2473
(g9330
g9875
g9927
tp17169
sg8931
(g9330
g9875
g9927
tp17170
sg16727
(g11229
g11229
g11229
tp17171
sg920
(g7478
g9277
tp17172
sg960
(g9330
g9875
g9927
tp17173
sg8842
(g7478
g9277
g13353
tp17174
sg13874
(g1173
g7807
tp17175
sg6797
(g7478
g9277
g13353
tp17176
sg10174
(tsg10594
(g0
(g843
g5
Ntp17177
Rp17178
(dp17179
g14
S'auto_15615'
p17180
sg16
Nsg17
g0
(g18
g5
Ntp17181
Rp17182
(dp17183
g22
(lp17184
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp17185
Rp17186
(dp17187
g78
(tsg80
S'int64'
p17188
sg82
g1286
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp17189
g59
tp17190
Rp17191
(I1
(tg1286
I00
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p17192
tp17193
bsbtp17194
sg0
(g563
g5
Ntp17195
Rp17196
(dp17197
g16
I0
sg53
Nsg798
g801
sg807
(lp17198
sg14
S'auto_14787'
p17199
sg17
g0
(g18
g5
Ntp17200
Rp17201
(dp17202
g22
(lp17203
g7606
asbsg85
g0
(g809
g5
Ntp17204
Rp17205
(dp17206
g552
(lp17207
g8550
ag13240
ag13268
asg798
g801
sg814
(lp17208
g17196
asg17
g0
(g18
g5
Ntp17209
Rp17210
(dp17211
g4093
(lp17212
g7591
asg1268
(lp17213
g1271
asbsg1272
(dp17214
sg1274
g0
(g3357
g5
Ntp17215
Rp17216
(dp17217
g3361
(g13343
(g1465
g1465
Ntp17218
Rp17219
tp17220
sbsbsg73
g0
(g74
g5
Ntp17221
Rp17222
(dp17223
g78
(I00
tp17224
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsb(g14513
tp17225
ssS'lscalar_one'
p17226
g11229
sS'shape_of_reverse_index'
p17227
(dp17228
g9497
g5108
((lp17229
g2443
ag1097
ag16974
atp17230
Rp17231
sg17114
g5108
((lp17232
tp17233
Rp17234
sg1566
g5108
((lp17235
g1581
ag1590
atp17236
Rp17237
sg9980
g5108
((lp17238
g9379
atp17239
Rp17240
sg16804
g5108
((lp17241
tp17242
Rp17243
sg10657
g5108
((lp17244
tp17245
Rp17246
sg16689
g5108
((lp17247
tp17248
Rp17249
sg15846
g5108
((lp17250
g8550
atp17251
Rp17252
sg7478
g5108
((lp17253
g15003
ag15653
ag6894
ag6464
ag920
ag8674
ag6797
ag15270
ag8704
ag4125
ag8730
ag10056
ag1031
ag952
ag8644
ag4143
ag7339
ag4134
ag14842
ag8842
ag7294
ag8614
ag8717
ag14814
ag4152
ag8814
ag934
ag16568
ag13746
ag14786
ag16689
ag8786
ag13688
ag16410
ag4029
ag10088
ag6693
ag7039
ag8758
ag891
ag15458
ag15444
ag944
ag14756
ag16324
ag4762
ag4161
ag13716
ag12438
ag15242
atp17254
Rp17255
sg15028
g5108
((lp17256
tp17257
Rp17258
sg6115
g5108
((lp17259
tp17260
Rp17261
sg16568
g5108
((lp17262
tp17263
Rp17264
sg14126
g5108
((lp17265
g1514
atp17266
Rp17267
sg14369
g5108
((lp17268
g7514
atp17269
Rp17270
sg2280
g5108
((lp17271
g1155
ag1126
atp17272
Rp17273
sg6203
g5108
((lp17274
tp17275
Rp17276
sg13135
g5108
((lp17277
g13115
atp17278
Rp17279
sg12463
g5108
((lp17280
tp17281
Rp17282
sg11172
g5108
((lp17283
tp17284
Rp17285
sg15977
g5108
((lp17286
tp17287
Rp17288
sg2298
g5108
((lp17289
g1155
ag1126
atp17290
Rp17291
sg16435
g5108
((lp17292
tp17293
Rp17294
sg8522
g5108
((lp17295
tp17296
Rp17297
sg11446
g5108
((lp17298
tp17299
Rp17300
sg10721
g5108
((lp17301
g10657
atp17302
Rp17303
sg13874
g5108
((lp17304
tp17305
Rp17306
sg9366
g5108
((lp17307
tp17308
Rp17309
sg15444
g5108
((lp17310
tp17311
Rp17312
sg16593
g5108
((lp17313
tp17314
Rp17315
sg16410
g5108
((lp17316
tp17317
Rp17318
sg13196
g5108
((lp17319
tp17320
Rp17321
sg1165
g5108
((lp17322
g1155
ag1126
atp17323
Rp17324
sg15881
g5108
((lp17325
tp17326
Rp17327
sg6397
g5108
((lp17328
tp17329
Rp17330
sg8477
g5108
((lp17331
tp17332
Rp17333
sg14224
g5108
((lp17334
tp17335
Rp17336
sg12619
g5108
((lp17337
tp17338
Rp17339
sg13296
g5108
((lp17340
tp17341
Rp17342
sg5796
g5108
((lp17343
tp17344
Rp17345
sg15204
g5108
((lp17346
g3242
ag3213
atp17347
Rp17348
sg12755
g5108
((lp17349
tp17350
Rp17351
sg8704
g5108
((lp17352
tp17353
Rp17354
sg7779
g5108
((lp17355
tp17356
Rp17357
sg14656
g5108
((lp17358
tp17359
Rp17360
sg16455
g5108
((lp17361
g16435
atp17362
Rp17363
sg12659
g5108
((lp17364
g1762
ag1733
atp17365
Rp17366
sg9927
g5108
((lp17367
g6115
ag9205
ag6028
ag2473
ag975
ag8903
ag960
ag8931
atp17368
Rp17369
sg12351
g5108
((lp17370
tp17371
Rp17372
sg13818
g5108
((lp17373
tp17374
Rp17375
sg16920
g5108
((lp17376
g1319
atp17377
Rp17378
sg14049
g5108
((lp17379
g13818
ag16608
atp17380
Rp17381
sg13470
g5108
((lp17382
g2510
ag2481
atp17383
Rp17384
sg11988
g5108
((lp17385
g6260
ag1725
ag1815
ag9038
ag9094
ag1806
ag1797
ag9066
ag9122
atp17386
Rp17387
sg12895
g5108
((lp17388
tp17389
Rp17390
sg16056
g5108
((lp17391
tp17392
Rp17393
sg15726
g5108
((lp17394
tp17395
Rp17396
sg13353
g5108
((lp17397
g6464
ag8674
ag8704
ag8730
ag8758
ag1031
ag952
ag15003
ag7339
ag14842
ag8842
ag8717
ag14814
ag4152
ag8814
ag14786
ag8786
ag6797
ag16410
ag4029
ag6693
ag4125
ag14756
ag16324
ag7294
atp17398
Rp17399
sg12566
g5108
((lp17400
tp17401
Rp17402
sg13007
g5108
((lp17403
tp17404
Rp17405
sg10116
g5108
((lp17406
tp17407
Rp17408
sg11426
g5108
((lp17409
g3596
ag3567
atp17410
Rp17411
sg15149
g5108
((lp17412
g1097
atp17413
Rp17414
sg13407
g5108
((lp17415
tp17416
Rp17417
sg12245
g5108
((lp17418
g6260
ag1725
ag1815
ag9038
ag9094
ag1806
ag1797
ag9066
ag9122
atp17419
Rp17420
sg12514
g5108
((lp17421
tp17422
Rp17423
sg16218
g5108
((lp17424
tp17425
Rp17426
sg7294
g5108
((lp17427
tp17428
Rp17429
sg15321
g5108
((lp17430
tp17431
Rp17432
sg10520
g5108
((lp17433
tp17434
Rp17435
sg16778
g5108
((lp17436
tp17437
Rp17438
sg11811
g5108
((lp17439
tp17440
Rp17441
sg15362
g5108
((lp17442
tp17443
Rp17444
sg16526
g5108
((lp17445
tp17446
Rp17447
sg9277
g5108
((lp17448
g15653
ag6894
ag6464
ag920
ag8674
ag6797
ag8704
ag4125
ag8730
ag10056
ag1031
ag952
ag8717
ag4143
ag7339
ag4134
ag14842
ag8842
ag8614
ag15003
ag14814
ag4152
ag8814
ag934
ag16568
ag13746
ag14786
ag8786
ag13688
ag16410
ag4029
ag10088
ag6693
ag8644
ag8758
ag15458
ag15444
ag944
ag7294
ag16324
ag4161
ag13716
ag14756
atp17449
Rp17450
sg13489
g5108
((lp17451
tp17452
Rp17453
sg13525
g5108
((lp17454
tp17455
Rp17456
sg13562
g5108
((lp17457
tp17458
Rp17459
sg13657
g5108
((lp17460
tp17461
Rp17462
sg16306
g5108
((lp17463
g1695
atp17464
Rp17465
sg11281
g5108
((lp17466
g1598
atp17467
Rp17468
sg14513
g5108
((lp17469
g17196
atp17470
Rp17471
sg16081
g5108
((lp17472
tp17473
Rp17474
sg1557
g5108
((lp17475
g1581
ag1590
atp17476
Rp17477
sg12877
g5108
((lp17478
g7779
atp17479
Rp17480
sg15763
g5108
((lp17481
tp17482
Rp17483
sg14144
g5108
((lp17484
tp17485
Rp17486
sg12677
g5108
((lp17487
g1762
ag1733
atp17488
Rp17489
sg12297
g5108
((lp17490
g6260
ag1725
ag9094
ag9038
ag1797
ag9066
ag9122
atp17491
Rp17492
sg13115
g5108
((lp17493
tp17494
Rp17495
sg7514
g5108
((lp17496
tp17497
Rp17498
sg11300
g5108
((lp17499
tp17500
Rp17501
sg10538
g5108
((lp17502
tp17503
Rp17504
sg1181
g5108
((lp17505
g1205
ag1214
atp17506
Rp17507
sg13452
g5108
((lp17508
g2510
ag2481
atp17509
Rp17510
sg13026
g5108
((lp17511
tp17512
Rp17513
sg11969
g5108
((lp17514
g4968
ag11930
ag826
atp17515
Rp17516
sg6693
g5108
((lp17517
tp17518
Rp17519
sg6028
g5108
((lp17520
tp17521
Rp17522
sg10174
g5108
((lp17523
tp17524
Rp17525
sg13795
g5108
((lp17526
tp17527
Rp17528
sg11669
g5108
((lp17529
g14266
atp17530
Rp17531
sg16473
g5108
((lp17532
g1678
atp17533
Rp17534
sg11030
g5108
((lp17535
g13319
atp17536
Rp17537
sg15003
g5108
((lp17538
tp17539
Rp17540
sg4029
g5108
((lp17541
tp17542
Rp17543
sg11408
g5108
((lp17544
g3596
ag3567
atp17545
Rp17546
sg7039
g5108
((lp17547
tp17548
Rp17549
sg16157
g5108
((lp17550
g3260
atp17551
Rp17552
sg16265
g5108
((lp17553
tp17554
Rp17555
sg15506
g5108
((lp17556
tp17557
Rp17558
sg16636
g5108
((lp17559
g2435
atp17560
Rp17561
sg9094
g5108
((lp17562
tp17563
Rp17564
sg16974
g5108
((lp17565
tp17566
Rp17567
sg16671
g5108
((lp17568
g1222
atp17569
Rp17570
sg15680
g5108
((lp17571
g3260
ag3279
ag3270
atp17572
Rp17573
sg6464
g5108
((lp17574
tp17575
Rp17576
sg9330
g5108
((lp17577
g6115
ag9205
ag6028
ag2473
ag975
ag8903
ag960
ag8931
atp17578
Rp17579
sg9875
g5108
((lp17580
g6115
ag9205
ag6028
ag2473
ag975
ag8903
ag960
ag8931
atp17581
Rp17582
sg15594
g5108
((lp17583
tp17584
Rp17585
sg15629
g5108
((lp17586
tp17587
Rp17588
sg17178
g5108
((lp17589
g10594
atp17590
Rp17591
sg14786
g5108
((lp17592
tp17593
Rp17594
sg15699
g5108
((lp17595
tp17596
Rp17597
sg16845
g5108
((lp17598
tp17599
Rp17600
sg1190
g5108
((lp17601
g1205
ag1214
atp17602
Rp17603
sg8903
g5108
((lp17604
tp17605
Rp17606
sg10088
g5108
((lp17607
tp17608
Rp17609
sg16241
g5108
((lp17610
tp17611
Rp17612
sg8098
g5108
((lp17613
g16056
ag1319
ag1060
atp17614
Rp17615
sg11488
g5108
((lp17616
tp17617
Rp17618
sg1173
g5108
((lp17619
g2784
ag16111
ag13846
ag817
ag5751
ag16176
ag1060
ag5910
ag5796
ag16349
ag11172
ag16778
ag16526
ag12895
ag2443
ag2813
ag16081
ag13904
ag2890
ag17025
ag1687
ag7203
ag13943
ag805
ag3630
ag12908
ag1089
ag2933
ag13874
ag7158
ag2904
atp17620
Rp17621
sg7743
g5108
((lp17622
g16056
ag13818
ag16608
ag16974
ag14656
atp17623
Rp17624
sg1251
g5108
((lp17625
g1205
ag1214
atp17626
Rp17627
sg15575
g5108
((lp17628
g7598
atp17629
Rp17630
sg10881
g5108
((lp17631
g13657
atp17632
Rp17633
sg15994
g5108
((lp17634
tp17635
Rp17636
sg5910
g5108
((lp17637
tp17638
Rp17639
sg16018
g5108
((lp17640
tp17641
Rp17642
sg12696
g5108
((lp17643
tp17644
Rp17645
sg13600
g5108
((lp17646
tp17647
Rp17648
sg7807
g5108
((lp17649
g17025
ag2784
ag13943
ag13846
ag1089
ag3242
ag16778
ag3213
ag13904
ag13874
ag5910
atp17650
Rp17651
sg13688
g5108
((lp17652
tp17653
Rp17654
sg7158
g5108
((lp17655
tp17656
Rp17657
sg14756
g5108
((lp17658
tp17659
Rp17660
sg15488
g5108
((lp17661
g10202
atp17662
Rp17663
sg5642
g5108
((lp17664
tp17665
Rp17666
sg13432
g5108
((lp17667
g2322
atp17668
Rp17669
sg15532
g5108
((lp17670
tp17671
Rp17672
sg11389
g5108
((lp17673
g12895
ag5796
ag5751
ag16111
ag16081
ag16526
ag12908
ag16176
ag2962
ag2813
ag2890
ag2904
ag16349
atp17674
Rp17675
sg6797
g5108
((lp17676
tp17677
Rp17678
sg15404
g5108
((lp17679
tp17680
Rp17681
sg5751
g5108
((lp17682
tp17683
Rp17684
sg13220
g5108
((lp17685
g16999
ag5796
ag2856
ag12908
ag2813
ag2827
atp17686
Rp17687
sg13319
g5108
((lp17688
tp17689
Rp17690
sg16176
g5108
((lp17691
tp17692
Rp17693
sg6894
g5108
((lp17694
tp17695
Rp17696
sg11229
g5108
((lp17697
g14881
ag15028
ag3567
ag1008
ag944
ag12566
ag16804
ag845
ag16714
ag16999
ag15506
ag14103
ag1733
ag11172
ag4539
ag15807
ag12800
ag13489
ag4143
ag15594
ag1815
ag14144
ag13153
ag2827
ag15084
ag7558
ag12696
ag3022
ag15404
ag14685
ag16265
ag16727
ag3279
ag984
ag3630
ag2481
atp17698
Rp17699
sg7339
g5108
((lp17700
tp17701
Rp17702
sg16714
g5108
((lp17703
tp17704
Rp17705
sg16999
g5108
((lp17706
tp17707
Rp17708
sg10037
g5108
((lp17709
g826
ag836
ag11930
ag4968
ag9998
ag15699
ag12819
atp17710
Rp17711
sg6260
g5108
((lp17712
tp17713
Rp17714
sg10566
g5108
((lp17715
tp17716
Rp17717
sg8614
g5108
((lp17718
tp17719
Rp17720
sg15956
g5108
((lp17721
g3242
atp17722
Rp17723
sg8717
g5108
((lp17724
tp17725
Rp17726
sg7203
g5108
((lp17727
tp17728
Rp17729
sg11366
g5108
((lp17730
tp17731
Rp17732
sg15125
g5108
((lp17733
tp17734
Rp17735
sg16654
g5108
((lp17736
tp17737
Rp17738
sg12858
g5108
((lp17739
g3000
ag12819
ag15699
atp17740
Rp17741
sg11839
g5108
((lp17742
tp17743
Rp17744
sg16608
g5108
((lp17745
tp17746
Rp17747
sg14266
g5108
((lp17748
tp17749
Rp17750
sg11525
g5108
((lp17751
g9366
atp17752
Rp17753
sg16391
g5108
((lp17754
g11867
atp17755
Rp17756
sg10292
g5108
((lp17757
g1678
ag1687
ag14656
atp17758
Rp17759
sg15223
g5108
((lp17760
g10670
atp17761
Rp17762
sg13096
g5108
((lp17763
g2962
atp17764
Rp17765
sg11211
g5108
((lp17766
g7203
ag2933
ag805
ag11172
ag7158
ag817
ag3630
atp17767
Rp17768
sg2933
g5108
((lp17769
tp17770
Rp17771
sg15807
g5108
((lp17772
tp17773
Rp17774
sg15341
g5108
((lp17775
g15321
atp17776
Rp17777
sg12782
g5108
((lp17778
g12755
atp17779
Rp17780
sg15084
g5108
((lp17781
tp17782
Rp17783
sg17025
g5108
((lp17784
tp17785
Rp17786
sg15864
g5108
((lp17787
tp17788
Rp17789
sg17152
g5108
((lp17790
tp17791
Rp17792
sg0
(g563
g5
Ntp17793
Rp17794
(dp17795
g14
S'auto_15569'
p17796
sg16
I0
sg17
g0
(g18
g5
Ntp17797
Rp17798
(dp17799
g22
(lp17800
sbsg53
Nsg85
g0
(g809
g5
Ntp17801
Rp17802
(dp17803
g552
(lp17804
g0
(g563
g5
Ntp17805
Rp17806
(dp17807
g14
S'auto_15564'
p17808
sg16
I0
sg17
g0
(g18
g5
Ntp17809
Rp17810
(dp17811
g22
(lp17812
sbsg53
Nsg85
g0
(g809
g5
Ntp17813
Rp17814
(dp17815
g552
(lp17816
g0
(g563
g5
Ntp17817
Rp17818
(dp17819
g14
S'auto_15533'
p17820
sg16
I0
sg17
g0
(g18
g5
Ntp17821
Rp17822
(dp17823
g22
(lp17824
sbsg53
Nsg85
g0
(g809
g5
Ntp17825
Rp17826
(dp17827
g552
(lp17828
g7779
ag0
(g3250
g5
Ntp17829
Rp17830
(dp17831
g14
S'auto_15532'
p17832
sg16
Nsg17
g0
(g18
g5
Ntp17833
Rp17834
(dp17835
g22
(lp17836
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p17837
tp17838
Rp17839
sbasg17
g0
(g18
g5
Ntp17840
Rp17841
sg814
(lp17842
g17818
asg1274
g0
(g3357
g5
Ntp17843
Rp17844
(dp17845
g3361
(g1465
tp17846
sbsbsg73
g0
(g74
g5
Ntp17847
Rp17848
(dp17849
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp17850
Rp17851
(dp17852
g14
S'auto_15560'
p17853
sg16
Nsg17
g0
(g18
g5
Ntp17854
Rp17855
(dp17856
g22
(lp17857
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp17858
Rp17859
(dp17860
g78
(tsg80
S'int8'
p17861
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp17862
g59
tp17863
Rp17864
(I1
(tg3031
I00
g7689
tp17865
bsbasg17
g0
(g18
g5
Ntp17866
Rp17867
sg814
(lp17868
g17806
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp17869
Rp17870
(dp17871
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp17872
Rp17873
(dp17874
g14
S'auto_15549'
p17875
sg16
I0
sg17
g0
(g18
g5
Ntp17876
Rp17877
(dp17878
g22
(lp17879
sbsg53
Nsg85
g0
(g809
g5
Ntp17880
Rp17881
(dp17882
g552
(lp17883
g0
(g563
g5
Ntp17884
Rp17885
(dp17886
g14
S'auto_15529'
p17887
sg16
I0
sg17
g0
(g18
g5
Ntp17888
Rp17889
(dp17890
g22
(lp17891
sbsg53
Nsg85
g0
(g809
g5
Ntp17892
Rp17893
(dp17894
g552
(lp17895
g1173
ag7807
asg17
g0
(g18
g5
Ntp17896
Rp17897
sg814
(lp17898
g17885
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp17899
Rp17900
(dp17901
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp17902
Rp17903
(dp17904
g14
S'auto_15545'
p17905
sg16
I0
sg17
g0
(g18
g5
Ntp17906
Rp17907
(dp17908
g22
(lp17909
sbsg53
Nsg85
g0
(g809
g5
Ntp17910
Rp17911
(dp17912
g552
(lp17913
g0
(g563
g5
Ntp17914
Rp17915
(dp17916
g14
S'auto_15540'
p17917
sg16
I0
sg17
g0
(g18
g5
Ntp17918
Rp17919
(dp17920
g22
(lp17921
sbsg53
Nsg85
g0
(g809
g5
Ntp17922
Rp17923
(dp17924
g552
(lp17925
g0
(g563
g5
Ntp17926
Rp17927
(dp17928
g14
S'auto_15537'
p17929
sg16
I0
sg17
g0
(g18
g5
Ntp17930
Rp17931
(dp17932
g22
(lp17933
sbsg53
Nsg85
g0
(g809
g5
Ntp17934
Rp17935
(dp17936
g552
(lp17937
g0
(g563
g5
Ntp17938
Rp17939
(dp17940
g14
S'auto_15531'
p17941
sg16
I0
sg17
g0
(g18
g5
Ntp17942
Rp17943
(dp17944
g22
(lp17945
sbsg53
Nsg85
g0
(g809
g5
Ntp17946
Rp17947
(dp17948
g552
(lp17949
g7779
ag0
(g3250
g5
Ntp17950
Rp17951
(dp17952
g14
S'auto_15530'
p17953
sg16
Nsg17
g0
(g18
g5
Ntp17954
Rp17955
(dp17956
g22
(lp17957
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p17958
tp17959
Rp17960
sbasg17
g0
(g18
g5
Ntp17961
Rp17962
sg814
(lp17963
g17939
asg1274
g0
(g3357
g5
Ntp17964
Rp17965
(dp17966
g3361
(g1465
tp17967
sbsbsg73
g0
(g74
g5
Ntp17968
Rp17969
(dp17970
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag17818
asg17
g0
(g18
g5
Ntp17971
Rp17972
sg814
(lp17973
g17927
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp17974
Rp17975
(dp17976
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp17977
Rp17978
sg814
(lp17979
g17915
asg1274
g7998
sbsg73
g0
(g74
g5
Ntp17980
Rp17981
(dp17982
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g843
g5
Ntp17983
Rp17984
(dp17985
g14
S'auto_15541'
p17986
sg16
Nsg17
g0
(g18
g5
Ntp17987
Rp17988
(dp17989
g22
(lp17990
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp17991
Rp17992
(dp17993
g78
(tsg80
S'int8'
p17994
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp17995
g59
tp17996
Rp17997
(I1
(tg3031
I00
g8033
tp17998
bsbasg17
g0
(g18
g5
Ntp17999
Rp18000
sg814
(lp18001
g17903
asg1274
g8039
sbsg73
g0
(g74
g5
Ntp18002
Rp18003
(dp18004
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp18005
Rp18006
sg814
(lp18007
g17873
asg1274
g8056
sbsg73
g0
(g74
g5
Ntp18008
Rp18009
(dp18010
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag17818
asg17
g0
(g18
g5
Ntp18011
Rp18012
sg814
(lp18013
g17794
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp18014
Rp18015
(dp18016
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg5108
((lp18017
g16608
atp18018
Rp18019
sg0
(g563
g5
Ntp18020
Rp18021
(dp18022
g14
S'auto_15559'
p18023
sg16
I0
sg17
g0
(g18
g5
Ntp18024
Rp18025
(dp18026
g22
(lp18027
sbsg53
Nsg85
g0
(g809
g5
Ntp18028
Rp18029
(dp18030
g552
(lp18031
g0
(g563
g5
Ntp18032
Rp18033
(dp18034
g14
S'auto_15554'
p18035
sg16
I0
sg17
g0
(g18
g5
Ntp18036
Rp18037
(dp18038
g22
(lp18039
sbsg53
Nsg85
g0
(g809
g5
Ntp18040
Rp18041
(dp18042
g552
(lp18043
g17939
ag0
(g843
g5
Ntp18044
Rp18045
(dp18046
g14
S'auto_15550'
p18047
sg16
Nsg17
g0
(g18
g5
Ntp18048
Rp18049
(dp18050
g22
(lp18051
sg878
Nsbsg53
Nsg73
g0
(g74
g5
Ntp18052
Rp18053
(dp18054
g78
(tsg80
S'int8'
p18055
sg82
g3031
sg83
I00
sg53
Nsbsg883
g56
(g57
(I0
tp18056
g59
tp18057
Rp18058
(I1
(tg3031
I00
g7689
tp18059
bsbasg17
g0
(g18
g5
Ntp18060
Rp18061
sg814
(lp18062
g18033
asg1274
g7695
sbsg73
g0
(g74
g5
Ntp18063
Rp18064
(dp18065
g78
(tsg80
g3176
sg82
g7715
sg83
I00
sg53
Nsbsbag17873
ag17939
asg17
g0
(g18
g5
Ntp18066
Rp18067
sg814
(lp18068
g18021
asg1274
g8079
sbsg73
g0
(g74
g5
Ntp18069
Rp18070
(dp18071
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbg5108
((lp18072
g16608
atp18073
Rp18074
sg14685
g5108
((lp18075
tp18076
Rp18077
sg13177
g5108
((lp18078
g3000
atp18079
Rp18080
sg1627
g5108
((lp18081
g1581
ag1590
atp18082
Rp18083
sg15242
g5108
((lp18084
tp18085
Rp18086
sg17196
g5108
((lp18087
tp18088
Rp18089
ssbsS'apply_nodes'
p18090
g5108
((lp18091
g1577
ag1637
ag1623
ag3592
ag1594
ag1209
ag1261
ag1758
ag1247
ag1160
ag1585
ag2294
ag939
ag1729
ag1177
ag2285
ag2823
ag2900
ag971
ag930
ag956
ag3256
ag948
ag4964
ag2477
ag3274
ag916
ag3238
ag1691
ag3655
ag2809
ag1562
ag1122
ag1093
ag2421
ag2852
ag831
ag1801
ag2780
ag1186
ag2929
ag1085
ag811
ag4033
ag822
ag4147
ag1420
ag4138
ag1810
ag2506
ag2267
ag4129
ag1151
ag2308
ag1682
ag1201
ag4156
ag980
ag840
ag1553
ag1218
ag2173
ag1169
ag2439
ag1056
atp18092
Rp18093
sS'variables'
p18094
g5108
((lp18095
g4762
ag4125
ag1687
ag952
ag975
ag2280
ag944
ag1598
ag2298
ag3567
ag1678
ag1214
ag2890
ag1733
ag1566
ag826
ag1590
ag4968
ag845
ag1514
ag2962
ag3630
ag3000
ag2856
ag805
ag3242
ag1031
ag1205
ag3596
ag2322
ag1155
ag4539
ag2435
ag2510
ag1581
ag1762
ag934
ag2813
ag3252
ag2290
ag3270
ag836
ag960
ag2784
ag1725
ag3213
ag920
ag1290
ag4029
ag1650
ag4152
ag1097
ag891
ag1627
ag2827
ag1806
ag4143
ag2443
ag1815
ag1190
ag817
ag1173
ag1251
ag2933
ag4161
ag984
ag2981
ag2473
ag2481
ag3260
ag1060
ag4134
ag1126
ag1695
ag1008
ag3279
ag1222
ag1089
ag1797
ag1319
ag1181
ag1557
ag1165
ag3022
ag2904
atp18096
Rp18097
sS'_features'
p18098
(lp18099
g0
(ctheano.gof.toolbox
ReplaceValidate
p18100
g5
Ntp18101
Rp18102
(dp18103
g7406
I00
sS'_nodes_removed'
p18104
g5108
((lp18105
g12819
atp18106
Rp18107
sba(itheano.compile.function_module
Supervisor
p18108
(dp18109
S'protected'
p18110
(lp18111
g805
ag4968
ag2962
ag3000
ag2856
ag3242
ag3260
ag1205
ag3596
ag1155
ag2510
ag1581
ag1762
asbag0
(ctheano.gof.toolbox
PreserveVariableAttributes
p18112
g5
Ntp18113
Rp18114
ag5103
ag7472
ag5195
asbsg814
(lp18115
g0
(ctheano.compile.io
SymbolicOutput
p18116
g5
Ntp18117
Rp18118
(dp18119
g562
g0
(g563
g5
Ntp18120
Rp18121
(dp18122
g14
S'auto_14649'
p18123
sg16
I0
sg17
g0
(g18
g5
Ntp18124
Rp18125
(dp18126
g22
g15249
sbsg53
Nsg85
g0
(g809
g5
Ntp18127
Rp18128
(dp18129
g552
(lp18130
g0
(g563
g5
Ntp18131
Rp18132
(dp18133
g14
S'auto_14645'
p18134
sg16
I0
sg17
g0
(g18
g5
Ntp18135
Rp18136
(dp18137
g22
g15277
sbsg53
Nsg85
g0
(g809
g5
Ntp18138
Rp18139
(dp18140
g552
(lp18141
g0
(g563
g5
Ntp18142
Rp18143
(dp18144
g14
S'auto_14643'
p18145
sg16
I0
sg17
g0
(g18
g5
Ntp18146
Rp18147
(dp18148
g22
g899
sbsg53
Nsg85
g0
(g809
g5
Ntp18149
Rp18150
(dp18151
g552
(lp18152
g0
(g563
g5
Ntp18153
Rp18154
(dp18155
g14
S'auto_14642'
p18156
sg16
I0
sg17
g0
(g18
g5
Ntp18157
Rp18158
(dp18159
g22
g13695
sbsg53
Nsg85
g0
(g809
g5
Ntp18160
Rp18161
(dp18162
g552
(lp18163
g0
(g563
g5
Ntp18164
Rp18165
(dp18166
g14
S'auto_14639'
p18167
sg16
I0
sg17
g0
(g18
g5
Ntp18168
Rp18169
(dp18170
g22
g16575
sbsg53
Nsg85
g0
(g809
g5
Ntp18171
Rp18172
(dp18173
g552
(lp18174
g0
(g563
g5
Ntp18175
Rp18176
(dp18177
g14
S'auto_14632'
p18178
sg16
I0
sg17
g0
(g18
g5
Ntp18179
Rp18180
(dp18181
g22
g10095
sbsg53
g936
sg85
g0
(g809
g5
Ntp18182
Rp18183
(dp18184
g552
(lp18185
g0
(g563
g5
Ntp18186
Rp18187
(dp18188
g14
S'auto_14631'
p18189
sg16
I0
sg17
g0
(g18
g5
Ntp18190
Rp18191
(dp18192
g22
g14793
sbsg53
Nsg85
g0
(g809
g5
Ntp18193
Rp18194
(dp18195
g552
(lp18196
g0
(g563
g5
Ntp18197
Rp18198
(dp18199
g14
S'auto_14595'
p18200
sg16
I0
sg17
g0
(g18
g5
Ntp18201
Rp18202
(dp18203
g22
g14821
sbsg53
Nsg85
g0
(g809
g5
Ntp18204
Rp18205
(dp18206
g552
(lp18207
g0
(g563
g5
Ntp18208
Rp18209
(dp18210
g14
S'auto_14593'
p18211
sg16
I0
sg17
g0
(g18
g5
Ntp18212
Rp18213
(dp18214
g22
g14849
sbsg53
Nsg85
g0
(g809
g5
Ntp18215
Rp18216
(dp18217
g552
(lp18218
g0
(g563
g5
Ntp18219
Rp18220
(dp18221
g14
S'auto_14591'
p18222
sg16
I0
sg17
g0
(g18
g5
Ntp18223
Rp18224
(dp18225
g22
g8737
sbsg53
Nsg85
g0
(g809
g5
Ntp18226
Rp18227
(dp18228
g552
(lp18229
g0
(g563
g5
Ntp18230
Rp18231
(dp18232
g14
S'auto_14506'
p18233
sg16
I0
sg17
g0
(g18
g5
Ntp18234
Rp18235
(dp18236
g22
g15035
sbsg53
Nsg85
g0
(g809
g5
Ntp18237
Rp18238
(dp18239
g552
(lp18240
g0
(g563
g5
Ntp18241
Rp18242
(dp18243
g14
S'auto_14505'
p18244
sg16
I0
sg17
g0
(g18
g5
Ntp18245
Rp18246
(dp18247
g22
g14305
sbsg53
Nsg85
g0
(g809
g5
Ntp18248
Rp18249
(dp18250
g552
(lp18251
g0
(g843
g5
Ntp18252
Rp18253
(dp18254
g14
S'auto_303'
p18255
sg16
Nsg17
g0
(g18
g5
Ntp18256
Rp18257
(dp18258
g22
g14332
sg878
Nsbsg53
NsS'cached'
p18259
I01
sg73
g14349
sg883
g14355
sbasg17
g0
(g18
g5
Ntp18260
Rp18261
sg814
(lp18262
g18242
asg1274
g7998
sbsg73
g14366
sbasg17
g0
(g18
g5
Ntp18263
Rp18264
sg814
(lp18265
g18231
asg1274
g15063
sbsg73
g15078
sbag0
(g563
g5
Ntp18266
Rp18267
(dp18268
g14
S'auto_14590'
p18269
sg16
I0
sg17
g0
(g18
g5
Ntp18270
Rp18271
(dp18272
g22
g8765
sbsg53
Nsg85
g0
(g809
g5
Ntp18273
Rp18274
(dp18275
g552
(lp18276
g0
(g563
g5
Ntp18277
Rp18278
(dp18279
g14
S'auto_14589'
p18280
sg16
I0
sg17
g0
(g18
g5
Ntp18281
Rp18282
(dp18283
g22
g8793
sbsg53
Nsg85
g0
(g809
g5
Ntp18284
Rp18285
(dp18286
g552
(lp18287
g0
(g563
g5
Ntp18288
Rp18289
(dp18290
g14
S'auto_14557'
p18291
sg16
I0
sg17
g0
(g18
g5
Ntp18292
Rp18293
(dp18294
g22
g8821
sbsg53
Nsg85
g0
(g809
g5
Ntp18295
Rp18296
(dp18297
g552
(lp18298
g0
(g563
g5
Ntp18299
Rp18300
(dp18301
g14
S'auto_14555'
p18302
sg16
I0
sg17
g0
(g18
g5
Ntp18303
Rp18304
(dp18305
g22
g8849
sbsg53
Nsg85
g0
(g809
g5
Ntp18306
Rp18307
(dp18308
g552
(lp18309
g0
(g563
g5
Ntp18310
Rp18311
(dp18312
g14
S'auto_14553'
p18313
sg16
I0
sg17
g0
(g18
g5
Ntp18314
Rp18315
(dp18316
g22
g1039
sbsg53
Nsg85
g0
(g809
g5
Ntp18317
Rp18318
(dp18319
g552
(lp18320
g0
(g563
g5
Ntp18321
Rp18322
(dp18323
g14
S'auto_14547'
p18324
sg16
I0
sg17
g0
(g18
g5
Ntp18325
Rp18326
(dp18327
g22
g16063
sbsg53
Nsg85
g0
(g809
g5
Ntp18328
Rp18329
(dp18330
g552
(lp18331
g0
(g563
g5
Ntp18332
Rp18333
(dp18334
g14
S'auto_14534'
p18335
sg16
I0
sg17
g0
(g18
g5
Ntp18336
Rp18337
(dp18338
g22
g13825
sbsg53
Nsg85
g0
(g809
g5
Ntp18339
Rp18340
(dp18341
g552
(lp18342
g0
(g563
g5
Ntp18343
Rp18344
(dp18345
g14
S'auto_14526'
p18346
sg16
I0
sg17
g0
(g18
g5
Ntp18347
Rp18348
(dp18349
g22
(lp18350
(lp18351
(g25
I306
g26
S'nade_train( * args[1:] )'
p18352
tp18353
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18354
tp18355
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18356
tp18357
a(g37
I36
g38
S'self.recompile()'
p18358
tp18359
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18360
tp18361
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18362
tp18363
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p18364
tp18365
aasbsg53
Nsg85
g0
(g809
g5
Ntp18366
Rp18367
(dp18368
g552
(lp18369
g0
(g563
g5
Ntp18370
Rp18371
(dp18372
g14
S'auto_14525'
p18373
sg16
I0
sg17
g0
(g18
g5
Ntp18374
Rp18375
(dp18376
g22
g13881
sbsg53
Nsg85
g0
(g809
g5
Ntp18377
Rp18378
(dp18379
g552
(lp18380
g0
(g563
g5
Ntp18381
Rp18382
(dp18383
g14
S'auto_14522'
p18384
sg16
I0
sg17
g0
(g18
g5
Ntp18385
Rp18386
(dp18387
g22
g13911
sbsg53
Nsg85
g0
(g809
g5
Ntp18388
Rp18389
(dp18390
g552
(lp18391
g0
(g563
g5
Ntp18392
Rp18393
(dp18394
g14
S'auto_14519'
p18395
sg16
I0
sg17
g0
(g18
g5
Ntp18396
Rp18397
(dp18398
g22
g16785
sbsg53
Nsg85
g0
(g809
g5
Ntp18399
Rp18400
(dp18401
g552
(lp18402
g0
(g563
g5
Ntp18403
Rp18404
(dp18405
g14
S'auto_14517'
p18406
sg16
I0
sg17
g0
(g18
g5
Ntp18407
Rp18408
(dp18409
g22
g16533
sbsg53
Nsg85
g0
(g809
g5
Ntp18410
Rp18411
(dp18412
g552
(lp18413
g0
(g563
g5
Ntp18414
Rp18415
(dp18416
g14
S'auto_14514'
p18417
sg16
I0
sg17
g0
(g18
g5
Ntp18418
Rp18419
(dp18420
g22
g16183
sbsg53
Nsg85
g0
(g809
g5
Ntp18421
Rp18422
(dp18423
g552
(lp18424
g0
(g563
g5
Ntp18425
Rp18426
(dp18427
g14
S'auto_14512'
p18428
sg16
I0
sg17
g0
(g18
g5
Ntp18429
Rp18430
(dp18431
g22
g16118
sbsg53
Nsg85
g0
(g809
g5
Ntp18432
Rp18433
(dp18434
g552
(lp18435
g0
(g563
g5
Ntp18436
Rp18437
(dp18438
g14
S'auto_14510'
p18439
sg16
I0
sg17
g0
(g18
g5
Ntp18440
Rp18441
(dp18442
g22
g16088
sbsg53
Nsg85
g0
(g809
g5
Ntp18443
Rp18444
(dp18445
g552
(lp18446
g0
(g563
g5
Ntp18447
Rp18448
(dp18449
g14
S'auto_14509'
p18450
sg16
I0
sg17
g0
(g18
g5
Ntp18451
Rp18452
(dp18453
g22
g2941
sbsg53
Nsg85
g0
(g809
g5
Ntp18454
Rp18455
(dp18456
g552
(lp18457
g0
(g563
g5
Ntp18458
Rp18459
(dp18460
g14
S'auto_14507'
p18461
sg16
I0
sg17
g0
(g18
g5
Ntp18462
Rp18463
(dp18464
g22
g5050
sbsg53
g819
sg85
g0
(g809
g5
Ntp18465
Rp18466
(dp18467
g552
(lp18468
g565
asg17
g0
(g18
g5
Ntp18469
Rp18470
sg814
(lp18471
g18459
asg1274
g5076
sbsg73
g5067
sbag0
(g563
g5
Ntp18472
Rp18473
(dp18474
g14
S'auto_14508'
p18475
sg16
I0
sg17
g0
(g18
g5
Ntp18476
Rp18477
(dp18478
g22
g4947
sbsg53
g828
sg85
g0
(g809
g5
Ntp18479
Rp18480
(dp18481
g552
(lp18482
g595
asg17
g0
(g18
g5
Ntp18483
Rp18484
sg814
(lp18485
g18473
asg1274
g4983
sbsg73
g4998
sbasg17
g0
(g18
g5
Ntp18486
Rp18487
sg814
(lp18488
g18448
asg1274
g5036
sbsg73
g2958
sbag636
asg17
g0
(g18
g5
Ntp18489
Rp18490
sg814
(lp18491
g18437
asg1274
g14677
sbsg73
g16101
sbag0
(g563
g5
Ntp18492
Rp18493
(dp18494
g14
S'auto_14511'
p18495
sg16
I0
sg17
g0
(g18
g5
Ntp18496
Rp18497
(dp18498
g22
g15706
sbsg53
Nsg85
g0
(g809
g5
Ntp18499
Rp18500
(dp18501
g552
(lp18502
g18473
ag474
asg17
g0
(g18
g5
Ntp18503
Rp18504
sg814
(lp18505
g18493
asg1274
g14677
sbsg73
g15719
sbasg17
g0
(g18
g5
Ntp18506
Rp18507
sg814
(lp18508
g18426
asg1274
g8877
sbsg73
g16146
sbag0
(g563
g5
Ntp18509
Rp18510
(dp18511
g14
S'auto_14513'
p18512
sg16
I0
sg17
g0
(g18
g5
Ntp18513
Rp18514
(dp18515
g22
g2835
sbsg53
Nsg85
g0
(g809
g5
Ntp18516
Rp18517
(dp18518
g552
(lp18519
g127
asg17
g0
(g18
g5
Ntp18520
Rp18521
sg814
(lp18522
g18510
asg1274
g2871
sbsg73
g2886
sbasg17
g0
(g18
g5
Ntp18523
Rp18524
sg814
(lp18525
g18415
asg1274
g8877
sbsg73
g16211
sbag0
(g563
g5
Ntp18526
Rp18527
(dp18528
g14
S'auto_14516'
p18529
sg16
I0
sg17
g0
(g18
g5
Ntp18530
Rp18531
(dp18532
g22
g16356
sbsg53
Nsg85
g0
(g809
g5
Ntp18533
Rp18534
(dp18535
g552
(lp18536
g18415
ag0
(g563
g5
Ntp18537
Rp18538
(dp18539
g14
S'auto_14515'
p18540
sg16
I0
sg17
g0
(g18
g5
Ntp18541
Rp18542
(dp18543
g22
(lp18544
(lp18545
(g25
I306
g26
S'nade_train( * args[1:] )'
p18546
tp18547
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18548
tp18549
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18550
tp18551
a(g37
I36
g38
S'self.recompile()'
p18552
tp18553
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18554
tp18555
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18556
tp18557
a(g874
I214
g875
S'h = self.nonlinearity(T.dot(masked_input, self.W1) + T.dot(mask, self.Wflags) + self.b1)  # BxH'
p18558
tp18559
a(g41
I231
g272
S'"RLU": [lambda x: x * (x > 0), lambda x: x * (x > 0)],'
p18560
tp18561
aasbsg53
Nsg85
g0
(g809
g5
Ntp18562
Rp18563
(dp18564
g552
(lp18565
g0
(g843
g5
Ntp18566
Rp18567
(dp18568
g14
S'auto_46'
p18569
sg16
Nsg17
g0
(g18
g5
Ntp18570
Rp18571
(dp18572
g22
g7533
sg878
Nsbsg53
Nsg18259
I01
sg73
g7550
sg883
g7555
sbasg17
g0
(g18
g5
Ntp18573
Rp18574
sg814
(lp18575
g18538
asg1274
g0
(g1387
g5
Ntp18576
Rp18577
(dp18578
g1391
(lp18579
sg1393
(lp18580
sg1395
(lp18581
I0
aI1
asg1397
g1398
sg1399
(tsg1401
(lp18582
g1403
asg1404
I01
sg1405
(g270
g270
tp18583
sg1407
(dp18584
S'support_code_apply'
p18585
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p18586
ssg1411
(dp18587
I0
(lp18588
I0
assg1414
(lp18589
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p18590
asbsbsg73
g0
(g74
g5
Ntp18591
Rp18592
(dp18593
g78
(I01
I01
tp18594
sg80
g3028
sg82
g3031
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp18595
Rp18596
sg814
(lp18597
g18527
asg1274
g13980
sbsg73
g16386
sbasg17
g0
(g18
g5
Ntp18598
Rp18599
sg814
(lp18600
g18404
asg1274
g5036
sbsg73
g16563
sbag0
(g563
g5
Ntp18601
Rp18602
(dp18603
g14
S'auto_14518'
p18604
sg16
I0
sg17
g0
(g18
g5
Ntp18605
Rp18606
(dp18607
g22
g3221
sbsg53
Nsg85
g0
(g809
g5
Ntp18608
Rp18609
(dp18610
g552
(lp18611
g510
ag0
(g3250
g5
Ntp18612
Rp18613
(dp18614
g14
S'auto_14164'
p18615
sg16
Nsg17
g0
(g18
g5
Ntp18616
Rp18617
(dp18618
g22
(lp18619
(lp18620
(g25
I306
g26
S'nade_train( * args[1:] )'
p18621
tp18622
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18623
tp18624
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18625
tp18626
a(g37
I36
g38
S'self.recompile()'
p18627
tp18628
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18629
tp18630
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18631
tp18632
a(g874
I216
g875
S'h = self.nonlinearity(T.dot(h, self.Ws[l]) + self.bs[l])  # BxH'
p18633
tp18634
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p18635
tp18636
Rp18637
sbasg17
g0
(g18
g5
Ntp18638
Rp18639
sg814
(lp18640
g18602
asg1274
g3395
sbsg73
g3399
sbasg17
g0
(g18
g5
Ntp18641
Rp18642
sg814
(lp18643
g18393
asg1274
g14677
sbsg73
g16798
sbag0
(g563
g5
Ntp18644
Rp18645
(dp18646
g14
S'auto_14521'
p18647
sg16
I0
sg17
g0
(g18
g5
Ntp18648
Rp18649
(dp18650
g22
g3287
sbsg53
Nsg85
g0
(g809
g5
Ntp18651
Rp18652
(dp18653
g552
(lp18654
g0
(g563
g5
Ntp18655
Rp18656
(dp18657
g14
S'auto_14520'
p18658
sg16
I0
sg17
g0
(g18
g5
Ntp18659
Rp18660
(dp18661
g22
g3333
sbsg53
Nsg85
g0
(g809
g5
Ntp18662
Rp18663
(dp18664
g552
(lp18665
g684
ag0
(g3250
g5
Ntp18666
Rp18667
(dp18668
g14
S'auto_14167'
p18669
sg16
Nsg17
g0
(g18
g5
Ntp18670
Rp18671
(dp18672
g22
g3369
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p18673
tp18674
Rp18675
sbasg17
g0
(g18
g5
Ntp18676
Rp18677
sg814
(lp18678
g18656
asg1274
g3359
sbsg73
g3350
sbasg17
g0
(g18
g5
Ntp18679
Rp18680
sg814
(lp18681
g18645
asg1274
g3313
sbsg73
g3304
sbasg17
g0
(g18
g5
Ntp18682
Rp18683
sg814
(lp18684
g18382
asg1274
g8877
sbsg73
g13939
sbag0
(g563
g5
Ntp18685
Rp18686
(dp18687
g14
S'auto_14524'
p18688
sg16
I0
sg17
g0
(g18
g5
Ntp18689
Rp18690
(dp18691
g22
g13950
sbsg53
Nsg85
g0
(g809
g5
Ntp18692
Rp18693
(dp18694
g552
(lp18695
g18382
ag0
(g563
g5
Ntp18696
Rp18697
(dp18698
g14
S'auto_14523'
p18699
sg16
I0
sg17
g0
(g18
g5
Ntp18700
Rp18701
(dp18702
g22
g13496
sbsg53
Nsg85
g0
(g809
g5
Ntp18703
Rp18704
(dp18705
g552
(lp18706
g18567
asg17
g0
(g18
g5
Ntp18707
Rp18708
sg814
(lp18709
g18697
asg1274
g13509
sbsg73
g3025
sbasg17
g0
(g18
g5
Ntp18710
Rp18711
sg814
(lp18712
g18686
asg1274
g13980
sbsg73
g13992
sbasg17
g0
(g18
g5
Ntp18713
Rp18714
sg814
(lp18715
g18371
asg1274
g5036
sbsg73
g14003
sbasg17
g0
(g18
g5
Ntp18716
Rp18717
sg814
(lp18718
g18344
asg1274
g0
(g1387
g5
Ntp18719
Rp18720
(dp18721
g1391
(lp18722
sg1393
(lp18723
I0
aI1
asg1395
(lp18724
sg1397
g1398
sg1399
(I00
I00
tp18725
sg1401
(lp18726
g1403
asg1404
I01
sg1405
(I0
I1
tp18727
sg1407
(dp18728
S'support_code_apply'
p18729
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p18730
ssg1411
(dp18731
I0
(lp18732
I0
assg1414
(lp18733
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p18734
asbsbsg73
g0
(g74
g5
Ntp18735
Rp18736
(dp18737
g78
(I00
I00
tp18738
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp18739
Rp18740
(dp18741
g14
S'auto_14533'
p18742
sg16
I0
sg17
g0
(g18
g5
Ntp18743
Rp18744
(dp18745
g22
g7786
sbsg53
Nsg85
g0
(g809
g5
Ntp18746
Rp18747
(dp18748
g552
(lp18749
g0
(g563
g5
Ntp18750
Rp18751
(dp18752
g14
S'auto_14529'
p18753
sg16
I0
sg17
g0
(g18
g5
Ntp18754
Rp18755
(dp18756
g22
g12626
sbsg53
Nsg85
g0
(g809
g5
Ntp18757
Rp18758
(dp18759
g552
(lp18760
g0
(g843
g5
Ntp18761
Rp18762
(dp18763
g14
S'auto_70'
p18764
sg16
Nsg17
g0
(g18
g5
Ntp18765
Rp18766
(dp18767
g22
(lp18768
g10151
asg878
Nsbsg53
Nsg18259
I01
sg73
g10165
sg883
g10171
sbag0
(g563
g5
Ntp18769
Rp18770
(dp18771
g14
S'auto_14528'
p18772
sg16
I0
sg17
g0
(g18
g5
Ntp18773
Rp18774
(dp18775
g22
g11453
sbsg53
Nsg85
g0
(g809
g5
Ntp18776
Rp18777
(dp18778
g552
(lp18779
g0
(g563
g5
Ntp18780
Rp18781
(dp18782
g14
S'auto_14527'
p18783
sg16
I0
sg17
g0
(g18
g5
Ntp18784
Rp18785
(dp18786
g22
(lp18787
(lp18788
(g25
I306
g26
S'nade_train( * args[1:] )'
p18789
tp18790
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18791
tp18792
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18793
tp18794
a(g37
I36
g38
S'self.recompile()'
p18795
tp18796
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18797
tp18798
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18799
tp18800
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p18801
tp18802
aasbsg53
Nsg85
g0
(g809
g5
Ntp18803
Rp18804
(dp18805
g552
(lp18806
g18344
asg17
g0
(g18
g5
Ntp18807
Rp18808
sg814
(lp18809
g18781
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp18810
Rp18811
(dp18812
g14
S'auto_14287'
p18813
sg16
Nsg17
g0
(g18
g5
Ntp18814
Rp18815
(dp18816
g22
(lp18817
(lp18818
(g25
I306
g26
S'nade_train( * args[1:] )'
p18819
tp18820
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18821
tp18822
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18823
tp18824
a(g37
I36
g38
S'self.recompile()'
p18825
tp18826
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18827
tp18828
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18829
tp18830
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p18831
tp18832
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p18833
tp18834
Rp18835
sbasg17
g0
(g18
g5
Ntp18836
Rp18837
sg814
(lp18838
g18770
asg1274
g11481
sbsg73
g11485
sbasg17
g0
(g18
g5
Ntp18839
Rp18840
sg814
(lp18841
g18751
asg1274
g5036
sbsg73
g12654
sbag0
(g563
g5
Ntp18842
Rp18843
(dp18844
g14
S'auto_14532'
p18845
sg16
I0
sg17
g0
(g18
g5
Ntp18846
Rp18847
(dp18848
g22
g10123
sbsg53
Nsg85
g0
(g809
g5
Ntp18849
Rp18850
(dp18851
g552
(lp18852
g18762
ag0
(g563
g5
Ntp18853
Rp18854
(dp18855
g14
S'auto_14531'
p18856
sg16
I0
sg17
g0
(g18
g5
Ntp18857
Rp18858
(dp18859
g22
g10181
sbsg53
Nsg85
g0
(g809
g5
Ntp18860
Rp18861
(dp18862
g552
(lp18863
g0
(g563
g5
Ntp18864
Rp18865
(dp18866
g14
S'auto_14530'
p18867
sg16
I0
sg17
g0
(g18
g5
Ntp18868
Rp18869
(dp18870
g22
(lp18871
(lp18872
(g25
I306
g26
S'nade_train( * args[1:] )'
p18873
tp18874
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18875
tp18876
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18877
tp18878
a(g37
I36
g38
S'self.recompile()'
p18879
tp18880
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18881
tp18882
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18883
tp18884
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p18885
tp18886
aasbsg53
Nsg85
g0
(g809
g5
Ntp18887
Rp18888
(dp18889
g552
(lp18890
g18344
asg17
g0
(g18
g5
Ntp18891
Rp18892
sg814
(lp18893
g18865
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp18894
Rp18895
(dp18896
g14
S'auto_14273'
p18897
sg16
Nsg17
g0
(g18
g5
Ntp18898
Rp18899
(dp18900
g22
(lp18901
(lp18902
(g25
I306
g26
S'nade_train( * args[1:] )'
p18903
tp18904
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p18905
tp18906
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p18907
tp18908
a(g37
I36
g38
S'self.recompile()'
p18909
tp18910
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p18911
tp18912
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p18913
tp18914
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p18915
tp18916
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p18917
tp18918
Rp18919
sbasg17
g0
(g18
g5
Ntp18920
Rp18921
sg814
(lp18922
g18854
asg1274
g10275
sbsg73
g10279
sbasg17
g0
(g18
g5
Ntp18923
Rp18924
sg814
(lp18925
g18843
asg1274
g5036
sbsg73
g10289
sbasg17
g0
(g18
g5
Ntp18926
Rp18927
sg814
(lp18928
g18740
asg1274
g7839
sbsg73
g7843
sbasg17
g0
(g18
g5
Ntp18929
Rp18930
sg814
(lp18931
g18333
asg1274
g14042
sbsg73
g14045
sbag0
(g563
g5
Ntp18932
Rp18933
(dp18934
g14
S'auto_14546'
p18935
sg16
I0
sg17
g0
(g18
g5
Ntp18936
Rp18937
(dp18938
g22
g1327
sbsg53
Nsg85
g0
(g809
g5
Ntp18939
Rp18940
(dp18941
g552
(lp18942
g0
(g563
g5
Ntp18943
Rp18944
(dp18945
g14
S'auto_14535'
p18946
sg16
I0
sg17
g0
(g18
g5
Ntp18947
Rp18948
(dp18949
g22
g1362
sbsg53
Nsg85
g0
(g809
g5
Ntp18950
Rp18951
(dp18952
g552
(lp18953
g723
asg17
g0
(g18
g5
Ntp18954
Rp18955
sg814
(lp18956
g18944
asg1274
g1389
sbsg73
g1379
sbag0
(g563
g5
Ntp18957
Rp18958
(dp18959
g14
S'auto_14545'
p18960
sg16
I0
sg17
g0
(g18
g5
Ntp18961
Rp18962
(dp18963
g22
g1230
sbsg53
Nsg85
g0
(g809
g5
Ntp18964
Rp18965
(dp18966
g552
(lp18967
g0
(g563
g5
Ntp18968
Rp18969
(dp18970
g14
S'auto_14538'
p18971
sg16
I0
sg17
g0
(g18
g5
Ntp18972
Rp18973
(dp18974
g22
g11373
sbsg53
Nsg85
g0
(g809
g5
Ntp18975
Rp18976
(dp18977
g552
(lp18978
g18762
ag0
(g563
g5
Ntp18979
Rp18980
(dp18981
g14
S'auto_14537'
p18982
sg16
I0
sg17
g0
(g18
g5
Ntp18983
Rp18984
(dp18985
g22
g8529
sbsg53
Nsg85
g0
(g809
g5
Ntp18986
Rp18987
(dp18988
g552
(lp18989
g0
(g563
g5
Ntp18990
Rp18991
(dp18992
g14
S'auto_14536'
p18993
sg16
I0
sg17
g0
(g18
g5
Ntp18994
Rp18995
(dp18996
g22
(lp18997
(lp18998
(g25
I306
g26
S'nade_train( * args[1:] )'
p18999
tp19000
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19001
tp19002
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19003
tp19004
a(g37
I36
g38
S'self.recompile()'
p19005
tp19006
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19007
tp19008
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19009
tp19010
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19011
tp19012
aasbsg53
Nsg85
g0
(g809
g5
Ntp19013
Rp19014
(dp19015
g552
(lp19016
g18944
asg17
g0
(g18
g5
Ntp19017
Rp19018
sg814
(lp19019
g18991
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19020
Rp19021
(dp19022
g14
S'auto_14280'
p19023
sg16
Nsg17
g0
(g18
g5
Ntp19024
Rp19025
(dp19026
g22
(lp19027
(lp19028
(g25
I306
g26
S'nade_train( * args[1:] )'
p19029
tp19030
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19031
tp19032
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19033
tp19034
a(g37
I36
g38
S'self.recompile()'
p19035
tp19036
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19037
tp19038
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19039
tp19040
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19041
tp19042
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p19043
tp19044
Rp19045
sbasg17
g0
(g18
g5
Ntp19046
Rp19047
sg814
(lp19048
g18980
asg1274
g8596
sbsg73
g8600
sbasg17
g0
(g18
g5
Ntp19049
Rp19050
sg814
(lp19051
g18969
asg1274
g5036
sbsg73
g11386
sbag0
(g563
g5
Ntp19052
Rp19053
(dp19054
g14
S'auto_14544'
p19055
sg16
I0
sg17
g0
(g18
g5
Ntp19056
Rp19057
(dp19058
g22
g16025
sbsg53
Nsg85
g0
(g809
g5
Ntp19059
Rp19060
(dp19061
g552
(lp19062
g0
(g563
g5
Ntp19063
Rp19064
(dp19065
g14
S'auto_14541'
p19066
sg16
I0
sg17
g0
(g18
g5
Ntp19067
Rp19068
(dp19069
g22
g15925
sbsg53
Nsg85
g0
(g809
g5
Ntp19070
Rp19071
(dp19072
g552
(lp19073
g18762
ag0
(g563
g5
Ntp19074
Rp19075
(dp19076
g14
S'auto_14540'
p19077
sg16
I0
sg17
g0
(g18
g5
Ntp19078
Rp19079
(dp19080
g22
g15770
sbsg53
Nsg85
g0
(g809
g5
Ntp19081
Rp19082
(dp19083
g552
(lp19084
g0
(g563
g5
Ntp19085
Rp19086
(dp19087
g14
S'auto_14539'
p19088
sg16
I0
sg17
g0
(g18
g5
Ntp19089
Rp19090
(dp19091
g22
(lp19092
(lp19093
(g25
I306
g26
S'nade_train( * args[1:] )'
p19094
tp19095
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19096
tp19097
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19098
tp19099
a(g37
I36
g38
S'self.recompile()'
p19100
tp19101
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19102
tp19103
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19104
tp19105
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19106
tp19107
aasbsg53
Nsg85
g0
(g809
g5
Ntp19108
Rp19109
(dp19110
g552
(lp19111
g18944
asg17
g0
(g18
g5
Ntp19112
Rp19113
sg814
(lp19114
g19086
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19115
Rp19116
(dp19117
g14
S'auto_14294'
p19118
sg16
Nsg17
g0
(g18
g5
Ntp19119
Rp19120
(dp19121
g22
(lp19122
(lp19123
(g25
I306
g26
S'nade_train( * args[1:] )'
p19124
tp19125
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19126
tp19127
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19128
tp19129
a(g37
I36
g38
S'self.recompile()'
p19130
tp19131
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19132
tp19133
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19134
tp19135
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19136
tp19137
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p19138
tp19139
Rp19140
sbasg17
g0
(g18
g5
Ntp19141
Rp19142
sg814
(lp19143
g19075
asg1274
g15798
sbsg73
g15802
sbasg17
g0
(g18
g5
Ntp19144
Rp19145
sg814
(lp19146
g19064
asg1274
g5036
sbsg73
g15953
sbag0
(g563
g5
Ntp19147
Rp19148
(dp19149
g14
S'auto_14543'
p19150
sg16
I0
sg17
g0
(g18
g5
Ntp19151
Rp19152
(dp19153
g22
g15369
sbsg53
Nsg85
g0
(g809
g5
Ntp19154
Rp19155
(dp19156
g552
(lp19157
g0
(g563
g5
Ntp19158
Rp19159
(dp19160
g14
S'auto_14542'
p19161
sg16
I0
sg17
g0
(g18
g5
Ntp19162
Rp19163
(dp19164
g22
(lp19165
(lp19166
(g25
I306
g26
S'nade_train( * args[1:] )'
p19167
tp19168
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19169
tp19170
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19171
tp19172
a(g37
I36
g38
S'self.recompile()'
p19173
tp19174
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19175
tp19176
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19177
tp19178
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19179
tp19180
aasbsg53
Nsg85
g0
(g809
g5
Ntp19181
Rp19182
(dp19183
g552
(lp19184
g18944
asg17
g0
(g18
g5
Ntp19185
Rp19186
sg814
(lp19187
g19159
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19188
Rp19189
(dp19190
g14
S'auto_14301'
p19191
sg16
Nsg17
g0
(g18
g5
Ntp19192
Rp19193
(dp19194
g22
(lp19195
(lp19196
(g25
I306
g26
S'nade_train( * args[1:] )'
p19197
tp19198
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19199
tp19200
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19201
tp19202
a(g37
I36
g38
S'self.recompile()'
p19203
tp19204
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19205
tp19206
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19207
tp19208
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19209
tp19210
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xfe\xff\xff\xff\xff\xff\xff\xff'
p19211
tp19212
Rp19213
sbasg17
g0
(g18
g5
Ntp19214
Rp19215
sg814
(lp19216
g19148
asg1274
g15397
sbsg73
g15401
sbasg17
g0
(g18
g5
Ntp19217
Rp19218
sg814
(lp19219
g19053
asg1274
g5036
sbsg73
g16053
sbasg17
g0
(g18
g5
Ntp19220
Rp19221
sg814
(lp19222
g18958
asg1274
g1310
sbsg73
g1314
sbasg17
g0
(g18
g5
Ntp19223
Rp19224
sg814
(lp19225
g18933
asg1274
g1354
sbsg73
g1344
sbasg17
g0
(g18
g5
Ntp19226
Rp19227
sg814
(lp19228
g18322
asg1274
g14677
sbsg73
g16076
sbag0
(g563
g5
Ntp19229
Rp19230
(dp19231
g14
S'auto_14552'
p19232
sg16
I0
sg17
g0
(g18
g5
Ntp19233
Rp19234
(dp19235
g22
g7521
sbsg53
Nsg85
g0
(g809
g5
Ntp19236
Rp19237
(dp19238
g552
(lp19239
g18567
ag0
(g563
g5
Ntp19240
Rp19241
(dp19242
g14
S'auto_14549'
p19243
sg16
I0
sg17
g0
(g18
g5
Ntp19244
Rp19245
(dp19246
g22
g13664
sbsg53
Nsg85
g0
(g809
g5
Ntp19247
Rp19248
(dp19249
g552
(lp19250
g0
(g563
g5
Ntp19251
Rp19252
(dp19253
g14
S'auto_14548'
p19254
sg16
I0
sg17
g0
(g18
g5
Ntp19255
Rp19256
(dp19257
g22
(lp19258
(lp19259
(g25
I306
g26
S'nade_train( * args[1:] )'
p19260
tp19261
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19262
tp19263
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19264
tp19265
a(g37
I36
g38
S'self.recompile()'
p19266
tp19267
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19268
tp19269
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19270
tp19271
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19272
tp19273
aasbsg53
Nsg85
g0
(g809
g5
Ntp19274
Rp19275
(dp19276
g552
(lp19277
g18344
asg17
g0
(g18
g5
Ntp19278
Rp19279
sg814
(lp19280
g19252
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19281
Rp19282
(dp19283
g14
S'auto_14264'
p19284
sg16
Nsg17
g0
(g18
g5
Ntp19285
Rp19286
(dp19287
g22
(lp19288
(lp19289
(g25
I306
g26
S'nade_train( * args[1:] )'
p19290
tp19291
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19292
tp19293
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19294
tp19295
a(g37
I36
g38
S'self.recompile()'
p19296
tp19297
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19298
tp19299
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19300
tp19301
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19302
tp19303
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p19304
tp19305
Rp19306
sbag0
(g3250
g5
Ntp19307
Rp19308
(dp19309
g14
S'auto_14265'
p19310
sg16
Nsg17
g0
(g18
g5
Ntp19311
Rp19312
(dp19313
g22
(lp19314
(lp19315
(g25
I306
g26
S'nade_train( * args[1:] )'
p19316
tp19317
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19318
tp19319
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19320
tp19321
a(g37
I36
g38
S'self.recompile()'
p19322
tp19323
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19324
tp19325
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19326
tp19327
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19328
tp19329
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p19330
tp19331
Rp19332
sbasg17
g0
(g18
g5
Ntp19333
Rp19334
sg814
(lp19335
g19241
asg1274
g13677
sbsg73
g13683
sbag0
(g563
g5
Ntp19336
Rp19337
(dp19338
g14
S'auto_14551'
p19339
sg16
I0
sg17
g0
(g18
g5
Ntp19340
Rp19341
(dp19342
g22
g17203
sbsg53
Nsg85
g0
(g809
g5
Ntp19343
Rp19344
(dp19345
g552
(lp19346
g0
(g563
g5
Ntp19347
Rp19348
(dp19349
g14
S'auto_14550'
p19350
sg16
I0
sg17
g0
(g18
g5
Ntp19351
Rp19352
(dp19353
g22
g12762
sbsg53
Nsg85
g0
(g809
g5
Ntp19354
Rp19355
(dp19356
g552
(lp19357
g18944
asg17
g0
(g18
g5
Ntp19358
Rp19359
sg814
(lp19360
g19348
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19361
Rp19362
(dp19363
g14
S'auto_14268'
p19364
sg16
Nsg17
g0
(g18
g5
Ntp19365
Rp19366
(dp19367
g22
(lp19368
(lp19369
(g25
I306
g26
S'nade_train( * args[1:] )'
p19370
tp19371
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19372
tp19373
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19374
tp19375
a(g37
I36
g38
S'self.recompile()'
p19376
tp19377
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19378
tp19379
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19380
tp19381
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19382
tp19383
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p19384
tp19385
Rp19386
sbag0
(g3250
g5
Ntp19387
Rp19388
(dp19389
g14
S'auto_14269'
p19390
sg16
Nsg17
g0
(g18
g5
Ntp19391
Rp19392
(dp19393
g22
(lp19394
(lp19395
(g25
I306
g26
S'nade_train( * args[1:] )'
p19396
tp19397
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19398
tp19399
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19400
tp19401
a(g37
I36
g38
S'self.recompile()'
p19402
tp19403
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19404
tp19405
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19406
tp19407
a(g874
I218
g875
S'z_mu = T.tensordot(h, self.V_mu, [[1], [1]]) + T.shape_padleft(self.b_mu)'
p19408
tp19409
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p19410
tp19411
Rp19412
sbasg17
g0
(g18
g5
Ntp19413
Rp19414
sg814
(lp19415
g19337
asg1274
g17216
sbsg73
g17222
sbasg17
g0
(g18
g5
Ntp19416
Rp19417
sg814
(lp19418
g19230
asg1274
g7645
sbsg73
g7649
sbasg17
g0
(g18
g5
Ntp19419
Rp19420
sg814
(lp19421
g18311
asg1274
g3559
sbsg73
g3562
sbag0
(g563
g5
Ntp19422
Rp19423
(dp19424
g14
S'auto_14554'
p19425
sg16
I0
sg17
g0
(g18
g5
Ntp19426
Rp19427
(dp19428
g22
g3575
sbsg53
Nsg85
g0
(g809
g5
Ntp19429
Rp19430
(dp19431
g552
(lp19432
g205
asg17
g0
(g18
g5
Ntp19433
Rp19434
sg814
(lp19435
g19423
asg1274
g3611
sbsg73
g3626
sbasg17
g0
(g18
g5
Ntp19436
Rp19437
sg814
(lp19438
g18300
asg1274
g8877
sbsg73
g8888
sbag0
(g563
g5
Ntp19439
Rp19440
(dp19441
g14
S'auto_14556'
p19442
sg16
I0
sg17
g0
(g18
g5
Ntp19443
Rp19444
(dp19445
g22
g11179
sbsg53
Nsg85
g0
(g809
g5
Ntp19446
Rp19447
(dp19448
g552
(lp19449
g18459
asg17
g0
(g18
g5
Ntp19450
Rp19451
sg814
(lp19452
g19440
asg1274
g11192
sbsg73
g11207
sbasg17
g0
(g18
g5
Ntp19453
Rp19454
sg814
(lp19455
g18289
asg1274
g4101
sbsg73
g8899
sbag0
(g563
g5
Ntp19456
Rp19457
(dp19458
g14
S'auto_14588'
p19459
sg16
I0
sg17
g0
(g18
g5
Ntp19460
Rp19461
(dp19462
g22
g8910
sbsg53
Nsg85
g0
(g809
g5
Ntp19463
Rp19464
(dp19465
g552
(lp19466
g0
(g563
g5
Ntp19467
Rp19468
(dp19469
g14
S'auto_14587'
p19470
sg16
I0
sg17
g0
(g18
g5
Ntp19471
Rp19472
(dp19473
g22
g8938
sbsg53
Nsg85
g0
(g809
g5
Ntp19474
Rp19475
(dp19476
g552
(lp19477
g0
(g563
g5
Ntp19478
Rp19479
(dp19480
g14
S'auto_14585'
p19481
sg16
I0
sg17
g0
(g18
g5
Ntp19482
Rp19483
(dp19484
g22
g2645
sbsg53
Nsg85
g0
(g809
g5
Ntp19485
Rp19486
(dp19487
g552
(lp19488
g0
(g563
g5
Ntp19489
Rp19490
(dp19491
g14
S'auto_14579'
p19492
sg16
I0
sg17
g0
(g18
g5
Ntp19493
Rp19494
(dp19495
g22
g16981
sbsg53
Nsg85
g0
(g809
g5
Ntp19496
Rp19497
(dp19498
g552
(lp19499
g0
(g563
g5
Ntp19500
Rp19501
(dp19502
g14
S'auto_14566'
p19503
sg16
I0
sg17
g0
(g18
g5
Ntp19504
Rp19505
(dp19506
g22
(lp19507
(lp19508
(g25
I306
g26
S'nade_train( * args[1:] )'
p19509
tp19510
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19511
tp19512
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19513
tp19514
a(g37
I36
g38
S'self.recompile()'
p19515
tp19516
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19517
tp19518
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19519
tp19520
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19521
tp19522
aasbsg53
Nsg85
g0
(g809
g5
Ntp19523
Rp19524
(dp19525
g552
(lp19526
g0
(g563
g5
Ntp19527
Rp19528
(dp19529
g14
S'auto_14558'
p19530
sg16
I0
sg17
g0
(g18
g5
Ntp19531
Rp19532
(dp19533
g22
(lp19534
(lp19535
(g25
I306
g26
S'nade_train( * args[1:] )'
p19536
tp19537
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19538
tp19539
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19540
tp19541
a(g37
I36
g38
S'self.recompile()'
p19542
tp19543
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19544
tp19545
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19546
tp19547
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19548
tp19549
aasbsg53
Nsg85
g0
(g809
g5
Ntp19550
Rp19551
(dp19552
g552
(lp19553
g18371
asg17
g0
(g18
g5
Ntp19554
Rp19555
sg814
(lp19556
g19528
asg1274
g0
(g1387
g5
Ntp19557
Rp19558
(dp19559
g1391
(lp19560
sg1393
(lp19561
I0
aI1
asg1395
(lp19562
sg1397
g1398
sg1399
(I00
I00
tp19563
sg1401
(lp19564
g1403
asg1404
I01
sg1405
(I0
I1
tp19565
sg1407
(dp19566
S'support_code_apply'
p19567
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p19568
ssg1411
(dp19569
I0
(lp19570
I0
assg1414
(lp19571
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p19572
asbsbsg73
g0
(g74
g5
Ntp19573
Rp19574
(dp19575
g78
(I00
I00
tp19576
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp19577
Rp19578
(dp19579
g14
S'auto_14565'
p19580
sg16
I0
sg17
g0
(g18
g5
Ntp19581
Rp19582
(dp19583
g22
(lp19584
(lp19585
(g25
I306
g26
S'nade_train( * args[1:] )'
p19586
tp19587
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19588
tp19589
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19590
tp19591
a(g37
I36
g38
S'self.recompile()'
p19592
tp19593
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19594
tp19595
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19596
tp19597
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19598
tp19599
aasbsg53
Nsg85
g0
(g809
g5
Ntp19600
Rp19601
(dp19602
g552
(lp19603
g0
(g563
g5
Ntp19604
Rp19605
(dp19606
g14
S'auto_14561'
p19607
sg16
I0
sg17
g0
(g18
g5
Ntp19608
Rp19609
(dp19610
g22
(lp19611
(lp19612
(g25
I306
g26
S'nade_train( * args[1:] )'
p19613
tp19614
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19615
tp19616
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19617
tp19618
a(g37
I36
g38
S'self.recompile()'
p19619
tp19620
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19621
tp19622
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19623
tp19624
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19625
tp19626
aasbsg53
Nsg85
g0
(g809
g5
Ntp19627
Rp19628
(dp19629
g552
(lp19630
g18762
ag0
(g563
g5
Ntp19631
Rp19632
(dp19633
g14
S'auto_14560'
p19634
sg16
I0
sg17
g0
(g18
g5
Ntp19635
Rp19636
(dp19637
g22
(lp19638
(lp19639
(g25
I306
g26
S'nade_train( * args[1:] )'
p19640
tp19641
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19642
tp19643
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19644
tp19645
a(g37
I36
g38
S'self.recompile()'
p19646
tp19647
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19648
tp19649
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19650
tp19651
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19652
tp19653
aasbsg53
Nsg85
g0
(g809
g5
Ntp19654
Rp19655
(dp19656
g552
(lp19657
g0
(g563
g5
Ntp19658
Rp19659
(dp19660
g14
S'auto_14559'
p19661
sg16
I0
sg17
g0
(g18
g5
Ntp19662
Rp19663
(dp19664
g22
(lp19665
(lp19666
(g25
I306
g26
S'nade_train( * args[1:] )'
p19667
tp19668
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19669
tp19670
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19671
tp19672
a(g37
I36
g38
S'self.recompile()'
p19673
tp19674
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19675
tp19676
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19677
tp19678
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19679
tp19680
aasbsg53
Nsg85
g0
(g809
g5
Ntp19681
Rp19682
(dp19683
g552
(lp19684
g19528
asg17
g0
(g18
g5
Ntp19685
Rp19686
sg814
(lp19687
g19659
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19688
Rp19689
(dp19690
g14
S'auto_14365'
p19691
sg16
Nsg17
g0
(g18
g5
Ntp19692
Rp19693
(dp19694
g22
(lp19695
(lp19696
(g25
I306
g26
S'nade_train( * args[1:] )'
p19697
tp19698
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19699
tp19700
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19701
tp19702
a(g37
I36
g38
S'self.recompile()'
p19703
tp19704
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19705
tp19706
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19707
tp19708
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19709
tp19710
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p19711
tp19712
Rp19713
sbasg17
g0
(g18
g5
Ntp19714
Rp19715
sg814
(lp19716
g19632
asg1274
g0
(g3357
g5
Ntp19717
Rp19718
(dp19719
g3361
(g1465
tp19720
sbsbsg73
g0
(g74
g5
Ntp19721
Rp19722
(dp19723
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp19724
Rp19725
sg814
(lp19726
g19605
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp19727
Rp19728
(dp19729
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp19730
Rp19731
(dp19732
g14
S'auto_14564'
p19733
sg16
I0
sg17
g0
(g18
g5
Ntp19734
Rp19735
(dp19736
g22
(lp19737
(lp19738
(g25
I306
g26
S'nade_train( * args[1:] )'
p19739
tp19740
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19741
tp19742
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19743
tp19744
a(g37
I36
g38
S'self.recompile()'
p19745
tp19746
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19747
tp19748
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19749
tp19750
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19751
tp19752
aasbsg53
Nsg85
g0
(g809
g5
Ntp19753
Rp19754
(dp19755
g552
(lp19756
g18762
ag0
(g563
g5
Ntp19757
Rp19758
(dp19759
g14
S'auto_14563'
p19760
sg16
I0
sg17
g0
(g18
g5
Ntp19761
Rp19762
(dp19763
g22
(lp19764
(lp19765
(g25
I306
g26
S'nade_train( * args[1:] )'
p19766
tp19767
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19768
tp19769
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19770
tp19771
a(g37
I36
g38
S'self.recompile()'
p19772
tp19773
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19774
tp19775
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19776
tp19777
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19778
tp19779
aasbsg53
Nsg85
g0
(g809
g5
Ntp19780
Rp19781
(dp19782
g552
(lp19783
g0
(g563
g5
Ntp19784
Rp19785
(dp19786
g14
S'auto_14562'
p19787
sg16
I0
sg17
g0
(g18
g5
Ntp19788
Rp19789
(dp19790
g22
(lp19791
(lp19792
(g25
I306
g26
S'nade_train( * args[1:] )'
p19793
tp19794
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19795
tp19796
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19797
tp19798
a(g37
I36
g38
S'self.recompile()'
p19799
tp19800
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19801
tp19802
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19803
tp19804
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19805
tp19806
aasbsg53
Nsg85
g0
(g809
g5
Ntp19807
Rp19808
(dp19809
g552
(lp19810
g19528
asg17
g0
(g18
g5
Ntp19811
Rp19812
sg814
(lp19813
g19785
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19814
Rp19815
(dp19816
g14
S'auto_14351'
p19817
sg16
Nsg17
g0
(g18
g5
Ntp19818
Rp19819
(dp19820
g22
(lp19821
(lp19822
(g25
I306
g26
S'nade_train( * args[1:] )'
p19823
tp19824
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19825
tp19826
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19827
tp19828
a(g37
I36
g38
S'self.recompile()'
p19829
tp19830
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19831
tp19832
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19833
tp19834
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19835
tp19836
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p19837
tp19838
Rp19839
sbasg17
g0
(g18
g5
Ntp19840
Rp19841
sg814
(lp19842
g19758
asg1274
g0
(g3357
g5
Ntp19843
Rp19844
(dp19845
g3361
(g1465
tp19846
sbsbsg73
g0
(g74
g5
Ntp19847
Rp19848
(dp19849
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp19850
Rp19851
sg814
(lp19852
g19731
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp19853
Rp19854
(dp19855
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp19856
Rp19857
sg814
(lp19858
g19578
asg1274
g0
(g1308
g5
Ntp19859
Rp19860
(dp19861
g80
S'int64'
p19862
sbsbsg73
g0
(g74
g5
Ntp19863
Rp19864
(dp19865
g78
(I00
tp19866
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp19867
Rp19868
sg814
(lp19869
g19501
asg1274
g0
(g1352
g5
Ntp19870
Rp19871
(dp19872
g1356
I2
sbsbsg73
g0
(g74
g5
Ntp19873
Rp19874
(dp19875
g78
(I00
I00
tp19876
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp19877
Rp19878
(dp19879
g14
S'auto_14578'
p19880
sg16
I0
sg17
g0
(g18
g5
Ntp19881
Rp19882
(dp19883
g22
g1105
sbsg53
Nsg85
g0
(g809
g5
Ntp19884
Rp19885
(dp19886
g552
(lp19887
g0
(g563
g5
Ntp19888
Rp19889
(dp19890
g14
S'auto_14567'
p19891
sg16
I0
sg17
g0
(g18
g5
Ntp19892
Rp19893
(dp19894
g22
g1134
sbsg53
Nsg85
g0
(g809
g5
Ntp19895
Rp19896
(dp19897
g552
(lp19898
g164
asg17
g0
(g18
g5
Ntp19899
Rp19900
sg814
(lp19901
g19889
asg1274
g2733
sbsg73
g2749
sbag0
(g563
g5
Ntp19902
Rp19903
(dp19904
g14
S'auto_14577'
p19905
sg16
I0
sg17
g0
(g18
g5
Ntp19906
Rp19907
(dp19908
g22
g2330
sbsg53
Nsg85
g0
(g809
g5
Ntp19909
Rp19910
(dp19911
g552
(lp19912
g0
(g563
g5
Ntp19913
Rp19914
(dp19915
g14
S'auto_14570'
p19916
sg16
I0
sg17
g0
(g18
g5
Ntp19917
Rp19918
(dp19919
g22
g13802
sbsg53
Nsg85
g0
(g809
g5
Ntp19920
Rp19921
(dp19922
g552
(lp19923
g18762
ag0
(g563
g5
Ntp19924
Rp19925
(dp19926
g14
S'auto_14569'
p19927
sg16
I0
sg17
g0
(g18
g5
Ntp19928
Rp19929
(dp19930
g22
g11846
sbsg53
Nsg85
g0
(g809
g5
Ntp19931
Rp19932
(dp19933
g552
(lp19934
g0
(g563
g5
Ntp19935
Rp19936
(dp19937
g14
S'auto_14568'
p19938
sg16
I0
sg17
g0
(g18
g5
Ntp19939
Rp19940
(dp19941
g22
(lp19942
(lp19943
(g25
I306
g26
S'nade_train( * args[1:] )'
p19944
tp19945
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19946
tp19947
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19948
tp19949
a(g37
I36
g38
S'self.recompile()'
p19950
tp19951
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19952
tp19953
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19954
tp19955
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19956
tp19957
aasbsg53
Nsg85
g0
(g809
g5
Ntp19958
Rp19959
(dp19960
g552
(lp19961
g19889
asg17
g0
(g18
g5
Ntp19962
Rp19963
sg814
(lp19964
g19936
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp19965
Rp19966
(dp19967
g14
S'auto_14358'
p19968
sg16
Nsg17
g0
(g18
g5
Ntp19969
Rp19970
(dp19971
g22
(lp19972
(lp19973
(g25
I306
g26
S'nade_train( * args[1:] )'
p19974
tp19975
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p19976
tp19977
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p19978
tp19979
a(g37
I36
g38
S'self.recompile()'
p19980
tp19981
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p19982
tp19983
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p19984
tp19985
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p19986
tp19987
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p19988
tp19989
Rp19990
sbasg17
g0
(g18
g5
Ntp19991
Rp19992
sg814
(lp19993
g19925
asg1274
g11913
sbsg73
g11917
sbasg17
g0
(g18
g5
Ntp19994
Rp19995
sg814
(lp19996
g19914
asg1274
g5036
sbsg73
g13815
sbag0
(g563
g5
Ntp19997
Rp19998
(dp19999
g14
S'auto_14576'
p20000
sg16
I0
sg17
g0
(g18
g5
Ntp20001
Rp20002
(dp20003
g22
g13569
sbsg53
Nsg85
g0
(g809
g5
Ntp20004
Rp20005
(dp20006
g552
(lp20007
g0
(g563
g5
Ntp20008
Rp20009
(dp20010
g14
S'auto_14573'
p20011
sg16
I0
sg17
g0
(g18
g5
Ntp20012
Rp20013
(dp20014
g22
g12493
sbsg53
Nsg85
g0
(g809
g5
Ntp20015
Rp20016
(dp20017
g552
(lp20018
g18762
ag0
(g563
g5
Ntp20019
Rp20020
(dp20021
g14
S'auto_14572'
p20022
sg16
I0
sg17
g0
(g18
g5
Ntp20023
Rp20024
(dp20025
g22
g12521
sbsg53
Nsg85
g0
(g809
g5
Ntp20026
Rp20027
(dp20028
g552
(lp20029
g0
(g563
g5
Ntp20030
Rp20031
(dp20032
g14
S'auto_14571'
p20033
sg16
I0
sg17
g0
(g18
g5
Ntp20034
Rp20035
(dp20036
g22
(lp20037
(lp20038
(g25
I306
g26
S'nade_train( * args[1:] )'
p20039
tp20040
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20041
tp20042
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20043
tp20044
a(g37
I36
g38
S'self.recompile()'
p20045
tp20046
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20047
tp20048
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20049
tp20050
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20051
tp20052
aasbsg53
Nsg85
g0
(g809
g5
Ntp20053
Rp20054
(dp20055
g552
(lp20056
g19889
asg17
g0
(g18
g5
Ntp20057
Rp20058
sg814
(lp20059
g20031
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20060
Rp20061
(dp20062
g14
S'auto_14372'
p20063
sg16
Nsg17
g0
(g18
g5
Ntp20064
Rp20065
(dp20066
g22
(lp20067
(lp20068
(g25
I306
g26
S'nade_train( * args[1:] )'
p20069
tp20070
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20071
tp20072
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20073
tp20074
a(g37
I36
g38
S'self.recompile()'
p20075
tp20076
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20077
tp20078
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20079
tp20080
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20081
tp20082
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p20083
tp20084
Rp20085
sbasg17
g0
(g18
g5
Ntp20086
Rp20087
sg814
(lp20088
g20020
asg1274
g12549
sbsg73
g12553
sbasg17
g0
(g18
g5
Ntp20089
Rp20090
sg814
(lp20091
g20009
asg1274
g5036
sbsg73
g12563
sbag0
(g563
g5
Ntp20092
Rp20093
(dp20094
g14
S'auto_14575'
p20095
sg16
I0
sg17
g0
(g18
g5
Ntp20096
Rp20097
(dp20098
g22
g13033
sbsg53
Nsg85
g0
(g809
g5
Ntp20099
Rp20100
(dp20101
g552
(lp20102
g0
(g563
g5
Ntp20103
Rp20104
(dp20105
g14
S'auto_14574'
p20106
sg16
I0
sg17
g0
(g18
g5
Ntp20107
Rp20108
(dp20109
g22
(lp20110
(lp20111
(g25
I306
g26
S'nade_train( * args[1:] )'
p20112
tp20113
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20114
tp20115
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20116
tp20117
a(g37
I36
g38
S'self.recompile()'
p20118
tp20119
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20120
tp20121
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20122
tp20123
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20124
tp20125
aasbsg53
Nsg85
g0
(g809
g5
Ntp20126
Rp20127
(dp20128
g552
(lp20129
g19889
asg17
g0
(g18
g5
Ntp20130
Rp20131
sg814
(lp20132
g20104
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20133
Rp20134
(dp20135
g14
S'auto_14379'
p20136
sg16
Nsg17
g0
(g18
g5
Ntp20137
Rp20138
(dp20139
g22
(lp20140
(lp20141
(g25
I306
g26
S'nade_train( * args[1:] )'
p20142
tp20143
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20144
tp20145
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20146
tp20147
a(g37
I36
g38
S'self.recompile()'
p20148
tp20149
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20150
tp20151
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20152
tp20153
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20154
tp20155
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xfe\xff\xff\xff\xff\xff\xff\xff'
p20156
tp20157
Rp20158
sbasg17
g0
(g18
g5
Ntp20159
Rp20160
sg814
(lp20161
g20093
asg1274
g13088
sbsg73
g13092
sbasg17
g0
(g18
g5
Ntp20162
Rp20163
sg814
(lp20164
g19998
asg1274
g5036
sbsg73
g13597
sbasg17
g0
(g18
g5
Ntp20165
Rp20166
sg814
(lp20167
g19903
asg1274
g2356
sbsg73
g2347
sbasg17
g0
(g18
g5
Ntp20168
Rp20169
sg814
(lp20170
g19878
asg1274
g2759
sbsg73
g2762
sbasg17
g0
(g18
g5
Ntp20171
Rp20172
sg814
(lp20173
g19490
asg1274
g14677
sbsg73
g16994
sbag0
(g563
g5
Ntp20174
Rp20175
(dp20176
g14
S'auto_14584'
p20177
sg16
I0
sg17
g0
(g18
g5
Ntp20178
Rp20179
(dp20180
g22
g9373
sbsg53
Nsg85
g0
(g809
g5
Ntp20181
Rp20182
(dp20183
g552
(lp20184
g18567
ag0
(g563
g5
Ntp20185
Rp20186
(dp20187
g14
S'auto_14581'
p20188
sg16
I0
sg17
g0
(g18
g5
Ntp20189
Rp20190
(dp20191
g22
(lp20192
(lp20193
(g25
I306
g26
S'nade_train( * args[1:] )'
p20194
tp20195
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20196
tp20197
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20198
tp20199
a(g37
I36
g38
S'self.recompile()'
p20200
tp20201
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20202
tp20203
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20204
tp20205
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20206
tp20207
aasbsg53
Nsg85
g0
(g809
g5
Ntp20208
Rp20209
(dp20210
g552
(lp20211
g0
(g563
g5
Ntp20212
Rp20213
(dp20214
g14
S'auto_14580'
p20215
sg16
I0
sg17
g0
(g18
g5
Ntp20216
Rp20217
(dp20218
g22
(lp20219
(lp20220
(g25
I306
g26
S'nade_train( * args[1:] )'
p20221
tp20222
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20223
tp20224
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20225
tp20226
a(g37
I36
g38
S'self.recompile()'
p20227
tp20228
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20229
tp20230
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20231
tp20232
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20233
tp20234
aasbsg53
Nsg85
g0
(g809
g5
Ntp20235
Rp20236
(dp20237
g552
(lp20238
g19528
asg17
g0
(g18
g5
Ntp20239
Rp20240
sg814
(lp20241
g20213
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20242
Rp20243
(dp20244
g14
S'auto_14342'
p20245
sg16
Nsg17
g0
(g18
g5
Ntp20246
Rp20247
(dp20248
g22
(lp20249
(lp20250
(g25
I306
g26
S'nade_train( * args[1:] )'
p20251
tp20252
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20253
tp20254
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20255
tp20256
a(g37
I36
g38
S'self.recompile()'
p20257
tp20258
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20259
tp20260
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20261
tp20262
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20263
tp20264
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p20265
tp20266
Rp20267
sbag0
(g3250
g5
Ntp20268
Rp20269
(dp20270
g14
S'auto_14343'
p20271
sg16
Nsg17
g0
(g18
g5
Ntp20272
Rp20273
(dp20274
g22
(lp20275
(lp20276
(g25
I306
g26
S'nade_train( * args[1:] )'
p20277
tp20278
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20279
tp20280
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20281
tp20282
a(g37
I36
g38
S'self.recompile()'
p20283
tp20284
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20285
tp20286
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20287
tp20288
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20289
tp20290
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p20291
tp20292
Rp20293
sbasg17
g0
(g18
g5
Ntp20294
Rp20295
sg814
(lp20296
g20186
asg1274
g0
(g3357
g5
Ntp20297
Rp20298
(dp20299
g3361
(g13343
(g1465
g1465
Ntp20300
Rp20301
tp20302
sbsbsg73
g0
(g74
g5
Ntp20303
Rp20304
(dp20305
g78
(I00
tp20306
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp20307
Rp20308
(dp20309
g14
S'auto_14583'
p20310
sg16
I0
sg17
g0
(g18
g5
Ntp20311
Rp20312
(dp20313
g22
g14273
sbsg53
Nsg85
g0
(g809
g5
Ntp20314
Rp20315
(dp20316
g552
(lp20317
g0
(g563
g5
Ntp20318
Rp20319
(dp20320
g14
S'auto_14582'
p20321
sg16
I0
sg17
g0
(g18
g5
Ntp20322
Rp20323
(dp20324
g22
g16442
sbsg53
Nsg85
g0
(g809
g5
Ntp20325
Rp20326
(dp20327
g552
(lp20328
g19889
asg17
g0
(g18
g5
Ntp20329
Rp20330
sg814
(lp20331
g20319
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20332
Rp20333
(dp20334
g14
S'auto_14346'
p20335
sg16
Nsg17
g0
(g18
g5
Ntp20336
Rp20337
(dp20338
g22
(lp20339
(lp20340
(g25
I306
g26
S'nade_train( * args[1:] )'
p20341
tp20342
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20343
tp20344
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20345
tp20346
a(g37
I36
g38
S'self.recompile()'
p20347
tp20348
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20349
tp20350
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20351
tp20352
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20353
tp20354
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p20355
tp20356
Rp20357
sbag0
(g3250
g5
Ntp20358
Rp20359
(dp20360
g14
S'auto_14347'
p20361
sg16
Nsg17
g0
(g18
g5
Ntp20362
Rp20363
(dp20364
g22
(lp20365
(lp20366
(g25
I306
g26
S'nade_train( * args[1:] )'
p20367
tp20368
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20369
tp20370
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20371
tp20372
a(g37
I36
g38
S'self.recompile()'
p20373
tp20374
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20375
tp20376
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20377
tp20378
a(g874
I219
g875
S'z_sigma = T.tensordot(h, self.V_sigma, [[1], [1]]) + T.shape_padleft(self.b_sigma)'
p20379
tp20380
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p20381
tp20382
Rp20383
sbasg17
g0
(g18
g5
Ntp20384
Rp20385
sg814
(lp20386
g20308
asg1274
g14286
sbsg73
g14292
sbasg17
g0
(g18
g5
Ntp20387
Rp20388
sg814
(lp20389
g20175
asg1274
g7645
sbsg73
g9425
sbasg17
g0
(g18
g5
Ntp20390
Rp20391
sg814
(lp20392
g19479
asg1274
g2672
sbsg73
g2662
sbag0
(g563
g5
Ntp20393
Rp20394
(dp20395
g14
S'auto_14586'
p20396
sg16
I0
sg17
g0
(g18
g5
Ntp20397
Rp20398
(dp20399
g22
g2489
sbsg53
Nsg85
g0
(g809
g5
Ntp20400
Rp20401
(dp20402
g552
(lp20403
g12
asg17
g0
(g18
g5
Ntp20404
Rp20405
sg814
(lp20406
g20394
asg1274
g2525
sbsg73
g2540
sbasg17
g0
(g18
g5
Ntp20407
Rp20408
sg814
(lp20409
g19468
asg1274
g8877
sbsg73
g8966
sbasg17
g0
(g18
g5
Ntp20410
Rp20411
sg814
(lp20412
g19457
asg1274
g377
sbsg73
g8977
sbasg17
g0
(g18
g5
Ntp20413
Rp20414
sg814
(lp20415
g18278
asg1274
g8988
sbsg73
g9000
sbasg17
g0
(g18
g5
Ntp20416
Rp20417
sg814
(lp20418
g18267
asg1274
g9011
sbsg73
g9023
sbasg17
g0
(g18
g5
Ntp20419
Rp20420
sg814
(lp20421
g18220
asg1274
g5036
sbsg73
g9034
sbag0
(g563
g5
Ntp20422
Rp20423
(dp20424
g14
S'auto_14592'
p20425
sg16
I0
sg17
g0
(g18
g5
Ntp20426
Rp20427
(dp20428
g22
g6122
sbsg53
Nsg85
g0
(g809
g5
Ntp20429
Rp20430
(dp20431
g552
(lp20432
g19457
asg17
g0
(g18
g5
Ntp20433
Rp20434
sg814
(lp20435
g20423
asg1274
g6150
sbsg73
g6160
sbasg17
g0
(g18
g5
Ntp20436
Rp20437
sg814
(lp20438
g18209
asg1274
g4101
sbsg73
g14877
sbag0
(g563
g5
Ntp20439
Rp20440
(dp20441
g14
S'auto_14594'
p20442
sg16
I0
sg17
g0
(g18
g5
Ntp20443
Rp20444
(dp20445
g22
g14888
sbsg53
Nsg85
g0
(g809
g5
Ntp20446
Rp20447
(dp20448
g552
(lp20449
g0
(g843
g5
Ntp20450
Rp20451
(dp20452
g14
S'auto_331'
p20453
sg16
Nsg17
g0
(g18
g5
Ntp20454
Rp20455
(dp20456
g22
g14915
sg878
Nsbsg53
Nsg18259
I01
sg73
g14932
sg883
g14938
sbasg17
g0
(g18
g5
Ntp20457
Rp20458
sg814
(lp20459
g20440
asg1274
g14949
sbsg73
g14964
sbasg17
g0
(g18
g5
Ntp20460
Rp20461
sg814
(lp20462
g18198
asg1274
g4101
sbsg73
g14975
sbag0
(g563
g5
Ntp20463
Rp20464
(dp20465
g14
S'auto_14630'
p20466
sg16
I0
sg17
g0
(g18
g5
Ntp20467
Rp20468
(dp20469
g22
g9045
sbsg53
Nsg85
g0
(g809
g5
Ntp20470
Rp20471
(dp20472
g552
(lp20473
g0
(g563
g5
Ntp20474
Rp20475
(dp20476
g14
S'auto_14629'
p20477
sg16
I0
sg17
g0
(g18
g5
Ntp20478
Rp20479
(dp20480
g22
g9073
sbsg53
Nsg85
g0
(g809
g5
Ntp20481
Rp20482
(dp20483
g552
(lp20484
g0
(g563
g5
Ntp20485
Rp20486
(dp20487
g14
S'auto_14626'
p20488
sg16
I0
sg17
g0
(g18
g5
Ntp20489
Rp20490
(dp20491
g22
g9101
sbsg53
Nsg85
g0
(g809
g5
Ntp20492
Rp20493
(dp20494
g552
(lp20495
g0
(g563
g5
Ntp20496
Rp20497
(dp20498
g14
S'auto_14625'
p20499
sg16
I0
sg17
g0
(g18
g5
Ntp20500
Rp20501
(dp20502
g22
g9129
sbsg53
Nsg85
g0
(g809
g5
Ntp20503
Rp20504
(dp20505
g552
(lp20506
g0
(g563
g5
Ntp20507
Rp20508
(dp20509
g14
S'auto_14623'
p20510
sg16
I0
sg17
g0
(g18
g5
Ntp20511
Rp20512
(dp20513
g22
g2028
sbsg53
Nsg85
g0
(g809
g5
Ntp20514
Rp20515
(dp20516
g552
(lp20517
g0
(g563
g5
Ntp20518
Rp20519
(dp20520
g14
S'auto_14617'
p20521
sg16
I0
sg17
g0
(g18
g5
Ntp20522
Rp20523
(dp20524
g22
g14663
sbsg53
Nsg85
g0
(g809
g5
Ntp20525
Rp20526
(dp20527
g552
(lp20528
g0
(g563
g5
Ntp20529
Rp20530
(dp20531
g14
S'auto_14604'
p20532
sg16
I0
sg17
g0
(g18
g5
Ntp20533
Rp20534
(dp20535
g22
(lp20536
(lp20537
(g25
I306
g26
S'nade_train( * args[1:] )'
p20538
tp20539
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20540
tp20541
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20542
tp20543
a(g37
I36
g38
S'self.recompile()'
p20544
tp20545
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20546
tp20547
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20548
tp20549
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20550
tp20551
aasbsg53
Nsg85
g0
(g809
g5
Ntp20552
Rp20553
(dp20554
g552
(lp20555
g0
(g563
g5
Ntp20556
Rp20557
(dp20558
g14
S'auto_14596'
p20559
sg16
I0
sg17
g0
(g18
g5
Ntp20560
Rp20561
(dp20562
g22
g13853
sbsg53
Nsg85
g0
(g809
g5
Ntp20563
Rp20564
(dp20565
g552
(lp20566
g18371
asg17
g0
(g18
g5
Ntp20567
Rp20568
sg814
(lp20569
g20557
asg1274
g14014
sbsg73
g14030
sbag0
(g563
g5
Ntp20570
Rp20571
(dp20572
g14
S'auto_14603'
p20573
sg16
I0
sg17
g0
(g18
g5
Ntp20574
Rp20575
(dp20576
g22
(lp20577
(lp20578
(g25
I306
g26
S'nade_train( * args[1:] )'
p20579
tp20580
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20581
tp20582
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20583
tp20584
a(g37
I36
g38
S'self.recompile()'
p20585
tp20586
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20587
tp20588
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20589
tp20590
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20591
tp20592
aasbsg53
Nsg85
g0
(g809
g5
Ntp20593
Rp20594
(dp20595
g552
(lp20596
g0
(g563
g5
Ntp20597
Rp20598
(dp20599
g14
S'auto_14599'
p20600
sg16
I0
sg17
g0
(g18
g5
Ntp20601
Rp20602
(dp20603
g22
(lp20604
(lp20605
(g25
I306
g26
S'nade_train( * args[1:] )'
p20606
tp20607
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20608
tp20609
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20610
tp20611
a(g37
I36
g38
S'self.recompile()'
p20612
tp20613
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20614
tp20615
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20616
tp20617
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20618
tp20619
aasbsg53
Nsg85
g0
(g809
g5
Ntp20620
Rp20621
(dp20622
g552
(lp20623
g18762
ag0
(g563
g5
Ntp20624
Rp20625
(dp20626
g14
S'auto_14598'
p20627
sg16
I0
sg17
g0
(g18
g5
Ntp20628
Rp20629
(dp20630
g22
(lp20631
(lp20632
(g25
I306
g26
S'nade_train( * args[1:] )'
p20633
tp20634
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20635
tp20636
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20637
tp20638
a(g37
I36
g38
S'self.recompile()'
p20639
tp20640
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20641
tp20642
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20643
tp20644
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20645
tp20646
aasbsg53
Nsg85
g0
(g809
g5
Ntp20647
Rp20648
(dp20649
g552
(lp20650
g0
(g563
g5
Ntp20651
Rp20652
(dp20653
g14
S'auto_14597'
p20654
sg16
I0
sg17
g0
(g18
g5
Ntp20655
Rp20656
(dp20657
g22
(lp20658
(lp20659
(g25
I306
g26
S'nade_train( * args[1:] )'
p20660
tp20661
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20662
tp20663
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20664
tp20665
a(g37
I36
g38
S'self.recompile()'
p20666
tp20667
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20668
tp20669
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20670
tp20671
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20672
tp20673
aasbsg53
Nsg85
g0
(g809
g5
Ntp20674
Rp20675
(dp20676
g552
(lp20677
g20557
asg17
g0
(g18
g5
Ntp20678
Rp20679
sg814
(lp20680
g20652
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20681
Rp20682
(dp20683
g14
S'auto_14209'
p20684
sg16
Nsg17
g0
(g18
g5
Ntp20685
Rp20686
(dp20687
g22
(lp20688
(lp20689
(g25
I306
g26
S'nade_train( * args[1:] )'
p20690
tp20691
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20692
tp20693
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20694
tp20695
a(g37
I36
g38
S'self.recompile()'
p20696
tp20697
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20698
tp20699
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20700
tp20701
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20702
tp20703
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p20704
tp20705
Rp20706
sbasg17
g0
(g18
g5
Ntp20707
Rp20708
sg814
(lp20709
g20625
asg1274
g0
(g3357
g5
Ntp20710
Rp20711
(dp20712
g3361
(g1465
tp20713
sbsbsg73
g0
(g74
g5
Ntp20714
Rp20715
(dp20716
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp20717
Rp20718
sg814
(lp20719
g20598
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp20720
Rp20721
(dp20722
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp20723
Rp20724
(dp20725
g14
S'auto_14602'
p20726
sg16
I0
sg17
g0
(g18
g5
Ntp20727
Rp20728
(dp20729
g22
(lp20730
(lp20731
(g25
I306
g26
S'nade_train( * args[1:] )'
p20732
tp20733
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20734
tp20735
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20736
tp20737
a(g37
I36
g38
S'self.recompile()'
p20738
tp20739
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20740
tp20741
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20742
tp20743
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20744
tp20745
aasbsg53
Nsg85
g0
(g809
g5
Ntp20746
Rp20747
(dp20748
g552
(lp20749
g18762
ag0
(g563
g5
Ntp20750
Rp20751
(dp20752
g14
S'auto_14601'
p20753
sg16
I0
sg17
g0
(g18
g5
Ntp20754
Rp20755
(dp20756
g22
(lp20757
(lp20758
(g25
I306
g26
S'nade_train( * args[1:] )'
p20759
tp20760
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20761
tp20762
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20763
tp20764
a(g37
I36
g38
S'self.recompile()'
p20765
tp20766
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20767
tp20768
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20769
tp20770
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20771
tp20772
aasbsg53
Nsg85
g0
(g809
g5
Ntp20773
Rp20774
(dp20775
g552
(lp20776
g0
(g563
g5
Ntp20777
Rp20778
(dp20779
g14
S'auto_14600'
p20780
sg16
I0
sg17
g0
(g18
g5
Ntp20781
Rp20782
(dp20783
g22
(lp20784
(lp20785
(g25
I306
g26
S'nade_train( * args[1:] )'
p20786
tp20787
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20788
tp20789
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20790
tp20791
a(g37
I36
g38
S'self.recompile()'
p20792
tp20793
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20794
tp20795
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20796
tp20797
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20798
tp20799
aasbsg53
Nsg85
g0
(g809
g5
Ntp20800
Rp20801
(dp20802
g552
(lp20803
g20557
asg17
g0
(g18
g5
Ntp20804
Rp20805
sg814
(lp20806
g20778
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20807
Rp20808
(dp20809
g14
S'auto_14195'
p20810
sg16
Nsg17
g0
(g18
g5
Ntp20811
Rp20812
(dp20813
g22
(lp20814
(lp20815
(g25
I306
g26
S'nade_train( * args[1:] )'
p20816
tp20817
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20818
tp20819
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20820
tp20821
a(g37
I36
g38
S'self.recompile()'
p20822
tp20823
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20824
tp20825
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20826
tp20827
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20828
tp20829
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p20830
tp20831
Rp20832
sbasg17
g0
(g18
g5
Ntp20833
Rp20834
sg814
(lp20835
g20751
asg1274
g0
(g3357
g5
Ntp20836
Rp20837
(dp20838
g3361
(g1465
tp20839
sbsbsg73
g0
(g74
g5
Ntp20840
Rp20841
(dp20842
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp20843
Rp20844
sg814
(lp20845
g20724
asg1274
g5036
sbsg73
g0
(g74
g5
Ntp20846
Rp20847
(dp20848
g78
(tsg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp20849
Rp20850
sg814
(lp20851
g20571
asg1274
g0
(g1308
g5
Ntp20852
Rp20853
(dp20854
g80
S'int64'
p20855
sbsbsg73
g0
(g74
g5
Ntp20856
Rp20857
(dp20858
g78
(I00
tp20859
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp20860
Rp20861
sg814
(lp20862
g20530
asg1274
g0
(g1352
g5
Ntp20863
Rp20864
(dp20865
g1356
I2
sbsbsg73
g0
(g74
g5
Ntp20866
Rp20867
(dp20868
g78
(I00
I00
tp20869
sg80
g251
sg82
g66
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp20870
Rp20871
(dp20872
g14
S'auto_14616'
p20873
sg16
I0
sg17
g0
(g18
g5
Ntp20874
Rp20875
(dp20876
g22
g2096
sbsg53
Nsg85
g0
(g809
g5
Ntp20877
Rp20878
(dp20879
g552
(lp20880
g0
(g563
g5
Ntp20881
Rp20882
(dp20883
g14
S'auto_14605'
p20884
sg16
I0
sg17
g0
(g18
g5
Ntp20885
Rp20886
(dp20887
g22
g2129
sbsg53
Nsg85
g0
(g809
g5
Ntp20888
Rp20889
(dp20890
g552
(lp20891
g90
asg17
g0
(g18
g5
Ntp20892
Rp20893
sg814
(lp20894
g20882
asg1274
g2155
sbsg73
g2146
sbag0
(g563
g5
Ntp20895
Rp20896
(dp20897
g14
S'auto_14615'
p20898
sg16
I0
sg17
g0
(g18
g5
Ntp20899
Rp20900
(dp20901
g22
g1606
sbsg53
Nsg85
g0
(g809
g5
Ntp20902
Rp20903
(dp20904
g552
(lp20905
g0
(g563
g5
Ntp20906
Rp20907
(dp20908
g14
S'auto_14608'
p20909
sg16
I0
sg17
g0
(g18
g5
Ntp20910
Rp20911
(dp20912
g22
g10545
sbsg53
Nsg85
g0
(g809
g5
Ntp20913
Rp20914
(dp20915
g552
(lp20916
g18762
ag0
(g563
g5
Ntp20917
Rp20918
(dp20919
g14
S'auto_14607'
p20920
sg16
I0
sg17
g0
(g18
g5
Ntp20921
Rp20922
(dp20923
g22
g10573
sbsg53
Nsg85
g0
(g809
g5
Ntp20924
Rp20925
(dp20926
g552
(lp20927
g0
(g563
g5
Ntp20928
Rp20929
(dp20930
g14
S'auto_14606'
p20931
sg16
I0
sg17
g0
(g18
g5
Ntp20932
Rp20933
(dp20934
g22
(lp20935
(lp20936
(g25
I306
g26
S'nade_train( * args[1:] )'
p20937
tp20938
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20939
tp20940
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20941
tp20942
a(g37
I36
g38
S'self.recompile()'
p20943
tp20944
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20945
tp20946
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20947
tp20948
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20949
tp20950
aasbsg53
Nsg85
g0
(g809
g5
Ntp20951
Rp20952
(dp20953
g552
(lp20954
g20882
asg17
g0
(g18
g5
Ntp20955
Rp20956
sg814
(lp20957
g20929
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp20958
Rp20959
(dp20960
g14
S'auto_14202'
p20961
sg16
Nsg17
g0
(g18
g5
Ntp20962
Rp20963
(dp20964
g22
(lp20965
(lp20966
(g25
I306
g26
S'nade_train( * args[1:] )'
p20967
tp20968
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p20969
tp20970
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p20971
tp20972
a(g37
I36
g38
S'self.recompile()'
p20973
tp20974
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p20975
tp20976
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p20977
tp20978
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p20979
tp20980
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p20981
tp20982
Rp20983
sbasg17
g0
(g18
g5
Ntp20984
Rp20985
sg814
(lp20986
g20918
asg1274
g10640
sbsg73
g10644
sbasg17
g0
(g18
g5
Ntp20987
Rp20988
sg814
(lp20989
g20907
asg1274
g5036
sbsg73
g10654
sbag0
(g563
g5
Ntp20990
Rp20991
(dp20992
g14
S'auto_14614'
p20993
sg16
I0
sg17
g0
(g18
g5
Ntp20994
Rp20995
(dp20996
g22
g17121
sbsg53
Nsg85
g0
(g809
g5
Ntp20997
Rp20998
(dp20999
g552
(lp21000
g0
(g563
g5
Ntp21001
Rp21002
(dp21003
g14
S'auto_14611'
p21004
sg16
I0
sg17
g0
(g18
g5
Ntp21005
Rp21006
(dp21007
g22
g16889
sbsg53
Nsg85
g0
(g809
g5
Ntp21008
Rp21009
(dp21010
g552
(lp21011
g18762
ag0
(g563
g5
Ntp21012
Rp21013
(dp21014
g14
S'auto_14610'
p21015
sg16
I0
sg17
g0
(g18
g5
Ntp21016
Rp21017
(dp21018
g22
g14231
sbsg53
Nsg85
g0
(g809
g5
Ntp21019
Rp21020
(dp21021
g552
(lp21022
g0
(g563
g5
Ntp21023
Rp21024
(dp21025
g14
S'auto_14609'
p21026
sg16
I0
sg17
g0
(g18
g5
Ntp21027
Rp21028
(dp21029
g22
(lp21030
(lp21031
(g25
I306
g26
S'nade_train( * args[1:] )'
p21032
tp21033
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p21034
tp21035
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p21036
tp21037
a(g37
I36
g38
S'self.recompile()'
p21038
tp21039
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p21040
tp21041
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p21042
tp21043
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p21044
tp21045
aasbsg53
Nsg85
g0
(g809
g5
Ntp21046
Rp21047
(dp21048
g552
(lp21049
g20882
asg17
g0
(g18
g5
Ntp21050
Rp21051
sg814
(lp21052
g21024
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp21053
Rp21054
(dp21055
g14
S'auto_14216'
p21056
sg16
Nsg17
g0
(g18
g5
Ntp21057
Rp21058
(dp21059
g22
g10247
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xff\xff\xff\xff\xff\xff\xff\xff'
p21060
tp21061
Rp21062
sbasg17
g0
(g18
g5
Ntp21063
Rp21064
sg814
(lp21065
g21013
asg1274
g14259
sbsg73
g14263
sbasg17
g0
(g18
g5
Ntp21066
Rp21067
sg814
(lp21068
g21002
asg1274
g5036
sbsg73
g16917
sbag0
(g563
g5
Ntp21069
Rp21070
(dp21071
g14
S'auto_14613'
p21072
sg16
I0
sg17
g0
(g18
g5
Ntp21073
Rp21074
(dp21075
g22
g15539
sbsg53
Nsg85
g0
(g809
g5
Ntp21076
Rp21077
(dp21078
g552
(lp21079
g0
(g563
g5
Ntp21080
Rp21081
(dp21082
g14
S'auto_14612'
p21083
sg16
I0
sg17
g0
(g18
g5
Ntp21084
Rp21085
(dp21086
g22
(lp21087
(lp21088
(g25
I306
g26
S'nade_train( * args[1:] )'
p21089
tp21090
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p21091
tp21092
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p21093
tp21094
a(g37
I36
g38
S'self.recompile()'
p21095
tp21096
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p21097
tp21098
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p21099
tp21100
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p21101
tp21102
aasbsg53
Nsg85
g0
(g809
g5
Ntp21103
Rp21104
(dp21105
g552
(lp21106
g20882
asg17
g0
(g18
g5
Ntp21107
Rp21108
sg814
(lp21109
g21081
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp21110
Rp21111
(dp21112
g14
S'auto_14223'
p21113
sg16
Nsg17
g0
(g18
g5
Ntp21114
Rp21115
(dp21116
g22
g13060
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\xfe\xff\xff\xff\xff\xff\xff\xff'
p21117
tp21118
Rp21119
sbasg17
g0
(g18
g5
Ntp21120
Rp21121
sg814
(lp21122
g21070
asg1274
g15567
sbsg73
g15571
sbasg17
g0
(g18
g5
Ntp21123
Rp21124
sg814
(lp21125
g20991
asg1274
g5036
sbsg73
g17149
sbasg17
g0
(g18
g5
Ntp21126
Rp21127
sg814
(lp21128
g20896
asg1274
g1669
sbsg73
g1673
sbasg17
g0
(g18
g5
Ntp21129
Rp21130
sg814
(lp21131
g20871
asg1274
g2122
sbsg73
g2113
sbasg17
g0
(g18
g5
Ntp21132
Rp21133
sg814
(lp21134
g20519
asg1274
g14677
sbsg73
g14679
sbag0
(g563
g5
Ntp21135
Rp21136
(dp21137
g14
S'auto_14622'
p21138
sg16
I0
sg17
g0
(g18
g5
Ntp21139
Rp21140
(dp21141
g22
g10664
sbsg53
Nsg85
g0
(g809
g5
Ntp21142
Rp21143
(dp21144
g552
(lp21145
g18567
ag0
(g563
g5
Ntp21146
Rp21147
(dp21148
g14
S'auto_14619'
p21149
sg16
I0
sg17
g0
(g18
g5
Ntp21150
Rp21151
(dp21152
g22
(lp21153
(lp21154
(g25
I306
g26
S'nade_train( * args[1:] )'
p21155
tp21156
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p21157
tp21158
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p21159
tp21160
a(g37
I36
g38
S'self.recompile()'
p21161
tp21162
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p21163
tp21164
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p21165
tp21166
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p21167
tp21168
aasbsg53
Nsg85
g0
(g809
g5
Ntp21169
Rp21170
(dp21171
g552
(lp21172
g0
(g563
g5
Ntp21173
Rp21174
(dp21175
g14
S'auto_14618'
p21176
sg16
I0
sg17
g0
(g18
g5
Ntp21177
Rp21178
(dp21179
g22
g15328
sbsg53
Nsg85
g0
(g809
g5
Ntp21180
Rp21181
(dp21182
g552
(lp21183
g20557
asg17
g0
(g18
g5
Ntp21184
Rp21185
sg814
(lp21186
g21174
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp21187
Rp21188
(dp21189
g14
S'auto_14186'
p21190
sg16
Nsg17
g0
(g18
g5
Ntp21191
Rp21192
(dp21193
g22
(lp21194
(lp21195
(g25
I306
g26
S'nade_train( * args[1:] )'
p21196
tp21197
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p21198
tp21199
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p21200
tp21201
a(g37
I36
g38
S'self.recompile()'
p21202
tp21203
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p21204
tp21205
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p21206
tp21207
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p21208
tp21209
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x00\x00\x00\x00\x00\x00\x00\x00'
p21210
tp21211
Rp21212
sbag0
(g3250
g5
Ntp21213
Rp21214
(dp21215
g14
S'auto_14187'
p21216
sg16
Nsg17
g0
(g18
g5
Ntp21217
Rp21218
(dp21219
g22
(lp21220
(lp21221
(g25
I306
g26
S'nade_train( * args[1:] )'
p21222
tp21223
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p21224
tp21225
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p21226
tp21227
a(g37
I36
g38
S'self.recompile()'
p21228
tp21229
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p21230
tp21231
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p21232
tp21233
a(g874
I217
g875
S'z_alpha = T.tensordot(h, self.V_alpha, [[1], [1]]) + T.shape_padleft(self.b_alpha)'
p21234
tp21235
aasbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p21236
tp21237
Rp21238
sbasg17
g0
(g18
g5
Ntp21239
Rp21240
sg814
(lp21241
g21147
asg1274
g0
(g3357
g5
Ntp21242
Rp21243
(dp21244
g3361
(g13343
(g1465
g1465
Ntp21245
Rp21246
tp21247
sbsbsg73
g0
(g74
g5
Ntp21248
Rp21249
(dp21250
g78
(I00
tp21251
sg80
g1283
sg82
g1286
sg83
I00
sg53
Nsbsbag0
(g563
g5
Ntp21252
Rp21253
(dp21254
g14
S'auto_14621'
p21255
sg16
I0
sg17
g0
(g18
g5
Ntp21256
Rp21257
(dp21258
g22
g13326
sbsg53
Nsg85
g0
(g809
g5
Ntp21259
Rp21260
(dp21261
g552
(lp21262
g0
(g563
g5
Ntp21263
Rp21264
(dp21265
g14
S'auto_14620'
p21266
sg16
I0
sg17
g0
(g18
g5
Ntp21267
Rp21268
(dp21269
g22
g13122
sbsg53
Nsg85
g0
(g809
g5
Ntp21270
Rp21271
(dp21272
g552
(lp21273
g20882
asg17
g0
(g18
g5
Ntp21274
Rp21275
sg814
(lp21276
g21264
asg1274
g12776
sbsg73
g12778
sbag0
(g3250
g5
Ntp21277
Rp21278
(dp21279
g14
S'auto_14190'
p21280
sg16
Nsg17
g0
(g18
g5
Ntp21281
Rp21282
(dp21283
g22
g13246
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x01\x00\x00\x00\x00\x00\x00\x00'
p21284
tp21285
Rp21286
sbag0
(g3250
g5
Ntp21287
Rp21288
(dp21289
g14
S'auto_14191'
p21290
sg16
Nsg17
g0
(g18
g5
Ntp21291
Rp21292
(dp21293
g22
g13274
sbsg53
Nsg73
g1465
sg883
g879
(g1286
S'\x03\x00\x00\x00\x00\x00\x00\x00'
p21294
tp21295
Rp21296
sbasg17
g0
(g18
g5
Ntp21297
Rp21298
sg814
(lp21299
g21253
asg1274
g13339
sbsg73
g13348
sbasg17
g0
(g18
g5
Ntp21300
Rp21301
sg814
(lp21302
g21136
asg1274
g7645
sbsg73
g10716
sbasg17
g0
(g18
g5
Ntp21303
Rp21304
sg814
(lp21305
g20508
asg1274
g2055
sbsg73
g2045
sbag0
(g563
g5
Ntp21306
Rp21307
(dp21308
g14
S'auto_14624'
p21309
sg16
I0
sg17
g0
(g18
g5
Ntp21310
Rp21311
(dp21312
g22
g1741
sbsg53
Nsg85
g0
(g809
g5
Ntp21313
Rp21314
(dp21315
g552
(lp21316
g774
asg17
g0
(g18
g5
Ntp21317
Rp21318
sg814
(lp21319
g21307
asg1274
g1777
sbsg73
g1792
sbasg17
g0
(g18
g5
Ntp21320
Rp21321
sg814
(lp21322
g20497
asg1274
g8877
sbsg73
g9157
sbasg17
g0
(g18
g5
Ntp21323
Rp21324
sg814
(lp21325
g20486
asg1274
g377
sbsg73
g9168
sbag0
(g563
g5
Ntp21326
Rp21327
(dp21328
g14
S'auto_14628'
p21329
sg16
I0
sg17
g0
(g18
g5
Ntp21330
Rp21331
(dp21332
g22
g1823
sbsg53
Nsg85
g0
(g809
g5
Ntp21333
Rp21334
(dp21335
g552
(lp21336
g0
(g563
g5
Ntp21337
Rp21338
(dp21339
g14
S'auto_14627'
p21340
sg16
I0
sg17
g0
(g18
g5
Ntp21341
Rp21342
(dp21343
g22
g1869
sbsg53
Nsg85
g0
(g809
g5
Ntp21344
Rp21345
(dp21346
g552
(lp21347
g20486
asg17
g0
(g18
g5
Ntp21348
Rp21349
sg814
(lp21350
g21338
asg1274
g1895
sbsg73
g1886
sbasg17
g0
(g18
g5
Ntp21351
Rp21352
sg814
(lp21353
g21327
asg1274
g1849
sbsg73
g1840
sbasg17
g0
(g18
g5
Ntp21354
Rp21355
sg814
(lp21356
g20475
asg1274
g8988
sbsg73
g9179
sbasg17
g0
(g18
g5
Ntp21357
Rp21358
sg814
(lp21359
g20464
asg1274
g6150
sbsg73
g9190
sbasg17
g0
(g18
g5
Ntp21360
Rp21361
sg814
(lp21362
g18187
asg1274
g8877
sbsg73
g14986
sbasg17
g0
(g18
g5
Ntp21363
Rp21364
sg814
(lp21365
g18176
ag0
(g563
g5
Ntp21366
Rp21367
(dp21368
g14
S'auto_14633'
p21369
sg16
I1
sg17
g0
(g18
g5
Ntp21370
Rp21371
(dp21372
g22
g10064
sbsg53
g10058
sg85
g18183
sg73
g10111
sbasg1274
g10107
sbsg73
g10097
sbag0
(g563
g5
Ntp21373
Rp21374
(dp21375
g14
S'auto_14638'
p21376
sg16
I0
sg17
g0
(g18
g5
Ntp21377
Rp21378
(dp21379
g22
g8621
sbsg53
Nsg85
g0
(g809
g5
Ntp21380
Rp21381
(dp21382
g552
(lp21383
g0
(g563
g5
Ntp21384
Rp21385
(dp21386
g14
S'auto_14637'
p21387
sg16
I0
sg17
g0
(g18
g5
Ntp21388
Rp21389
(dp21390
g22
g8651
sbsg53
Nsg85
g0
(g809
g5
Ntp21391
Rp21392
(dp21393
g552
(lp21394
g0
(g563
g5
Ntp21395
Rp21396
(dp21397
g14
S'auto_14636'
p21398
sg16
I0
sg17
g0
(g18
g5
Ntp21399
Rp21400
(dp21401
g22
g8681
sbsg53
Nsg85
g0
(g809
g5
Ntp21402
Rp21403
(dp21404
g552
(lp21405
g0
(g563
g5
Ntp21406
Rp21407
(dp21408
g14
S'auto_14635'
p21409
sg16
I0
sg17
g0
(g18
g5
Ntp21410
Rp21411
(dp21412
g22
g14763
sbsg53
Nsg85
g0
(g809
g5
Ntp21413
Rp21414
(dp21415
g552
(lp21416
g18187
ag0
(g563
g5
Ntp21417
Rp21418
(dp21419
g14
S'auto_14634'
p21420
sg16
I0
sg17
g0
(g18
g5
Ntp21421
Rp21422
(dp21423
g22
g4465
sbsg53
Nsg85
g0
(g809
g5
Ntp21424
Rp21425
(dp21426
g552
(lp21427
g18176
asg17
g0
(g18
g5
Ntp21428
Rp21429
sg814
(lp21430
g21418
asg1274
g4495
sbsg73
g4486
sbasg17
g0
(g18
g5
Ntp21431
Rp21432
sg814
(lp21433
g21407
asg1274
g4101
sbsg73
g14997
sbasg17
g0
(g18
g5
Ntp21434
Rp21435
sg814
(lp21436
g21396
asg1274
g377
sbsg73
g9247
sbasg17
g0
(g18
g5
Ntp21437
Rp21438
sg814
(lp21439
g21385
asg1274
g9258
sbsg73
g9262
sbasg17
g0
(g18
g5
Ntp21440
Rp21441
sg814
(lp21442
g21374
asg1274
g6150
sbsg73
g9273
sbasg17
g0
(g18
g5
Ntp21443
Rp21444
sg814
(lp21445
g18165
asg1274
g8877
sbsg73
g16588
sbag0
(g563
g5
Ntp21446
Rp21447
(dp21448
g14
S'auto_14641'
p21449
sg16
I0
sg17
g0
(g18
g5
Ntp21450
Rp21451
(dp21452
g22
g11937
sbsg53
Nsg85
g0
(g809
g5
Ntp21453
Rp21454
(dp21455
g552
(lp21456
g0
(g563
g5
Ntp21457
Rp21458
(dp21459
g14
S'auto_14640'
p21460
sg16
I0
sg17
g0
(g18
g5
Ntp21461
Rp21462
(dp21463
g22
g15814
sbsg53
Nsg85
g0
(g809
g5
Ntp21464
Rp21465
(dp21466
g552
(lp21467
g0
(g843
g5
Ntp21468
Rp21469
(dp21470
g14
S'auto_23'
p21471
sg16
Nsg17
g0
(g18
g5
Ntp21472
Rp21473
(dp21474
g22
g11253
sg878
Nsbsg53
Nsg18259
I01
sg73
g11271
sg883
g11276
sbasg17
g0
(g18
g5
Ntp21475
Rp21476
sg814
(lp21477
g21458
asg1274
g15827
sbsg73
g4542
sbag18473
asg17
g0
(g18
g5
Ntp21478
Rp21479
sg814
(lp21480
g21447
asg1274
g4101
sbsg73
g11965
sbasg17
g0
(g18
g5
Ntp21481
Rp21482
sg814
(lp21483
g18154
asg1274
g5036
sbsg73
g13788
sbasg17
g0
(g18
g5
Ntp21484
Rp21485
sg814
(lp21486
g18143
asg1274
g4753
sbsg73
g4757
sbag0
(g563
g5
Ntp21487
Rp21488
(dp21489
g14
S'auto_14644'
p21490
sg16
I0
sg17
g0
(g18
g5
Ntp21491
Rp21492
(dp21493
g22
(lp21494
(lp21495
(g25
I306
g26
S'nade_train( * args[1:] )'
p21496
tp21497
a(g29
I240
g30
S'nade = nade_class.create_from_smaller_NADE(nade, add_n_hiddens=1)'
p21498
tp21499
a(g33
I48
g34
S'model = cls(n_visible, n_hidden, n_layers + add_n_hiddens, n_components, nonlinearity)'
p21500
tp21501
a(g37
I36
g38
S'self.recompile()'
p21502
tp21503
a(g581
I125
g582
S'logdensity = self.sym_mask_logdensity_estimator(x, m)'
p21504
tp21505
a(g870
I237
g871
S'logdensity, z_alpha, z_mu, z_sigma, Alpha, Mu, Sigma, top_h = self.sym_mask_logdensity_estimator_intermediate(x, mask)'
p21506
tp21507
a(g874
I232
g875
S'logdensity = (log_sum_exp(Phi + T.log(Alpha), axis=2) * output_mask).sum(1) * D / (D - d)'
p21508
tp21509
aasbsg53
Nsg85
g0
(g809
g5
Ntp21510
Rp21511
(dp21512
g552
(lp21513
g0
(g843
g5
Ntp21514
Rp21515
(dp21516
g14
S'auto_14138'
p21517
sg16
Nsg17
g0
(g18
g5
Ntp21518
Rp21519
(dp21520
g22
g14704
sg878
Nsbsg53
Nsg73
g14723
sg883
g14728
sbasg17
g0
(g18
g5
Ntp21521
Rp21522
sg814
(lp21523
g21488
asg1274
g0
(g1387
g5
Ntp21524
Rp21525
(dp21526
g1391
(lp21527
sg1393
(lp21528
sg1395
(lp21529
I0
asg1397
g1398
sg1399
(tsg1401
(lp21530
g1403
asg1404
I01
sg1405
(g270
tp21531
sg1407
(dp21532
S'support_code_apply'
p21533
S'\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p21534
ssg1411
(dp21535
I0
(lp21536
I0
assg1414
(lp21537
S'#section support_code_apply\n\nint APPLY_SPECIFIC(cpu_dimshuffle)(PyArrayObject* input, PyArrayObject** res, PARAMS_TYPE* params) {\n    npy_bool* input_broadcastable;\n    npy_int64* new_order;\n    npy_intp nd_in;\n    npy_intp nd_out;\n    PyArrayObject* basename;\n    npy_intp* dimensions;\n    npy_intp* strides;\n\n    if (!PyArray_IS_C_CONTIGUOUS(params->input_broadcastable)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param input_broadcastable must be C-contiguous.");\n        return 1;\n    }\n    if (!PyArray_IS_C_CONTIGUOUS(params->_new_order)) {\n        PyErr_SetString(PyExc_RuntimeError, "DimShuffle: param _new_order must be C-contiguous.");\n        return 1;\n    }\n    input_broadcastable = (npy_bool*) PyArray_DATA(params->input_broadcastable);\n    new_order = (npy_int64*) PyArray_DATA(params->_new_order);\n    nd_in = PyArray_SIZE(params->input_broadcastable);\n    nd_out = PyArray_SIZE(params->_new_order);\n\n    /* check_input_nd */\n    if (PyArray_NDIM(input) != nd_in) {\n        PyErr_SetString(PyExc_NotImplementedError, "input nd");\n        return 1;\n    }\n\n    /* clear_output */\n    if (*res)\n        Py_XDECREF(*res);\n\n    /* get_base */\n    if (params->inplace) {\n        basename = input;\n        Py_INCREF((PyObject*)basename);\n    } else {\n        basename =\n            (PyArrayObject*)PyArray_FromAny((PyObject*)input,\n                                            NULL, 0, 0, NPY_ARRAY_ALIGNED|NPY_ARRAY_ENSURECOPY, NULL);\n    }\n\n    /* shape_statements and strides_statements */\n    dimensions = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    strides = (npy_intp*) malloc(nd_out * sizeof(npy_intp));\n    if (dimensions == NULL || strides == NULL) {\n        PyErr_NoMemory();\n        free(dimensions);\n        free(strides);\n        return 1;\n    };\n\n    for (npy_intp i = 0; i < nd_out; ++i) {\n        if (new_order[i] != -1) {\n            dimensions[i] = PyArray_DIMS(basename)[new_order[i]];\n            strides[i] = PyArray_DIMS(basename)[new_order[i]] == 1 ?\n                            0 : PyArray_STRIDES(basename)[new_order[i]];\n        } else {\n            dimensions[i] = 1;\n            strides[i] = 0;\n        }\n    }\n\n    /* set the strides of the broadcasted dimensions.\n     * This algorithm is from numpy: PyArray_Newshape() in\n     * cvs/numpy/numpy/core/src/multiarraymodule.c */\n    if (nd_out > 0) {\n        if (strides[nd_out - 1] == 0)\n            strides[nd_out - 1] = PyArray_DESCR(basename)->elsize;\n        for (npy_intp i = nd_out - 2; i > -1; --i) {\n            if (strides[i] == 0)\n                strides[i] = strides[i + 1] * dimensions[i + 1];\n        }\n    }\n\n    /* close_bracket */\n    // create a new array.\n    *res = (PyArrayObject*)PyArray_New(&PyArray_Type, nd_out, dimensions,\n                                       PyArray_TYPE(basename), strides,\n                                       PyArray_DATA(basename), PyArray_ITEMSIZE(basename),\n                                       // borrow only the writable flag from the base\n                                       // the NPY_OWNDATA flag will default to 0.\n                                       (NPY_ARRAY_WRITEABLE * PyArray_ISWRITEABLE(basename)),\n                                       NULL);\n\n    if (*res == NULL) {\n        free(dimensions);\n        free(strides);\n        return 1;\n    }\n\n    // recalculate flags: CONTIGUOUS, FORTRAN, ALIGNED\n    PyArray_UpdateFlags(*res, NPY_ARRAY_UPDATE_ALL);\n\n    // we are making a view in both inplace and non-inplace cases\n    PyArray_SetBaseObject(*res, (PyObject*)basename);\n\n    free(strides);\n    free(dimensions);\n\n    return 0;\n}\n'
p21538
asbsbsg73
g0
(g74
g5
Ntp21539
Rp21540
(dp21541
g78
(I01
tp21542
sg80
g851
sg82
g66
sg83
I00
sg53
Nsbsbasg17
g0
(g18
g5
Ntp21543
Rp21544
sg814
(lp21545
g18132
asg1274
g5036
sbsg73
g15305
sbag0
(g563
g5
Ntp21546
Rp21547
(dp21548
g14
S'auto_14648'
p21549
sg16
I0
sg17
g0
(g18
g5
Ntp21550
Rp21551
(dp21552
g22
g10005
sbsg53
Nsg85
g0
(g809
g5
Ntp21553
Rp21554
(dp21555
g552
(lp21556
g0
(g563
g5
Ntp21557
Rp21558
(dp21559
g14
S'auto_14646'
p21560
sg16
I0
sg17
g0
(g18
g5
Ntp21561
Rp21562
(dp21563
g22
g14692
sbsg53
Nsg85
g0
(g809
g5
Ntp21564
Rp21565
(dp21566
g552
(lp21567
g21515
asg17
g0
(g18
g5
Ntp21568
Rp21569
sg814
(lp21570
g21558
asg1274
g14739
sbsg73
g848
sbag0
(g563
g5
Ntp21571
Rp21572
(dp21573
g14
S'auto_14647'
p21574
sg16
I0
sg17
g0
(g18
g5
Ntp21575
Rp21576
(dp21577
g22
g4910
sbsg53
Nsg85
g0
(g809
g5
Ntp21578
Rp21579
(dp21580
g552
(lp21581
g18473
asg17
g0
(g18
g5
Ntp21582
Rp21583
sg814
(lp21584
g21572
asg1274
g4936
sbsg73
g4927
sbasg17
g0
(g18
g5
Ntp21585
Rp21586
sg814
(lp21587
g21547
asg1274
g4101
sbsg73
g10033
sbasg17
g0
(g18
g5
Ntp21588
Rp21589
sg814
(lp21590
g18121
asg1274
g8988
sbsg73
g15316
sbsg559
I00
sbasS'expanded_inputs'
p21591
g553
sS'linker'
p21592
g0
(ctheano.gof.vm
VM_Linker
p21593
g5
Ntp21594
Rp21595
(dp21596
S'use_cloop'
p21597
I01
sg551
NsS'lazy'
p21598
NsS'allow_partial_eval'
p21599
Nsg798
g801
sS'c_thunks'
p21600
I01
sS'callback_input'
p21601
NsS'callback'
p21602
NsS'allow_gc'
p21603
I01
sS'no_recycling'
p21604
g5108
((lp21605
g4762
ag891
atp21606
Rp21607
sS'updated_vars'
p21608
(dp21609
sbsS'function_builder'
p21610
ctheano.compile.function_module
Function
p21611
sg53
g7467
sS'on_unused_input'
p21612
NsS'mode'
p21613
g0
(ctheano.compile.mode
Mode
p21614
g5
Ntp21615
Rp21616
(S'cvm'
p21617
g0
(ctheano.gof.optdb
Query
p21618
g5
Ntp21619
Rp21620
(dp21621
g53
S'OPT_FAST_RUN'
p21622
sS'require'
p21623
g0
(g5170
g5
Ntp21624
Rp21625
(dp21626
g5174
g0
(g5175
g5
Ntp21627
Rp21628
(lp21629
g21628
ag21628
absg5179
(dp21630
sbsS'subquery'
p21631
(dp21632
sS'position_cutoff'
p21633
Finf
sS'exclude'
p21634
g0
(g5170
g5
Ntp21635
Rp21636
(dp21637
g5174
g0
(g5175
g5
Ntp21638
Rp21639
(lp21640
g21639
ag21639
absg5179
(dp21641
sbsS'include'
p21642
g0
(g5170
g5
Ntp21643
Rp21644
(dp21645
g5174
g0
(g5175
g5
Ntp21646
Rp21647
(lp21648
g0
(g5175
g5
Ntp21649
Rp21650
(lp21651
g21647
ag21647
aS'fast_run'
p21652
abag21650
absg5179
(dp21653
g21652
g21650
ssbsS'extra_optimizations'
p21654
(lp21655
sbtp21656
bsS'refeed'
p21657
(lp21658
I00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
aI00
asS'indices'
p21659
(lp21660
(lp21661
g556
aNa(lp21662
g556
aaa(lp21663
g591
aNa(lp21664
g591
aaa(lp21665
g618
aNa(lp21666
g618
aaa(lp21667
g657
aNa(lp21668
g657
aaa(lp21669
g660
aNa(lp21670
g660
aaa(lp21671
g663
aNa(lp21672
g663
aaa(lp21673
g666
aNa(lp21674
g666
aaa(lp21675
g705
aNa(lp21676
g705
aaa(lp21677
g744
aNa(lp21678
g744
aaa(lp21679
g747
aNa(lp21680
g747
aaa(lp21681
g750
aNa(lp21682
g750
aaa(lp21683
g753
aNa(lp21684
g753
aaa(lp21685
g756
aNa(lp21686
g756
aaasS'return_none'
p21687
I00
sS'accept_inplace'
p21688
I00
sb(lp21689
g0
(g49
g5
Ntp21690
Rp21691
(dp21692
S'provided'
p21693
I0
sg53
g270
sg794
I01
sg54
(lp21694
Nasg560
I00
sg71
I00
sg72
I00
sg73
g586
sg84
I01
sbag0
(g49
g5
Ntp21695
Rp21696
(dp21697
g21693
I0
sg53
g593
sg794
I01
sg54
(lp21698
Nasg560
I00
sg71
I00
sg72
I00
sg73
g614
sg84
I01
sbag0
(g49
g5
Ntp21699
Rp21700
(dp21701
g21693
I0
sg53
g444
sg794
I00
sg54
g623
sg560
I01
sg71
I00
sg72
I00
sg73
g631
sg84
Nsbag0
(g49
g5
Ntp21702
Rp21703
(dp21704
g21693
I0
sg53
g430
sg794
I00
sg54
g497
sg560
I01
sg71
I00
sg72
I00
sg73
g505
sg84
Nsbag0
(g49
g5
Ntp21705
Rp21706
(dp21707
g21693
I0
sg53
g125
sg794
I00
sg54
g150
sg560
I01
sg71
I00
sg72
I00
sg73
g158
sg84
Nsbag0
(g49
g5
Ntp21708
Rp21709
(dp21710
g21693
I0
sg53
g435
sg794
I00
sg54
g533
sg560
I01
sg71
I00
sg72
I00
sg73
g541
sg84
Nsbag0
(g49
g5
Ntp21711
Rp21712
(dp21713
g21693
I0
sg53
g449
sg794
I00
sg54
g671
sg560
I01
sg71
I00
sg72
I00
sg73
g679
sg84
Nsbag0
(g49
g5
Ntp21714
Rp21715
(dp21716
g21693
I0
sg53
g462
sg794
I00
sg54
g710
sg560
I01
sg71
I00
sg72
I00
sg73
g718
sg84
Nsbag0
(g49
g5
Ntp21717
Rp21718
(dp21719
g21693
I0
sg53
g203
sg794
I00
sg54
g228
sg560
I01
sg71
I00
sg72
I00
sg73
g236
sg84
Nsbag0
(g49
g5
Ntp21720
Rp21721
(dp21722
g21693
I0
sg53
g162
sg794
I00
sg54
g187
sg560
I01
sg71
I00
sg72
I00
sg73
g195
sg84
Nsbag0
(g49
g5
Ntp21723
Rp21724
(dp21725
g21693
I0
sg53
g9
sg794
I00
sg54
g55
sg560
I01
sg71
I00
sg72
I00
sg73
g76
sg84
Nsbag0
(g49
g5
Ntp21726
Rp21727
(dp21728
g21693
I0
sg53
g88
sg794
I00
sg54
g113
sg560
I01
sg71
I00
sg72
I00
sg73
g121
sg84
Nsbag0
(g49
g5
Ntp21729
Rp21730
(dp21731
g21693
I0
sg53
g418
sg794
I00
sg54
g761
sg560
I01
sg71
I00
sg72
I00
sg73
g769
sg84
Nsba(lp21732
NaNag626
ag500
ag153
ag536
ag674
ag713
ag231
ag190
ag61
ag116
ag764
aI00
tp21733
Rp21734
sS'parameters_to_optimise'
p21735
(lp21736
g430
ag444
ag125
ag435
ag449
ag462
ag203
ag162
ag9
ag88
ag418
asg449
g684
sg454
I21
sS'theano_rng'
p21737
g0
(ctheano.tensor.shared_randomstreams
RandomStreams
p21738
g5
Ntp21739
Rp21740
(dp21741
S'state_updates'
p21742
(lp21743
sS'gen_seedgen'
p21744
cnumpy.random
__RandomState_ctor
p21745
(tRp21746
(S'MT19937'
p21747
g56
(g57
(I0
tp21748
g59
tp21749
Rp21750
(I1
(I624
tp21751
g63
(S'u4'
p21752
I0
I1
tp21753
Rp21754
(I3
S'<'
p21755
NNNI-1
I-1
I0
tp21756
bI00
S'\x93c\xfa\x1f\x00\xf4\x17Zg\xcd\x0euA\x9f\x8c\xc0\x0e\'\x83k\xf0o\x0e\x00\xb6\x99)\x0f\xd5\n\xa6:\x11C!\'\xbe\x8ez>\x00\xff\xefKp$.\xcak\xec\xda\xf8\x15\xed\xba\xad!\xd9A\xc3y\xdc\x1b\x8e\x97\xcfX\xe5u\x19, ;\xa88Y\xf5h\xf7\x96\x87\x98\x89\tXl\x9a\x85\x98\xe9^Ht\n\xa4GA\xbd\x83\xb2\x88\x86\x17_\'e\x06\x95\xb4\xb4\xa9\x97\xea\xb1\xa3`\xd4\xf48\xbc\x8c\x1eY\xb7%\x0ce\xc5\x1e!hQ\\\xa8\xa7\xd3\x9dD\xd9\xe8y\xa0\xc2\xab\xab#\x083\x9c\x95\xf9\x9a|\x95\xdbtx\xdf\x0cp\xe5\xeb\xfa@\x1d\x15x\x8ee\xec\x86 \x04Q\x80\x1c\xc0\x1a\x17\xd1\x1c\xea\xc4\xdai\xf5\xd3+\x9c\x03\xd4\xba\x86\xfb\xe6\xec\xaah^\x10DE\xe8\x8f\xd1\xca\x9f\x80s\xf0Z\xd2e\xcc\x9c{\xaa\'\xfat\xae)\x99?\xde\x8f}\x9a\x05~\x8a\xe4\x98\xee>B\x98\x03\xb3\xe2c_\xcb\xba\x82\x8a\xee\x0f\x887\xca\x92\xb1\xc3F\xdezw\x83\x02cm$\x15Q#\x9e\x97\x02[\x90ms\x83\xbd;\xa4gB\x19\xfa\xa7%\x86\x1f\xfd\x86K\x1e\xeb\x88\x9dU\xbe\x9a\xaa\x9d\xa7J\x07<&r\xa5\xc2D2\x90\r\xe0\xdf\xab9m\xa4\x12\xcc\x98\xe1a1\xfea\x02\xa6\x82\x08\x01\xd0a\xd0\x90-\xfaM\xebzR\xe8\xcf\x12K\x1a\xa8\xa6-\xfb1\xd5\xd8\x10k\xfc\xffz\x9f\x8f\xedw\xe6\x96\xa4D\xaa\xbf"4\xd9\x88PL\xdb4*\x034\xe2zAN\xee\xf6\xcd\nF\xca\xe9\xa451We\xe6=\'\xed\xbc\xf8\xdd\xdd\xbfZ\xea\xb3\xf6\xf1/\x9d\xaa\t\x12:y\xca\xef\x8b\xef\xb5S\xf6\x85\x12\xd6\x84\xad\x8e\x10nGV\x96\xbf\xa5\xf6]\x82P\xaf\xa2\xea-\x97Gq\xcb0Y\xb3\xbd\xd0\xca\x9e\xcc\x92\xf3xS\xa0C\x91h\x99\xb0\x0e|.\x9d_\xc6<O\xd8/g+\x848\xca\x91-\x90\xc0D\'I\t\x1dM\xe21d\x97\xdb\x8dX6\xe3*\xd7\x19\x0cg\x0cH\x9f\x9de]\xd5\xbd\xc21\x89\xe2>\xe6\xf3:\xd1\xe72\xb1\xa6J\xa24\xfd\x04nv~AP!O\x95\xe0\x07K\xc2\x16\x98\x07\xca\xd1=\xf5\xc9c\xc6\x944\x99@\x92\x8d\xb2p\x83G+B\x10\'\x84\x1e\x00\x10\xa2\xae\xfc\xe5\x14\x0f\x8c\xa8>\xba\xee$\x07\xa9\x8c\x93\x8b\\\x158j\xe6\xc0\xba\x9c\x8f@\x16!%\x97\x11\x9bOg\xc3\x8f\xbf\x82\xae9\x08\xf3\x8a\xe0\xd2\xe6\xfe)\xaf!\xa0\x92\x1f5"6\x97\xd8aP\x18\xe1\xd9]\x04\x18\x1aP~Z\x80\xfa\xb8\x8b\x1dC\xc5\xf3\xf4\xe2\x12|}2\xefC0^!-\x08\xbbx;\xf2>\x19\x19R\x82\xad"\x17\xf2\x06\x17F\x88\xc9r\xae\x1c^\xea\xfb\xe6\xb9\xaev\xcf\xf7\xbc\xdd)\xf0\xbdrv(\x8d[\xa2\xa6\x99\xf85\xe71\xc9\xff\x1e\xe6/M\xb2Yy\xaf\x04\xe2\xd0\x90\xe4_\x0e\x85=\x16\xfd\x94\xfc\\\xf7Jw\xfd\xf6\x85!\xd5%2g\xa9\x02tym\x9fI\x12k\x96S[\x15\xc9M\xd7z\x02\x1f\'\xca\x16\xfa\x06\x8aR\xc7\x14\x0e\x83z\x9f\x0e\xeb\x7f\xack\xf8\xafi-\xa9\x05G3\xec#<g\x1a\x95u\xde\x12\x90!\xc4\x91baV\xfb\x0eU\xd8\xf8\xeb\x838\xc2S3;Z&"\x10G0Y\xb5\x0e\xbe\xe0\x96\x8a\xfbF\xef\xe0\xa8\xb8)\\~L\xe7\x08\x88\x9c\xa2\x8aE\x9d\xb37\r\xfa\xe9\x81\xc0\xaf\x8a\xa2`*\x14\xff\xe6\xb4XZ\xfb\xfe\x1f\x84\x16\xda\xe1D\xedZr\xb5&\xc8P\x19\xdaM\x05\xb9\x15O\xa8\x16\'qL\x08B\x84\xc7\xba n=\x14\x81\x93\x0b_b\xb2\x00\xba\xc3\xc0["\xd3h\xb01$Gw\xe4I\xf23^O\x1f\x1f\xf7\xe4\x05\x1b\x12\xddW\x0c\xf4\x80y\xf6\xf2\x9a\x0c\xdaX\x13\xed\x02{\x07+\x84,\xb1\xb9\\l_s\xc4\xb3\xa1I\xc9q\x11\xad0 \xa7aI\xa7\x0c\xd4\xb7\x8cz(d\x99M0t\xd9\xbc\xcd\xd22#\xc8h\xcd\x98\x15P\x16\xf1\xddN`\xaa\x00s\x85C+Q\x16k\xed\x01\xb1j\xdc\xae\xa7\x06\x9e\xc8\xa2\x93|\xd2\x975\xbf\xab\x1e\xea\xcd\x88\x99\x8ae\x82J\xdas\x96\x98<MB\x02\xb1\x95!\xcc@R:\xb2\x11\xc7\xd5\x9e\x87\xb6e\x87\x820q\xf3\xef,$^\xf1\x18\xd3"!\xd18\x10\x12,<r\x8d\x8f\xd8}K\x8f\x16\x88\xdd\x99\x93z\xddp\x96^\xdeC\xc4\xb9\xdf\x82\xc3\xfd\xe0].#u\xea\xa7\xc2\xa4\xa7\xf2\xd9\xfa\x84\x05\xe2U\xb8%\xcf\x07\xc1\xe1;\xdd\xe7\x8e\xab\x16\xd3\x90\x94\x00\xfc\xa4S\x82\xf6\xfa\x9a\x9e\xc1m0u\xf2<\xcb\xae\xcf\x066\xc7\x0e\x96\x0b\xa5T\x8d;<\xb3\x91\r\xd0\xd3\n\x8a\xff\xf4^\xa4\xf7\r}\x19\x9a\xb2\x90\x90 \xcf\xd1z.b\x86R\xb5\xe4\xd8\xfc\xf9\xa2\xf1\xdc\xce\x17ch\xd8,\x7f1fJ\x14\xf0\x08h\x948XTq\xf6\x18\xfcW\x93taV\x14\xf7\x87g\xdax8F:\x8d\x804\xbd\xa1@l\x96\x86\xbc\xc1\xcf\xb1\x8e\xf5\xe8s\x8f\x1cQ4\x9b&M$\x9a\xbd\xb3:(V\xa0U\xd7\x0b\x17\xc7r;-\xc2\xc8Q\xc0e~\xfa\x8d\xe4\xfeI\xfae1\xec\xc4\x81\x14iy\xc4\x97\xed\xb1c\xd8_\x07U[R\xe25\x10\xb9$1\xc3"T9\xb3{bb\xae>\x94+-\xacL\xdeL?XH\xac5\xdf\xe5\x1dn#\xa8Y\xb4U\xfd\xd1\xc1\x13"?\xc3\xfeW\x92\xb7\xa5\xdc9\x0f{\x85\x1a\x04\x84\x98\xb7\x81\xf5}d\xac\xb0r\x9eDI\xb7\x0f\x03z\'\x9a\x97\xfc\x8e\x15I0a\x80@\xa8k\xa3\xdc,\x94\xbdmb\'\x8a\xd3\x9a\xf8Nf\xad\x02\xf4v\xca\xc6\xce\x89\xa1\xb6xa\xd2\xcc}\x00\xd3\x0fk.G\xeb\xbb\xfc\xc1\xeeK\x9d\xcc\xe8\xca+\xf7\x1f\xd3K\xa4\xda\xd0\xafg\xd1\x9a\x1f\x19\xe0\xee\x08;\xcc\x1f|\x1a\xe9\xb8\x90\xce\xc0/t\xb8\xf9\xaa\xb3\x19\xad\xb60\x03\xb2\xa8\xb5N\x11[\xd8e\xc3~\x874c_\xa0\xf7U\x02\xf0\xa0\xc9|R\xb4\x8e\xe0\xe0V\xe3 \xce\x16\x08v!\xf9\xd1v\xac\x10\xf0\xbaWK\x91\xbb>uM\x11\x10\xb5\xa9\x1c\xc3\xd5\x91J\xf7@P|g\xc2@y\xa1~\'\xa1_\x1c\xe6t\t;B6\x94\x94\xc5\xa8Ak\xdaz\x94\xc1$\x9aA\xbd\x86(j\x05g\xb4;\x96c:\xdb\xc3ki[\xb0\xf9\xc8X\xad\x94\x9frJW\xb4\xb2\xef\xb3\x1aN\x92eB\xf0\xeb\xcf\xc9\x1c\x82sT\xf5\xbd(\xcb\x117\\\x90\xd5\xad\xabD\x16z\xa8\x12.\xae\xa9X\xd0\x9a\x0f\x80S$\x84\x8e\xe2\xd8\xdd{Y\xa9\x967\xb1*\xca5\xc4{\xb4\xdd\xbf\xf1\xd1iZR\xaf\x10\xfc\x84\xe1*\x1a\xcd\xcb\xdespT\x01w\xaf\x91\x8e\x04;\xd9\xd9\x0e\xcb\xa7\x9eg\xfcZ\\C\x8f_\x88f8#\xa6\x07\xeeI\xac\xcb\x0bw\x0b\x8d(\x9e6\t\xff\x9d\x92\'G9UV\x12+":\xd0w\xe3N\x12\xa3n\x1b\xdd\xd1Ffp\xc2A\xef\xc3\xd8;\xdc\x8f\xb6H\xe18\x83\x17\xc5\xc56\xc7\xd5$\x05\x80m*\xb10\xd9\xf2\xf3y\x9dw4\xa0\x01\xe5n\xa6\xe2\xcd\xbd\xffv\x0eN\x0c\xfa\x1d\x84\x9a^\xe2\x028\xb6\x1d\x8a,\xeb\x9ci[U[\xca\xb9o\x16uh\x07\xf1R^\r\xb2U\x07\xef\xba\x19v\x9c\x92n\r\xac1.,\x13rT\x97~MS3AQ%#n\xf2\xca5M\x94\xb5A\xb6\xac\x01\xde\x13\xad\xfe3\xbb@k\xfc\xa7\xb8>\xc89\xf3\xe3\xa6\x9f\x17bT\x81\x16~\xbe\xdc\xbd\xc1\x84k\x8f\xc5\xbd\xcc\x04\x90M\xb8\xc2\xd7G?\x97\xe2U;\\i_\x94A\xe3Mp\xc2<\x9b\x1bq\xee\xe5\xa2`)\xa0\xdaj\xa7\x99\x0ei^v\x86~\\\x8c\xfe0.\x9e\x0e4\t\x08\xad\x17q\xfe\xcf\xf4\xdffX\xf2\xb2R\xf0\x8bW\xd1\xe0T\xd6\x9e\x13\xce\xf2\xa8\x90\x01d+\x1a\xbf)\xb7V\x9e\xe3Hi\x06|>\xc0\xa1\xa4\x17\xbc\x8fm,g\x0b\xf1\xddu\xe9k\x14\xe5X\xc4\xc93\xf1v\x1c\xdbX\xe7\xeb\xeeK\xb3)\xcbL0\xb7UAL\x811TY:\xd5\xba\xe0\xba\xd7\xce\x898U\xeem*\xa7f\x98\x8a\x9b\xae\xbf\x1a\xc0\xe2**=O\xf6\xa7\xdfIsu\xe1\xa1\x96\xd0\xe3g\x95\x1c\xa3Og|\xb1\xedx\x99SY\xc2Ol9\x90K\xb8\xa4\xa1\xf4$F(%\xde\xa3\x9b%\xaeD\xccA\nJ\xec\xac\xdd\xfbW#\x8a\x8e\x96o\xbb\xfc\xd7\xc4\xbc\xed\xb3\x1d\x9b\xa2\xe5q\xed\xa54\x91\xf3\x19\x96\x1f9~\xa6G\x92\xef-\x93\x90^q\x9e\x00DFt\x18\xbe\xebD\xba\xf3\xa0Y\xb5\x99\x03\x11\xf2|\xe4\xc9\xa8%\x0f\xad\xde\xe4\xd8\xb3\xc9A\xba\x17\xc2\\\xe5qc\x01x~r}\xdd\xa8)E\xed\\\xd1\x02\xa3\x80\xcf\xad\xa8\xea\x1a\x0fl~\xca\xa7\x8b\xc1\x8em\x987\xab!\x1fIu\x8e\x99_14\x86\x9a\xd2,\x08\xafr%SX"O\x86\xbc\x0e\x9cA\x06OLn\xb9E\x91\xcb\xf5\xb0B\xe2\x14\xe0\xf3\xf6\xa7\xbb\xa0v\xd9\x96^&}%22\xb8\xcdLT\xf9!\xf2\x89\xf07;D9\x8a\xac\xd6\x10\x19$\xa7,\xc0e\xb8u@=\xd3\xebu\x81\xb1\xe4o\xcdw~fG\xcc\x0cWB \xc4\xcc\x97\xaa\x95\xad-S\x08:\xba7\xa3\x8f\xed\xc79n\xfe\x98\xb0\xc2\xa2\x07\x19\x883\t\xa1G\xcd9\xe5\xb6\xf1*|j\xfav\xef\x93y=+\xc5\xe2\xc1?\xa0R\x0c\xe9\x96\x19\t`\x95Jv-\x8b]B\xa1~\xd5\xf5i\x08\xd4_v\xc0\xd5\x9e\xf0\xc9`\x0e\x08\xca\xe9u$_\x0f~\x01?Vq\x90!]\x87\xee\x99\xe7l\xc0\xfb\xf5$UW\xdd\xbdy\x17\xd8Q\xb8\x9bM\xec\x89B\xbeC\xcb\x92\xd9\x9ero\xf4P?\x99rUV\x8f \xea\x8e\x13\xc6O\x15\x91\xd1_\x15\xb7\xf7\xb0\xab-\x1b\xd5\xee\xb5\x1bo9j\xafh\xff\x9e\x9b:\x81P0K\x08\x81%\x01ke\xb7\x9a\xd5\\\xd2\xc9(\x1e\x10\xba\xaa8i5q\xd6e\xf3\x7f\x9b\xf8'
p21757
tp21758
bI624
I0
F0.0
tp21759
bsS'default_instance_seed'
p21760
I536503187
sbsS'parameters_to_regularise'
p21761
(lp21762
g430
ag444
ag435
asg462
g723
sg256
g312
sg418
g774
sg440
I2
sg444
g636
sb.